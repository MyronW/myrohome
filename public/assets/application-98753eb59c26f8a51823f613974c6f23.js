/*!
 * jQuery JavaScript Library v1.11.1
 * http://jquery.com/
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 *
 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-05-01T17:42Z
 */


(function( global, factory ) {

	if ( typeof module === "object" && typeof module.exports === "object" ) {
		// For CommonJS and CommonJS-like environments where a proper window is present,
		// execute the factory and get jQuery
		// For environments that do not inherently posses a window with a document
		// (such as Node.js), expose a jQuery-making factory as module.exports
		// This accentuates the need for the creation of a real window
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
}(typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Can't do this because several apps including ASP.NET trace
// the stack via arguments.caller.callee and Firefox dies if
// you try to trace through "use strict" call chains. (#13335)
// Support: Firefox 18+
//

var deletedIds = [];

var slice = deletedIds.slice;

var concat = deletedIds.concat;

var push = deletedIds.push;

var indexOf = deletedIds.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var support = {};



var
	version = "1.11.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {
		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android<4.1, IE<9
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,

	// Matches dashed string for camelizing
	rmsPrefix = /^-ms-/,
	rdashAlpha = /-([\da-z])/gi,

	// Used by jQuery.camelCase as callback to replace()
	fcamelCase = function( all, letter ) {
		return letter.toUpperCase();
	};

jQuery.fn = jQuery.prototype = {
	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// Start with an empty selector
	selector: "",

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {
		return num != null ?

			// Return just the one element from the set
			( num < 0 ? this[ num + this.length ] : this[ num ] ) :

			// Return all the elements in a clean array
			slice.call( this );
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;
		ret.context = this.context;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	// (You can seed the arguments with an array of args, but this is
	// only used internally.)
	each: function( callback, args ) {
		return jQuery.each( this, callback, args );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map(this, function( elem, i ) {
			return callback.call( elem, i, elem );
		}));
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor(null);
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: deletedIds.sort,
	splice: deletedIds.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var src, copyIsArray, copy, name, options, clone,
		target = arguments[0] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !jQuery.isFunction(target) ) {
		target = {};
	}

	// extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {
		// Only deal with non-null/undefined values
		if ( (options = arguments[ i ]) != null ) {
			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {
					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && jQuery.isArray(src) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject(src) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend({
	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	// See test/unit/core.js for details concerning isFunction.
	// Since version 1.3, DOM methods and functions like alert
	// aren't supported. They return false on IE (#2968).
	isFunction: function( obj ) {
		return jQuery.type(obj) === "function";
	},

	isArray: Array.isArray || function( obj ) {
		return jQuery.type(obj) === "array";
	},

	isWindow: function( obj ) {
		/* jshint eqeqeq: false */
		return obj != null && obj == obj.window;
	},

	isNumeric: function( obj ) {
		// parseFloat NaNs numeric-cast false positives (null|true|false|"")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		return !jQuery.isArray( obj ) && obj - parseFloat( obj ) >= 0;
	},

	isEmptyObject: function( obj ) {
		var name;
		for ( name in obj ) {
			return false;
		}
		return true;
	},

	isPlainObject: function( obj ) {
		var key;

		// Must be an Object.
		// Because of IE, we also have to check the presence of the constructor property.
		// Make sure that DOM nodes and window objects don't pass through, as well
		if ( !obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow( obj ) ) {
			return false;
		}

		try {
			// Not own constructor property must be Object
			if ( obj.constructor &&
				!hasOwn.call(obj, "constructor") &&
				!hasOwn.call(obj.constructor.prototype, "isPrototypeOf") ) {
				return false;
			}
		} catch ( e ) {
			// IE8,9 Will throw exceptions on certain host objects #9897
			return false;
		}

		// Support: IE<9
		// Handle iteration over inherited properties before own properties.
		if ( support.ownLast ) {
			for ( key in obj ) {
				return hasOwn.call( obj, key );
			}
		}

		// Own properties are enumerated firstly, so to speed up,
		// if last one is own, then all properties are own.
		for ( key in obj ) {}

		return key === undefined || hasOwn.call( obj, key );
	},

	type: function( obj ) {
		if ( obj == null ) {
			return obj + "";
		}
		return typeof obj === "object" || typeof obj === "function" ?
			class2type[ toString.call(obj) ] || "object" :
			typeof obj;
	},

	// Evaluates a script in a global context
	// Workarounds based on findings by Jim Driscoll
	// http://weblogs.java.net/blog/driscoll/archive/2009/09/08/eval-javascript-global-context
	globalEval: function( data ) {
		if ( data && jQuery.trim( data ) ) {
			// We use execScript on Internet Explorer
			// We use an anonymous function so that context is window
			// rather than jQuery in Firefox
			( window.execScript || function( data ) {
				window[ "eval" ].call( window, data );
			} )( data );
		}
	},

	// Convert dashed to camelCase; used by the css and data modules
	// Microsoft forgot to hump their vendor prefix (#9572)
	camelCase: function( string ) {
		return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
	},

	nodeName: function( elem, name ) {
		return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
	},

	// args is for internal usage only
	each: function( obj, callback, args ) {
		var value,
			i = 0,
			length = obj.length,
			isArray = isArraylike( obj );

		if ( args ) {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.apply( obj[ i ], args );

					if ( value === false ) {
						break;
					}
				}
			}

		// A special, fast, case for the most common use of each
		} else {
			if ( isArray ) {
				for ( ; i < length; i++ ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			} else {
				for ( i in obj ) {
					value = callback.call( obj[ i ], i, obj[ i ] );

					if ( value === false ) {
						break;
					}
				}
			}
		}

		return obj;
	},

	// Support: Android<4.1, IE<9
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArraylike( Object(arr) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		var len;

		if ( arr ) {
			if ( indexOf ) {
				return indexOf.call( arr, elem, i );
			}

			len = arr.length;
			i = i ? i < 0 ? Math.max( 0, len + i ) : i : 0;

			for ( ; i < len; i++ ) {
				// Skip accessing in sparse arrays
				if ( i in arr && arr[ i ] === elem ) {
					return i;
				}
			}
		}

		return -1;
	},

	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		while ( j < len ) {
			first[ i++ ] = second[ j++ ];
		}

		// Support: IE<9
		// Workaround casting of .length to NaN on otherwise arraylike objects (e.g., NodeLists)
		if ( len !== len ) {
			while ( second[j] !== undefined ) {
				first[ i++ ] = second[ j++ ];
			}
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var value,
			i = 0,
			length = elems.length,
			isArray = isArraylike( elems ),
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArray ) {
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// Bind a function to a context, optionally partially applying any
	// arguments.
	proxy: function( fn, context ) {
		var args, proxy, tmp;

		if ( typeof context === "string" ) {
			tmp = fn[ context ];
			context = fn;
			fn = tmp;
		}

		// Quick check to determine if target is callable, in the spec
		// this throws a TypeError, but we will just return undefined.
		if ( !jQuery.isFunction( fn ) ) {
			return undefined;
		}

		// Simulated bind
		args = slice.call( arguments, 2 );
		proxy = function() {
			return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
		};

		// Set the guid of unique handler to the same of original handler, so it can be removed
		proxy.guid = fn.guid = fn.guid || jQuery.guid++;

		return proxy;
	},

	now: function() {
		return +( new Date() );
	},

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
});

// Populate the class2type map
jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
});

function isArraylike( obj ) {
	var length = obj.length,
		type = jQuery.type( obj );

	if ( type === "function" || jQuery.isWindow( obj ) ) {
		return false;
	}

	if ( obj.nodeType === 1 && length ) {
		return true;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v1.10.19
 * http://sizzlejs.com/
 *
 * Copyright 2013 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2014-04-18
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + -(new Date()),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// General-purpose constants
	strundefined = typeof undefined,
	MAX_NEGATIVE = 1 << 31,

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf if we can't use a native one
	indexOf = arr.indexOf || function( elem ) {
		var i = 0,
			len = this.length;
		for ( ; i < len; i++ ) {
			if ( this[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",
	// http://www.w3.org/TR/css3-syntax/#characters
	characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",

	// Loosely modeled on CSS identifier characters
	// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors
	// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = characterEncoding.replace( "w", "w#" ),

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + characterEncoding + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + characterEncoding + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + characterEncoding + ")" ),
		"CLASS": new RegExp( "^\\.(" + characterEncoding + ")" ),
		"TAG": new RegExp( "^(" + characterEncoding.replace( "w", "w*" ) + ")" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,
	rescape = /'|\\/g,

	// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	};

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var match, elem, m, nodeType,
		// QSA vars
		i, groups, old, nid, newContext, newSelector;

	if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
		setDocument( context );
	}

	context = context || document;
	results = results || [];

	if ( !selector || typeof selector !== "string" ) {
		return results;
	}

	if ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {
		return [];
	}

	if ( documentIsHTML && !seed ) {

		// Shortcuts
		if ( (match = rquickExpr.exec( selector )) ) {
			// Speed-up: Sizzle("#ID")
			if ( (m = match[1]) ) {
				if ( nodeType === 9 ) {
					elem = context.getElementById( m );
					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document (jQuery #6963)
					if ( elem && elem.parentNode ) {
						// Handle the case where IE, Opera, and Webkit return items
						// by name instead of ID
						if ( elem.id === m ) {
							results.push( elem );
							return results;
						}
					} else {
						return results;
					}
				} else {
					// Context is not a document
					if ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&
						contains( context, elem ) && elem.id === m ) {
						results.push( elem );
						return results;
					}
				}

			// Speed-up: Sizzle("TAG")
			} else if ( match[2] ) {
				push.apply( results, context.getElementsByTagName( selector ) );
				return results;

			// Speed-up: Sizzle(".CLASS")
			} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {
				push.apply( results, context.getElementsByClassName( m ) );
				return results;
			}
		}

		// QSA path
		if ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {
			nid = old = expando;
			newContext = context;
			newSelector = nodeType === 9 && selector;

			// qSA works strangely on Element-rooted queries
			// We can work around this by specifying an extra ID on the root
			// and working up from there (Thanks to Andrew Dupont for the technique)
			// IE 8 doesn't work on object elements
			if ( nodeType === 1 && context.nodeName.toLowerCase() !== "object" ) {
				groups = tokenize( selector );

				if ( (old = context.getAttribute("id")) ) {
					nid = old.replace( rescape, "\\$&" );
				} else {
					context.setAttribute( "id", nid );
				}
				nid = "[id='" + nid + "'] ";

				i = groups.length;
				while ( i-- ) {
					groups[i] = nid + toSelector( groups[i] );
				}
				newContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;
				newSelector = groups.join(",");
			}

			if ( newSelector ) {
				try {
					push.apply( results,
						newContext.querySelectorAll( newSelector )
					);
					return results;
				} catch(qsaError) {
				} finally {
					if ( !old ) {
						context.removeAttribute("id");
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {Function(string, Object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created div and expects a boolean result
 */
function assert( fn ) {
	var div = document.createElement("div");

	try {
		return !!fn( div );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( div.parentNode ) {
			div.parentNode.removeChild( div );
		}
		// release memory in IE
		div = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = attrs.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			( ~b.sourceIndex || MAX_NEGATIVE ) -
			( ~a.sourceIndex || MAX_NEGATIVE );

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== strundefined && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare,
		doc = node ? node.ownerDocument || node : preferredDoc,
		parent = doc.defaultView;

	// If no document and documentElement is available, return
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Set our document
	document = doc;
	docElem = doc.documentElement;

	// Support tests
	documentIsHTML = !isXML( doc );

	// Support: IE>8
	// If iframe document is assigned to "document" variable and if iframe has been reloaded,
	// IE will throw "permission denied" error when accessing "document" variable, see jQuery #13936
	// IE6-8 do not support the defaultView property so parent will be undefined
	if ( parent && parent !== parent.top ) {
		// IE11 does not have attachEvent, so all must suffer
		if ( parent.addEventListener ) {
			parent.addEventListener( "unload", function() {
				setDocument();
			}, false );
		} else if ( parent.attachEvent ) {
			parent.attachEvent( "onunload", function() {
				setDocument();
			});
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)
	support.attributes = assert(function( div ) {
		div.className = "i";
		return !div.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( div ) {
		div.appendChild( doc.createComment("") );
		return !div.getElementsByTagName("*").length;
	});

	// Check if getElementsByClassName can be trusted
	support.getElementsByClassName = rnative.test( doc.getElementsByClassName ) && assert(function( div ) {
		div.innerHTML = "<div class='a'></div><div class='a i'></div>";

		// Support: Safari<4
		// Catch class over-caching
		div.firstChild.className = "i";
		// Support: Opera<10
		// Catch gEBCN failure to find non-leading classes
		return div.getElementsByClassName("i").length === 2;
	});

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( div ) {
		docElem.appendChild( div ).id = expando;
		return !doc.getElementsByName || !doc.getElementsByName( expando ).length;
	});

	// ID find and filter
	if ( support.getById ) {
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== strundefined && documentIsHTML ) {
				var m = context.getElementById( id );
				// Check parentNode to catch when Blackberry 4.6 returns
				// nodes that are no longer in the document #6963
				return m && m.parentNode ? [ m ] : [];
			}
		};
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
	} else {
		// Support: IE6/7
		// getElementById is not reliable as a find shortcut
		delete Expr.find["ID"];

		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== strundefined ) {
				return context.getElementsByTagName( tag );
			}
		} :
		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See http://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( div ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// http://bugs.jquery.com/ticket/12359
			div.innerHTML = "<select msallowclip=''><option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( div.querySelectorAll("[msallowclip^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !div.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}
		});

		assert(function( div ) {
			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = doc.createElement("input");
			input.setAttribute( "type", "hidden" );
			div.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( div.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( !div.querySelectorAll(":enabled").length ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			div.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( div ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( div, "div" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( div, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully does not implement inclusive descendent
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === doc ? -1 :
				b === doc ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return doc;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch(e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, outerCache, node, diff, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {
										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {
							// Seek `elem` from a previously-cached index
							outerCache = parent[ expando ] || (parent[ expando ] = {});
							cache = outerCache[ type ] || [];
							nodeIndex = cache[0] === dirruns && cache[1];
							diff = cache[0] === dirruns && cache[2];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									outerCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						// Use previously-cached element index if available
						} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {
							diff = cache[1];

						// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)
						} else {
							// Use the same loop as above to seek `elem` from the start
							while ( (node = ++nodeIndex && node && node[ dir ] ||
								(diff = nodeIndex = 0) || start.pop()) ) {

								if ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {
									// Cache the index of each encountered element
									if ( useCache ) {
										(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];
									}

									if ( node === elem ) {
										break;
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf.call( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": function( elem ) {
			return elem.disabled === false;
		},

		"disabled": function( elem ) {
			return elem.disabled === true;
		},

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		checkNonElements = base && dir === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});
						if ( (oldCache = outerCache[ dir ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							outerCache[ dir ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf.call( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			return ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context !== document && context;
			}

			// Add elements passing elementMatchers directly to results
			// Keep `i` a string if there are no elements so `matchedCount` will be "00" below
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context, xml ) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// Apply set filters to unmatched elements
			matchedCount += i;
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is no seed and only one group
	if ( match.length === 1 ) {

		// Take a shortcut and set the context if the root selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				support.getById && context.nodeType === 9 && documentIsHTML &&
				Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome<14
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( div1 ) {
	// Should return 1, but returns 4 (following)
	return div1.compareDocumentPosition( document.createElement("div") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( div ) {
	div.innerHTML = "<a href='#'></a>";
	return div.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( div ) {
	div.innerHTML = "<input/>";
	div.firstChild.setAttribute( "value", "" );
	return div.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( div ) {
	return div.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;
jQuery.expr[":"] = jQuery.expr.pseudos;
jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;



var rneedsContext = jQuery.expr.match.needsContext;

var rsingleTag = (/^<(\w+)\s*\/?>(?:<\/\1>|)$/);



var risSimple = /^.[^:#\[\.,]*$/;

// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( jQuery.isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			/* jshint -W018 */
			return !!qualifier.call( elem, i, elem ) !== not;
		});

	}

	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		});

	}

	if ( typeof qualifier === "string" ) {
		if ( risSimple.test( qualifier ) ) {
			return jQuery.filter( qualifier, elements, not );
		}

		qualifier = jQuery.filter( qualifier, elements );
	}

	return jQuery.grep( elements, function( elem ) {
		return ( jQuery.inArray( elem, qualifier ) >= 0 ) !== not;
	});
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	return elems.length === 1 && elem.nodeType === 1 ?
		jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :
		jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
			return elem.nodeType === 1;
		}));
};

jQuery.fn.extend({
	find: function( selector ) {
		var i,
			ret = [],
			self = this,
			len = self.length;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter(function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			}) );
		}

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		// Needed because $( selector, context ) becomes $( context ).find( selector )
		ret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );
		ret.selector = this.selector ? this.selector + " " + selector : selector;
		return ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow(this, selector || [], false) );
	},
	not: function( selector ) {
		return this.pushStack( winnow(this, selector || [], true) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
});


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// Use the correct document accordingly with window argument (sandbox)
	document = window.document,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,

	init = jQuery.fn.init = function( selector, context ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector.charAt(0) === "<" && selector.charAt( selector.length - 1 ) === ">" && selector.length >= 3 ) {
				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && (match[1] || !context) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[1] ) {
					context = context instanceof jQuery ? context[0] : context;

					// scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[1],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {
							// Properties of context are called as methods if possible
							if ( jQuery.isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[2] );

					// Check parentNode to catch when Blackberry 4.6 returns
					// nodes that are no longer in the document #6963
					if ( elem && elem.parentNode ) {
						// Handle the case where IE and Opera return items
						// by name instead of ID
						if ( elem.id !== match[2] ) {
							return rootjQuery.find( selector );
						}

						// Otherwise, we inject the element directly into the jQuery object
						this.length = 1;
						this[0] = elem;
					}

					this.context = document;
					this.selector = selector;
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || rootjQuery ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this.context = this[0] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( jQuery.isFunction( selector ) ) {
			return typeof rootjQuery.ready !== "undefined" ?
				rootjQuery.ready( selector ) :
				// Execute immediately if ready is not present
				selector( jQuery );
		}

		if ( selector.selector !== undefined ) {
			this.selector = selector.selector;
			this.context = selector.context;
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,
	// methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.extend({
	dir: function( elem, dir, until ) {
		var matched = [],
			cur = elem[ dir ];

		while ( cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery( cur ).is( until )) ) {
			if ( cur.nodeType === 1 ) {
				matched.push( cur );
			}
			cur = cur[dir];
		}
		return matched;
	},

	sibling: function( n, elem ) {
		var r = [];

		for ( ; n; n = n.nextSibling ) {
			if ( n.nodeType === 1 && n !== elem ) {
				r.push( n );
			}
		}

		return r;
	}
});

jQuery.fn.extend({
	has: function( target ) {
		var i,
			targets = jQuery( target, this ),
			len = targets.length;

		return this.filter(function() {
			for ( i = 0; i < len; i++ ) {
				if ( jQuery.contains( this, targets[i] ) ) {
					return true;
				}
			}
		});
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			pos = rneedsContext.test( selectors ) || typeof selectors !== "string" ?
				jQuery( selectors, context || this.context ) :
				0;

		for ( ; i < l; i++ ) {
			for ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {
				// Always skip document fragments
				if ( cur.nodeType < 11 && (pos ?
					pos.index(cur) > -1 :

					// Don't pass non-elements to Sizzle
					cur.nodeType === 1 &&
						jQuery.find.matchesSelector(cur, selectors)) ) {

					matched.push( cur );
					break;
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );
	},

	// Determine the position of an element within
	// the matched set of elements
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;
		}

		// index in selector
		if ( typeof elem === "string" ) {
			return jQuery.inArray( this[0], jQuery( elem ) );
		}

		// Locate the position of the desired element
		return jQuery.inArray(
			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[0] : elem, this );
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.unique(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter(selector)
		);
	}
});

function sibling( cur, dir ) {
	do {
		cur = cur[ dir ];
	} while ( cur && cur.nodeType !== 1 );

	return cur;
}

jQuery.each({
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return jQuery.dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return jQuery.dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return jQuery.dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return jQuery.dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return jQuery.sibling( elem.firstChild );
	},
	contents: function( elem ) {
		return jQuery.nodeName( elem, "iframe" ) ?
			elem.contentDocument || elem.contentWindow.document :
			jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var ret = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			ret = jQuery.filter( selector, ret );
		}

		if ( this.length > 1 ) {
			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				ret = jQuery.unique( ret );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				ret = ret.reverse();
			}
		}

		return this.pushStack( ret );
	};
});
var rnotwhite = (/\S+/g);



// String to Object options format cache
var optionsCache = {};

// Convert String-formatted options into Object-formatted ones and store in cache
function createOptions( options ) {
	var object = optionsCache[ options ] = {};
	jQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	});
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		( optionsCache[ options ] || createOptions( options ) ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,
		// Last fire value (for non-forgettable lists)
		memory,
		// Flag to know if list was already fired
		fired,
		// End of the loop when firing
		firingLength,
		// Index of currently firing callback (modified by remove if needed)
		firingIndex,
		// First callback to fire (used internally by add and fireWith)
		firingStart,
		// Actual callback list
		list = [],
		// Stack of fire calls for repeatable lists
		stack = !options.once && [],
		// Fire callbacks
		fire = function( data ) {
			memory = options.memory && data;
			fired = true;
			firingIndex = firingStart || 0;
			firingStart = 0;
			firingLength = list.length;
			firing = true;
			for ( ; list && firingIndex < firingLength; firingIndex++ ) {
				if ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {
					memory = false; // To prevent further calls using add
					break;
				}
			}
			firing = false;
			if ( list ) {
				if ( stack ) {
					if ( stack.length ) {
						fire( stack.shift() );
					}
				} else if ( memory ) {
					list = [];
				} else {
					self.disable();
				}
			}
		},
		// Actual Callbacks object
		self = {
			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {
					// First, we save the current length
					var start = list.length;
					(function add( args ) {
						jQuery.each( args, function( _, arg ) {
							var type = jQuery.type( arg );
							if ( type === "function" ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && type !== "string" ) {
								// Inspect recursively
								add( arg );
							}
						});
					})( arguments );
					// Do we need to add the callbacks to the
					// current firing batch?
					if ( firing ) {
						firingLength = list.length;
					// With memory, if we're not firing then
					// we should call right away
					} else if ( memory ) {
						firingStart = start;
						fire( memory );
					}
				}
				return this;
			},
			// Remove a callback from the list
			remove: function() {
				if ( list ) {
					jQuery.each( arguments, function( _, arg ) {
						var index;
						while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
							list.splice( index, 1 );
							// Handle firing indexes
							if ( firing ) {
								if ( index <= firingLength ) {
									firingLength--;
								}
								if ( index <= firingIndex ) {
									firingIndex--;
								}
							}
						}
					});
				}
				return this;
			},
			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );
			},
			// Remove all callbacks from the list
			empty: function() {
				list = [];
				firingLength = 0;
				return this;
			},
			// Have the list do nothing anymore
			disable: function() {
				list = stack = memory = undefined;
				return this;
			},
			// Is it disabled?
			disabled: function() {
				return !list;
			},
			// Lock the list in its current state
			lock: function() {
				stack = undefined;
				if ( !memory ) {
					self.disable();
				}
				return this;
			},
			// Is it locked?
			locked: function() {
				return !stack;
			},
			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( list && ( !fired || stack ) ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					if ( firing ) {
						stack.push( args );
					} else {
						fire( args );
					}
				}
				return this;
			},
			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},
			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


jQuery.extend({

	Deferred: function( func ) {
		var tuples = [
				// action, add listener, listener list, final state
				[ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ],
				[ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ],
				[ "notify", "progress", jQuery.Callbacks("memory") ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				then: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;
					return jQuery.Deferred(function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {
							var fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];
							// deferred[ done | fail | progress ] for forwarding actions to newDefer
							deferred[ tuple[1] ](function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && jQuery.isFunction( returned.promise ) ) {
									returned.promise()
										.done( newDefer.resolve )
										.fail( newDefer.reject )
										.progress( newDefer.notify );
								} else {
									newDefer[ tuple[ 0 ] + "With" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );
								}
							});
						});
						fns = null;
					}).promise();
				},
				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Keep pipe for back-compat
		promise.pipe = promise.then;

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 3 ];

			// promise[ done | fail | progress ] = list.add
			promise[ tuple[1] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(function() {
					// state = [ resolved | rejected ]
					state = stateString;

				// [ reject_list | resolve_list ].disable; progress_list.lock
				}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );
			}

			// deferred[ resolve | reject | notify ]
			deferred[ tuple[0] ] = function() {
				deferred[ tuple[0] + "With" ]( this === deferred ? promise : this, arguments );
				return this;
			};
			deferred[ tuple[0] + "With" ] = list.fireWith;
		});

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( subordinate /* , ..., subordinateN */ ) {
		var i = 0,
			resolveValues = slice.call( arguments ),
			length = resolveValues.length,

			// the count of uncompleted subordinates
			remaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,

			// the master Deferred. If resolveValues consist of only a single Deferred, just use that.
			deferred = remaining === 1 ? subordinate : jQuery.Deferred(),

			// Update function for both resolve and progress values
			updateFunc = function( i, contexts, values ) {
				return function( value ) {
					contexts[ i ] = this;
					values[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( values === progressValues ) {
						deferred.notifyWith( contexts, values );

					} else if ( !(--remaining) ) {
						deferred.resolveWith( contexts, values );
					}
				};
			},

			progressValues, progressContexts, resolveContexts;

		// add listeners to Deferred subordinates; treat others as resolved
		if ( length > 1 ) {
			progressValues = new Array( length );
			progressContexts = new Array( length );
			resolveContexts = new Array( length );
			for ( ; i < length; i++ ) {
				if ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {
					resolveValues[ i ].promise()
						.done( updateFunc( i, resolveContexts, resolveValues ) )
						.fail( deferred.reject )
						.progress( updateFunc( i, progressContexts, progressValues ) );
				} else {
					--remaining;
				}
			}
		}

		// if we're not waiting on anything, resolve the master
		if ( !remaining ) {
			deferred.resolveWith( resolveContexts, resolveValues );
		}

		return deferred.promise();
	}
});


// The deferred used on DOM ready
var readyList;

jQuery.fn.ready = function( fn ) {
	// Add the callback
	jQuery.ready.promise().done( fn );

	return this;
};

jQuery.extend({
	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Hold (or release) the ready event
	holdReady: function( hold ) {
		if ( hold ) {
			jQuery.readyWait++;
		} else {
			jQuery.ready( true );
		}
	},

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Make sure body exists, at least, in case IE gets a little overzealous (ticket #5443).
		if ( !document.body ) {
			return setTimeout( jQuery.ready );
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );

		// Trigger any bound ready events
		if ( jQuery.fn.triggerHandler ) {
			jQuery( document ).triggerHandler( "ready" );
			jQuery( document ).off( "ready" );
		}
	}
});

/**
 * Clean-up method for dom ready events
 */
function detach() {
	if ( document.addEventListener ) {
		document.removeEventListener( "DOMContentLoaded", completed, false );
		window.removeEventListener( "load", completed, false );

	} else {
		document.detachEvent( "onreadystatechange", completed );
		window.detachEvent( "onload", completed );
	}
}

/**
 * The ready event handler and self cleanup method
 */
function completed() {
	// readyState === "complete" is good enough for us to call the dom ready in oldIE
	if ( document.addEventListener || event.type === "load" || document.readyState === "complete" ) {
		detach();
		jQuery.ready();
	}
}

jQuery.ready.promise = function( obj ) {
	if ( !readyList ) {

		readyList = jQuery.Deferred();

		// Catch cases where $(document).ready() is called after the browser event has already occurred.
		// we once tried to use readyState "interactive" here, but it caused issues like the one
		// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15
		if ( document.readyState === "complete" ) {
			// Handle it asynchronously to allow scripts the opportunity to delay ready
			setTimeout( jQuery.ready );

		// Standards-based browsers support DOMContentLoaded
		} else if ( document.addEventListener ) {
			// Use the handy event callback
			document.addEventListener( "DOMContentLoaded", completed, false );

			// A fallback to window.onload, that will always work
			window.addEventListener( "load", completed, false );

		// If IE event model is used
		} else {
			// Ensure firing before onload, maybe late but safe also for iframes
			document.attachEvent( "onreadystatechange", completed );

			// A fallback to window.onload, that will always work
			window.attachEvent( "onload", completed );

			// If IE and not a frame
			// continually check to see if the document is ready
			var top = false;

			try {
				top = window.frameElement == null && document.documentElement;
			} catch(e) {}

			if ( top && top.doScroll ) {
				(function doScrollCheck() {
					if ( !jQuery.isReady ) {

						try {
							// Use the trick by Diego Perini
							// http://javascript.nwbox.com/IEContentLoaded/
							top.doScroll("left");
						} catch(e) {
							return setTimeout( doScrollCheck, 50 );
						}

						// detach all dom ready events
						detach();

						// and execute any waiting functions
						jQuery.ready();
					}
				})();
			}
		}
	}
	return readyList.promise( obj );
};


var strundefined = typeof undefined;



// Support: IE<9
// Iteration over object's inherited properties before its own
var i;
for ( i in jQuery( support ) ) {
	break;
}
support.ownLast = i !== "0";

// Note: most support tests are defined in their respective modules.
// false until the test is run
support.inlineBlockNeedsLayout = false;

// Execute ASAP in case we need to set body.style.zoom
jQuery(function() {
	// Minified: var a,b,c,d
	var val, div, body, container;

	body = document.getElementsByTagName( "body" )[ 0 ];
	if ( !body || !body.style ) {
		// Return for frameset docs that don't have a body
		return;
	}

	// Setup
	div = document.createElement( "div" );
	container = document.createElement( "div" );
	container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
	body.appendChild( container ).appendChild( div );

	if ( typeof div.style.zoom !== strundefined ) {
		// Support: IE<8
		// Check if natively block-level elements act like inline-block
		// elements when setting their display to 'inline' and giving
		// them layout
		div.style.cssText = "display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1";

		support.inlineBlockNeedsLayout = val = div.offsetWidth === 3;
		if ( val ) {
			// Prevent IE 6 from affecting layout for positioned elements #11048
			// Prevent IE from shrinking the body in IE 7 mode #12869
			// Support: IE<8
			body.style.zoom = 1;
		}
	}

	body.removeChild( container );
});




(function() {
	var div = document.createElement( "div" );

	// Execute the test only if not already executed in another module.
	if (support.deleteExpando == null) {
		// Support: IE<9
		support.deleteExpando = true;
		try {
			delete div.test;
		} catch( e ) {
			support.deleteExpando = false;
		}
	}

	// Null elements to avoid leaks in IE.
	div = null;
})();


/**
 * Determines whether an object can have data
 */
jQuery.acceptData = function( elem ) {
	var noData = jQuery.noData[ (elem.nodeName + " ").toLowerCase() ],
		nodeType = +elem.nodeType || 1;

	// Do not set data on non-element DOM nodes because it will not be cleared (#8335).
	return nodeType !== 1 && nodeType !== 9 ?
		false :

		// Nodes accept data unless otherwise specified; rejection can be conditional
		!noData || noData !== true && elem.getAttribute("classid") === noData;
};


var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /([A-Z])/g;

function dataAttr( elem, key, data ) {
	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {

		var name = "data-" + key.replace( rmultiDash, "-$1" ).toLowerCase();

		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = data === "true" ? true :
					data === "false" ? false :
					data === "null" ? null :
					// Only convert to a number if it doesn't change the string
					+data + "" === data ? +data :
					rbrace.test( data ) ? jQuery.parseJSON( data ) :
					data;
			} catch( e ) {}

			// Make sure we set the data so it isn't changed later
			jQuery.data( elem, key, data );

		} else {
			data = undefined;
		}
	}

	return data;
}

// checks a cache object for emptiness
function isEmptyDataObject( obj ) {
	var name;
	for ( name in obj ) {

		// if the public data object is empty, the private is still empty
		if ( name === "data" && jQuery.isEmptyObject( obj[name] ) ) {
			continue;
		}
		if ( name !== "toJSON" ) {
			return false;
		}
	}

	return true;
}

function internalData( elem, name, data, pvt /* Internal Use Only */ ) {
	if ( !jQuery.acceptData( elem ) ) {
		return;
	}

	var ret, thisCache,
		internalKey = jQuery.expando,

		// We have to handle DOM nodes and JS objects differently because IE6-7
		// can't GC object references properly across the DOM-JS boundary
		isNode = elem.nodeType,

		// Only DOM nodes need the global jQuery cache; JS object data is
		// attached directly to the object so GC can occur automatically
		cache = isNode ? jQuery.cache : elem,

		// Only defining an ID for JS objects if its cache already exists allows
		// the code to shortcut on the same path as a DOM node with no cache
		id = isNode ? elem[ internalKey ] : elem[ internalKey ] && internalKey;

	// Avoid doing any more work than we need to when trying to get data on an
	// object that has no data at all
	if ( (!id || !cache[id] || (!pvt && !cache[id].data)) && data === undefined && typeof name === "string" ) {
		return;
	}

	if ( !id ) {
		// Only DOM nodes need a new unique ID for each element since their data
		// ends up in the global cache
		if ( isNode ) {
			id = elem[ internalKey ] = deletedIds.pop() || jQuery.guid++;
		} else {
			id = internalKey;
		}
	}

	if ( !cache[ id ] ) {
		// Avoid exposing jQuery metadata on plain JS objects when the object
		// is serialized using JSON.stringify
		cache[ id ] = isNode ? {} : { toJSON: jQuery.noop };
	}

	// An object can be passed to jQuery.data instead of a key/value pair; this gets
	// shallow copied over onto the existing cache
	if ( typeof name === "object" || typeof name === "function" ) {
		if ( pvt ) {
			cache[ id ] = jQuery.extend( cache[ id ], name );
		} else {
			cache[ id ].data = jQuery.extend( cache[ id ].data, name );
		}
	}

	thisCache = cache[ id ];

	// jQuery data() is stored in a separate object inside the object's internal data
	// cache in order to avoid key collisions between internal data and user-defined
	// data.
	if ( !pvt ) {
		if ( !thisCache.data ) {
			thisCache.data = {};
		}

		thisCache = thisCache.data;
	}

	if ( data !== undefined ) {
		thisCache[ jQuery.camelCase( name ) ] = data;
	}

	// Check for both converted-to-camel and non-converted data property names
	// If a data property was specified
	if ( typeof name === "string" ) {

		// First Try to find as-is property data
		ret = thisCache[ name ];

		// Test for null|undefined property data
		if ( ret == null ) {

			// Try to find the camelCased property
			ret = thisCache[ jQuery.camelCase( name ) ];
		}
	} else {
		ret = thisCache;
	}

	return ret;
}

function internalRemoveData( elem, name, pvt ) {
	if ( !jQuery.acceptData( elem ) ) {
		return;
	}

	var thisCache, i,
		isNode = elem.nodeType,

		// See jQuery.data for more information
		cache = isNode ? jQuery.cache : elem,
		id = isNode ? elem[ jQuery.expando ] : jQuery.expando;

	// If there is already no cache entry for this object, there is no
	// purpose in continuing
	if ( !cache[ id ] ) {
		return;
	}

	if ( name ) {

		thisCache = pvt ? cache[ id ] : cache[ id ].data;

		if ( thisCache ) {

			// Support array or space separated string names for data keys
			if ( !jQuery.isArray( name ) ) {

				// try the string as a key before any manipulation
				if ( name in thisCache ) {
					name = [ name ];
				} else {

					// split the camel cased version by spaces unless a key with the spaces exists
					name = jQuery.camelCase( name );
					if ( name in thisCache ) {
						name = [ name ];
					} else {
						name = name.split(" ");
					}
				}
			} else {
				// If "name" is an array of keys...
				// When data is initially created, via ("key", "val") signature,
				// keys will be converted to camelCase.
				// Since there is no way to tell _how_ a key was added, remove
				// both plain key and camelCase key. #12786
				// This will only penalize the array argument path.
				name = name.concat( jQuery.map( name, jQuery.camelCase ) );
			}

			i = name.length;
			while ( i-- ) {
				delete thisCache[ name[i] ];
			}

			// If there is no data left in the cache, we want to continue
			// and let the cache object itself get destroyed
			if ( pvt ? !isEmptyDataObject(thisCache) : !jQuery.isEmptyObject(thisCache) ) {
				return;
			}
		}
	}

	// See jQuery.data for more information
	if ( !pvt ) {
		delete cache[ id ].data;

		// Don't destroy the parent cache unless the internal data object
		// had been the only thing left in it
		if ( !isEmptyDataObject( cache[ id ] ) ) {
			return;
		}
	}

	// Destroy the cache
	if ( isNode ) {
		jQuery.cleanData( [ elem ], true );

	// Use delete when supported for expandos or `cache` is not a window per isWindow (#10080)
	/* jshint eqeqeq: false */
	} else if ( support.deleteExpando || cache != cache.window ) {
		/* jshint eqeqeq: true */
		delete cache[ id ];

	// When all else fails, null
	} else {
		cache[ id ] = null;
	}
}

jQuery.extend({
	cache: {},

	// The following elements (space-suffixed to avoid Object.prototype collisions)
	// throw uncatchable exceptions if you attempt to set expando properties
	noData: {
		"applet ": true,
		"embed ": true,
		// ...but Flash objects (which have this classid) *can* handle expandos
		"object ": "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"
	},

	hasData: function( elem ) {
		elem = elem.nodeType ? jQuery.cache[ elem[jQuery.expando] ] : elem[ jQuery.expando ];
		return !!elem && !isEmptyDataObject( elem );
	},

	data: function( elem, name, data ) {
		return internalData( elem, name, data );
	},

	removeData: function( elem, name ) {
		return internalRemoveData( elem, name );
	},

	// For internal use only.
	_data: function( elem, name, data ) {
		return internalData( elem, name, data, true );
	},

	_removeData: function( elem, name ) {
		return internalRemoveData( elem, name, true );
	}
});

jQuery.fn.extend({
	data: function( key, value ) {
		var i, name, data,
			elem = this[0],
			attrs = elem && elem.attributes;

		// Special expections of .data basically thwart jQuery.access,
		// so implement the relevant behavior ourselves

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = jQuery.data( elem );

				if ( elem.nodeType === 1 && !jQuery._data( elem, "parsedAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE11+
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = jQuery.camelCase( name.slice(5) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					jQuery._data( elem, "parsedAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each(function() {
				jQuery.data( this, key );
			});
		}

		return arguments.length > 1 ?

			// Sets one value
			this.each(function() {
				jQuery.data( this, key, value );
			}) :

			// Gets one value
			// Try to fetch any internally stored data first
			elem ? dataAttr( elem, key, jQuery.data( elem, key ) ) : undefined;
	},

	removeData: function( key ) {
		return this.each(function() {
			jQuery.removeData( this, key );
		});
	}
});


jQuery.extend({
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = jQuery._data( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || jQuery.isArray(data) ) {
					queue = jQuery._data( elem, type, jQuery.makeArray(data) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// not intended for public consumption - generates a queueHooks object, or returns the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return jQuery._data( elem, key ) || jQuery._data( elem, key, {
			empty: jQuery.Callbacks("once memory").add(function() {
				jQuery._removeData( elem, type + "queue" );
				jQuery._removeData( elem, key );
			})
		});
	}
});

jQuery.fn.extend({
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[0], type );
		}

		return data === undefined ?
			this :
			this.each(function() {
				var queue = jQuery.queue( this, type, data );

				// ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[0] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			});
	},
	dequeue: function( type ) {
		return this.each(function() {
			jQuery.dequeue( this, type );
		});
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},
	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = jQuery._data( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
});
var pnum = (/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/).source;

var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHidden = function( elem, el ) {
		// isHidden might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;
		return jQuery.css( elem, "display" ) === "none" || !jQuery.contains( elem.ownerDocument, elem );
	};



// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		length = elems.length,
		bulk = key == null;

	// Sets many values
	if ( jQuery.type( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			jQuery.access( elems, fn, i, key[i], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !jQuery.isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {
			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < length; i++ ) {
				fn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );
			}
		}
	}

	return chainable ?
		elems :

		// Gets
		bulk ?
			fn.call( elems ) :
			length ? fn( elems[0], key ) : emptyGet;
};
var rcheckableType = (/^(?:checkbox|radio)$/i);



(function() {
	// Minified: var a,b,c
	var input = document.createElement( "input" ),
		div = document.createElement( "div" ),
		fragment = document.createDocumentFragment();

	// Setup
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";

	// IE strips leading whitespace when .innerHTML is used
	support.leadingWhitespace = div.firstChild.nodeType === 3;

	// Make sure that tbody elements aren't automatically inserted
	// IE will insert them into empty tables
	support.tbody = !div.getElementsByTagName( "tbody" ).length;

	// Make sure that link elements get serialized correctly by innerHTML
	// This requires a wrapper element in IE
	support.htmlSerialize = !!div.getElementsByTagName( "link" ).length;

	// Makes sure cloning an html5 element does not cause problems
	// Where outerHTML is undefined, this still works
	support.html5Clone =
		document.createElement( "nav" ).cloneNode( true ).outerHTML !== "<:nav></:nav>";

	// Check if a disconnected checkbox will retain its checked
	// value of true after appended to the DOM (IE6/7)
	input.type = "checkbox";
	input.checked = true;
	fragment.appendChild( input );
	support.appendChecked = input.checked;

	// Make sure textarea (and checkbox) defaultValue is properly cloned
	// Support: IE6-IE11+
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;

	// #11217 - WebKit loses check when the name is after the checked attribute
	fragment.appendChild( div );
	div.innerHTML = "<input type='radio' checked='checked' name='t'/>";

	// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3
	// old WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE<9
	// Opera does not clone events (and typeof div.attachEvent === undefined).
	// IE9-10 clones events bound via attachEvent, but they don't trigger with .click()
	support.noCloneEvent = true;
	if ( div.attachEvent ) {
		div.attachEvent( "onclick", function() {
			support.noCloneEvent = false;
		});

		div.cloneNode( true ).click();
	}

	// Execute the test only if not already executed in another module.
	if (support.deleteExpando == null) {
		// Support: IE<9
		support.deleteExpando = true;
		try {
			delete div.test;
		} catch( e ) {
			support.deleteExpando = false;
		}
	}
})();


(function() {
	var i, eventName,
		div = document.createElement( "div" );

	// Support: IE<9 (lack submit/change bubble), Firefox 23+ (lack focusin event)
	for ( i in { submit: true, change: true, focusin: true }) {
		eventName = "on" + i;

		if ( !(support[ i + "Bubbles" ] = eventName in window) ) {
			// Beware of CSP restrictions (https://developer.mozilla.org/en/Security/CSP)
			div.setAttribute( eventName, "t" );
			support[ i + "Bubbles" ] = div.attributes[ eventName ].expando === false;
		}
	}

	// Null elements to avoid leaks in IE.
	div = null;
})();


var rformElems = /^(?:input|select|textarea)$/i,
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,
	rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {
		var tmp, events, t, handleObjIn,
			special, eventHandle, handleObj,
			handlers, type, namespaces, origType,
			elemData = jQuery._data( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !(events = elemData.events) ) {
			events = elemData.events = {};
		}
		if ( !(eventHandle = elemData.handle) ) {
			eventHandle = elemData.handle = function( e ) {
				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== strundefined && (!e || jQuery.event.triggered !== e.type) ?
					jQuery.event.dispatch.apply( eventHandle.elem, arguments ) :
					undefined;
			};
			// Add elem as a property of the handle fn to prevent a memory leak with IE non-native events
			eventHandle.elem = elem;
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend({
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join(".")
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !(handlers = events[ type ]) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener/attachEvent if the special events handler returns false
				if ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {
					// Bind the global event handler to the element
					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle, false );

					} else if ( elem.attachEvent ) {
						elem.attachEvent( "on" + type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

		// Nullify elem to prevent memory leaks in IE
		elem = null;
	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {
		var j, handleObj, tmp,
			origCount, t, events,
			special, handlers, type,
			namespaces, origType,
			elemData = jQuery.hasData( elem ) && jQuery._data( elem );

		if ( !elemData || !(events = elemData.events) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnotwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[t] ) || [];
			type = origType = tmp[1];
			namespaces = ( tmp[2] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[2] && new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector || selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {
					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			delete elemData.handle;

			// removeData also checks for emptiness and clears the expando if empty
			// so use it instead of delete
			jQuery._removeData( elem, "events" );
		}
	},

	trigger: function( event, data, elem, onlyHandlers ) {
		var handle, ontype, cur,
			bubbleType, special, tmp, i,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split(".") : [];

		cur = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf(".") >= 0 ) {
			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split(".");
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf(":") < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join(".");
		event.namespace_re = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === (elem.ownerDocument || document) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {

			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( jQuery._data( cur, "events" ) || {} )[ event.type ] && jQuery._data( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && jQuery.acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&
				jQuery.acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name name as the event.
				// Can't use an .isFunction() check here because IE6/7 fails that test.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && elem[ type ] && !jQuery.isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;
					try {
						elem[ type ]();
					} catch ( e ) {
						// IE<9 dies on focus/blur to hidden element (#1486,#12518)
						// only reproducible on winXP IE8 native, not IE9 in IE8 mode
					}
					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	dispatch: function( event ) {

		// Make a writable jQuery.Event from the native event object
		event = jQuery.event.fix( event );

		var i, ret, handleObj, matched, j,
			handlerQueue = [],
			args = slice.call( arguments ),
			handlers = ( jQuery._data( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[0] = event;
		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or
				// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )
							.apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( (event.result = ret) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var sel, handleObj, matches, i,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		// Black-hole SVG <use> instance trees (#13180)
		// Avoid non-left-click bubbling in Firefox (#3861)
		if ( delegateCount && cur.nodeType && (!event.button || event.type !== "click") ) {

			/* jshint eqeqeq: false */
			for ( ; cur != this; cur = cur.parentNode || this ) {
				/* jshint eqeqeq: true */

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && (cur.disabled !== true || event.type !== "click") ) {
					matches = [];
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matches[ sel ] === undefined ) {
							matches[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) >= 0 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matches[ sel ] ) {
							matches.push( handleObj );
						}
					}
					if ( matches.length ) {
						handlerQueue.push({ elem: cur, handlers: matches });
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		if ( delegateCount < handlers.length ) {
			handlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });
		}

		return handlerQueue;
	},

	fix: function( event ) {
		if ( event[ jQuery.expando ] ) {
			return event;
		}

		// Create a writable copy of the event object and normalize some properties
		var i, prop, copy,
			type = event.type,
			originalEvent = event,
			fixHook = this.fixHooks[ type ];

		if ( !fixHook ) {
			this.fixHooks[ type ] = fixHook =
				rmouseEvent.test( type ) ? this.mouseHooks :
				rkeyEvent.test( type ) ? this.keyHooks :
				{};
		}
		copy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;

		event = new jQuery.Event( originalEvent );

		i = copy.length;
		while ( i-- ) {
			prop = copy[ i ];
			event[ prop ] = originalEvent[ prop ];
		}

		// Support: IE<9
		// Fix target property (#1925)
		if ( !event.target ) {
			event.target = originalEvent.srcElement || document;
		}

		// Support: Chrome 23+, Safari?
		// Target should not be a text node (#504, #13143)
		if ( event.target.nodeType === 3 ) {
			event.target = event.target.parentNode;
		}

		// Support: IE<9
		// For mouse/key events, metaKey==false if it's undefined (#3368, #11328)
		event.metaKey = !!event.metaKey;

		return fixHook.filter ? fixHook.filter( event, originalEvent ) : event;
	},

	// Includes some event props shared by KeyEvent and MouseEvent
	props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),

	fixHooks: {},

	keyHooks: {
		props: "char charCode key keyCode".split(" "),
		filter: function( event, original ) {

			// Add which for key events
			if ( event.which == null ) {
				event.which = original.charCode != null ? original.charCode : original.keyCode;
			}

			return event;
		}
	},

	mouseHooks: {
		props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
		filter: function( event, original ) {
			var body, eventDoc, doc,
				button = original.button,
				fromElement = original.fromElement;

			// Calculate pageX/Y if missing and clientX/Y available
			if ( event.pageX == null && original.clientX != null ) {
				eventDoc = event.target.ownerDocument || document;
				doc = eventDoc.documentElement;
				body = eventDoc.body;

				event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );
				event.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );
			}

			// Add relatedTarget, if necessary
			if ( !event.relatedTarget && fromElement ) {
				event.relatedTarget = fromElement === event.target ? original.toElement : fromElement;
			}

			// Add which for click: 1 === left; 2 === middle; 3 === right
			// Note: button is not normalized, so don't use it
			if ( !event.which && button !== undefined ) {
				event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );
			}

			return event;
		}
	},

	special: {
		load: {
			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {
			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					try {
						this.focus();
						return false;
					} catch ( e ) {
						// Support: IE<9
						// If we error on focus to hidden element (#1486, #12518),
						// let .trigger() run the handlers
					}
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {
			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( jQuery.nodeName( this, "input" ) && this.type === "checkbox" && this.click ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return jQuery.nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	},

	simulate: function( type, elem, event, bubble ) {
		// Piggyback on a donor event to simulate a different one.
		// Fake originalEvent to avoid donor's stopPropagation, but if the
		// simulated event prevents default then we do the same on the donor.
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true,
				originalEvent: {}
			}
		);
		if ( bubble ) {
			jQuery.event.trigger( e, null, elem );
		} else {
			jQuery.event.dispatch.call( elem, e );
		}
		if ( e.isDefaultPrevented() ) {
			event.preventDefault();
		}
	}
};

jQuery.removeEvent = document.removeEventListener ?
	function( elem, type, handle ) {
		if ( elem.removeEventListener ) {
			elem.removeEventListener( type, handle, false );
		}
	} :
	function( elem, type, handle ) {
		var name = "on" + type;

		if ( elem.detachEvent ) {

			// #8545, #7054, preventing memory leaks for custom events in IE6-8
			// detachEvent needed property on element, by name of that event, to properly expose it to GC
			if ( typeof elem[ name ] === strundefined ) {
				elem[ name ] = null;
			}

			elem.detachEvent( name, handle );
		}
	};

jQuery.Event = function( src, props ) {
	// Allow instantiation without the 'new' keyword
	if ( !(this instanceof jQuery.Event) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&
				// Support: IE < 9, Android < 4.0
				src.returnValue === false ?
			returnTrue :
			returnFalse;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || jQuery.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;
		if ( !e ) {
			return;
		}

		// If preventDefault exists, run it on the original event
		if ( e.preventDefault ) {
			e.preventDefault();

		// Support: IE
		// Otherwise set the returnValue property of the original event to false
		} else {
			e.returnValue = false;
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;
		if ( !e ) {
			return;
		}
		// If stopPropagation exists, run it on the original event
		if ( e.stopPropagation ) {
			e.stopPropagation();
		}

		// Support: IE
		// Set the cancelBubble property of the original event to true
		e.cancelBubble = true;
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && e.stopImmediatePropagation ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Create mouseenter/leave events using mouseover/out and event-time checks
jQuery.each({
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mousenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || (related !== target && !jQuery.contains( target, related )) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
});

// IE submit delegation
if ( !support.submitBubbles ) {

	jQuery.event.special.submit = {
		setup: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Lazy-add a submit handler when a descendant form may potentially be submitted
			jQuery.event.add( this, "click._submit keypress._submit", function( e ) {
				// Node name check avoids a VML-related crash in IE (#9807)
				var elem = e.target,
					form = jQuery.nodeName( elem, "input" ) || jQuery.nodeName( elem, "button" ) ? elem.form : undefined;
				if ( form && !jQuery._data( form, "submitBubbles" ) ) {
					jQuery.event.add( form, "submit._submit", function( event ) {
						event._submit_bubble = true;
					});
					jQuery._data( form, "submitBubbles", true );
				}
			});
			// return undefined since we don't need an event listener
		},

		postDispatch: function( event ) {
			// If form was submitted by the user, bubble the event up the tree
			if ( event._submit_bubble ) {
				delete event._submit_bubble;
				if ( this.parentNode && !event.isTrigger ) {
					jQuery.event.simulate( "submit", this.parentNode, event, true );
				}
			}
		},

		teardown: function() {
			// Only need this for delegated form submit events
			if ( jQuery.nodeName( this, "form" ) ) {
				return false;
			}

			// Remove delegated handlers; cleanData eventually reaps submit handlers attached above
			jQuery.event.remove( this, "._submit" );
		}
	};
}

// IE change delegation and checkbox/radio fix
if ( !support.changeBubbles ) {

	jQuery.event.special.change = {

		setup: function() {

			if ( rformElems.test( this.nodeName ) ) {
				// IE doesn't fire change on a check/radio until blur; trigger it on click
				// after a propertychange. Eat the blur-change in special.change.handle.
				// This still fires onchange a second time for check/radio after blur.
				if ( this.type === "checkbox" || this.type === "radio" ) {
					jQuery.event.add( this, "propertychange._change", function( event ) {
						if ( event.originalEvent.propertyName === "checked" ) {
							this._just_changed = true;
						}
					});
					jQuery.event.add( this, "click._change", function( event ) {
						if ( this._just_changed && !event.isTrigger ) {
							this._just_changed = false;
						}
						// Allow triggered, simulated change events (#11500)
						jQuery.event.simulate( "change", this, event, true );
					});
				}
				return false;
			}
			// Delegated event; lazy-add a change handler on descendant inputs
			jQuery.event.add( this, "beforeactivate._change", function( e ) {
				var elem = e.target;

				if ( rformElems.test( elem.nodeName ) && !jQuery._data( elem, "changeBubbles" ) ) {
					jQuery.event.add( elem, "change._change", function( event ) {
						if ( this.parentNode && !event.isSimulated && !event.isTrigger ) {
							jQuery.event.simulate( "change", this.parentNode, event, true );
						}
					});
					jQuery._data( elem, "changeBubbles", true );
				}
			});
		},

		handle: function( event ) {
			var elem = event.target;

			// Swallow native change events from checkbox/radio, we already triggered them above
			if ( this !== elem || event.isSimulated || event.isTrigger || (elem.type !== "radio" && elem.type !== "checkbox") ) {
				return event.handleObj.handler.apply( this, arguments );
			}
		},

		teardown: function() {
			jQuery.event.remove( this, "._change" );

			return !rformElems.test( this.nodeName );
		}
	};
}

// Create "bubbling" focus and blur events
if ( !support.focusinBubbles ) {
	jQuery.each({ focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
				jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );
			};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				jQuery._data( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = jQuery._data( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					jQuery._removeData( doc, fix );
				} else {
					jQuery._data( doc, fix, attaches );
				}
			}
		};
	});
}

jQuery.fn.extend({

	on: function( types, selector, data, fn, /*INTERNAL*/ one ) {
		var type, origFn;

		// Types can be a map of types/handlers
		if ( typeof types === "object" ) {
			// ( types-Object, selector, data )
			if ( typeof selector !== "string" ) {
				// ( types-Object, data )
				data = data || selector;
				selector = undefined;
			}
			for ( type in types ) {
				this.on( type, selector, data, types[ type ], one );
			}
			return this;
		}

		if ( data == null && fn == null ) {
			// ( types, fn )
			fn = selector;
			data = selector = undefined;
		} else if ( fn == null ) {
			if ( typeof selector === "string" ) {
				// ( types, selector, fn )
				fn = data;
				data = undefined;
			} else {
				// ( types, data, fn )
				fn = data;
				data = selector;
				selector = undefined;
			}
		}
		if ( fn === false ) {
			fn = returnFalse;
		} else if ( !fn ) {
			return this;
		}

		if ( one === 1 ) {
			origFn = fn;
			fn = function( event ) {
				// Can use an empty set, since event contains the info
				jQuery().off( event );
				return origFn.apply( this, arguments );
			};
			// Use same guid so caller can remove using origFn
			fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
		}
		return this.each( function() {
			jQuery.event.add( this, types, fn, data, selector );
		});
	},
	one: function( types, selector, data, fn ) {
		return this.on( types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {
			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {
			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {
			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each(function() {
			jQuery.event.remove( this, types, fn, selector );
		});
	},

	trigger: function( type, data ) {
		return this.each(function() {
			jQuery.event.trigger( type, data, this );
		});
	},
	triggerHandler: function( type, data ) {
		var elem = this[0];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
});


function createSafeFragment( document ) {
	var list = nodeNames.split( "|" ),
		safeFrag = document.createDocumentFragment();

	if ( safeFrag.createElement ) {
		while ( list.length ) {
			safeFrag.createElement(
				list.pop()
			);
		}
	}
	return safeFrag;
}

var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|" +
		"header|hgroup|mark|meter|nav|output|progress|section|summary|time|video",
	rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g,
	rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"),
	rleadingWhitespace = /^\s+/,
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,
	rtagName = /<([\w:]+)/,
	rtbody = /<tbody/i,
	rhtml = /<|&#?\w+;/,
	rnoInnerhtml = /<(?:script|style|link)/i,
	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rscriptType = /^$|\/(?:java|ecma)script/i,
	rscriptTypeMasked = /^true\/(.*)/,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,

	// We have to close these tags to support XHTML (#13200)
	wrapMap = {
		option: [ 1, "<select multiple='multiple'>", "</select>" ],
		legend: [ 1, "<fieldset>", "</fieldset>" ],
		area: [ 1, "<map>", "</map>" ],
		param: [ 1, "<object>", "</object>" ],
		thead: [ 1, "<table>", "</table>" ],
		tr: [ 2, "<table><tbody>", "</tbody></table>" ],
		col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
		td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

		// IE6-8 can't serialize link, script, style, or any html5 (NoScope) tags,
		// unless wrapped in a div with non-breaking characters in front of it.
		_default: support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>"  ]
	},
	safeFragment = createSafeFragment( document ),
	fragmentDiv = safeFragment.appendChild( document.createElement("div") );

wrapMap.optgroup = wrapMap.option;
wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;

function getAll( context, tag ) {
	var elems, elem,
		i = 0,
		found = typeof context.getElementsByTagName !== strundefined ? context.getElementsByTagName( tag || "*" ) :
			typeof context.querySelectorAll !== strundefined ? context.querySelectorAll( tag || "*" ) :
			undefined;

	if ( !found ) {
		for ( found = [], elems = context.childNodes || context; (elem = elems[i]) != null; i++ ) {
			if ( !tag || jQuery.nodeName( elem, tag ) ) {
				found.push( elem );
			} else {
				jQuery.merge( found, getAll( elem, tag ) );
			}
		}
	}

	return tag === undefined || tag && jQuery.nodeName( context, tag ) ?
		jQuery.merge( [ context ], found ) :
		found;
}

// Used in buildFragment, fixes the defaultChecked property
function fixDefaultChecked( elem ) {
	if ( rcheckableType.test( elem.type ) ) {
		elem.defaultChecked = elem.checked;
	}
}

// Support: IE<8
// Manipulating tables requires a tbody
function manipulationTarget( elem, content ) {
	return jQuery.nodeName( elem, "table" ) &&
		jQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ?

		elem.getElementsByTagName("tbody")[0] ||
			elem.appendChild( elem.ownerDocument.createElement("tbody") ) :
		elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = (jQuery.find.attr( elem, "type" ) !== null) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	var match = rscriptTypeMasked.exec( elem.type );
	if ( match ) {
		elem.type = match[1];
	} else {
		elem.removeAttribute("type");
	}
	return elem;
}

// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var elem,
		i = 0;
	for ( ; (elem = elems[i]) != null; i++ ) {
		jQuery._data( elem, "globalEval", !refElements || jQuery._data( refElements[i], "globalEval" ) );
	}
}

function cloneCopyEvent( src, dest ) {

	if ( dest.nodeType !== 1 || !jQuery.hasData( src ) ) {
		return;
	}

	var type, i, l,
		oldData = jQuery._data( src ),
		curData = jQuery._data( dest, oldData ),
		events = oldData.events;

	if ( events ) {
		delete curData.handle;
		curData.events = {};

		for ( type in events ) {
			for ( i = 0, l = events[ type ].length; i < l; i++ ) {
				jQuery.event.add( dest, type, events[ type ][ i ] );
			}
		}
	}

	// make the cloned public data object a copy from the original
	if ( curData.data ) {
		curData.data = jQuery.extend( {}, curData.data );
	}
}

function fixCloneNodeIssues( src, dest ) {
	var nodeName, e, data;

	// We do not need to do anything for non-Elements
	if ( dest.nodeType !== 1 ) {
		return;
	}

	nodeName = dest.nodeName.toLowerCase();

	// IE6-8 copies events bound via attachEvent when using cloneNode.
	if ( !support.noCloneEvent && dest[ jQuery.expando ] ) {
		data = jQuery._data( dest );

		for ( e in data.events ) {
			jQuery.removeEvent( dest, e, data.handle );
		}

		// Event data gets referenced instead of copied if the expando gets copied too
		dest.removeAttribute( jQuery.expando );
	}

	// IE blanks contents when cloning scripts, and tries to evaluate newly-set text
	if ( nodeName === "script" && dest.text !== src.text ) {
		disableScript( dest ).text = src.text;
		restoreScript( dest );

	// IE6-10 improperly clones children of object elements using classid.
	// IE10 throws NoModificationAllowedError if parent is null, #12132.
	} else if ( nodeName === "object" ) {
		if ( dest.parentNode ) {
			dest.outerHTML = src.outerHTML;
		}

		// This path appears unavoidable for IE9. When cloning an object
		// element in IE9, the outerHTML strategy above is not sufficient.
		// If the src has innerHTML and the destination does not,
		// copy the src.innerHTML into the dest.innerHTML. #10324
		if ( support.html5Clone && ( src.innerHTML && !jQuery.trim(dest.innerHTML) ) ) {
			dest.innerHTML = src.innerHTML;
		}

	} else if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		// IE6-8 fails to persist the checked state of a cloned checkbox
		// or radio button. Worse, IE6-7 fail to give the cloned element
		// a checked appearance if the defaultChecked value isn't also set

		dest.defaultChecked = dest.checked = src.checked;

		// IE6-7 get confused and end up setting the value of a cloned
		// checkbox/radio button to an empty string instead of "on"
		if ( dest.value !== src.value ) {
			dest.value = src.value;
		}

	// IE6-8 fails to return the selected option to the default selected
	// state when cloning options
	} else if ( nodeName === "option" ) {
		dest.defaultSelected = dest.selected = src.defaultSelected;

	// IE6-8 fails to set the defaultValue to the correct value when
	// cloning other types of input fields
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

jQuery.extend({
	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var destElements, node, clone, i, srcElements,
			inPage = jQuery.contains( elem.ownerDocument, elem );

		if ( support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test( "<" + elem.nodeName + ">" ) ) {
			clone = elem.cloneNode( true );

		// IE<=8 does not properly clone detached, unknown element nodes
		} else {
			fragmentDiv.innerHTML = elem.outerHTML;
			fragmentDiv.removeChild( clone = fragmentDiv.firstChild );
		}

		if ( (!support.noCloneEvent || !support.noCloneChecked) &&
				(elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem) ) {

			// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			// Fix all IE cloning issues
			for ( i = 0; (node = srcElements[i]) != null; ++i ) {
				// Ensure that the destination node is not null; Fixes #9587
				if ( destElements[i] ) {
					fixCloneNodeIssues( node, destElements[i] );
				}
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0; (node = srcElements[i]) != null; i++ ) {
					cloneCopyEvent( node, destElements[i] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		destElements = srcElements = node = null;

		// Return the cloned set
		return clone;
	},

	buildFragment: function( elems, context, scripts, selection ) {
		var j, elem, contains,
			tmp, tag, tbody, wrap,
			l = elems.length,

			// Ensure a safe fragment
			safe = createSafeFragment( context ),

			nodes = [],
			i = 0;

		for ( ; i < l; i++ ) {
			elem = elems[ i ];

			if ( elem || elem === 0 ) {

				// Add nodes directly
				if ( jQuery.type( elem ) === "object" ) {
					jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

				// Convert non-html into a text node
				} else if ( !rhtml.test( elem ) ) {
					nodes.push( context.createTextNode( elem ) );

				// Convert html into DOM nodes
				} else {
					tmp = tmp || safe.appendChild( context.createElement("div") );

					// Deserialize a standard representation
					tag = (rtagName.exec( elem ) || [ "", "" ])[ 1 ].toLowerCase();
					wrap = wrapMap[ tag ] || wrapMap._default;

					tmp.innerHTML = wrap[1] + elem.replace( rxhtmlTag, "<$1></$2>" ) + wrap[2];

					// Descend through wrappers to the right content
					j = wrap[0];
					while ( j-- ) {
						tmp = tmp.lastChild;
					}

					// Manually add leading whitespace removed by IE
					if ( !support.leadingWhitespace && rleadingWhitespace.test( elem ) ) {
						nodes.push( context.createTextNode( rleadingWhitespace.exec( elem )[0] ) );
					}

					// Remove IE's autoinserted <tbody> from table fragments
					if ( !support.tbody ) {

						// String was a <table>, *may* have spurious <tbody>
						elem = tag === "table" && !rtbody.test( elem ) ?
							tmp.firstChild :

							// String was a bare <thead> or <tfoot>
							wrap[1] === "<table>" && !rtbody.test( elem ) ?
								tmp :
								0;

						j = elem && elem.childNodes.length;
						while ( j-- ) {
							if ( jQuery.nodeName( (tbody = elem.childNodes[j]), "tbody" ) && !tbody.childNodes.length ) {
								elem.removeChild( tbody );
							}
						}
					}

					jQuery.merge( nodes, tmp.childNodes );

					// Fix #12392 for WebKit and IE > 9
					tmp.textContent = "";

					// Fix #12392 for oldIE
					while ( tmp.firstChild ) {
						tmp.removeChild( tmp.firstChild );
					}

					// Remember the top-level container for proper cleanup
					tmp = safe.lastChild;
				}
			}
		}

		// Fix #11356: Clear elements from fragment
		if ( tmp ) {
			safe.removeChild( tmp );
		}

		// Reset defaultChecked for any radios and checkboxes
		// about to be appended to the DOM in IE 6/7 (#8060)
		if ( !support.appendChecked ) {
			jQuery.grep( getAll( nodes, "input" ), fixDefaultChecked );
		}

		i = 0;
		while ( (elem = nodes[ i++ ]) ) {

			// #4087 - If origin and destination elements are the same, and this is
			// that element, do not do anything
			if ( selection && jQuery.inArray( elem, selection ) !== -1 ) {
				continue;
			}

			contains = jQuery.contains( elem.ownerDocument, elem );

			// Append to fragment
			tmp = getAll( safe.appendChild( elem ), "script" );

			// Preserve script evaluation history
			if ( contains ) {
				setGlobalEval( tmp );
			}

			// Capture executables
			if ( scripts ) {
				j = 0;
				while ( (elem = tmp[ j++ ]) ) {
					if ( rscriptType.test( elem.type || "" ) ) {
						scripts.push( elem );
					}
				}
			}
		}

		tmp = null;

		return safe;
	},

	cleanData: function( elems, /* internal */ acceptData ) {
		var elem, type, id, data,
			i = 0,
			internalKey = jQuery.expando,
			cache = jQuery.cache,
			deleteExpando = support.deleteExpando,
			special = jQuery.event.special;

		for ( ; (elem = elems[i]) != null; i++ ) {
			if ( acceptData || jQuery.acceptData( elem ) ) {

				id = elem[ internalKey ];
				data = id && cache[ id ];

				if ( data ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Remove cache only if it was not already removed by jQuery.event.remove
					if ( cache[ id ] ) {

						delete cache[ id ];

						// IE does not allow us to delete expando properties from nodes,
						// nor does it have a removeAttribute function on Document nodes;
						// we must handle all of these cases
						if ( deleteExpando ) {
							delete elem[ internalKey ];

						} else if ( typeof elem.removeAttribute !== strundefined ) {
							elem.removeAttribute( internalKey );

						} else {
							elem[ internalKey ] = null;
						}

						deletedIds.push( id );
					}
				}
			}
		}
	}
});

jQuery.fn.extend({
	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().append( ( this[0] && this[0].ownerDocument || document ).createTextNode( value ) );
		}, null, value, arguments.length );
	},

	append: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		});
	},

	prepend: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		});
	},

	before: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		});
	},

	after: function() {
		return this.domManip( arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		});
	},

	remove: function( selector, keepData /* Internal Use Only */ ) {
		var elem,
			elems = selector ? jQuery.filter( selector, this ) : this,
			i = 0;

		for ( ; (elem = elems[i]) != null; i++ ) {

			if ( !keepData && elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem ) );
			}

			if ( elem.parentNode ) {
				if ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {
					setGlobalEval( getAll( elem, "script" ) );
				}
				elem.parentNode.removeChild( elem );
			}
		}

		return this;
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; (elem = this[i]) != null; i++ ) {
			// Remove element nodes and prevent memory leaks
			if ( elem.nodeType === 1 ) {
				jQuery.cleanData( getAll( elem, false ) );
			}

			// Remove any remaining nodes
			while ( elem.firstChild ) {
				elem.removeChild( elem.firstChild );
			}

			// If this is a select, ensure that it displays empty (#12336)
			// Support: IE<9
			if ( elem.options && jQuery.nodeName( elem, "select" ) ) {
				elem.options.length = 0;
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map(function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		});
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined ) {
				return elem.nodeType === 1 ?
					elem.innerHTML.replace( rinlinejQuery, "" ) :
					undefined;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				( support.htmlSerialize || !rnoshimcache.test( value )  ) &&
				( support.leadingWhitespace || !rleadingWhitespace.test( value ) ) &&
				!wrapMap[ (rtagName.exec( value ) || [ "", "" ])[ 1 ].toLowerCase() ] ) {

				value = value.replace( rxhtmlTag, "<$1></$2>" );

				try {
					for (; i < l; i++ ) {
						// Remove element nodes and prevent memory leaks
						elem = this[i] || {};
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch(e) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var arg = arguments[ 0 ];

		// Make the changes, replacing each context element with the new content
		this.domManip( arguments, function( elem ) {
			arg = this.parentNode;

			jQuery.cleanData( getAll( this ) );

			if ( arg ) {
				arg.replaceChild( elem, this );
			}
		});

		// Force removal if there was no new content (e.g., from empty arguments)
		return arg && (arg.length || arg.nodeType) ? this : this.remove();
	},

	detach: function( selector ) {
		return this.remove( selector, true );
	},

	domManip: function( args, callback ) {

		// Flatten any nested arrays
		args = concat.apply( [], args );

		var first, node, hasScripts,
			scripts, doc, fragment,
			i = 0,
			l = this.length,
			set = this,
			iNoClone = l - 1,
			value = args[0],
			isFunction = jQuery.isFunction( value );

		// We can't cloneNode fragments that contain checked, in WebKit
		if ( isFunction ||
				( l > 1 && typeof value === "string" &&
					!support.checkClone && rchecked.test( value ) ) ) {
			return this.each(function( index ) {
				var self = set.eq( index );
				if ( isFunction ) {
					args[0] = value.call( this, index, self.html() );
				}
				self.domManip( args, callback );
			});
		}

		if ( l ) {
			fragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );
			first = fragment.firstChild;

			if ( fragment.childNodes.length === 1 ) {
				fragment = first;
			}

			if ( first ) {
				scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
				hasScripts = scripts.length;

				// Use the original fragment for the last item instead of the first because it can end up
				// being emptied incorrectly in certain situations (#8070).
				for ( ; i < l; i++ ) {
					node = fragment;

					if ( i !== iNoClone ) {
						node = jQuery.clone( node, true, true );

						// Keep references to cloned scripts for later restoration
						if ( hasScripts ) {
							jQuery.merge( scripts, getAll( node, "script" ) );
						}
					}

					callback.call( this[i], node, i );
				}

				if ( hasScripts ) {
					doc = scripts[ scripts.length - 1 ].ownerDocument;

					// Reenable scripts
					jQuery.map( scripts, restoreScript );

					// Evaluate executable scripts on first document insertion
					for ( i = 0; i < hasScripts; i++ ) {
						node = scripts[ i ];
						if ( rscriptType.test( node.type || "" ) &&
							!jQuery._data( node, "globalEval" ) && jQuery.contains( doc, node ) ) {

							if ( node.src ) {
								// Optional AJAX dependency, but won't run scripts if not present
								if ( jQuery._evalUrl ) {
									jQuery._evalUrl( node.src );
								}
							} else {
								jQuery.globalEval( ( node.text || node.textContent || node.innerHTML || "" ).replace( rcleanScript, "" ) );
							}
						}
					}
				}

				// Fix #11809: Avoid leaking memory
				fragment = first = null;
			}
		}

		return this;
	}
});

jQuery.each({
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			i = 0,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone(true);
			jQuery( insert[i] )[ original ]( elems );

			// Modern browsers can apply jQuery collections as arrays, but oldIE needs a .get()
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
});


var iframe,
	elemdisplay = {};

/**
 * Retrieve the actual display of a element
 * @param {String} name nodeName of the element
 * @param {Object} doc Document object
 */
// Called only from within defaultDisplay
function actualDisplay( name, doc ) {
	var style,
		elem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),

		// getDefaultComputedStyle might be reliably used only on attached element
		display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?

			// Use of this method is a temporary fix (more like optmization) until something better comes along,
			// since it was removed from specification and supported only in FF
			style.display : jQuery.css( elem[ 0 ], "display" );

	// We don't have any data stored on the element,
	// so use "detach" method as fast way to get rid of the element
	elem.detach();

	return display;
}

/**
 * Try to determine the default display value of an element
 * @param {String} nodeName
 */
function defaultDisplay( nodeName ) {
	var doc = document,
		display = elemdisplay[ nodeName ];

	if ( !display ) {
		display = actualDisplay( nodeName, doc );

		// If the simple way fails, read from inside an iframe
		if ( display === "none" || !display ) {

			// Use the already-created iframe if possible
			iframe = (iframe || jQuery( "<iframe frameborder='0' width='0' height='0'/>" )).appendTo( doc.documentElement );

			// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse
			doc = ( iframe[ 0 ].contentWindow || iframe[ 0 ].contentDocument ).document;

			// Support: IE
			doc.write();
			doc.close();

			display = actualDisplay( nodeName, doc );
			iframe.detach();
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return display;
}


(function() {
	var shrinkWrapBlocksVal;

	support.shrinkWrapBlocks = function() {
		if ( shrinkWrapBlocksVal != null ) {
			return shrinkWrapBlocksVal;
		}

		// Will be changed later if needed.
		shrinkWrapBlocksVal = false;

		// Minified: var b,c,d
		var div, body, container;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {
			// Test fired too early or in an unsupported environment, exit.
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		// Support: IE6
		// Check if elements with layout shrink-wrap their children
		if ( typeof div.style.zoom !== strundefined ) {
			// Reset CSS: box-sizing; display; margin; border
			div.style.cssText =
				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;" +
				"padding:1px;width:1px;zoom:1";
			div.appendChild( document.createElement( "div" ) ).style.width = "5px";
			shrinkWrapBlocksVal = div.offsetWidth !== 3;
		}

		body.removeChild( container );

		return shrinkWrapBlocksVal;
	};

})();
var rmargin = (/^margin/);

var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );



var getStyles, curCSS,
	rposition = /^(top|right|bottom|left)$/;

if ( window.getComputedStyle ) {
	getStyles = function( elem ) {
		return elem.ownerDocument.defaultView.getComputedStyle( elem, null );
	};

	curCSS = function( elem, name, computed ) {
		var width, minWidth, maxWidth, ret,
			style = elem.style;

		computed = computed || getStyles( elem );

		// getPropertyValue is only needed for .css('filter') in IE9, see #12537
		ret = computed ? computed.getPropertyValue( name ) || computed[ name ] : undefined;

		if ( computed ) {

			if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
				ret = jQuery.style( elem, name );
			}

			// A tribute to the "awesome hack by Dean Edwards"
			// Chrome < 17 and Safari 5.0 uses "computed value" instead of "used value" for margin-right
			// Safari 5.1.7 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels
			// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values
			if ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {

				// Remember the original values
				width = style.width;
				minWidth = style.minWidth;
				maxWidth = style.maxWidth;

				// Put in the new values to get a computed value out
				style.minWidth = style.maxWidth = style.width = ret;
				ret = computed.width;

				// Revert the changed values
				style.width = width;
				style.minWidth = minWidth;
				style.maxWidth = maxWidth;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "";
	};
} else if ( document.documentElement.currentStyle ) {
	getStyles = function( elem ) {
		return elem.currentStyle;
	};

	curCSS = function( elem, name, computed ) {
		var left, rs, rsLeft, ret,
			style = elem.style;

		computed = computed || getStyles( elem );
		ret = computed ? computed[ name ] : undefined;

		// Avoid setting ret to empty string here
		// so we don't default to auto
		if ( ret == null && style && style[ name ] ) {
			ret = style[ name ];
		}

		// From the awesome hack by Dean Edwards
		// http://erik.eae.net/archives/2007/07/27/18.54.15/#comment-102291

		// If we're not dealing with a regular pixel number
		// but a number that has a weird ending, we need to convert it to pixels
		// but not position css attributes, as those are proportional to the parent element instead
		// and we can't measure the parent instead because it might trigger a "stacking dolls" problem
		if ( rnumnonpx.test( ret ) && !rposition.test( name ) ) {

			// Remember the original values
			left = style.left;
			rs = elem.runtimeStyle;
			rsLeft = rs && rs.left;

			// Put in the new values to get a computed value out
			if ( rsLeft ) {
				rs.left = elem.currentStyle.left;
			}
			style.left = name === "fontSize" ? "1em" : ret;
			ret = style.pixelLeft + "px";

			// Revert the changed values
			style.left = left;
			if ( rsLeft ) {
				rs.left = rsLeft;
			}
		}

		// Support: IE
		// IE returns zIndex value as an integer.
		return ret === undefined ?
			ret :
			ret + "" || "auto";
	};
}




function addGetHookIf( conditionFn, hookFn ) {
	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			var condition = conditionFn();

			if ( condition == null ) {
				// The test was not ready at this point; screw the hook this time
				// but check again when needed next time.
				return;
			}

			if ( condition ) {
				// Hook not needed (or it's not possible to use it due to missing dependency),
				// remove it.
				// Since there are no other hooks for marginRight, remove the whole object.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.

			return (this.get = hookFn).apply( this, arguments );
		}
	};
}


(function() {
	// Minified: var b,c,d,e,f,g, h,i
	var div, style, a, pixelPositionVal, boxSizingReliableVal,
		reliableHiddenOffsetsVal, reliableMarginRightVal;

	// Setup
	div = document.createElement( "div" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
	a = div.getElementsByTagName( "a" )[ 0 ];
	style = a && a.style;

	// Finish early in limited (non-browser) environments
	if ( !style ) {
		return;
	}

	style.cssText = "float:left;opacity:.5";

	// Support: IE<9
	// Make sure that element opacity exists (as opposed to filter)
	support.opacity = style.opacity === "0.5";

	// Verify style float existence
	// (IE uses styleFloat instead of cssFloat)
	support.cssFloat = !!style.cssFloat;

	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	// Support: Firefox<29, Android 2.3
	// Vendor-prefix box-sizing
	support.boxSizing = style.boxSizing === "" || style.MozBoxSizing === "" ||
		style.WebkitBoxSizing === "";

	jQuery.extend(support, {
		reliableHiddenOffsets: function() {
			if ( reliableHiddenOffsetsVal == null ) {
				computeStyleTests();
			}
			return reliableHiddenOffsetsVal;
		},

		boxSizingReliable: function() {
			if ( boxSizingReliableVal == null ) {
				computeStyleTests();
			}
			return boxSizingReliableVal;
		},

		pixelPosition: function() {
			if ( pixelPositionVal == null ) {
				computeStyleTests();
			}
			return pixelPositionVal;
		},

		// Support: Android 2.3
		reliableMarginRight: function() {
			if ( reliableMarginRightVal == null ) {
				computeStyleTests();
			}
			return reliableMarginRightVal;
		}
	});

	function computeStyleTests() {
		// Minified: var b,c,d,j
		var div, body, container, contents;

		body = document.getElementsByTagName( "body" )[ 0 ];
		if ( !body || !body.style ) {
			// Test fired too early or in an unsupported environment, exit.
			return;
		}

		// Setup
		div = document.createElement( "div" );
		container = document.createElement( "div" );
		container.style.cssText = "position:absolute;border:0;width:0;height:0;top:0;left:-9999px";
		body.appendChild( container ).appendChild( div );

		div.style.cssText =
			// Support: Firefox<29, Android 2.3
			// Vendor-prefix box-sizing
			"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;" +
			"box-sizing:border-box;display:block;margin-top:1%;top:1%;" +
			"border:1px;padding:1px;width:4px;position:absolute";

		// Support: IE<9
		// Assume reasonable values in the absence of getComputedStyle
		pixelPositionVal = boxSizingReliableVal = false;
		reliableMarginRightVal = true;

		// Check for getComputedStyle so that this code is not run in IE<9.
		if ( window.getComputedStyle ) {
			pixelPositionVal = ( window.getComputedStyle( div, null ) || {} ).top !== "1%";
			boxSizingReliableVal =
				( window.getComputedStyle( div, null ) || { width: "4px" } ).width === "4px";

			// Support: Android 2.3
			// Div with explicit width and no margin-right incorrectly
			// gets computed margin-right based on width of container (#3333)
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			contents = div.appendChild( document.createElement( "div" ) );

			// Reset CSS: box-sizing; display; margin; border; padding
			contents.style.cssText = div.style.cssText =
				// Support: Firefox<29, Android 2.3
				// Vendor-prefix box-sizing
				"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;" +
				"box-sizing:content-box;display:block;margin:0;border:0;padding:0";
			contents.style.marginRight = contents.style.width = "0";
			div.style.width = "1px";

			reliableMarginRightVal =
				!parseFloat( ( window.getComputedStyle( contents, null ) || {} ).marginRight );
		}

		// Support: IE8
		// Check if table cells still have offsetWidth/Height when they are set
		// to display:none and there are still other visible table cells in a
		// table row; if so, offsetWidth/Height are not reliable for use when
		// determining if an element has been hidden directly using
		// display:none (it is still safe to use offsets if a parent element is
		// hidden; don safety goggles and see bug #4512 for more information).
		div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>";
		contents = div.getElementsByTagName( "td" );
		contents[ 0 ].style.cssText = "margin:0;border:0;padding:0;display:none";
		reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
		if ( reliableHiddenOffsetsVal ) {
			contents[ 0 ].style.display = "";
			contents[ 1 ].style.display = "none";
			reliableHiddenOffsetsVal = contents[ 0 ].offsetHeight === 0;
		}

		body.removeChild( container );
	}

})();


// A method for quickly swapping in/out CSS properties to get correct calculations.
jQuery.swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};


var
		ralpha = /alpha\([^)]*\)/i,
	ropacity = /opacity\s*=\s*([^)]*)/,

	// swappable if display is none or starts with table except "table", "table-cell", or "table-caption"
	// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rnumsplit = new RegExp( "^(" + pnum + ")(.*)$", "i" ),
	rrelNum = new RegExp( "^([+-])=(" + pnum + ")", "i" ),

	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];


// return a css property mapped to a potentially vendor prefixed property
function vendorPropName( style, name ) {

	// shortcut for names that are not vendor prefixed
	if ( name in style ) {
		return name;
	}

	// check for vendor prefixed names
	var capName = name.charAt(0).toUpperCase() + name.slice(1),
		origName = name,
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in style ) {
			return name;
		}
	}

	return origName;
}

function showHide( elements, show ) {
	var display, elem, hidden,
		values = [],
		index = 0,
		length = elements.length;

	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		values[ index ] = jQuery._data( elem, "olddisplay" );
		display = elem.style.display;
		if ( show ) {
			// Reset the inline display of this element to learn if it is
			// being hidden by cascaded rules or not
			if ( !values[ index ] && display === "none" ) {
				elem.style.display = "";
			}

			// Set elements which have been overridden with display: none
			// in a stylesheet to whatever the default browser style is
			// for such an element
			if ( elem.style.display === "" && isHidden( elem ) ) {
				values[ index ] = jQuery._data( elem, "olddisplay", defaultDisplay(elem.nodeName) );
			}
		} else {
			hidden = isHidden( elem );

			if ( display && display !== "none" || !hidden ) {
				jQuery._data( elem, "olddisplay", hidden ? display : jQuery.css( elem, "display" ) );
			}
		}
	}

	// Set the display of most of the elements in a second loop
	// to avoid the constant reflow
	for ( index = 0; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}
		if ( !show || elem.style.display === "none" || elem.style.display === "" ) {
			elem.style.display = show ? values[ index ] || "" : "none";
		}
	}

	return elements;
}

function setPositiveNumber( elem, value, subtract ) {
	var matches = rnumsplit.exec( value );
	return matches ?
		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || "px" ) :
		value;
}

function augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {
	var i = extra === ( isBorderBox ? "border" : "content" ) ?
		// If we already have the right measurement, avoid augmentation
		4 :
		// Otherwise initialize for horizontal or vertical properties
		name === "width" ? 1 : 0,

		val = 0;

	for ( ; i < 4; i += 2 ) {
		// both box models exclude margin, so add it if we want it
		if ( extra === "margin" ) {
			val += jQuery.css( elem, extra + cssExpand[ i ], true, styles );
		}

		if ( isBorderBox ) {
			// border-box includes padding, so remove it if we want content
			if ( extra === "content" ) {
				val -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// at this point, extra isn't border nor margin, so remove border
			if ( extra !== "margin" ) {
				val -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		} else {
			// at this point, extra isn't content, so add padding
			val += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// at this point, extra isn't content nor padding, so add border
			if ( extra !== "padding" ) {
				val += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	return val;
}

function getWidthOrHeight( elem, name, extra ) {

	// Start with offset property, which is equivalent to the border-box value
	var valueIsBorderBox = true,
		val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
		styles = getStyles( elem ),
		isBorderBox = support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box";

	// some non-html elements return undefined for offsetWidth, so check for null/undefined
	// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285
	// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668
	if ( val <= 0 || val == null ) {
		// Fall back to computed then uncomputed css if necessary
		val = curCSS( elem, name, styles );
		if ( val < 0 || val == null ) {
			val = elem.style[ name ];
		}

		// Computed unit is not pixels. Stop here and return.
		if ( rnumnonpx.test(val) ) {
			return val;
		}

		// we need the check for style in case a browser which returns unreliable values
		// for getComputedStyle silently falls back to the reliable elem.style
		valueIsBorderBox = isBorderBox && ( support.boxSizingReliable() || val === elem.style[ name ] );

		// Normalize "", auto, and prepare for extra
		val = parseFloat( val ) || 0;
	}

	// use the active box-sizing model to add/subtract irrelevant styles
	return ( val +
		augmentWidthOrHeight(
			elem,
			name,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles
		)
	) + "px";
}

jQuery.extend({
	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {
					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {
		// normalize float css property
		"float": support.cssFloat ? "cssFloat" : "styleFloat"
	},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {
		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = jQuery.camelCase( name ),
			style = elem.style;

		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// convert relative number strings (+= or -=) to relative numbers. #7345
			if ( type === "string" && (ret = rrelNum.exec( value )) ) {
				value = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );
				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set. See: #7116
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add 'px' to the (except for certain CSS properties)
			if ( type === "number" && !jQuery.cssNumber[ origName ] ) {
				value += "px";
			}

			// Fixes #8908, it can be done more correctly by specifing setters in cssHooks,
			// but it would mean to define eight (for every problematic property) identical functions
			if ( !support.clearCloneStyle && value === "" && name.indexOf("background") === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !("set" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {

				// Support: IE
				// Swallow errors from 'invalid' CSS values (#5509)
				try {
					style[ name ] = value;
				} catch(e) {}
			}

		} else {
			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {
				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var num, val, hooks,
			origName = jQuery.camelCase( name );

		// Make sure that we're working with the right name
		name = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );

		// gets hook for the prefixed version
		// followed by the unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		//convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Return, converting to number if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || jQuery.isNumeric( num ) ? num || 0 : val;
		}
		return val;
	}
});

jQuery.each([ "height", "width" ], function( i, name ) {
	jQuery.cssHooks[ name ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {
				// certain elements can have dimension info if we invisibly show them
				// however, it must have a current display style that would benefit from this
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) && elem.offsetWidth === 0 ?
					jQuery.swap( elem, cssShow, function() {
						return getWidthOrHeight( elem, name, extra );
					}) :
					getWidthOrHeight( elem, name, extra );
			}
		},

		set: function( elem, value, extra ) {
			var styles = extra && getStyles( elem );
			return setPositiveNumber( elem, value, extra ?
				augmentWidthOrHeight(
					elem,
					name,
					extra,
					support.boxSizing && jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
					styles
				) : 0
			);
		}
	};
});

if ( !support.opacity ) {
	jQuery.cssHooks.opacity = {
		get: function( elem, computed ) {
			// IE uses filters for opacity
			return ropacity.test( (computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "" ) ?
				( 0.01 * parseFloat( RegExp.$1 ) ) + "" :
				computed ? "1" : "";
		},

		set: function( elem, value ) {
			var style = elem.style,
				currentStyle = elem.currentStyle,
				opacity = jQuery.isNumeric( value ) ? "alpha(opacity=" + value * 100 + ")" : "",
				filter = currentStyle && currentStyle.filter || style.filter || "";

			// IE has trouble with opacity if it does not have layout
			// Force it by setting the zoom level
			style.zoom = 1;

			// if setting opacity to 1, and no other filters exist - attempt to remove filter attribute #6652
			// if value === "", then remove inline opacity #12685
			if ( ( value >= 1 || value === "" ) &&
					jQuery.trim( filter.replace( ralpha, "" ) ) === "" &&
					style.removeAttribute ) {

				// Setting style.filter to null, "" & " " still leave "filter:" in the cssText
				// if "filter:" is present at all, clearType is disabled, we want to avoid this
				// style.removeAttribute is IE Only, but so apparently is this code path...
				style.removeAttribute( "filter" );

				// if there is no filter style applied in a css rule or unset inline opacity, we are done
				if ( value === "" || currentStyle && !currentStyle.filter ) {
					return;
				}
			}

			// otherwise, set new filter values
			style.filter = ralpha.test( filter ) ?
				filter.replace( ralpha, opacity ) :
				filter + " " + opacity;
		}
	};
}

jQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,
	function( elem, computed ) {
		if ( computed ) {
			// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right
			// Work around by temporarily setting element display to inline-block
			return jQuery.swap( elem, { "display": "inline-block" },
				curCSS, [ elem, "marginRight" ] );
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each({
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// assumes a single number if not a string
				parts = typeof value === "string" ? value.split(" ") : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( !rmargin.test( prefix ) ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
});

jQuery.fn.extend({
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( jQuery.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	},
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each(function() {
			if ( isHidden( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		});
	}
});


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || "swing";
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			if ( tween.elem[ tween.prop ] != null &&
				(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {
				return tween.elem[ tween.prop ];
			}

			// passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails
			// so, simple values such as "10px" are parsed to Float.
			// complex values such as "rotate(1rad)" are returned as is.
			result = jQuery.css( tween.elem, tween.prop, "" );
			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {
			// use step hook for back compat - use cssHook if its there - use .style if its
			// available and use plain properties where available
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9
// Panic based approach to setting things on disconnected nodes

Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	}
};

jQuery.fx = Tween.prototype.init;

// Back Compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, timerId,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rfxnum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" ),
	rrun = /queueHooks$/,
	animationPrefilters = [ defaultPrefilter ],
	tweeners = {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value ),
				target = tween.cur(),
				parts = rfxnum.exec( value ),
				unit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

				// Starting value computation is required for potential unit mismatches
				start = ( jQuery.cssNumber[ prop ] || unit !== "px" && +target ) &&
					rfxnum.exec( jQuery.css( tween.elem, prop ) ),
				scale = 1,
				maxIterations = 20;

			if ( start && start[ 3 ] !== unit ) {
				// Trust units reported by jQuery.css
				unit = unit || start[ 3 ];

				// Make sure we update the tween properties later on
				parts = parts || [];

				// Iteratively approximate from a nonzero starting point
				start = +target || 1;

				do {
					// If previous iteration zeroed out, double until we get *something*
					// Use a string for doubling factor so we don't accidentally see scale as unchanged below
					scale = scale || ".5";

					// Adjust and apply
					start = start / scale;
					jQuery.style( tween.elem, prop, start + unit );

				// Update scale, tolerating zero or NaN from tween.cur()
				// And breaking the loop if scale is unchanged or perfect, or if we've just had enough
				} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );
			}

			// Update tween properties
			if ( parts ) {
				start = tween.start = +start || +target || 0;
				tween.unit = unit;
				// If a +=/-= token was provided, we're doing a relative animation
				tween.end = parts[ 1 ] ?
					start + ( parts[ 1 ] + 1 ) * parts[ 2 ] :
					+parts[ 2 ];
			}

			return tween;
		} ]
	};

// Animations created synchronously will run synchronously
function createFxNow() {
	setTimeout(function() {
		fxNow = undefined;
	});
	return ( fxNow = jQuery.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		attrs = { height: type },
		i = 0;

	// if we include width, step value is 1 to do all cssExpand values,
	// if we don't include width, step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4 ; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( tweeners[ prop ] || [] ).concat( tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( (tween = collection[ index ].call( animation, prop, value )) ) {

			// we're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	/* jshint validthis: true */
	var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHidden( elem ),
		dataShow = jQuery._data( elem, "fxshow" );

	// handle queue: false promises
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always(function() {
			// doing this makes sure that the complete handler will be called
			// before this completes
			anim.always(function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			});
		});
	}

	// height/width overflow pass
	if ( elem.nodeType === 1 && ( "height" in props || "width" in props ) ) {
		// Make sure that nothing sneaks out
		// Record all 3 overflow attributes because IE does not
		// change the overflow attribute when overflowX and
		// overflowY are set to the same value
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Set display property to inline-block for height/width
		// animations on inline elements that are having width/height animated
		display = jQuery.css( elem, "display" );

		// Test default display if display is currently "none"
		checkDisplay = display === "none" ?
			jQuery._data( elem, "olddisplay" ) || defaultDisplay( elem.nodeName ) : display;

		if ( checkDisplay === "inline" && jQuery.css( elem, "float" ) === "none" ) {

			// inline-level elements accept inline-block;
			// block-level elements need to be inline with layout
			if ( !support.inlineBlockNeedsLayout || defaultDisplay( elem.nodeName ) === "inline" ) {
				style.display = "inline-block";
			} else {
				style.zoom = 1;
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		if ( !support.shrinkWrapBlocks() ) {
			anim.always(function() {
				style.overflow = opts.overflow[ 0 ];
				style.overflowX = opts.overflow[ 1 ];
				style.overflowY = opts.overflow[ 2 ];
			});
		}
	}

	// show/hide pass
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.exec( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );

		// Any non-fx value stops us from restoring the original display value
		} else {
			display = undefined;
		}
	}

	if ( !jQuery.isEmptyObject( orig ) ) {
		if ( dataShow ) {
			if ( "hidden" in dataShow ) {
				hidden = dataShow.hidden;
			}
		} else {
			dataShow = jQuery._data( elem, "fxshow", {} );
		}

		// store state if its toggle - enables .stop().toggle() to "reverse"
		if ( toggle ) {
			dataShow.hidden = !hidden;
		}
		if ( hidden ) {
			jQuery( elem ).show();
		} else {
			anim.done(function() {
				jQuery( elem ).hide();
			});
		}
		anim.done(function() {
			var prop;
			jQuery._removeData( elem, "fxshow" );
			for ( prop in orig ) {
				jQuery.style( elem, prop, orig[ prop ] );
			}
		});
		for ( prop in orig ) {
			tween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );

			if ( !( prop in dataShow ) ) {
				dataShow[ prop ] = tween.start;
				if ( hidden ) {
					tween.end = tween.start;
					tween.start = prop === "width" || prop === "height" ? 1 : 0;
				}
			}
		}

	// If this is a noop like .hide().hide(), restore an overwritten display value
	} else if ( (display === "none" ? defaultDisplay( elem.nodeName ) : display) === "inline" ) {
		style.display = display;
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = jQuery.camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( jQuery.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// not quite $.extend, this wont overwrite keys already present.
			// also - reusing 'index' from above because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = animationPrefilters.length,
		deferred = jQuery.Deferred().always( function() {
			// don't match elem in the :animated selector
			delete tick.elem;
		}),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),
				// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length ; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ]);

			if ( percent < 1 && length ) {
				return remaining;
			} else {
				deferred.resolveWith( elem, [ animation ] );
				return false;
			}
		},
		animation = deferred.promise({
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, { specialEasing: {} }, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,
					// if we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length ; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// resolve when we played the last frame
				// otherwise, reject
				if ( gotoEnd ) {
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		}),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length ; index++ ) {
		result = animationPrefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( jQuery.isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		})
	);

	// attach callbacks from options
	return animation.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );
}

jQuery.Animation = jQuery.extend( Animation, {
	tweener: function( props, callback ) {
		if ( jQuery.isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.split(" ");
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length ; index++ ) {
			prop = props[ index ];
			tweeners[ prop ] = tweeners[ prop ] || [];
			tweeners[ prop ].unshift( callback );
		}
	},

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			animationPrefilters.unshift( callback );
		} else {
			animationPrefilters.push( callback );
		}
	}
});

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			jQuery.isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !jQuery.isFunction( easing ) && easing
	};

	opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration :
		opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;

	// normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( jQuery.isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend({
	fadeTo: function( speed, to, easing, callback ) {

		// show any hidden elements after setting opacity to 0
		return this.filter( isHidden ).css( "opacity", 0 ).show()

			// animate to the value specified
			.end().animate({ opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {
				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || jQuery._data( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each(function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = jQuery._data( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {
					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// start the next in the queue if the last step wasn't forced
			// timers currently will call their complete callbacks, which will dequeue
			// but only if they were gotoEnd
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		});
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each(function() {
			var index,
				data = jQuery._data( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// enable finishing flag on private data
			data.finish = true;

			// empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// turn off finishing flag
			delete data.finish;
		});
	}
});

jQuery.each([ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
});

// Generate shortcuts for custom animations
jQuery.each({
	slideDown: genFx("show"),
	slideUp: genFx("hide"),
	slideToggle: genFx("toggle"),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
});

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		timers = jQuery.timers,
		i = 0;

	fxNow = jQuery.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];
		// Checks the timer has not already been removed
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	if ( timer() ) {
		jQuery.fx.start();
	} else {
		jQuery.timers.pop();
	}
};

jQuery.fx.interval = 13;

jQuery.fx.start = function() {
	if ( !timerId ) {
		timerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );
	}
};

jQuery.fx.stop = function() {
	clearInterval( timerId );
	timerId = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,
	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = setTimeout( next, time );
		hooks.stop = function() {
			clearTimeout( timeout );
		};
	});
};


(function() {
	// Minified: var a,b,c,d,e
	var input, div, select, a, opt;

	// Setup
	div = document.createElement( "div" );
	div.setAttribute( "className", "t" );
	div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>";
	a = div.getElementsByTagName("a")[ 0 ];

	// First batch of tests.
	select = document.createElement("select");
	opt = select.appendChild( document.createElement("option") );
	input = div.getElementsByTagName("input")[ 0 ];

	a.style.cssText = "top:1px";

	// Test setAttribute on camelCase class. If it works, we need attrFixes when doing get/setAttribute (ie6/7)
	support.getSetAttribute = div.className !== "t";

	// Get the style information from getAttribute
	// (IE uses .cssText instead)
	support.style = /top/.test( a.getAttribute("style") );

	// Make sure that URLs aren't manipulated
	// (IE normalizes it by default)
	support.hrefNormalized = a.getAttribute("href") === "/a";

	// Check the default checkbox/radio value ("" on WebKit; "on" elsewhere)
	support.checkOn = !!input.value;

	// Make sure that a selected-by-default option has a working selected property.
	// (WebKit defaults to false instead of true, IE too, if it's in an optgroup)
	support.optSelected = opt.selected;

	// Tests for enctype support on a form (#6743)
	support.enctype = !!document.createElement("form").enctype;

	// Make sure that the options inside disabled selects aren't marked as disabled
	// (WebKit marks them as disabled)
	select.disabled = true;
	support.optDisabled = !opt.disabled;

	// Support: IE8 only
	// Check if we can trust getAttribute("value")
	input = document.createElement( "input" );
	input.setAttribute( "value", "" );
	support.input = input.getAttribute( "value" ) === "";

	// Check if an input maintains its value after becoming a radio
	input.value = "t";
	input.setAttribute( "type", "radio" );
	support.radioValue = input.value === "t";
})();


var rreturn = /\r/g;

jQuery.fn.extend({
	val: function( value ) {
		var hooks, ret, isFunction,
			elem = this[0];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks && "get" in hooks && (ret = hooks.get( elem, "value" )) !== undefined ) {
					return ret;
				}

				ret = elem.value;

				return typeof ret === "string" ?
					// handle most common string cases
					ret.replace(rreturn, "") :
					// handle cases where value is null/undef or number
					ret == null ? "" : ret;
			}

			return;
		}

		isFunction = jQuery.isFunction( value );

		return this.each(function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( isFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";
			} else if ( typeof val === "number" ) {
				val += "";
			} else if ( jQuery.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				});
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !("set" in hooks) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		});
	}
});

jQuery.extend({
	valHooks: {
		option: {
			get: function( elem ) {
				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :
					// Support: IE10-11+
					// option.text throws exceptions (#14686, #14858)
					jQuery.trim( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one" || index < 0,
					values = one ? null : [],
					max = one ? index + 1 : options.length,
					i = index < 0 ?
						max :
						one ? index : 0;

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// oldIE doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&
							// Don't return options that are disabled or in a disabled optgroup
							( support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null ) &&
							( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					if ( jQuery.inArray( jQuery.valHooks.option.get( option ), values ) >= 0 ) {

						// Support: IE6
						// When new option element is added to select box we need to
						// force reflow of newly added node in order to workaround delay
						// of initialization properties
						try {
							option.selected = optionSet = true;

						} catch ( _ ) {

							// Will be executed only in IE6
							option.scrollHeight;
						}

					} else {
						option.selected = false;
					}
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}

				return options;
			}
		}
	}
});

// Radios and checkboxes getter/setter
jQuery.each([ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( jQuery.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			// Support: Webkit
			// "" is returned instead of "on" if a value isn't specified
			return elem.getAttribute("value") === null ? "on" : elem.value;
		};
	}
});




var nodeHook, boolHook,
	attrHandle = jQuery.expr.attrHandle,
	ruseDefault = /^(?:checked|selected)$/i,
	getSetAttribute = support.getSetAttribute,
	getSetInput = support.input;

jQuery.fn.extend({
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each(function() {
			jQuery.removeAttr( this, name );
		});
	}
});

jQuery.extend({
	attr: function( elem, name, value ) {
		var hooks, ret,
			nType = elem.nodeType;

		// don't get/set attributes on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === strundefined ) {
			return jQuery.prop( elem, name, value );
		}

		// All attributes are lowercase
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			name = name.toLowerCase();
			hooks = jQuery.attrHooks[ name ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );
		}

		if ( value !== undefined ) {

			if ( value === null ) {
				jQuery.removeAttr( elem, name );

			} else if ( hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {
				return ret;

			} else {
				elem.setAttribute( name, value + "" );
				return value;
			}

		} else if ( hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ) {
			return ret;

		} else {
			ret = jQuery.find.attr( elem, name );

			// Non-existent attributes return null, we normalize to undefined
			return ret == null ?
				undefined :
				ret;
		}
	},

	removeAttr: function( elem, value ) {
		var name, propName,
			i = 0,
			attrNames = value && value.match( rnotwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( (name = attrNames[i++]) ) {
				propName = jQuery.propFix[ name ] || name;

				// Boolean attributes get special treatment (#10870)
				if ( jQuery.expr.match.bool.test( name ) ) {
					// Set corresponding property to false
					if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
						elem[ propName ] = false;
					// Support: IE<9
					// Also clear defaultChecked/defaultSelected (if appropriate)
					} else {
						elem[ jQuery.camelCase( "default-" + name ) ] =
							elem[ propName ] = false;
					}

				// See #9699 for explanation of this approach (setting first, then removal)
				} else {
					jQuery.attr( elem, name, "" );
				}

				elem.removeAttribute( getSetAttribute ? name : propName );
			}
		}
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" && jQuery.nodeName(elem, "input") ) {
					// Setting the type on a radio button after the value resets the value in IE6-9
					// Reset value to default in case type is set after value during creation
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	}
});

// Hook for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {
			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else if ( getSetInput && getSetAttribute || !ruseDefault.test( name ) ) {
			// IE<8 needs the *property* name
			elem.setAttribute( !getSetAttribute && jQuery.propFix[ name ] || name, name );

		// Use defaultChecked and defaultSelected for oldIE
		} else {
			elem[ jQuery.camelCase( "default-" + name ) ] = elem[ name ] = true;
		}

		return name;
	}
};

// Retrieve booleans specially
jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {

	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = getSetInput && getSetAttribute || !ruseDefault.test( name ) ?
		function( elem, name, isXML ) {
			var ret, handle;
			if ( !isXML ) {
				// Avoid an infinite loop by temporarily removing this function from the getter
				handle = attrHandle[ name ];
				attrHandle[ name ] = ret;
				ret = getter( elem, name, isXML ) != null ?
					name.toLowerCase() :
					null;
				attrHandle[ name ] = handle;
			}
			return ret;
		} :
		function( elem, name, isXML ) {
			if ( !isXML ) {
				return elem[ jQuery.camelCase( "default-" + name ) ] ?
					name.toLowerCase() :
					null;
			}
		};
});

// fix oldIE attroperties
if ( !getSetInput || !getSetAttribute ) {
	jQuery.attrHooks.value = {
		set: function( elem, value, name ) {
			if ( jQuery.nodeName( elem, "input" ) ) {
				// Does not return so that setAttribute is also used
				elem.defaultValue = value;
			} else {
				// Use nodeHook if defined (#1954); otherwise setAttribute is fine
				return nodeHook && nodeHook.set( elem, value, name );
			}
		}
	};
}

// IE6/7 do not support getting/setting some attributes with get/setAttribute
if ( !getSetAttribute ) {

	// Use this for any attribute in IE6/7
	// This fixes almost every IE6/7 issue
	nodeHook = {
		set: function( elem, value, name ) {
			// Set the existing or create a new attribute node
			var ret = elem.getAttributeNode( name );
			if ( !ret ) {
				elem.setAttributeNode(
					(ret = elem.ownerDocument.createAttribute( name ))
				);
			}

			ret.value = value += "";

			// Break association with cloned elements by also using setAttribute (#9646)
			if ( name === "value" || value === elem.getAttribute( name ) ) {
				return value;
			}
		}
	};

	// Some attributes are constructed with empty-string values when not defined
	attrHandle.id = attrHandle.name = attrHandle.coords =
		function( elem, name, isXML ) {
			var ret;
			if ( !isXML ) {
				return (ret = elem.getAttributeNode( name )) && ret.value !== "" ?
					ret.value :
					null;
			}
		};

	// Fixing value retrieval on a button requires this module
	jQuery.valHooks.button = {
		get: function( elem, name ) {
			var ret = elem.getAttributeNode( name );
			if ( ret && ret.specified ) {
				return ret.value;
			}
		},
		set: nodeHook.set
	};

	// Set contenteditable to false on removals(#10429)
	// Setting to empty string throws an error as an invalid value
	jQuery.attrHooks.contenteditable = {
		set: function( elem, value, name ) {
			nodeHook.set( elem, value === "" ? false : value, name );
		}
	};

	// Set width and height to auto instead of 0 on empty string( Bug #8150 )
	// This is for removals
	jQuery.each([ "width", "height" ], function( i, name ) {
		jQuery.attrHooks[ name ] = {
			set: function( elem, value ) {
				if ( value === "" ) {
					elem.setAttribute( name, "auto" );
					return value;
				}
			}
		};
	});
}

if ( !support.style ) {
	jQuery.attrHooks.style = {
		get: function( elem ) {
			// Return undefined in the case of empty string
			// Note: IE uppercases css property names, but if we were to .toLowerCase()
			// .cssText, that would destroy case senstitivity in URL's, like in "background"
			return elem.style.cssText || undefined;
		},
		set: function( elem, value ) {
			return ( elem.style.cssText = value + "" );
		}
	};
}




var rfocusable = /^(?:input|select|textarea|button|object)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend({
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		name = jQuery.propFix[ name ] || name;
		return this.each(function() {
			// try/catch handles cases where IE balks (such as removing a property on window)
			try {
				this[ name ] = undefined;
				delete this[ name ];
			} catch( e ) {}
		});
	}
});

jQuery.extend({
	propFix: {
		"for": "htmlFor",
		"class": "className"
	},

	prop: function( elem, name, value ) {
		var ret, hooks, notxml,
			nType = elem.nodeType;

		// don't get/set properties on text, comment and attribute nodes
		if ( !elem || nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		notxml = nType !== 1 || !jQuery.isXMLDoc( elem );

		if ( notxml ) {
			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			return hooks && "set" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?
				ret :
				( elem[ name ] = value );

		} else {
			return hooks && "get" in hooks && (ret = hooks.get( elem, name )) !== null ?
				ret :
				elem[ name ];
		}
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {
				// elem.tabIndex doesn't always return the correct value when it hasn't been explicitly set
				// http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				return tabindex ?
					parseInt( tabindex, 10 ) :
					rfocusable.test( elem.nodeName ) || rclickable.test( elem.nodeName ) && elem.href ?
						0 :
						-1;
			}
		}
	}
});

// Some attributes require a special call on IE
// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !support.hrefNormalized ) {
	// href/src property should get the full normalized URL (#10299/#12915)
	jQuery.each([ "href", "src" ], function( i, name ) {
		jQuery.propHooks[ name ] = {
			get: function( elem ) {
				return elem.getAttribute( name, 4 );
			}
		};
	});
}

// Support: Safari, IE9+
// mis-reports the default selected property of an option
// Accessing the parent's selectedIndex property fixes it
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {
			var parent = elem.parentNode;

			if ( parent ) {
				parent.selectedIndex;

				// Make sure that it also works with optgroups, see #5701
				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
			return null;
		}
	};
}

jQuery.each([
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
});

// IE6/7 call enctype encoding
if ( !support.enctype ) {
	jQuery.propFix.enctype = "encoding";
}




var rclass = /[\t\r\n\f]/g;

jQuery.fn.extend({
	addClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			i = 0,
			len = this.length,
			proceed = typeof value === "string" && value;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).addClass( value.call( this, j, this.className ) );
			});
		}

		if ( proceed ) {
			// The disjunction here is for better compressibility (see removeClass)
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					" "
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = jQuery.trim( cur );
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, clazz, j, finalValue,
			i = 0,
			len = this.length,
			proceed = arguments.length === 0 || typeof value === "string" && value;

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( j ) {
				jQuery( this ).removeClass( value.call( this, j, this.className ) );
			});
		}
		if ( proceed ) {
			classes = ( value || "" ).match( rnotwhite ) || [];

			for ( ; i < len; i++ ) {
				elem = this[ i ];
				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( elem.className ?
					( " " + elem.className + " " ).replace( rclass, " " ) :
					""
				);

				if ( cur ) {
					j = 0;
					while ( (clazz = classes[j++]) ) {
						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) >= 0 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// only assign if different to avoid unneeded rendering.
					finalValue = value ? jQuery.trim( cur ) : "";
					if ( elem.className !== finalValue ) {
						elem.className = finalValue;
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value;

		if ( typeof stateVal === "boolean" && type === "string" ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( jQuery.isFunction( value ) ) {
			return this.each(function( i ) {
				jQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );
			});
		}

		return this.each(function() {
			if ( type === "string" ) {
				// toggle individual class names
				var className,
					i = 0,
					self = jQuery( this ),
					classNames = value.match( rnotwhite ) || [];

				while ( (className = classNames[ i++ ]) ) {
					// check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( type === strundefined || type === "boolean" ) {
				if ( this.className ) {
					// store className if set
					jQuery._data( this, "__className__", this.className );
				}

				// If the element has a class name or if we're passed "false",
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				this.className = this.className || value === false ? "" : jQuery._data( this, "__className__" ) || "";
			}
		});
	},

	hasClass: function( selector ) {
		var className = " " + selector + " ",
			i = 0,
			l = this.length;
		for ( ; i < l; i++ ) {
			if ( this[i].nodeType === 1 && (" " + this[i].className + " ").replace(rclass, " ").indexOf( className ) >= 0 ) {
				return true;
			}
		}

		return false;
	}
});




// Return jQuery for attributes-only inclusion


jQuery.each( ("blur focus focusin focusout load resize scroll unload click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup error contextmenu").split(" "), function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
});

jQuery.fn.extend({
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	},

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {
		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ? this.off( selector, "**" ) : this.off( types, selector || "**", fn );
	}
});


var nonce = jQuery.now();

var rquery = (/\?/);



var rvalidtokens = /(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;

jQuery.parseJSON = function( data ) {
	// Attempt to parse using the native JSON parser first
	if ( window.JSON && window.JSON.parse ) {
		// Support: Android 2.3
		// Workaround failure to string-cast null input
		return window.JSON.parse( data + "" );
	}

	var requireNonComma,
		depth = null,
		str = jQuery.trim( data + "" );

	// Guard against invalid (and possibly dangerous) input by ensuring that nothing remains
	// after removing valid tokens
	return str && !jQuery.trim( str.replace( rvalidtokens, function( token, comma, open, close ) {

		// Force termination if we see a misplaced comma
		if ( requireNonComma && comma ) {
			depth = 0;
		}

		// Perform no more replacements after returning to outermost depth
		if ( depth === 0 ) {
			return token;
		}

		// Commas must not follow "[", "{", or ","
		requireNonComma = open || comma;

		// Determine new depth
		// array/object open ("[" or "{"): depth += true - false (increment)
		// array/object close ("]" or "}"): depth += false - true (decrement)
		// other cases ("," or primitive): depth += true - true (numeric cast)
		depth += !close - !open;

		// Remove this token
		return "";
	}) ) ?
		( Function( "return " + str ) )() :
		jQuery.error( "Invalid JSON: " + data );
};


// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml, tmp;
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	try {
		if ( window.DOMParser ) { // Standard
			tmp = new DOMParser();
			xml = tmp.parseFromString( data, "text/xml" );
		} else { // IE
			xml = new ActiveXObject( "Microsoft.XMLDOM" );
			xml.async = "false";
			xml.loadXML( data );
		}
	} catch( e ) {
		xml = undefined;
	}
	if ( !xml || !xml.documentElement || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	// Document location
	ajaxLocParts,
	ajaxLocation,

	rhash = /#.*$/,
	rts = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg, // IE leaves an \r character at EOL
	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,
	rurl = /^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat("*");

// #8138, IE may throw an exception when accessing
// a field from window.location if document.domain has been set
try {
	ajaxLocation = location.href;
} catch( e ) {
	// Use the href attribute of an A element
	// since IE will modify it given document.location
	ajaxLocation = document.createElement( "a" );
	ajaxLocation.href = "";
	ajaxLocation = ajaxLocation.href;
}

// Segment location into parts
ajaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];

		if ( jQuery.isFunction( func ) ) {
			// For each dataType in the dataTypeExpression
			while ( (dataType = dataTypes[i++]) ) {
				// Prepend if requested
				if ( dataType.charAt( 0 ) === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					(structure[ dataType ] = structure[ dataType ] || []).unshift( func );

				// Otherwise append
				} else {
					(structure[ dataType ] = structure[ dataType ] || []).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {
				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		});
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var deep, key,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {
	var firstDataType, ct, finalDataType, type,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader("Content-Type");
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {
		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[0] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}
		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},
		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {
								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s[ "throws" ] ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return { state: "parsererror", error: conv ? e : "No conversion from " + prev + " to " + current };
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend({

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: ajaxLocation,
		type: "GET",
		isLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",
		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /xml/,
			html: /html/,
			json: /json/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": jQuery.parseJSON,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var // Cross-domain detection vars
			parts,
			// Loop variable
			i,
			// URL without anti-cache param
			cacheURL,
			// Response headers as string
			responseHeadersString,
			// timeout handle
			timeoutTimer,

			// To know if global events are to be dispatched
			fireGlobals,

			transport,
			// Response headers
			responseHeaders,
			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),
			// Callbacks context
			callbackContext = s.context || s,
			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?
				jQuery( callbackContext ) :
				jQuery.event,
			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks("once memory"),
			// Status-dependent callbacks
			statusCode = s.statusCode || {},
			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},
			// The jqXHR state
			state = 0,
			// Default abort message
			strAbort = "canceled",
			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( state === 2 ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( (match = rheaders.exec( responseHeadersString )) ) {
								responseHeaders[ match[1].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return state === 2 ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					var lname = name.toLowerCase();
					if ( !state ) {
						name = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( !state ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( state < 2 ) {
							for ( code in map ) {
								// Lazy-add the new callback in a way that preserves old ones
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						} else {
							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR ).complete = completeDeferred.add;
		jqXHR.success = jqXHR.done;
		jqXHR.error = jqXHR.fail;

		// Remove hash character (#7531: and string promotion)
		// Add protocol if not provided (#5866: IE7 issue with protocol-less urls)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || ajaxLocation ) + "" ).replace( rhash, "" ).replace( rprotocol, ajaxLocParts[ 1 ] + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = jQuery.trim( s.dataType || "*" ).toLowerCase().match( rnotwhite ) || [ "" ];

		// A cross-domain request is in order when we have a protocol:host:port mismatch
		if ( s.crossDomain == null ) {
			parts = rurl.exec( s.url.toLowerCase() );
			s.crossDomain = !!( parts &&
				( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||
					( parts[ 3 ] || ( parts[ 1 ] === "http:" ? "80" : "443" ) ) !==
						( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === "http:" ? "80" : "443" ) ) )
			);
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( state === 2 ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		fireGlobals = s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger("ajaxStart");
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		cacheURL = s.url;

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// If data is available, append data to url
			if ( s.data ) {
				cacheURL = ( s.url += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data );
				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add anti-cache in url if needed
			if ( s.cache === false ) {
				s.url = rts.test( cacheURL ) ?

					// If there is already a '_' parameter, set its value
					cacheURL.replace( rts, "$1_=" + nonce++ ) :

					// Otherwise add one to the end
					cacheURL + ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + nonce++;
			}
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?
				s.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {
			// Abort if not done already and return
			return jqXHR.abort();
		}

		// aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		for ( i in { success: 1, error: 1, complete: 1 } ) {
			jqXHR[ i ]( s[ i ] );
		}

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}
			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = setTimeout(function() {
					jqXHR.abort("timeout");
				}, s.timeout );
			}

			try {
				state = 1;
				transport.send( requestHeaders, done );
			} catch ( e ) {
				// Propagate exception as error if not done
				if ( state < 2 ) {
					done( -1, e );
				// Simply rethrow otherwise
				} else {
					throw e;
				}
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Called once
			if ( state === 2 ) {
				return;
			}

			// State is "done" now
			state = 2;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader("Last-Modified");
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader("etag");
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {
				// We extract error from statusText
				// then normalize statusText and status for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );
				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger("ajaxStop");
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
});

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {
		// shift arguments if data argument was omitted
		if ( jQuery.isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		return jQuery.ajax({
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		});
	};
});

// Attach a bunch of functions for handling common AJAX events
jQuery.each( [ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
});


jQuery._evalUrl = function( url ) {
	return jQuery.ajax({
		url: url,
		type: "GET",
		dataType: "script",
		async: false,
		global: false,
		"throws": true
	});
};


jQuery.fn.extend({
	wrapAll: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapAll( html.call(this, i) );
			});
		}

		if ( this[0] ) {
			// The elements to wrap the target around
			var wrap = jQuery( html, this[0].ownerDocument ).eq(0).clone(true);

			if ( this[0].parentNode ) {
				wrap.insertBefore( this[0] );
			}

			wrap.map(function() {
				var elem = this;

				while ( elem.firstChild && elem.firstChild.nodeType === 1 ) {
					elem = elem.firstChild;
				}

				return elem;
			}).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( jQuery.isFunction( html ) ) {
			return this.each(function(i) {
				jQuery(this).wrapInner( html.call(this, i) );
			});
		}

		return this.each(function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		});
	},

	wrap: function( html ) {
		var isFunction = jQuery.isFunction( html );

		return this.each(function(i) {
			jQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );
		});
	},

	unwrap: function() {
		return this.parent().each(function() {
			if ( !jQuery.nodeName( this, "body" ) ) {
				jQuery( this ).replaceWith( this.childNodes );
			}
		}).end();
	}
});


jQuery.expr.filters.hidden = function( elem ) {
	// Support: Opera <= 12.12
	// Opera reports offsetWidths and offsetHeights less than zero on some elements
	return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 ||
		(!support.reliableHiddenOffsets() &&
			((elem.style && elem.style.display) || jQuery.css( elem, "display" )) === "none");
};

jQuery.expr.filters.visible = function( elem ) {
	return !jQuery.expr.filters.hidden( elem );
};




var r20 = /%20/g,
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( jQuery.isArray( obj ) ) {
		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {
				// Treat each array item as a scalar.
				add( prefix, v );

			} else {
				// Item is non-scalar (array or object), encode its numeric index.
				buildParams( prefix + "[" + ( typeof v === "object" ? i : "" ) + "]", v, traditional, add );
			}
		});

	} else if ( !traditional && jQuery.type( obj ) === "object" ) {
		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {
		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, value ) {
			// If value is a function, invoke it and return its value
			value = jQuery.isFunction( value ) ? value() : ( value == null ? "" : value );
			s[ s.length ] = encodeURIComponent( key ) + "=" + encodeURIComponent( value );
		};

	// Set traditional to true for jQuery <= 1.3.2 behavior.
	if ( traditional === undefined ) {
		traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;
	}

	// If an array was passed in, assume that it is an array of form elements.
	if ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {
		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		});

	} else {
		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" ).replace( r20, "+" );
};

jQuery.fn.extend({
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map(function() {
			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		})
		.filter(function() {
			var type = this.type;
			// Use .is(":disabled") so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		})
		.map(function( i, elem ) {
			var val = jQuery( this ).val();

			return val == null ?
				null :
				jQuery.isArray( val ) ?
					jQuery.map( val, function( val ) {
						return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
					}) :
					{ name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		}).get();
	}
});


// Create the request object
// (This is still attached to ajaxSettings for backward compatibility)
jQuery.ajaxSettings.xhr = window.ActiveXObject !== undefined ?
	// Support: IE6+
	function() {

		// XHR cannot access local files, always use ActiveX for that case
		return !this.isLocal &&

			// Support: IE7-8
			// oldIE XHR does not support non-RFC2616 methods (#13240)
			// See http://msdn.microsoft.com/en-us/library/ie/ms536648(v=vs.85).aspx
			// and http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9
			// Although this check for six methods instead of eight
			// since IE also does not support "trace" and "connect"
			/^(get|post|head|put|delete|options)$/i.test( this.type ) &&

			createStandardXHR() || createActiveXHR();
	} :
	// For all other browsers, use the standard XMLHttpRequest object
	createStandardXHR;

var xhrId = 0,
	xhrCallbacks = {},
	xhrSupported = jQuery.ajaxSettings.xhr();

// Support: IE<10
// Open requests must be manually aborted on unload (#5280)
if ( window.ActiveXObject ) {
	jQuery( window ).on( "unload", function() {
		for ( var key in xhrCallbacks ) {
			xhrCallbacks[ key ]( undefined, true );
		}
	});
}

// Determine support properties
support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
xhrSupported = support.ajax = !!xhrSupported;

// Create transport if the browser can provide an xhr
if ( xhrSupported ) {

	jQuery.ajaxTransport(function( options ) {
		// Cross domain only allowed if supported through XMLHttpRequest
		if ( !options.crossDomain || support.cors ) {

			var callback;

			return {
				send: function( headers, complete ) {
					var i,
						xhr = options.xhr(),
						id = ++xhrId;

					// Open the socket
					xhr.open( options.type, options.url, options.async, options.username, options.password );

					// Apply custom fields if provided
					if ( options.xhrFields ) {
						for ( i in options.xhrFields ) {
							xhr[ i ] = options.xhrFields[ i ];
						}
					}

					// Override mime type if needed
					if ( options.mimeType && xhr.overrideMimeType ) {
						xhr.overrideMimeType( options.mimeType );
					}

					// X-Requested-With header
					// For cross-domain requests, seeing as conditions for a preflight are
					// akin to a jigsaw puzzle, we simply never set it to be sure.
					// (it can always be set on a per-request basis or even using ajaxSetup)
					// For same-domain requests, won't change header if already provided.
					if ( !options.crossDomain && !headers["X-Requested-With"] ) {
						headers["X-Requested-With"] = "XMLHttpRequest";
					}

					// Set headers
					for ( i in headers ) {
						// Support: IE<9
						// IE's ActiveXObject throws a 'Type Mismatch' exception when setting
						// request header to a null-value.
						//
						// To keep consistent with other XHR implementations, cast the value
						// to string and ignore `undefined`.
						if ( headers[ i ] !== undefined ) {
							xhr.setRequestHeader( i, headers[ i ] + "" );
						}
					}

					// Do send the request
					// This may raise an exception which is actually
					// handled in jQuery.ajax (so no try/catch here)
					xhr.send( ( options.hasContent && options.data ) || null );

					// Listener
					callback = function( _, isAbort ) {
						var status, statusText, responses;

						// Was never called and is aborted or complete
						if ( callback && ( isAbort || xhr.readyState === 4 ) ) {
							// Clean up
							delete xhrCallbacks[ id ];
							callback = undefined;
							xhr.onreadystatechange = jQuery.noop;

							// Abort manually if needed
							if ( isAbort ) {
								if ( xhr.readyState !== 4 ) {
									xhr.abort();
								}
							} else {
								responses = {};
								status = xhr.status;

								// Support: IE<10
								// Accessing binary-data responseText throws an exception
								// (#11426)
								if ( typeof xhr.responseText === "string" ) {
									responses.text = xhr.responseText;
								}

								// Firefox throws an exception when accessing
								// statusText for faulty cross-domain requests
								try {
									statusText = xhr.statusText;
								} catch( e ) {
									// We normalize with Webkit giving an empty statusText
									statusText = "";
								}

								// Filter status for non standard behaviors

								// If the request is local and we have data: assume a success
								// (success with no data won't get notified, that's the best we
								// can do given current implementations)
								if ( !status && options.isLocal && !options.crossDomain ) {
									status = responses.text ? 200 : 404;
								// IE - #1450: sometimes returns 1223 when it should be 204
								} else if ( status === 1223 ) {
									status = 204;
								}
							}
						}

						// Call complete if needed
						if ( responses ) {
							complete( status, statusText, responses, xhr.getAllResponseHeaders() );
						}
					};

					if ( !options.async ) {
						// if we're in sync mode we fire the callback
						callback();
					} else if ( xhr.readyState === 4 ) {
						// (IE6 & IE7) if it's in cache and has been
						// retrieved directly we need to fire the callback
						setTimeout( callback );
					} else {
						// Add to the list of active xhr callbacks
						xhr.onreadystatechange = xhrCallbacks[ id ] = callback;
					}
				},

				abort: function() {
					if ( callback ) {
						callback( undefined, true );
					}
				}
			};
		}
	});
}

// Functions to create xhrs
function createStandardXHR() {
	try {
		return new window.XMLHttpRequest();
	} catch( e ) {}
}

function createActiveXHR() {
	try {
		return new window.ActiveXObject( "Microsoft.XMLHTTP" );
	} catch( e ) {}
}




// Install script dataType
jQuery.ajaxSetup({
	accepts: {
		script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /(?:java|ecma)script/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
});

// Handle cache's special case and global
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
		s.global = false;
	}
});

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function(s) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {

		var script,
			head = document.head || jQuery("head")[0] || document.documentElement;

		return {

			send: function( _, callback ) {

				script = document.createElement("script");

				script.async = true;

				if ( s.scriptCharset ) {
					script.charset = s.scriptCharset;
				}

				script.src = s.url;

				// Attach handlers for all browsers
				script.onload = script.onreadystatechange = function( _, isAbort ) {

					if ( isAbort || !script.readyState || /loaded|complete/.test( script.readyState ) ) {

						// Handle memory leak in IE
						script.onload = script.onreadystatechange = null;

						// Remove the script
						if ( script.parentNode ) {
							script.parentNode.removeChild( script );
						}

						// Dereference the script
						script = null;

						// Callback if not abort
						if ( !isAbort ) {
							callback( 200, "success" );
						}
					}
				};

				// Circumvent IE6 bugs with base elements (#2709 and #4378) by prepending
				// Use native DOM manipulation to avoid our domManip AJAX trickery
				head.insertBefore( script, head.firstChild );
			},

			abort: function() {
				if ( script ) {
					script.onload( undefined, true );
				}
			}
		};
	}
});




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup({
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
});

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" && !( s.contentType || "" ).indexOf("application/x-www-form-urlencoded") && rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters["script json"] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always(function() {
			// Restore preexisting value
			window[ callbackName ] = overwritten;

			// Save back as free
			if ( s[ callbackName ] ) {
				// make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && jQuery.isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		});

		// Delegate to script
		return "script";
	}
});




// data: string of html
// context (optional): If specified, the fragment will be created in this context, defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( !data || typeof data !== "string" ) {
		return null;
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}
	context = context || document;

	var parsed = rsingleTag.exec( data ),
		scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[1] ) ];
	}

	parsed = jQuery.buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


// Keep a copy of the old load method
var _load = jQuery.fn.load;

/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	if ( typeof url !== "string" && _load ) {
		return _load.apply( this, arguments );
	}

	var selector, response, type,
		self = this,
		off = url.indexOf(" ");

	if ( off >= 0 ) {
		selector = jQuery.trim( url.slice( off, url.length ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( jQuery.isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax({
			url: url,

			// if "type" variable is undefined, then "GET" method will be used
			type: type,
			dataType: "html",
			data: params
		}).done(function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery("<div>").append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		}).complete( callback && function( jqXHR, status ) {
			self.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );
		});
	}

	return this;
};




jQuery.expr.filters.animated = function( elem ) {
	return jQuery.grep(jQuery.timers, function( fn ) {
		return elem === fn.elem;
	}).length;
};





var docElem = window.document.documentElement;

/**
 * Gets a window from an element
 */
function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}

jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			jQuery.inArray("auto", [ curCSSTop, curCSSLeft ] ) > -1;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend({
	offset: function( options ) {
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each(function( i ) {
					jQuery.offset.setOffset( this, options, i );
				});
		}

		var docElem, win,
			box = { top: 0, left: 0 },
			elem = this[ 0 ],
			doc = elem && elem.ownerDocument;

		if ( !doc ) {
			return;
		}

		docElem = doc.documentElement;

		// Make sure it's not a disconnected DOM node
		if ( !jQuery.contains( docElem, elem ) ) {
			return box;
		}

		// If we don't have gBCR, just use 0,0 rather than error
		// BlackBerry 5, iOS 3 (original iPhone)
		if ( typeof elem.getBoundingClientRect !== strundefined ) {
			box = elem.getBoundingClientRect();
		}
		win = getWindow( doc );
		return {
			top: box.top  + ( win.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 ),
			left: box.left + ( win.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 )
		};
	},

	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset,
			parentOffset = { top: 0, left: 0 },
			elem = this[ 0 ];

		// fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent
		if ( jQuery.css( elem, "position" ) === "fixed" ) {
			// we assume that getBoundingClientRect is available when computed position is fixed
			offset = elem.getBoundingClientRect();
		} else {
			// Get *real* offsetParent
			offsetParent = this.offsetParent();

			// Get correct offsets
			offset = this.offset();
			if ( !jQuery.nodeName( offsetParent[ 0 ], "html" ) ) {
				parentOffset = offsetParent.offset();
			}

			// Add offsetParent borders
			parentOffset.top  += jQuery.css( offsetParent[ 0 ], "borderTopWidth", true );
			parentOffset.left += jQuery.css( offsetParent[ 0 ], "borderLeftWidth", true );
		}

		// Subtract parent offsets and element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		return {
			top:  offset.top  - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true)
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || docElem;

			while ( offsetParent && ( !jQuery.nodeName( offsetParent, "html" ) && jQuery.css( offsetParent, "position" ) === "static" ) ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent || docElem;
		});
	}
});

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = /Y/.test( prop );

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {
			var win = getWindow( elem );

			if ( val === undefined ) {
				return win ? (prop in win) ? win[ prop ] :
					win.document.documentElement[ method ] :
					elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : jQuery( win ).scrollLeft(),
					top ? val : jQuery( win ).scrollTop()
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length, null );
	};
});

// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// getComputedStyle returns percent when specified for top/left/bottom/right
// rather than make the css module depend on the offset module, we just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );
				// if curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
});


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name }, function( defaultExtra, funcName ) {
		// margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( jQuery.isWindow( elem ) ) {
					// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there
					// isn't a whole lot we can do. See pull request at this URL for discussion:
					// https://github.com/jquery/jquery/pull/764
					return elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height], whichever is greatest
					// unfortunately, this causes bug #3838 in IE6/8 only, but there is currently no good, small way to fix it.
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?
					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable, null );
		};
	});
});


// The number of elements contained in the matched element set
jQuery.fn.size = function() {
	return this.length;
};

jQuery.fn.andSelf = jQuery.fn.addBack;




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( typeof define === "function" && define.amd ) {
	define( "jquery", [], function() {
		return jQuery;
	});
}




var
	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in
// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( typeof noGlobal === strundefined ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;

}));
(function($, undefined) {

/**
 * Unobtrusive scripting adapter for jQuery
 * https://github.com/rails/jquery-ujs
 *
 * Requires jQuery 1.8.0 or later.
 *
 * Released under the MIT license
 *
 */

  // Cut down on the number of issues from people inadvertently including jquery_ujs twice
  // by detecting and raising an error when it happens.
  if ( $.rails !== undefined ) {
    $.error('jquery-ujs has already been loaded!');
  }

  // Shorthand to make it a little easier to call public rails functions from within rails.js
  var rails;
  var $document = $(document);

  $.rails = rails = {
    // Link elements bound by jquery-ujs
    linkClickSelector: 'a[data-confirm], a[data-method], a[data-remote], a[data-disable-with], a[data-disable]',

    // Button elements bound by jquery-ujs
    buttonClickSelector: 'button[data-remote]:not(form button), button[data-confirm]:not(form button)',

    // Select elements bound by jquery-ujs
    inputChangeSelector: 'select[data-remote], input[data-remote], textarea[data-remote]',

    // Form elements bound by jquery-ujs
    formSubmitSelector: 'form',

    // Form input elements bound by jquery-ujs
    formInputClickSelector: 'form input[type=submit], form input[type=image], form button[type=submit], form button:not([type]), input[type=submit][form], input[type=image][form], button[type=submit][form], button[form]:not([type])',

    // Form input elements disabled during form submission
    disableSelector: 'input[data-disable-with]:enabled, button[data-disable-with]:enabled, textarea[data-disable-with]:enabled, input[data-disable]:enabled, button[data-disable]:enabled, textarea[data-disable]:enabled',

    // Form input elements re-enabled after form submission
    enableSelector: 'input[data-disable-with]:disabled, button[data-disable-with]:disabled, textarea[data-disable-with]:disabled, input[data-disable]:disabled, button[data-disable]:disabled, textarea[data-disable]:disabled',

    // Form required input elements
    requiredInputSelector: 'input[name][required]:not([disabled]),textarea[name][required]:not([disabled])',

    // Form file input elements
    fileInputSelector: 'input[type=file]',

    // Link onClick disable selector with possible reenable after remote submission
    linkDisableSelector: 'a[data-disable-with], a[data-disable]',

    // Button onClick disable selector with possible reenable after remote submission
    buttonDisableSelector: 'button[data-remote][data-disable-with], button[data-remote][data-disable]',

    // Make sure that every Ajax request sends the CSRF token
    CSRFProtection: function(xhr) {
      var token = $('meta[name="csrf-token"]').attr('content');
      if (token) xhr.setRequestHeader('X-CSRF-Token', token);
    },

    // making sure that all forms have actual up-to-date token(cached forms contain old one)
    refreshCSRFTokens: function(){
      var csrfToken = $('meta[name=csrf-token]').attr('content');
      var csrfParam = $('meta[name=csrf-param]').attr('content');
      $('form input[name="' + csrfParam + '"]').val(csrfToken);
    },

    // Triggers an event on an element and returns false if the event result is false
    fire: function(obj, name, data) {
      var event = $.Event(name);
      obj.trigger(event, data);
      return event.result !== false;
    },

    // Default confirm dialog, may be overridden with custom confirm dialog in $.rails.confirm
    confirm: function(message) {
      return confirm(message);
    },

    // Default ajax function, may be overridden with custom function in $.rails.ajax
    ajax: function(options) {
      return $.ajax(options);
    },

    // Default way to get an element's href. May be overridden at $.rails.href.
    href: function(element) {
      return element.attr('href');
    },

    // Submits "remote" forms and links with ajax
    handleRemote: function(element) {
      var method, url, data, elCrossDomain, crossDomain, withCredentials, dataType, options;

      if (rails.fire(element, 'ajax:before')) {
        elCrossDomain = element.data('cross-domain');
        crossDomain = elCrossDomain === undefined ? null : elCrossDomain;
        withCredentials = element.data('with-credentials') || null;
        dataType = element.data('type') || ($.ajaxSettings && $.ajaxSettings.dataType);

        if (element.is('form')) {
          method = element.attr('method');
          url = element.attr('action');
          data = element.serializeArray();
          // memoized value from clicked submit button
          var button = element.data('ujs:submit-button');
          if (button) {
            data.push(button);
            element.data('ujs:submit-button', null);
          }
        } else if (element.is(rails.inputChangeSelector)) {
          method = element.data('method');
          url = element.data('url');
          data = element.serialize();
          if (element.data('params')) data = data + "&" + element.data('params');
        } else if (element.is(rails.buttonClickSelector)) {
          method = element.data('method') || 'get';
          url = element.data('url');
          data = element.serialize();
          if (element.data('params')) data = data + "&" + element.data('params');
        } else {
          method = element.data('method');
          url = rails.href(element);
          data = element.data('params') || null;
        }

        options = {
          type: method || 'GET', data: data, dataType: dataType,
          // stopping the "ajax:beforeSend" event will cancel the ajax request
          beforeSend: function(xhr, settings) {
            if (settings.dataType === undefined) {
              xhr.setRequestHeader('accept', '*/*;q=0.5, ' + settings.accepts.script);
            }
            if (rails.fire(element, 'ajax:beforeSend', [xhr, settings])) {
              element.trigger('ajax:send', xhr);
            } else {
              return false;
            }
          },
          success: function(data, status, xhr) {
            element.trigger('ajax:success', [data, status, xhr]);
          },
          complete: function(xhr, status) {
            element.trigger('ajax:complete', [xhr, status]);
          },
          error: function(xhr, status, error) {
            element.trigger('ajax:error', [xhr, status, error]);
          },
          crossDomain: crossDomain
        };

        // There is no withCredentials for IE6-8 when
        // "Enable native XMLHTTP support" is disabled
        if (withCredentials) {
          options.xhrFields = {
            withCredentials: withCredentials
          };
        }

        // Only pass url to `ajax` options if not blank
        if (url) { options.url = url; }

        return rails.ajax(options);
      } else {
        return false;
      }
    },

    // Handles "data-method" on links such as:
    // <a href="/users/5" data-method="delete" rel="nofollow" data-confirm="Are you sure?">Delete</a>
    handleMethod: function(link) {
      var href = rails.href(link),
        method = link.data('method'),
        target = link.attr('target'),
        csrfToken = $('meta[name=csrf-token]').attr('content'),
        csrfParam = $('meta[name=csrf-param]').attr('content'),
        form = $('<form method="post" action="' + href + '"></form>'),
        metadataInput = '<input name="_method" value="' + method + '" type="hidden" />';

      if (csrfParam !== undefined && csrfToken !== undefined) {
        metadataInput += '<input name="' + csrfParam + '" value="' + csrfToken + '" type="hidden" />';
      }

      if (target) { form.attr('target', target); }

      form.hide().append(metadataInput).appendTo('body');
      form.submit();
    },

    // Helper function that returns form elements that match the specified CSS selector
    // If form is actually a "form" element this will return associated elements outside the from that have
    // the html form attribute set
    formElements: function(form, selector) {
      return form.is('form') ? $(form[0].elements).filter(selector) : form.find(selector);
    },

    /* Disables form elements:
      - Caches element value in 'ujs:enable-with' data store
      - Replaces element text with value of 'data-disable-with' attribute
      - Sets disabled property to true
    */
    disableFormElements: function(form) {
      rails.formElements(form, rails.disableSelector).each(function() {
        rails.disableFormElement($(this));
      });
    },

    disableFormElement: function(element) {
      var method, replacement;

      method = element.is('button') ? 'html' : 'val';
      replacement = element.data('disable-with');

      element.data('ujs:enable-with', element[method]());
      if (replacement !== undefined) {
        element[method](replacement);
      }

      element.prop('disabled', true);
    },

    /* Re-enables disabled form elements:
      - Replaces element text with cached value from 'ujs:enable-with' data store (created in `disableFormElements`)
      - Sets disabled property to false
    */
    enableFormElements: function(form) {
      rails.formElements(form, rails.enableSelector).each(function() {
        rails.enableFormElement($(this));
      });
    },

    enableFormElement: function(element) {
      var method = element.is('button') ? 'html' : 'val';
      if (element.data('ujs:enable-with')) element[method](element.data('ujs:enable-with'));
      element.prop('disabled', false);
    },

   /* For 'data-confirm' attribute:
      - Fires `confirm` event
      - Shows the confirmation dialog
      - Fires the `confirm:complete` event

      Returns `true` if no function stops the chain and user chose yes; `false` otherwise.
      Attaching a handler to the element's `confirm` event that returns a `falsy` value cancels the confirmation dialog.
      Attaching a handler to the element's `confirm:complete` event that returns a `falsy` value makes this function
      return false. The `confirm:complete` event is fired whether or not the user answered true or false to the dialog.
   */
    allowAction: function(element) {
      var message = element.data('confirm'),
          answer = false, callback;
      if (!message) { return true; }

      if (rails.fire(element, 'confirm')) {
        answer = rails.confirm(message);
        callback = rails.fire(element, 'confirm:complete', [answer]);
      }
      return answer && callback;
    },

    // Helper function which checks for blank inputs in a form that match the specified CSS selector
    blankInputs: function(form, specifiedSelector, nonBlank) {
      var inputs = $(), input, valueToCheck,
          selector = specifiedSelector || 'input,textarea',
          allInputs = form.find(selector);

      allInputs.each(function() {
        input = $(this);
        valueToCheck = input.is('input[type=checkbox],input[type=radio]') ? input.is(':checked') : input.val();
        // If nonBlank and valueToCheck are both truthy, or nonBlank and valueToCheck are both falsey
        if (!valueToCheck === !nonBlank) {

          // Don't count unchecked required radio if other radio with same name is checked
          if (input.is('input[type=radio]') && allInputs.filter('input[type=radio]:checked[name="' + input.attr('name') + '"]').length) {
            return true; // Skip to next input
          }

          inputs = inputs.add(input);
        }
      });
      return inputs.length ? inputs : false;
    },

    // Helper function which checks for non-blank inputs in a form that match the specified CSS selector
    nonBlankInputs: function(form, specifiedSelector) {
      return rails.blankInputs(form, specifiedSelector, true); // true specifies nonBlank
    },

    // Helper function, needed to provide consistent behavior in IE
    stopEverything: function(e) {
      $(e.target).trigger('ujs:everythingStopped');
      e.stopImmediatePropagation();
      return false;
    },

    //  replace element's html with the 'data-disable-with' after storing original html
    //  and prevent clicking on it
    disableElement: function(element) {
      var replacement = element.data('disable-with');

      element.data('ujs:enable-with', element.html()); // store enabled state
      if (replacement !== undefined) {
        element.html(replacement);
      }

      element.bind('click.railsDisable', function(e) { // prevent further clicking
        return rails.stopEverything(e);
      });
    },

    // restore element to its original state which was disabled by 'disableElement' above
    enableElement: function(element) {
      if (element.data('ujs:enable-with') !== undefined) {
        element.html(element.data('ujs:enable-with')); // set to old enabled state
        element.removeData('ujs:enable-with'); // clean up cache
      }
      element.unbind('click.railsDisable'); // enable element
    }
  };

  if (rails.fire($document, 'rails:attachBindings')) {

    $.ajaxPrefilter(function(options, originalOptions, xhr){ if ( !options.crossDomain ) { rails.CSRFProtection(xhr); }});

    $document.delegate(rails.linkDisableSelector, 'ajax:complete', function() {
        rails.enableElement($(this));
    });

    $document.delegate(rails.buttonDisableSelector, 'ajax:complete', function() {
        rails.enableFormElement($(this));
    });

    $document.delegate(rails.linkClickSelector, 'click.rails', function(e) {
      var link = $(this), method = link.data('method'), data = link.data('params'), metaClick = e.metaKey || e.ctrlKey;
      if (!rails.allowAction(link)) return rails.stopEverything(e);

      if (!metaClick && link.is(rails.linkDisableSelector)) rails.disableElement(link);

      if (link.data('remote') !== undefined) {
        if (metaClick && (!method || method === 'GET') && !data) { return true; }

        var handleRemote = rails.handleRemote(link);
        // response from rails.handleRemote() will either be false or a deferred object promise.
        if (handleRemote === false) {
          rails.enableElement(link);
        } else {
          handleRemote.error( function() { rails.enableElement(link); } );
        }
        return false;

      } else if (link.data('method')) {
        rails.handleMethod(link);
        return false;
      }
    });

    $document.delegate(rails.buttonClickSelector, 'click.rails', function(e) {
      var button = $(this);

      if (!rails.allowAction(button)) return rails.stopEverything(e);

      if (button.is(rails.buttonDisableSelector)) rails.disableFormElement(button);

      var handleRemote = rails.handleRemote(button);
      // response from rails.handleRemote() will either be false or a deferred object promise.
      if (handleRemote === false) {
        rails.enableFormElement(button);
      } else {
        handleRemote.error( function() { rails.enableFormElement(button); } );
      }
      return false;
    });

    $document.delegate(rails.inputChangeSelector, 'change.rails', function(e) {
      var link = $(this);
      if (!rails.allowAction(link)) return rails.stopEverything(e);

      rails.handleRemote(link);
      return false;
    });

    $document.delegate(rails.formSubmitSelector, 'submit.rails', function(e) {
      var form = $(this),
        remote = form.data('remote') !== undefined,
        blankRequiredInputs,
        nonBlankFileInputs;

      if (!rails.allowAction(form)) return rails.stopEverything(e);

      // skip other logic when required values are missing or file upload is present
      if (form.attr('novalidate') == undefined) {
        blankRequiredInputs = rails.blankInputs(form, rails.requiredInputSelector);
        if (blankRequiredInputs && rails.fire(form, 'ajax:aborted:required', [blankRequiredInputs])) {
          return rails.stopEverything(e);
        }
      }

      if (remote) {
        nonBlankFileInputs = rails.nonBlankInputs(form, rails.fileInputSelector);
        if (nonBlankFileInputs) {
          // slight timeout so that the submit button gets properly serialized
          // (make it easy for event handler to serialize form without disabled values)
          setTimeout(function(){ rails.disableFormElements(form); }, 13);
          var aborted = rails.fire(form, 'ajax:aborted:file', [nonBlankFileInputs]);

          // re-enable form elements if event bindings return false (canceling normal form submission)
          if (!aborted) { setTimeout(function(){ rails.enableFormElements(form); }, 13); }

          return aborted;
        }

        rails.handleRemote(form);
        return false;

      } else {
        // slight timeout so that the submit button gets properly serialized
        setTimeout(function(){ rails.disableFormElements(form); }, 13);
      }
    });

    $document.delegate(rails.formInputClickSelector, 'click.rails', function(event) {
      var button = $(this);

      if (!rails.allowAction(button)) return rails.stopEverything(event);

      // register the pressed submit button
      var name = button.attr('name'),
        data = name ? {name:name, value:button.val()} : null;

      button.closest('form').data('ujs:submit-button', data);
    });

    $document.delegate(rails.formSubmitSelector, 'ajax:send.rails', function(event) {
      if (this == event.target) rails.disableFormElements($(this));
    });

    $document.delegate(rails.formSubmitSelector, 'ajax:complete.rails', function(event) {
      if (this == event.target) rails.enableFormElements($(this));
    });

    $(function(){
      rails.refreshCSRFTokens();
    });
  }

})( jQuery );
(function() {
  var CSRFToken, Click, ComponentUrl, EVENTS, Link, ProgressBar, browserIsntBuggy, browserSupportsCustomEvents, browserSupportsPushState, browserSupportsTurbolinks, bypassOnLoadPopstate, cacheCurrentPage, cacheSize, changePage, clone, constrainPageCacheTo, createDocument, crossOriginRedirect, currentState, enableProgressBar, enableTransitionCache, executeScriptTags, extractTitleAndBody, fetch, fetchHistory, fetchReplacement, historyStateIsDefined, initializeTurbolinks, installDocumentReadyPageEventTriggers, installHistoryChangeHandler, installJqueryAjaxSuccessPageUpdateTrigger, loadedAssets, manuallyTriggerHashChangeForFirefox, pageCache, pageChangePrevented, pagesCached, popCookie, processResponse, progressBar, recallScrollPosition, ref, referer, reflectNewUrl, reflectRedirectedUrl, rememberCurrentState, rememberCurrentUrl, rememberReferer, removeNoscriptTags, requestMethodIsSafe, resetScrollPosition, setAutofocusElement, transitionCacheEnabled, transitionCacheFor, triggerEvent, visit, xhr,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty,
    slice = [].slice,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  pageCache = {};

  cacheSize = 10;

  transitionCacheEnabled = false;

  progressBar = null;

  currentState = null;

  loadedAssets = null;

  referer = null;

  xhr = null;

  EVENTS = {
    BEFORE_CHANGE: 'page:before-change',
    FETCH: 'page:fetch',
    RECEIVE: 'page:receive',
    CHANGE: 'page:change',
    UPDATE: 'page:update',
    LOAD: 'page:load',
    RESTORE: 'page:restore',
    BEFORE_UNLOAD: 'page:before-unload',
    EXPIRE: 'page:expire'
  };

  fetch = function(url) {
    var cachedPage;
    url = new ComponentUrl(url);
    rememberReferer();
    cacheCurrentPage();
    if (progressBar != null) {
      progressBar.start();
    }
    if (transitionCacheEnabled && (cachedPage = transitionCacheFor(url.absolute))) {
      fetchHistory(cachedPage);
      return fetchReplacement(url, null, false);
    } else {
      return fetchReplacement(url, resetScrollPosition);
    }
  };

  transitionCacheFor = function(url) {
    var cachedPage;
    cachedPage = pageCache[url];
    if (cachedPage && !cachedPage.transitionCacheDisabled) {
      return cachedPage;
    }
  };

  enableTransitionCache = function(enable) {
    if (enable == null) {
      enable = true;
    }
    return transitionCacheEnabled = enable;
  };

  enableProgressBar = function(enable) {
    if (enable == null) {
      enable = true;
    }
    if (!browserSupportsTurbolinks) {
      return;
    }
    if (enable) {
      return progressBar != null ? progressBar : progressBar = new ProgressBar('html');
    } else {
      if (progressBar != null) {
        progressBar.uninstall();
      }
      return progressBar = null;
    }
  };

  fetchReplacement = function(url, onLoadFunction, showProgressBar) {
    if (showProgressBar == null) {
      showProgressBar = true;
    }
    triggerEvent(EVENTS.FETCH, {
      url: url.absolute
    });
    if (xhr != null) {
      xhr.abort();
    }
    xhr = new XMLHttpRequest;
    xhr.open('GET', url.withoutHashForIE10compatibility(), true);
    xhr.setRequestHeader('Accept', 'text/html, application/xhtml+xml, application/xml');
    xhr.setRequestHeader('X-XHR-Referer', referer);
    xhr.onload = function() {
      var doc;
      triggerEvent(EVENTS.RECEIVE, {
        url: url.absolute
      });
      if (doc = processResponse()) {
        reflectNewUrl(url);
        reflectRedirectedUrl();
        changePage.apply(null, extractTitleAndBody(doc));
        manuallyTriggerHashChangeForFirefox();
        if (typeof onLoadFunction === "function") {
          onLoadFunction();
        }
        return triggerEvent(EVENTS.LOAD);
      } else {
        return document.location.href = crossOriginRedirect() || url.absolute;
      }
    };
    if (progressBar && showProgressBar) {
      xhr.onprogress = (function(_this) {
        return function(event) {
          var percent;
          percent = event.lengthComputable ? event.loaded / event.total * 100 : progressBar.value + (100 - progressBar.value) / 10;
          return progressBar.advanceTo(percent);
        };
      })(this);
    }
    xhr.onloadend = function() {
      return xhr = null;
    };
    xhr.onerror = function() {
      return document.location.href = url.absolute;
    };
    return xhr.send();
  };

  fetchHistory = function(cachedPage) {
    if (xhr != null) {
      xhr.abort();
    }
    changePage(cachedPage.title, cachedPage.body);
    recallScrollPosition(cachedPage);
    return triggerEvent(EVENTS.RESTORE);
  };

  cacheCurrentPage = function() {
    var currentStateUrl;
    currentStateUrl = new ComponentUrl(currentState.url);
    pageCache[currentStateUrl.absolute] = {
      url: currentStateUrl.relative,
      body: document.body,
      title: document.title,
      positionY: window.pageYOffset,
      positionX: window.pageXOffset,
      cachedAt: new Date().getTime(),
      transitionCacheDisabled: document.querySelector('[data-no-transition-cache]') != null
    };
    return constrainPageCacheTo(cacheSize);
  };

  pagesCached = function(size) {
    if (size == null) {
      size = cacheSize;
    }
    if (/^[\d]+$/.test(size)) {
      return cacheSize = parseInt(size);
    }
  };

  constrainPageCacheTo = function(limit) {
    var cacheTimesRecentFirst, i, key, len, pageCacheKeys, results;
    pageCacheKeys = Object.keys(pageCache);
    cacheTimesRecentFirst = pageCacheKeys.map(function(url) {
      return pageCache[url].cachedAt;
    }).sort(function(a, b) {
      return b - a;
    });
    results = [];
    for (i = 0, len = pageCacheKeys.length; i < len; i++) {
      key = pageCacheKeys[i];
      if (!(pageCache[key].cachedAt <= cacheTimesRecentFirst[limit])) {
        continue;
      }
      triggerEvent(EVENTS.EXPIRE, pageCache[key]);
      results.push(delete pageCache[key]);
    }
    return results;
  };

  changePage = function(title, body, csrfToken, runScripts) {
    triggerEvent(EVENTS.BEFORE_UNLOAD);
    document.title = title;
    document.documentElement.replaceChild(body, document.body);
    if (csrfToken != null) {
      CSRFToken.update(csrfToken);
    }
    setAutofocusElement();
    if (runScripts) {
      executeScriptTags();
    }
    currentState = window.history.state;
    if (progressBar != null) {
      progressBar.done();
    }
    triggerEvent(EVENTS.CHANGE);
    return triggerEvent(EVENTS.UPDATE);
  };

  executeScriptTags = function() {
    var attr, copy, i, j, len, len1, nextSibling, parentNode, ref, ref1, script, scripts;
    scripts = Array.prototype.slice.call(document.body.querySelectorAll('script:not([data-turbolinks-eval="false"])'));
    for (i = 0, len = scripts.length; i < len; i++) {
      script = scripts[i];
      if (!((ref = script.type) === '' || ref === 'text/javascript')) {
        continue;
      }
      copy = document.createElement('script');
      ref1 = script.attributes;
      for (j = 0, len1 = ref1.length; j < len1; j++) {
        attr = ref1[j];
        copy.setAttribute(attr.name, attr.value);
      }
      if (!script.hasAttribute('async')) {
        copy.async = false;
      }
      copy.appendChild(document.createTextNode(script.innerHTML));
      parentNode = script.parentNode, nextSibling = script.nextSibling;
      parentNode.removeChild(script);
      parentNode.insertBefore(copy, nextSibling);
    }
  };

  removeNoscriptTags = function(node) {
    node.innerHTML = node.innerHTML.replace(/<noscript[\S\s]*?<\/noscript>/ig, '');
    return node;
  };

  setAutofocusElement = function() {
    var autofocusElement, list;
    autofocusElement = (list = document.querySelectorAll('input[autofocus], textarea[autofocus]'))[list.length - 1];
    if (autofocusElement && document.activeElement !== autofocusElement) {
      return autofocusElement.focus();
    }
  };

  reflectNewUrl = function(url) {
    if ((url = new ComponentUrl(url)).absolute !== referer) {
      return window.history.pushState({
        turbolinks: true,
        url: url.absolute
      }, '', url.absolute);
    }
  };

  reflectRedirectedUrl = function() {
    var location, preservedHash;
    if (location = xhr.getResponseHeader('X-XHR-Redirected-To')) {
      location = new ComponentUrl(location);
      preservedHash = location.hasNoHash() ? document.location.hash : '';
      return window.history.replaceState(window.history.state, '', location.href + preservedHash);
    }
  };

  crossOriginRedirect = function() {
    var redirect;
    if (((redirect = xhr.getResponseHeader('Location')) != null) && (new ComponentUrl(redirect)).crossOrigin()) {
      return redirect;
    }
  };

  rememberReferer = function() {
    return referer = document.location.href;
  };

  rememberCurrentUrl = function() {
    return window.history.replaceState({
      turbolinks: true,
      url: document.location.href
    }, '', document.location.href);
  };

  rememberCurrentState = function() {
    return currentState = window.history.state;
  };

  manuallyTriggerHashChangeForFirefox = function() {
    var url;
    if (navigator.userAgent.match(/Firefox/) && !(url = new ComponentUrl).hasNoHash()) {
      window.history.replaceState(currentState, '', url.withoutHash());
      return document.location.hash = url.hash;
    }
  };

  recallScrollPosition = function(page) {
    return window.scrollTo(page.positionX, page.positionY);
  };

  resetScrollPosition = function() {
    if (document.location.hash) {
      return document.location.href = document.location.href;
    } else {
      return window.scrollTo(0, 0);
    }
  };

  clone = function(original) {
    var copy, key, value;
    if ((original == null) || typeof original !== 'object') {
      return original;
    }
    copy = new original.constructor();
    for (key in original) {
      value = original[key];
      copy[key] = clone(value);
    }
    return copy;
  };

  popCookie = function(name) {
    var ref, value;
    value = ((ref = document.cookie.match(new RegExp(name + "=(\\w+)"))) != null ? ref[1].toUpperCase() : void 0) || '';
    document.cookie = name + '=; expires=Thu, 01-Jan-70 00:00:01 GMT; path=/';
    return value;
  };

  triggerEvent = function(name, data) {
    var event;
    if (typeof Prototype !== 'undefined') {
      Event.fire(document, name, data, true);
    }
    event = document.createEvent('Events');
    if (data) {
      event.data = data;
    }
    event.initEvent(name, true, true);
    return document.dispatchEvent(event);
  };

  pageChangePrevented = function(url) {
    return !triggerEvent(EVENTS.BEFORE_CHANGE, {
      url: url
    });
  };

  processResponse = function() {
    var assetsChanged, clientOrServerError, doc, extractTrackAssets, intersection, validContent;
    clientOrServerError = function() {
      var ref;
      return (400 <= (ref = xhr.status) && ref < 600);
    };
    validContent = function() {
      var contentType;
      return ((contentType = xhr.getResponseHeader('Content-Type')) != null) && contentType.match(/^(?:text\/html|application\/xhtml\+xml|application\/xml)(?:;|$)/);
    };
    extractTrackAssets = function(doc) {
      var i, len, node, ref, results;
      ref = doc.querySelector('head').childNodes;
      results = [];
      for (i = 0, len = ref.length; i < len; i++) {
        node = ref[i];
        if ((typeof node.getAttribute === "function" ? node.getAttribute('data-turbolinks-track') : void 0) != null) {
          results.push(node.getAttribute('src') || node.getAttribute('href'));
        }
      }
      return results;
    };
    assetsChanged = function(doc) {
      var fetchedAssets;
      loadedAssets || (loadedAssets = extractTrackAssets(document));
      fetchedAssets = extractTrackAssets(doc);
      return fetchedAssets.length !== loadedAssets.length || intersection(fetchedAssets, loadedAssets).length !== loadedAssets.length;
    };
    intersection = function(a, b) {
      var i, len, ref, results, value;
      if (a.length > b.length) {
        ref = [b, a], a = ref[0], b = ref[1];
      }
      results = [];
      for (i = 0, len = a.length; i < len; i++) {
        value = a[i];
        if (indexOf.call(b, value) >= 0) {
          results.push(value);
        }
      }
      return results;
    };
    if (!clientOrServerError() && validContent()) {
      doc = createDocument(xhr.responseText);
      if (doc && !assetsChanged(doc)) {
        return doc;
      }
    }
  };

  extractTitleAndBody = function(doc) {
    var title;
    title = doc.querySelector('title');
    return [title != null ? title.textContent : void 0, removeNoscriptTags(doc.querySelector('body')), CSRFToken.get(doc).token, 'runScripts'];
  };

  CSRFToken = {
    get: function(doc) {
      var tag;
      if (doc == null) {
        doc = document;
      }
      return {
        node: tag = doc.querySelector('meta[name="csrf-token"]'),
        token: tag != null ? typeof tag.getAttribute === "function" ? tag.getAttribute('content') : void 0 : void 0
      };
    },
    update: function(latest) {
      var current;
      current = this.get();
      if ((current.token != null) && (latest != null) && current.token !== latest) {
        return current.node.setAttribute('content', latest);
      }
    }
  };

  createDocument = function(html) {
    var doc;
    doc = document.documentElement.cloneNode();
    doc.innerHTML = html;
    doc.head = doc.querySelector('head');
    doc.body = doc.querySelector('body');
    return doc;
  };

  ComponentUrl = (function() {
    function ComponentUrl(original1) {
      this.original = original1 != null ? original1 : document.location.href;
      if (this.original.constructor === ComponentUrl) {
        return this.original;
      }
      this._parse();
    }

    ComponentUrl.prototype.withoutHash = function() {
      return this.href.replace(this.hash, '').replace('#', '');
    };

    ComponentUrl.prototype.withoutHashForIE10compatibility = function() {
      return this.withoutHash();
    };

    ComponentUrl.prototype.hasNoHash = function() {
      return this.hash.length === 0;
    };

    ComponentUrl.prototype.crossOrigin = function() {
      return this.origin !== (new ComponentUrl).origin;
    };

    ComponentUrl.prototype._parse = function() {
      var ref;
      (this.link != null ? this.link : this.link = document.createElement('a')).href = this.original;
      ref = this.link, this.href = ref.href, this.protocol = ref.protocol, this.host = ref.host, this.hostname = ref.hostname, this.port = ref.port, this.pathname = ref.pathname, this.search = ref.search, this.hash = ref.hash;
      this.origin = [this.protocol, '//', this.hostname].join('');
      if (this.port.length !== 0) {
        this.origin += ":" + this.port;
      }
      this.relative = [this.pathname, this.search, this.hash].join('');
      return this.absolute = this.href;
    };

    return ComponentUrl;

  })();

  Link = (function(superClass) {
    extend(Link, superClass);

    Link.HTML_EXTENSIONS = ['html'];

    Link.allowExtensions = function() {
      var extension, extensions, i, len;
      extensions = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      for (i = 0, len = extensions.length; i < len; i++) {
        extension = extensions[i];
        Link.HTML_EXTENSIONS.push(extension);
      }
      return Link.HTML_EXTENSIONS;
    };

    function Link(link1) {
      this.link = link1;
      if (this.link.constructor === Link) {
        return this.link;
      }
      this.original = this.link.href;
      this.originalElement = this.link;
      this.link = this.link.cloneNode(false);
      Link.__super__.constructor.apply(this, arguments);
    }

    Link.prototype.shouldIgnore = function() {
      return this.crossOrigin() || this._anchored() || this._nonHtml() || this._optOut() || this._target();
    };

    Link.prototype._anchored = function() {
      return (this.hash.length > 0 || this.href.charAt(this.href.length - 1) === '#') && (this.withoutHash() === (new ComponentUrl).withoutHash());
    };

    Link.prototype._nonHtml = function() {
      return this.pathname.match(/\.[a-z]+$/g) && !this.pathname.match(new RegExp("\\.(?:" + (Link.HTML_EXTENSIONS.join('|')) + ")?$", 'g'));
    };

    Link.prototype._optOut = function() {
      var ignore, link;
      link = this.originalElement;
      while (!(ignore || link === document)) {
        ignore = link.getAttribute('data-no-turbolink') != null;
        link = link.parentNode;
      }
      return ignore;
    };

    Link.prototype._target = function() {
      return this.link.target.length !== 0;
    };

    return Link;

  })(ComponentUrl);

  Click = (function() {
    Click.installHandlerLast = function(event) {
      if (!event.defaultPrevented) {
        document.removeEventListener('click', Click.handle, false);
        return document.addEventListener('click', Click.handle, false);
      }
    };

    Click.handle = function(event) {
      return new Click(event);
    };

    function Click(event1) {
      this.event = event1;
      if (this.event.defaultPrevented) {
        return;
      }
      this._extractLink();
      if (this._validForTurbolinks()) {
        if (!pageChangePrevented(this.link.absolute)) {
          visit(this.link.href);
        }
        this.event.preventDefault();
      }
    }

    Click.prototype._extractLink = function() {
      var link;
      link = this.event.target;
      while (!(!link.parentNode || link.nodeName === 'A')) {
        link = link.parentNode;
      }
      if (link.nodeName === 'A' && link.href.length !== 0) {
        return this.link = new Link(link);
      }
    };

    Click.prototype._validForTurbolinks = function() {
      return (this.link != null) && !(this.link.shouldIgnore() || this._nonStandardClick());
    };

    Click.prototype._nonStandardClick = function() {
      return this.event.which > 1 || this.event.metaKey || this.event.ctrlKey || this.event.shiftKey || this.event.altKey;
    };

    return Click;

  })();

  ProgressBar = (function() {
    var className;

    className = 'turbolinks-progress-bar';

    function ProgressBar(elementSelector) {
      this.elementSelector = elementSelector;
      this._trickle = bind(this._trickle, this);
      this.value = 0;
      this.content = '';
      this.speed = 300;
      this.opacity = 0.99;
      this.install();
    }

    ProgressBar.prototype.install = function() {
      this.element = document.querySelector(this.elementSelector);
      this.element.classList.add(className);
      this.styleElement = document.createElement('style');
      document.head.appendChild(this.styleElement);
      return this._updateStyle();
    };

    ProgressBar.prototype.uninstall = function() {
      this.element.classList.remove(className);
      return document.head.removeChild(this.styleElement);
    };

    ProgressBar.prototype.start = function() {
      return this.advanceTo(5);
    };

    ProgressBar.prototype.advanceTo = function(value) {
      var ref;
      if ((value > (ref = this.value) && ref <= 100)) {
        this.value = value;
        this._updateStyle();
        if (this.value === 100) {
          return this._stopTrickle();
        } else if (this.value > 0) {
          return this._startTrickle();
        }
      }
    };

    ProgressBar.prototype.done = function() {
      if (this.value > 0) {
        this.advanceTo(100);
        return this._reset();
      }
    };

    ProgressBar.prototype._reset = function() {
      var originalOpacity;
      originalOpacity = this.opacity;
      setTimeout((function(_this) {
        return function() {
          _this.opacity = 0;
          return _this._updateStyle();
        };
      })(this), this.speed / 2);
      return setTimeout((function(_this) {
        return function() {
          _this.value = 0;
          _this.opacity = originalOpacity;
          return _this._withSpeed(0, function() {
            return _this._updateStyle(true);
          });
        };
      })(this), this.speed);
    };

    ProgressBar.prototype._startTrickle = function() {
      if (this.trickling) {
        return;
      }
      this.trickling = true;
      return setTimeout(this._trickle, this.speed);
    };

    ProgressBar.prototype._stopTrickle = function() {
      return delete this.trickling;
    };

    ProgressBar.prototype._trickle = function() {
      if (!this.trickling) {
        return;
      }
      this.advanceTo(this.value + Math.random() / 2);
      return setTimeout(this._trickle, this.speed);
    };

    ProgressBar.prototype._withSpeed = function(speed, fn) {
      var originalSpeed, result;
      originalSpeed = this.speed;
      this.speed = speed;
      result = fn();
      this.speed = originalSpeed;
      return result;
    };

    ProgressBar.prototype._updateStyle = function(forceRepaint) {
      if (forceRepaint == null) {
        forceRepaint = false;
      }
      if (forceRepaint) {
        this._changeContentToForceRepaint();
      }
      return this.styleElement.textContent = this._createCSSRule();
    };

    ProgressBar.prototype._changeContentToForceRepaint = function() {
      return this.content = this.content === '' ? ' ' : '';
    };

    ProgressBar.prototype._createCSSRule = function() {
      return this.elementSelector + "." + className + "::before {\n  content: '" + this.content + "';\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 2000;\n  background-color: #0076ff;\n  height: 3px;\n  opacity: " + this.opacity + ";\n  width: " + this.value + "%;\n  transition: width " + this.speed + "ms ease-out, opacity " + (this.speed / 2) + "ms ease-in;\n  transform: translate3d(0,0,0);\n}";
    };

    return ProgressBar;

  })();

  bypassOnLoadPopstate = function(fn) {
    return setTimeout(fn, 500);
  };

  installDocumentReadyPageEventTriggers = function() {
    return document.addEventListener('DOMContentLoaded', (function() {
      triggerEvent(EVENTS.CHANGE);
      return triggerEvent(EVENTS.UPDATE);
    }), true);
  };

  installJqueryAjaxSuccessPageUpdateTrigger = function() {
    if (typeof jQuery !== 'undefined') {
      return jQuery(document).on('ajaxSuccess', function(event, xhr, settings) {
        if (!jQuery.trim(xhr.responseText)) {
          return;
        }
        return triggerEvent(EVENTS.UPDATE);
      });
    }
  };

  installHistoryChangeHandler = function(event) {
    var cachedPage, ref;
    if ((ref = event.state) != null ? ref.turbolinks : void 0) {
      if (cachedPage = pageCache[(new ComponentUrl(event.state.url)).absolute]) {
        cacheCurrentPage();
        return fetchHistory(cachedPage);
      } else {
        return visit(event.target.location.href);
      }
    }
  };

  initializeTurbolinks = function() {
    rememberCurrentUrl();
    rememberCurrentState();
    document.addEventListener('click', Click.installHandlerLast, true);
    window.addEventListener('hashchange', function(event) {
      rememberCurrentUrl();
      return rememberCurrentState();
    }, false);
    return bypassOnLoadPopstate(function() {
      return window.addEventListener('popstate', installHistoryChangeHandler, false);
    });
  };

  historyStateIsDefined = window.history.state !== void 0 || navigator.userAgent.match(/Firefox\/2[6|7]/);

  browserSupportsPushState = window.history && window.history.pushState && window.history.replaceState && historyStateIsDefined;

  browserIsntBuggy = !navigator.userAgent.match(/CriOS\//);

  requestMethodIsSafe = (ref = popCookie('request_method')) === 'GET' || ref === '';

  browserSupportsTurbolinks = browserSupportsPushState && browserIsntBuggy && requestMethodIsSafe;

  browserSupportsCustomEvents = document.addEventListener && document.createEvent;

  if (browserSupportsCustomEvents) {
    installDocumentReadyPageEventTriggers();
    installJqueryAjaxSuccessPageUpdateTrigger();
  }

  if (browserSupportsTurbolinks) {
    visit = fetch;
    initializeTurbolinks();
  } else {
    visit = function(url) {
      return document.location.href = url;
    };
  }

  this.Turbolinks = {
    visit: visit,
    pagesCached: pagesCached,
    enableTransitionCache: enableTransitionCache,
    enableProgressBar: enableProgressBar,
    allowLinkExtensions: Link.allowExtensions,
    supported: browserSupportsTurbolinks,
    EVENTS: clone(EVENTS)
  };

}).call(this);
/*! Backstretch - v2.0.3 - 2012-11-30
* http://srobbin.com/jquery-plugins/backstretch/
* Copyright (c) 2012 Scott Robbin; Licensed MIT */

(function(e,t,n){"use strict";e.fn.backstretch=function(r,s){return(r===n||r.length===0)&&e.error("No images were supplied for Backstretch"),e(t).scrollTop()===0&&t.scrollTo(0,0),this.each(function(){var t=e(this),n=t.data("backstretch");n&&(s=e.extend(n.options,s),n.destroy(!0)),n=new i(this,r,s),t.data("backstretch",n)})},e.backstretch=function(t,n){return e("body").backstretch(t,n).data("backstretch")},e.expr[":"].backstretch=function(t){return e(t).data("backstretch")!==n},e.fn.backstretch.defaults={centeredX:!0,centeredY:!0,duration:5e3,fade:0};var r={wrap:{left:0,top:0,overflow:"hidden",margin:0,padding:0,height:"100%",width:"100%",zIndex:-999999},img:{position:"absolute",display:"none",margin:0,padding:0,border:"none",width:"auto",height:"auto",maxWidth:"none",zIndex:-999999}},i=function(n,i,o){this.options=e.extend({},e.fn.backstretch.defaults,o||{}),this.images=e.isArray(i)?i:[i],e.each(this.images,function(){e("<img />")[0].src=this}),this.isBody=n===document.body,this.$container=e(n),this.$wrap=e('<div class="backstretch"></div>').css(r.wrap).appendTo(this.$container),this.$root=this.isBody?s?e(t):e(document):this.$container;if(!this.isBody){var u=this.$container.css("position"),a=this.$container.css("zIndex");this.$container.css({position:u==="static"?"relative":u,zIndex:a==="auto"?0:a,background:"none"}),this.$wrap.css({zIndex:-999998})}this.$wrap.css({position:this.isBody&&s?"fixed":"absolute"}),this.index=0,this.show(this.index),e(t).on("resize.backstretch",e.proxy(this.resize,this)).on("orientationchange.backstretch",e.proxy(function(){this.isBody&&t.pageYOffset===0&&(t.scrollTo(0,1),this.resize())},this))};i.prototype={resize:function(){try{var e={left:0,top:0},n=this.isBody?this.$root.width():this.$root.innerWidth(),r=n,i=this.isBody?t.innerHeight?t.innerHeight:this.$root.height():this.$root.innerHeight(),s=r/this.$img.data("ratio"),o;s>=i?(o=(s-i)/2,this.options.centeredY&&(e.top="-"+o+"px")):(s=i,r=s*this.$img.data("ratio"),o=(r-n)/2,this.options.centeredX&&(e.left="-"+o+"px")),this.$wrap.css({width:n,height:i}).find("img:not(.deleteable)").css({width:r,height:s}).css(e)}catch(u){}return this},show:function(t){if(Math.abs(t)>this.images.length-1)return;this.index=t;var n=this,i=n.$wrap.find("img").addClass("deleteable"),s=e.Event("backstretch.show",{relatedTarget:n.$container[0]});return clearInterval(n.interval),n.$img=e("<img />").css(r.img).bind("load",function(t){var r=this.width||e(t.target).width(),o=this.height||e(t.target).height();e(this).data("ratio",r/o),e(this).fadeIn(n.options.speed||n.options.fade,function(){i.remove(),n.paused||n.cycle(),n.$container.trigger(s,n)}),n.resize()}).appendTo(n.$wrap),n.$img.attr("src",n.images[t]),n},next:function(){return this.show(this.index<this.images.length-1?this.index+1:0)},prev:function(){return this.show(this.index===0?this.images.length-1:this.index-1)},pause:function(){return this.paused=!0,this},resume:function(){return this.paused=!1,this.next(),this},cycle:function(){return this.images.length>1&&(clearInterval(this.interval),this.interval=setInterval(e.proxy(function(){this.paused||this.next()},this),this.options.duration)),this},destroy:function(n){e(t).off("resize.backstretch orientationchange.backstretch"),clearInterval(this.interval),n||this.$wrap.remove(),this.$container.removeData("backstretch")}};var s=function(){var e=navigator.userAgent,n=navigator.platform,r=e.match(/AppleWebKit\/([0-9]+)/),i=!!r&&r[1],s=e.match(/Fennec\/([0-9]+)/),o=!!s&&s[1],u=e.match(/Opera Mobi\/([0-9]+)/),a=!!u&&u[1],f=e.match(/MSIE ([0-9]+)/),l=!!f&&f[1];return!((n.indexOf("iPhone")>-1||n.indexOf("iPad")>-1||n.indexOf("iPod")>-1)&&i&&i<534||t.operamini&&{}.toString.call(t.operamini)==="[object OperaMini]"||u&&a<7458||e.indexOf("Android")>-1&&i&&i<533||o&&o<6||"palmGetResource"in t&&i&&i<534||e.indexOf("MeeGo")>-1&&e.indexOf("NokiaBrowser/8.5.0")>-1||l&&l<=6)}()})(jQuery,window);
// Generated by CoffeeScript 1.7.1

/*
jQuery.Turbolinks ~ https://github.com/kossnocorp/jquery.turbolinks
jQuery plugin for drop-in fix binded events problem caused by Turbolinks

The MIT License
Copyright (c) 2012-2013 Sasha Koss & Rico Sta. Cruz
 */


(function() {
  var $, $document;

  $ = window.jQuery || (typeof require === "function" ? require('jquery') : void 0);

  $document = $(document);

  $.turbo = {
    version: '2.1.0',
    isReady: false,
    use: function(load, fetch) {
      return $document.off('.turbo').on("" + load + ".turbo", this.onLoad).on("" + fetch + ".turbo", this.onFetch);
    },
    addCallback: function(callback) {
      if ($.turbo.isReady) {
        callback($);
      }
      return $document.on('turbo:ready', function() {
        return callback($);
      });
    },
    onLoad: function() {
      $.turbo.isReady = true;
      return $document.trigger('turbo:ready');
    },
    onFetch: function() {
      return $.turbo.isReady = false;
    },
    register: function() {
      $(this.onLoad);
      return $.fn.ready = this.addCallback;
    }
  };

  $.turbo.register();

  $.turbo.use('page:load', 'page:fetch');

}).call(this);
/*!
 * Bootstrap v3.0.1 by @fat and @mdo
 * Copyright 2013 Twitter, Inc.
 * Licensed under http://www.apache.org/licenses/LICENSE-2.0
 *
 * Designed and built with all the love in the world by @mdo and @fat.
 */


if("undefined"==typeof jQuery)throw new Error("Bootstrap requires jQuery");+function(a){"use strict";function b(){var a=document.createElement("bootstrap"),b={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(var c in b)if(void 0!==a.style[c])return{end:b[c]}}a.fn.emulateTransitionEnd=function(b){var c=!1,d=this;a(this).one(a.support.transition.end,function(){c=!0});var e=function(){c||a(d).trigger(a.support.transition.end)};return setTimeout(e,b),this},a(function(){a.support.transition=b()})}(window.jQuery),+function(a){"use strict";var b='[data-dismiss="alert"]',c=function(c){a(c).on("click",b,this.close)};c.prototype.close=function(b){function c(){f.trigger("closed.bs.alert").remove()}var d=a(this),e=d.attr("data-target");e||(e=d.attr("href"),e=e&&e.replace(/.*(?=#[^\s]*$)/,""));var f=a(e);b&&b.preventDefault(),f.length||(f=d.hasClass("alert")?d:d.parent()),f.trigger(b=a.Event("close.bs.alert")),b.isDefaultPrevented()||(f.removeClass("in"),a.support.transition&&f.hasClass("fade")?f.one(a.support.transition.end,c).emulateTransitionEnd(150):c())};var d=a.fn.alert;a.fn.alert=function(b){return this.each(function(){var d=a(this),e=d.data("bs.alert");e||d.data("bs.alert",e=new c(this)),"string"==typeof b&&e[b].call(d)})},a.fn.alert.Constructor=c,a.fn.alert.noConflict=function(){return a.fn.alert=d,this},a(document).on("click.bs.alert.data-api",b,c.prototype.close)}(window.jQuery),+function(a){"use strict";var b=function(c,d){this.$element=a(c),this.options=a.extend({},b.DEFAULTS,d)};b.DEFAULTS={loadingText:"loading..."},b.prototype.setState=function(a){var b="disabled",c=this.$element,d=c.is("input")?"val":"html",e=c.data();a+="Text",e.resetText||c.data("resetText",c[d]()),c[d](e[a]||this.options[a]),setTimeout(function(){"loadingText"==a?c.addClass(b).attr(b,b):c.removeClass(b).removeAttr(b)},0)},b.prototype.toggle=function(){var a=this.$element.closest('[data-toggle="buttons"]');if(a.length){var b=this.$element.find("input").prop("checked",!this.$element.hasClass("active")).trigger("change");"radio"===b.prop("type")&&a.find(".active").removeClass("active")}this.$element.toggleClass("active")};var c=a.fn.button;a.fn.button=function(c){return this.each(function(){var d=a(this),e=d.data("bs.button"),f="object"==typeof c&&c;e||d.data("bs.button",e=new b(this,f)),"toggle"==c?e.toggle():c&&e.setState(c)})},a.fn.button.Constructor=b,a.fn.button.noConflict=function(){return a.fn.button=c,this},a(document).on("click.bs.button.data-api","[data-toggle^=button]",function(b){var c=a(b.target);c.hasClass("btn")||(c=c.closest(".btn")),c.button("toggle"),b.preventDefault()})}(window.jQuery),+function(a){"use strict";var b=function(b,c){this.$element=a(b),this.$indicators=this.$element.find(".carousel-indicators"),this.options=c,this.paused=this.sliding=this.interval=this.$active=this.$items=null,"hover"==this.options.pause&&this.$element.on("mouseenter",a.proxy(this.pause,this)).on("mouseleave",a.proxy(this.cycle,this))};b.DEFAULTS={interval:5e3,pause:"hover",wrap:!0},b.prototype.cycle=function(b){return b||(this.paused=!1),this.interval&&clearInterval(this.interval),this.options.interval&&!this.paused&&(this.interval=setInterval(a.proxy(this.next,this),this.options.interval)),this},b.prototype.getActiveIndex=function(){return this.$active=this.$element.find(".item.active"),this.$items=this.$active.parent().children(),this.$items.index(this.$active)},b.prototype.to=function(b){var c=this,d=this.getActiveIndex();return b>this.$items.length-1||0>b?void 0:this.sliding?this.$element.one("slid",function(){c.to(b)}):d==b?this.pause().cycle():this.slide(b>d?"next":"prev",a(this.$items[b]))},b.prototype.pause=function(b){return b||(this.paused=!0),this.$element.find(".next, .prev").length&&a.support.transition.end&&(this.$element.trigger(a.support.transition.end),this.cycle(!0)),this.interval=clearInterval(this.interval),this},b.prototype.next=function(){return this.sliding?void 0:this.slide("next")},b.prototype.prev=function(){return this.sliding?void 0:this.slide("prev")},b.prototype.slide=function(b,c){var d=this.$element.find(".item.active"),e=c||d[b](),f=this.interval,g="next"==b?"left":"right",h="next"==b?"first":"last",i=this;if(!e.length){if(!this.options.wrap)return;e=this.$element.find(".item")[h]()}this.sliding=!0,f&&this.pause();var j=a.Event("slide.bs.carousel",{relatedTarget:e[0],direction:g});if(!e.hasClass("active")){if(this.$indicators.length&&(this.$indicators.find(".active").removeClass("active"),this.$element.one("slid",function(){var b=a(i.$indicators.children()[i.getActiveIndex()]);b&&b.addClass("active")})),a.support.transition&&this.$element.hasClass("slide")){if(this.$element.trigger(j),j.isDefaultPrevented())return;e.addClass(b),e[0].offsetWidth,d.addClass(g),e.addClass(g),d.one(a.support.transition.end,function(){e.removeClass([b,g].join(" ")).addClass("active"),d.removeClass(["active",g].join(" ")),i.sliding=!1,setTimeout(function(){i.$element.trigger("slid")},0)}).emulateTransitionEnd(600)}else{if(this.$element.trigger(j),j.isDefaultPrevented())return;d.removeClass("active"),e.addClass("active"),this.sliding=!1,this.$element.trigger("slid")}return f&&this.cycle(),this}};var c=a.fn.carousel;a.fn.carousel=function(c){return this.each(function(){var d=a(this),e=d.data("bs.carousel"),f=a.extend({},b.DEFAULTS,d.data(),"object"==typeof c&&c),g="string"==typeof c?c:f.slide;e||d.data("bs.carousel",e=new b(this,f)),"number"==typeof c?e.to(c):g?e[g]():f.interval&&e.pause().cycle()})},a.fn.carousel.Constructor=b,a.fn.carousel.noConflict=function(){return a.fn.carousel=c,this},a(document).on("click.bs.carousel.data-api","[data-slide], [data-slide-to]",function(b){var c,d=a(this),e=a(d.attr("data-target")||(c=d.attr("href"))&&c.replace(/.*(?=#[^\s]+$)/,"")),f=a.extend({},e.data(),d.data()),g=d.attr("data-slide-to");g&&(f.interval=!1),e.carousel(f),(g=d.attr("data-slide-to"))&&e.data("bs.carousel").to(g),b.preventDefault()}),a(window).on("load",function(){a('[data-ride="carousel"]').each(function(){var b=a(this);b.carousel(b.data())})})}(window.jQuery),+function(a){"use strict";var b=function(c,d){this.$element=a(c),this.options=a.extend({},b.DEFAULTS,d),this.transitioning=null,this.options.parent&&(this.$parent=a(this.options.parent)),this.options.toggle&&this.toggle()};b.DEFAULTS={toggle:!0},b.prototype.dimension=function(){var a=this.$element.hasClass("width");return a?"width":"height"},b.prototype.show=function(){if(!this.transitioning&&!this.$element.hasClass("in")){var b=a.Event("show.bs.collapse");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.$parent&&this.$parent.find("> .panel > .in");if(c&&c.length){var d=c.data("bs.collapse");if(d&&d.transitioning)return;c.collapse("hide"),d||c.data("bs.collapse",null)}var e=this.dimension();this.$element.removeClass("collapse").addClass("collapsing")[e](0),this.transitioning=1;var f=function(){this.$element.removeClass("collapsing").addClass("in")[e]("auto"),this.transitioning=0,this.$element.trigger("shown.bs.collapse")};if(!a.support.transition)return f.call(this);var g=a.camelCase(["scroll",e].join("-"));this.$element.one(a.support.transition.end,a.proxy(f,this)).emulateTransitionEnd(350)[e](this.$element[0][g])}}},b.prototype.hide=function(){if(!this.transitioning&&this.$element.hasClass("in")){var b=a.Event("hide.bs.collapse");if(this.$element.trigger(b),!b.isDefaultPrevented()){var c=this.dimension();this.$element[c](this.$element[c]())[0].offsetHeight,this.$element.addClass("collapsing").removeClass("collapse").removeClass("in"),this.transitioning=1;var d=function(){this.transitioning=0,this.$element.trigger("hidden.bs.collapse").removeClass("collapsing").addClass("collapse")};return a.support.transition?(this.$element[c](0).one(a.support.transition.end,a.proxy(d,this)).emulateTransitionEnd(350),void 0):d.call(this)}}},b.prototype.toggle=function(){this[this.$element.hasClass("in")?"hide":"show"]()};var c=a.fn.collapse;a.fn.collapse=function(c){return this.each(function(){var d=a(this),e=d.data("bs.collapse"),f=a.extend({},b.DEFAULTS,d.data(),"object"==typeof c&&c);e||d.data("bs.collapse",e=new b(this,f)),"string"==typeof c&&e[c]()})},a.fn.collapse.Constructor=b,a.fn.collapse.noConflict=function(){return a.fn.collapse=c,this},a(document).on("click.bs.collapse.data-api","[data-toggle=collapse]",function(b){var c,d=a(this),e=d.attr("data-target")||b.preventDefault()||(c=d.attr("href"))&&c.replace(/.*(?=#[^\s]+$)/,""),f=a(e),g=f.data("bs.collapse"),h=g?"toggle":d.data(),i=d.attr("data-parent"),j=i&&a(i);g&&g.transitioning||(j&&j.find('[data-toggle=collapse][data-parent="'+i+'"]').not(d).addClass("collapsed"),d[f.hasClass("in")?"addClass":"removeClass"]("collapsed")),f.collapse(h)})}(window.jQuery),+function(a){"use strict";function b(){a(d).remove(),a(e).each(function(b){var d=c(a(this));d.hasClass("open")&&(d.trigger(b=a.Event("hide.bs.dropdown")),b.isDefaultPrevented()||d.removeClass("open").trigger("hidden.bs.dropdown"))})}function c(b){var c=b.attr("data-target");c||(c=b.attr("href"),c=c&&/#/.test(c)&&c.replace(/.*(?=#[^\s]*$)/,""));var d=c&&a(c);return d&&d.length?d:b.parent()}var d=".dropdown-backdrop",e="[data-toggle=dropdown]",f=function(b){a(b).on("click.bs.dropdown",this.toggle)};f.prototype.toggle=function(d){var e=a(this);if(!e.is(".disabled, :disabled")){var f=c(e),g=f.hasClass("open");if(b(),!g){if("ontouchstart"in document.documentElement&&!f.closest(".navbar-nav").length&&a('<div class="dropdown-backdrop"/>').insertAfter(a(this)).on("click",b),f.trigger(d=a.Event("show.bs.dropdown")),d.isDefaultPrevented())return;f.toggleClass("open").trigger("shown.bs.dropdown"),e.focus()}return!1}},f.prototype.keydown=function(b){if(/(38|40|27)/.test(b.keyCode)){var d=a(this);if(b.preventDefault(),b.stopPropagation(),!d.is(".disabled, :disabled")){var f=c(d),g=f.hasClass("open");if(!g||g&&27==b.keyCode)return 27==b.which&&f.find(e).focus(),d.click();var h=a("[role=menu] li:not(.divider):visible a",f);if(h.length){var i=h.index(h.filter(":focus"));38==b.keyCode&&i>0&&i--,40==b.keyCode&&i<h.length-1&&i++,~i||(i=0),h.eq(i).focus()}}}};var g=a.fn.dropdown;a.fn.dropdown=function(b){return this.each(function(){var c=a(this),d=c.data("dropdown");d||c.data("dropdown",d=new f(this)),"string"==typeof b&&d[b].call(c)})},a.fn.dropdown.Constructor=f,a.fn.dropdown.noConflict=function(){return a.fn.dropdown=g,this},a(document).on("click.bs.dropdown.data-api",b).on("click.bs.dropdown.data-api",".dropdown form",function(a){a.stopPropagation()}).on("click.bs.dropdown.data-api",e,f.prototype.toggle).on("keydown.bs.dropdown.data-api",e+", [role=menu]",f.prototype.keydown)}(window.jQuery),+function(a){"use strict";var b=function(b,c){this.options=c,this.$element=a(b),this.$backdrop=this.isShown=null,this.options.remote&&this.$element.load(this.options.remote)};b.DEFAULTS={backdrop:!0,keyboard:!0,show:!0},b.prototype.toggle=function(a){return this[this.isShown?"hide":"show"](a)},b.prototype.show=function(b){var c=this,d=a.Event("show.bs.modal",{relatedTarget:b});this.$element.trigger(d),this.isShown||d.isDefaultPrevented()||(this.isShown=!0,this.escape(),this.$element.on("click.dismiss.modal",'[data-dismiss="modal"]',a.proxy(this.hide,this)),this.backdrop(function(){var d=a.support.transition&&c.$element.hasClass("fade");c.$element.parent().length||c.$element.appendTo(document.body),c.$element.show(),d&&c.$element[0].offsetWidth,c.$element.addClass("in").attr("aria-hidden",!1),c.enforceFocus();var e=a.Event("shown.bs.modal",{relatedTarget:b});d?c.$element.find(".modal-dialog").one(a.support.transition.end,function(){c.$element.focus().trigger(e)}).emulateTransitionEnd(300):c.$element.focus().trigger(e)}))},b.prototype.hide=function(b){b&&b.preventDefault(),b=a.Event("hide.bs.modal"),this.$element.trigger(b),this.isShown&&!b.isDefaultPrevented()&&(this.isShown=!1,this.escape(),a(document).off("focusin.bs.modal"),this.$element.removeClass("in").attr("aria-hidden",!0).off("click.dismiss.modal"),a.support.transition&&this.$element.hasClass("fade")?this.$element.one(a.support.transition.end,a.proxy(this.hideModal,this)).emulateTransitionEnd(300):this.hideModal())},b.prototype.enforceFocus=function(){a(document).off("focusin.bs.modal").on("focusin.bs.modal",a.proxy(function(a){this.$element[0]===a.target||this.$element.has(a.target).length||this.$element.focus()},this))},b.prototype.escape=function(){this.isShown&&this.options.keyboard?this.$element.on("keyup.dismiss.bs.modal",a.proxy(function(a){27==a.which&&this.hide()},this)):this.isShown||this.$element.off("keyup.dismiss.bs.modal")},b.prototype.hideModal=function(){var a=this;this.$element.hide(),this.backdrop(function(){a.removeBackdrop(),a.$element.trigger("hidden.bs.modal")})},b.prototype.removeBackdrop=function(){this.$backdrop&&this.$backdrop.remove(),this.$backdrop=null},b.prototype.backdrop=function(b){var c=this.$element.hasClass("fade")?"fade":"";if(this.isShown&&this.options.backdrop){var d=a.support.transition&&c;if(this.$backdrop=a('<div class="modal-backdrop '+c+'" />').appendTo(document.body),this.$element.on("click.dismiss.modal",a.proxy(function(a){a.target===a.currentTarget&&("static"==this.options.backdrop?this.$element[0].focus.call(this.$element[0]):this.hide.call(this))},this)),d&&this.$backdrop[0].offsetWidth,this.$backdrop.addClass("in"),!b)return;d?this.$backdrop.one(a.support.transition.end,b).emulateTransitionEnd(150):b()}else!this.isShown&&this.$backdrop?(this.$backdrop.removeClass("in"),a.support.transition&&this.$element.hasClass("fade")?this.$backdrop.one(a.support.transition.end,b).emulateTransitionEnd(150):b()):b&&b()};var c=a.fn.modal;a.fn.modal=function(c,d){return this.each(function(){var e=a(this),f=e.data("bs.modal"),g=a.extend({},b.DEFAULTS,e.data(),"object"==typeof c&&c);f||e.data("bs.modal",f=new b(this,g)),"string"==typeof c?f[c](d):g.show&&f.show(d)})},a.fn.modal.Constructor=b,a.fn.modal.noConflict=function(){return a.fn.modal=c,this},a(document).on("click.bs.modal.data-api",'[data-toggle="modal"]',function(b){var c=a(this),d=c.attr("href"),e=a(c.attr("data-target")||d&&d.replace(/.*(?=#[^\s]+$)/,"")),f=e.data("modal")?"toggle":a.extend({remote:!/#/.test(d)&&d},e.data(),c.data());b.preventDefault(),e.modal(f,this).one("hide",function(){c.is(":visible")&&c.focus()})}),a(document).on("show.bs.modal",".modal",function(){a(document.body).addClass("modal-open")}).on("hidden.bs.modal",".modal",function(){a(document.body).removeClass("modal-open")})}(window.jQuery),+function(a){"use strict";var b=function(a,b){this.type=this.options=this.enabled=this.timeout=this.hoverState=this.$element=null,this.init("tooltip",a,b)};b.DEFAULTS={animation:!0,placement:"top",selector:!1,template:'<div class="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',trigger:"hover focus",title:"",delay:0,html:!1,container:!1},b.prototype.init=function(b,c,d){this.enabled=!0,this.type=b,this.$element=a(c),this.options=this.getOptions(d);for(var e=this.options.trigger.split(" "),f=e.length;f--;){var g=e[f];if("click"==g)this.$element.on("click."+this.type,this.options.selector,a.proxy(this.toggle,this));else if("manual"!=g){var h="hover"==g?"mouseenter":"focus",i="hover"==g?"mouseleave":"blur";this.$element.on(h+"."+this.type,this.options.selector,a.proxy(this.enter,this)),this.$element.on(i+"."+this.type,this.options.selector,a.proxy(this.leave,this))}}this.options.selector?this._options=a.extend({},this.options,{trigger:"manual",selector:""}):this.fixTitle()},b.prototype.getDefaults=function(){return b.DEFAULTS},b.prototype.getOptions=function(b){return b=a.extend({},this.getDefaults(),this.$element.data(),b),b.delay&&"number"==typeof b.delay&&(b.delay={show:b.delay,hide:b.delay}),b},b.prototype.getDelegateOptions=function(){var b={},c=this.getDefaults();return this._options&&a.each(this._options,function(a,d){c[a]!=d&&(b[a]=d)}),b},b.prototype.enter=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs."+this.type);return clearTimeout(c.timeout),c.hoverState="in",c.options.delay&&c.options.delay.show?(c.timeout=setTimeout(function(){"in"==c.hoverState&&c.show()},c.options.delay.show),void 0):c.show()},b.prototype.leave=function(b){var c=b instanceof this.constructor?b:a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs."+this.type);return clearTimeout(c.timeout),c.hoverState="out",c.options.delay&&c.options.delay.hide?(c.timeout=setTimeout(function(){"out"==c.hoverState&&c.hide()},c.options.delay.hide),void 0):c.hide()},b.prototype.show=function(){var b=a.Event("show.bs."+this.type);if(this.hasContent()&&this.enabled){if(this.$element.trigger(b),b.isDefaultPrevented())return;var c=this.tip();this.setContent(),this.options.animation&&c.addClass("fade");var d="function"==typeof this.options.placement?this.options.placement.call(this,c[0],this.$element[0]):this.options.placement,e=/\s?auto?\s?/i,f=e.test(d);f&&(d=d.replace(e,"")||"top"),c.detach().css({top:0,left:0,display:"block"}).addClass(d),this.options.container?c.appendTo(this.options.container):c.insertAfter(this.$element);var g=this.getPosition(),h=c[0].offsetWidth,i=c[0].offsetHeight;if(f){var j=this.$element.parent(),k=d,l=document.documentElement.scrollTop||document.body.scrollTop,m="body"==this.options.container?window.innerWidth:j.outerWidth(),n="body"==this.options.container?window.innerHeight:j.outerHeight(),o="body"==this.options.container?0:j.offset().left;d="bottom"==d&&g.top+g.height+i-l>n?"top":"top"==d&&g.top-l-i<0?"bottom":"right"==d&&g.right+h>m?"left":"left"==d&&g.left-h<o?"right":d,c.removeClass(k).addClass(d)}var p=this.getCalculatedOffset(d,g,h,i);this.applyPlacement(p,d),this.$element.trigger("shown.bs."+this.type)}},b.prototype.applyPlacement=function(a,b){var c,d=this.tip(),e=d[0].offsetWidth,f=d[0].offsetHeight,g=parseInt(d.css("margin-top"),10),h=parseInt(d.css("margin-left"),10);isNaN(g)&&(g=0),isNaN(h)&&(h=0),a.top=a.top+g,a.left=a.left+h,d.offset(a).addClass("in");var i=d[0].offsetWidth,j=d[0].offsetHeight;if("top"==b&&j!=f&&(c=!0,a.top=a.top+f-j),/bottom|top/.test(b)){var k=0;a.left<0&&(k=-2*a.left,a.left=0,d.offset(a),i=d[0].offsetWidth,j=d[0].offsetHeight),this.replaceArrow(k-e+i,i,"left")}else this.replaceArrow(j-f,j,"top");c&&d.offset(a)},b.prototype.replaceArrow=function(a,b,c){this.arrow().css(c,a?50*(1-a/b)+"%":"")},b.prototype.setContent=function(){var a=this.tip(),b=this.getTitle();a.find(".tooltip-inner")[this.options.html?"html":"text"](b),a.removeClass("fade in top bottom left right")},b.prototype.hide=function(){function b(){"in"!=c.hoverState&&d.detach()}var c=this,d=this.tip(),e=a.Event("hide.bs."+this.type);return this.$element.trigger(e),e.isDefaultPrevented()?void 0:(d.removeClass("in"),a.support.transition&&this.$tip.hasClass("fade")?d.one(a.support.transition.end,b).emulateTransitionEnd(150):b(),this.$element.trigger("hidden.bs."+this.type),this)},b.prototype.fixTitle=function(){var a=this.$element;(a.attr("title")||"string"!=typeof a.attr("data-original-title"))&&a.attr("data-original-title",a.attr("title")||"").attr("title","")},b.prototype.hasContent=function(){return this.getTitle()},b.prototype.getPosition=function(){var b=this.$element[0];return a.extend({},"function"==typeof b.getBoundingClientRect?b.getBoundingClientRect():{width:b.offsetWidth,height:b.offsetHeight},this.$element.offset())},b.prototype.getCalculatedOffset=function(a,b,c,d){return"bottom"==a?{top:b.top+b.height,left:b.left+b.width/2-c/2}:"top"==a?{top:b.top-d,left:b.left+b.width/2-c/2}:"left"==a?{top:b.top+b.height/2-d/2,left:b.left-c}:{top:b.top+b.height/2-d/2,left:b.left+b.width}},b.prototype.getTitle=function(){var a,b=this.$element,c=this.options;return a=b.attr("data-original-title")||("function"==typeof c.title?c.title.call(b[0]):c.title)},b.prototype.tip=function(){return this.$tip=this.$tip||a(this.options.template)},b.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".tooltip-arrow")},b.prototype.validate=function(){this.$element[0].parentNode||(this.hide(),this.$element=null,this.options=null)},b.prototype.enable=function(){this.enabled=!0},b.prototype.disable=function(){this.enabled=!1},b.prototype.toggleEnabled=function(){this.enabled=!this.enabled},b.prototype.toggle=function(b){var c=b?a(b.currentTarget)[this.type](this.getDelegateOptions()).data("bs."+this.type):this;c.tip().hasClass("in")?c.leave(c):c.enter(c)},b.prototype.destroy=function(){this.hide().$element.off("."+this.type).removeData("bs."+this.type)};var c=a.fn.tooltip;a.fn.tooltip=function(c){return this.each(function(){var d=a(this),e=d.data("bs.tooltip"),f="object"==typeof c&&c;e||d.data("bs.tooltip",e=new b(this,f)),"string"==typeof c&&e[c]()})},a.fn.tooltip.Constructor=b,a.fn.tooltip.noConflict=function(){return a.fn.tooltip=c,this}}(window.jQuery),+function(a){"use strict";var b=function(a,b){this.init("popover",a,b)};if(!a.fn.tooltip)throw new Error("Popover requires tooltip.js");b.DEFAULTS=a.extend({},a.fn.tooltip.Constructor.DEFAULTS,{placement:"right",trigger:"click",content:"",template:'<div class="popover"><div class="arrow"></div><h3 class="popover-title"></h3><div class="popover-content"></div></div>'}),b.prototype=a.extend({},a.fn.tooltip.Constructor.prototype),b.prototype.constructor=b,b.prototype.getDefaults=function(){return b.DEFAULTS},b.prototype.setContent=function(){var a=this.tip(),b=this.getTitle(),c=this.getContent();a.find(".popover-title")[this.options.html?"html":"text"](b),a.find(".popover-content")[this.options.html?"html":"text"](c),a.removeClass("fade top bottom left right in"),a.find(".popover-title").html()||a.find(".popover-title").hide()},b.prototype.hasContent=function(){return this.getTitle()||this.getContent()},b.prototype.getContent=function(){var a=this.$element,b=this.options;return a.attr("data-content")||("function"==typeof b.content?b.content.call(a[0]):b.content)},b.prototype.arrow=function(){return this.$arrow=this.$arrow||this.tip().find(".arrow")},b.prototype.tip=function(){return this.$tip||(this.$tip=a(this.options.template)),this.$tip};var c=a.fn.popover;a.fn.popover=function(c){return this.each(function(){var d=a(this),e=d.data("bs.popover"),f="object"==typeof c&&c;e||d.data("bs.popover",e=new b(this,f)),"string"==typeof c&&e[c]()})},a.fn.popover.Constructor=b,a.fn.popover.noConflict=function(){return a.fn.popover=c,this}}(window.jQuery),+function(a){"use strict";function b(c,d){var e,f=a.proxy(this.process,this);this.$element=a(c).is("body")?a(window):a(c),this.$body=a("body"),this.$scrollElement=this.$element.on("scroll.bs.scroll-spy.data-api",f),this.options=a.extend({},b.DEFAULTS,d),this.selector=(this.options.target||(e=a(c).attr("href"))&&e.replace(/.*(?=#[^\s]+$)/,"")||"")+" .nav li > a",this.offsets=a([]),this.targets=a([]),this.activeTarget=null,this.refresh(),this.process()}b.DEFAULTS={offset:10},b.prototype.refresh=function(){var b=this.$element[0]==window?"offset":"position";this.offsets=a([]),this.targets=a([]);var c=this;this.$body.find(this.selector).map(function(){var d=a(this),e=d.data("target")||d.attr("href"),f=/^#\w/.test(e)&&a(e);return f&&f.length&&[[f[b]().top+(!a.isWindow(c.$scrollElement.get(0))&&c.$scrollElement.scrollTop()),e]]||null}).sort(function(a,b){return a[0]-b[0]}).each(function(){c.offsets.push(this[0]),c.targets.push(this[1])})},b.prototype.process=function(){var a,b=this.$scrollElement.scrollTop()+this.options.offset,c=this.$scrollElement[0].scrollHeight||this.$body[0].scrollHeight,d=c-this.$scrollElement.height(),e=this.offsets,f=this.targets,g=this.activeTarget;if(b>=d)return g!=(a=f.last()[0])&&this.activate(a);for(a=e.length;a--;)g!=f[a]&&b>=e[a]&&(!e[a+1]||b<=e[a+1])&&this.activate(f[a])},b.prototype.activate=function(b){this.activeTarget=b,a(this.selector).parents(".active").removeClass("active");var c=this.selector+'[data-target="'+b+'"],'+this.selector+'[href="'+b+'"]',d=a(c).parents("li").addClass("active");d.parent(".dropdown-menu").length&&(d=d.closest("li.dropdown").addClass("active")),d.trigger("activate")};var c=a.fn.scrollspy;a.fn.scrollspy=function(c){return this.each(function(){var d=a(this),e=d.data("bs.scrollspy"),f="object"==typeof c&&c;e||d.data("bs.scrollspy",e=new b(this,f)),"string"==typeof c&&e[c]()})},a.fn.scrollspy.Constructor=b,a.fn.scrollspy.noConflict=function(){return a.fn.scrollspy=c,this},a(window).on("load",function(){a('[data-spy="scroll"]').each(function(){var b=a(this);b.scrollspy(b.data())})})}(window.jQuery),+function(a){"use strict";var b=function(b){this.element=a(b)};b.prototype.show=function(){var b=this.element,c=b.closest("ul:not(.dropdown-menu)"),d=b.data("target");if(d||(d=b.attr("href"),d=d&&d.replace(/.*(?=#[^\s]*$)/,"")),!b.parent("li").hasClass("active")){var e=c.find(".active:last a")[0],f=a.Event("show.bs.tab",{relatedTarget:e});if(b.trigger(f),!f.isDefaultPrevented()){var g=a(d);this.activate(b.parent("li"),c),this.activate(g,g.parent(),function(){b.trigger({type:"shown.bs.tab",relatedTarget:e})})}}},b.prototype.activate=function(b,c,d){function e(){f.removeClass("active").find("> .dropdown-menu > .active").removeClass("active"),b.addClass("active"),g?(b[0].offsetWidth,b.addClass("in")):b.removeClass("fade"),b.parent(".dropdown-menu")&&b.closest("li.dropdown").addClass("active"),d&&d()}var f=c.find("> .active"),g=d&&a.support.transition&&f.hasClass("fade");g?f.one(a.support.transition.end,e).emulateTransitionEnd(150):e(),f.removeClass("in")};var c=a.fn.tab;a.fn.tab=function(c){return this.each(function(){var d=a(this),e=d.data("bs.tab");e||d.data("bs.tab",e=new b(this)),"string"==typeof c&&e[c]()})},a.fn.tab.Constructor=b,a.fn.tab.noConflict=function(){return a.fn.tab=c,this},a(document).on("click.bs.tab.data-api",'[data-toggle="tab"], [data-toggle="pill"]',function(b){b.preventDefault(),a(this).tab("show")})}(window.jQuery),+function(a){"use strict";var b=function(c,d){this.options=a.extend({},b.DEFAULTS,d),this.$window=a(window).on("scroll.bs.affix.data-api",a.proxy(this.checkPosition,this)).on("click.bs.affix.data-api",a.proxy(this.checkPositionWithEventLoop,this)),this.$element=a(c),this.affixed=this.unpin=null,this.checkPosition()};b.RESET="affix affix-top affix-bottom",b.DEFAULTS={offset:0},b.prototype.checkPositionWithEventLoop=function(){setTimeout(a.proxy(this.checkPosition,this),1)},b.prototype.checkPosition=function(){if(this.$element.is(":visible")){var c=a(document).height(),d=this.$window.scrollTop(),e=this.$element.offset(),f=this.options.offset,g=f.top,h=f.bottom;"object"!=typeof f&&(h=g=f),"function"==typeof g&&(g=f.top()),"function"==typeof h&&(h=f.bottom());var i=null!=this.unpin&&d+this.unpin<=e.top?!1:null!=h&&e.top+this.$element.height()>=c-h?"bottom":null!=g&&g>=d?"top":!1;this.affixed!==i&&(this.unpin&&this.$element.css("top",""),this.affixed=i,this.unpin="bottom"==i?e.top-d:null,this.$element.removeClass(b.RESET).addClass("affix"+(i?"-"+i:"")),"bottom"==i&&this.$element.offset({top:document.body.offsetHeight-h-this.$element.height()}))}};var c=a.fn.affix;a.fn.affix=function(c){return this.each(function(){var d=a(this),e=d.data("bs.affix"),f="object"==typeof c&&c;e||d.data("bs.affix",e=new b(this,f)),"string"==typeof c&&e[c]()})},a.fn.affix.Constructor=b,a.fn.affix.noConflict=function(){return a.fn.affix=c,this},a(window).on("load",function(){a('[data-spy="affix"]').each(function(){var b=a(this),c=b.data();c.offset=c.offset||{},c.offsetBottom&&(c.offset.bottom=c.offsetBottom),c.offsetTop&&(c.offset.top=c.offsetTop),b.affix(c)})})}(window.jQuery);
function changeBG(color) {
  document.getElementsByTagName("body")[0].id                  = "radial"+color;
  switch (color) {
    case "spacegray":
      document.getElementsByTagName("canvas")[0].style.borderColor = "DimGray";
      break;
    case "silver":
      document.getElementsByTagName("canvas")[0].style.borderColor = color;     
      break;
    case "gold":
      document.getElementsByTagName("canvas")[0].style.borderColor = color;
      break;
  }
}
;
function draw_gds(ctx){
ctx.beginPath();
ctx.fillStyle='rgba(197,154,4,0.85)';
ctx.strokeStyle='rgb(190,83,211)';
ctx.moveTo(250,950);
ctx.lineTo(250,250);
ctx.lineTo(350,250);
ctx.lineTo(350,550);
ctx.lineTo(550,550);
ctx.lineTo(550,250);
ctx.lineTo(650,250);
ctx.lineTo(650,950);
ctx.lineTo(550,950);
ctx.lineTo(550,650);
ctx.lineTo(350,650);
ctx.lineTo(350,950);
ctx.lineTo(250,950);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,250,178,0.85)';
ctx.strokeStyle='rgb(216,124,0)';
ctx.moveTo(850,950);
ctx.lineTo(850,250);
ctx.lineTo(1150,250);
ctx.lineTo(1150,350);
ctx.lineTo(950,350);
ctx.lineTo(950,550);
ctx.lineTo(1150,550);
ctx.lineTo(1150,650);
ctx.lineTo(950,650);
ctx.lineTo(950,850);
ctx.lineTo(1150,850);
ctx.lineTo(1150,950);
ctx.lineTo(850,950);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,90,181,0.85)';
ctx.strokeStyle='rgb(62,125,221)';
ctx.moveTo(1350,950);
ctx.lineTo(1350,250);
ctx.lineTo(1450,250);
ctx.lineTo(1450,850);
ctx.lineTo(1650,850);
ctx.lineTo(1650,950);
ctx.lineTo(1350,950);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,111,249,0.85)';
ctx.strokeStyle='rgb(253,57,227)';
ctx.moveTo(1850,950);
ctx.lineTo(1850,250);
ctx.lineTo(1950,250);
ctx.lineTo(1950,850);
ctx.lineTo(2150,850);
ctx.lineTo(2150,950);
ctx.lineTo(1850,950);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,230,90,0.85)';
ctx.strokeStyle='rgb(214,244,236)';
ctx.moveTo(2350,750);
ctx.lineTo(2350,350);
ctx.lineTo(2450,250);
ctx.lineTo(2750,250);
ctx.lineTo(2850,350);
ctx.lineTo(2850,850);
ctx.lineTo(2750,950);
ctx.lineTo(2450,950);
ctx.lineTo(2350,850);
ctx.lineTo(2350,750);
ctx.lineTo(2450,750);
ctx.lineTo(2550,850);
ctx.lineTo(2650,850);
ctx.lineTo(2750,750);
ctx.lineTo(2750,450);
ctx.lineTo(2650,350);
ctx.lineTo(2550,350);
ctx.lineTo(2450,450);
ctx.lineTo(2450,750);
ctx.lineTo(2350,750);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
};

function draw_gds_1k(ctx){
ctx.beginPath();
ctx.fillStyle='rgba(185,140,37,0.85)';
ctx.strokeStyle='rgb(253,3,142)';
ctx.moveTo(73283270,456920594);
ctx.lineTo(73283270,298513558);
ctx.lineTo(782612691,298513558);
ctx.lineTo(782612691,456920594);
ctx.lineTo(73283270,456920594);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,156,151,0.85)';
ctx.strokeStyle='rgb(197,204,2)';
ctx.moveTo(268838735,233187966);
ctx.lineTo(268838735,173180776);
ctx.lineTo(915655012,173180776);
ctx.lineTo(915655012,233187966);
ctx.lineTo(268838735,233187966);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,251,171,0.85)';
ctx.strokeStyle='rgb(64,15,54)';
ctx.moveTo(414634597,32148751);
ctx.lineTo(414634597,29300711);
ctx.lineTo(977489338,29300711);
ctx.lineTo(977489338,32148751);
ctx.lineTo(414634597,32148751);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,236,115,0.85)';
ctx.strokeStyle='rgb(128,84,228)';
ctx.moveTo(796418501,2323033);
ctx.lineTo(796418501,472214);
ctx.lineTo(890269838,472214);
ctx.lineTo(890269838,2323033);
ctx.lineTo(796418501,2323033);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,166,118,0.85)';
ctx.strokeStyle='rgb(33,113,244)';
ctx.moveTo(210367038,979263776);
ctx.lineTo(210367038,927825761);
ctx.lineTo(800317769,927825761);
ctx.lineTo(800317769,979263776);
ctx.lineTo(210367038,979263776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,93,4,0.85)';
ctx.strokeStyle='rgb(149,66,197)';
ctx.moveTo(55347398,661251179);
ctx.lineTo(55347398,470014179);
ctx.lineTo(499821414,470014179);
ctx.lineTo(499821414,661251179);
ctx.lineTo(55347398,661251179);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,181,165,0.85)';
ctx.strokeStyle='rgb(205,231,211)';
ctx.moveTo(955490506,912918642);
ctx.lineTo(955490506,719120728);
ctx.lineTo(974049548,719120728);
ctx.lineTo(974049548,912918642);
ctx.lineTo(955490506,912918642);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,252,134,0.85)';
ctx.strokeStyle='rgb(211,98,170)';
ctx.moveTo(522734827,69720636);
ctx.lineTo(522734827,37522959);
ctx.lineTo(929952231,37522959);
ctx.lineTo(929952231,69720636);
ctx.lineTo(522734827,69720636);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,57,88,0.85)';
ctx.strokeStyle='rgb(137,215,211)';
ctx.moveTo(216507176,230910336);
ctx.lineTo(216507176,22489335);
ctx.lineTo(909801063,22489335);
ctx.lineTo(909801063,230910336);
ctx.lineTo(216507176,230910336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,214,179,0.85)';
ctx.strokeStyle='rgb(116,138,67)';
ctx.moveTo(184183507,54550860);
ctx.lineTo(184183507,15859595);
ctx.lineTo(320184174,15859595);
ctx.lineTo(320184174,54550860);
ctx.lineTo(184183507,54550860);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,49,78,0.85)';
ctx.strokeStyle='rgb(107,216,143)';
ctx.moveTo(596510491,315820120);
ctx.lineTo(596510491,252885670);
ctx.lineTo(774783191,252885670);
ctx.lineTo(774783191,315820120);
ctx.lineTo(596510491,315820120);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,235,56,0.85)';
ctx.strokeStyle='rgb(16,185,212)';
ctx.moveTo(390187173,960366751);
ctx.lineTo(390187173,714115179);
ctx.lineTo(654604597,714115179);
ctx.lineTo(654604597,960366751);
ctx.lineTo(390187173,960366751);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,88,217,0.85)';
ctx.strokeStyle='rgb(188,102,22)';
ctx.moveTo(404321043,615146533);
ctx.lineTo(404321043,383976482);
ctx.lineTo(894331504,383976482);
ctx.lineTo(894331504,615146533);
ctx.lineTo(404321043,615146533);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,236,17,0.85)';
ctx.strokeStyle='rgb(15,247,237)';
ctx.moveTo(957481712,947499596);
ctx.lineTo(957481712,783877451);
ctx.lineTo(977778821,783877451);
ctx.lineTo(977778821,947499596);
ctx.lineTo(957481712,947499596);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,199,183,0.85)';
ctx.strokeStyle='rgb(64,115,199)';
ctx.moveTo(64970464,485909835);
ctx.lineTo(64970464,21808721);
ctx.lineTo(224653538,21808721);
ctx.lineTo(224653538,485909835);
ctx.lineTo(64970464,485909835);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,238,189,0.85)';
ctx.strokeStyle='rgb(159,115,25)';
ctx.moveTo(605862125,550794763);
ctx.lineTo(605862125,102911398);
ctx.lineTo(833930389,102911398);
ctx.lineTo(833930389,550794763);
ctx.lineTo(605862125,550794763);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,130,67,0.85)';
ctx.strokeStyle='rgb(13,207,54)';
ctx.moveTo(637800168,429783261);
ctx.lineTo(637800168,122849574);
ctx.lineTo(641926358,122849574);
ctx.lineTo(641926358,429783261);
ctx.lineTo(637800168,429783261);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,195,187,0.85)';
ctx.strokeStyle='rgb(200,76,223)';
ctx.moveTo(282719968,807868296);
ctx.lineTo(282719968,194716459);
ctx.lineTo(512005919,194716459);
ctx.lineTo(512005919,807868296);
ctx.lineTo(282719968,807868296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,183,193,0.85)';
ctx.strokeStyle='rgb(226,150,59)';
ctx.moveTo(599613665,812427770);
ctx.lineTo(599613665,608163343);
ctx.lineTo(678582436,608163343);
ctx.lineTo(678582436,812427770);
ctx.lineTo(599613665,812427770);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,143,209,0.85)';
ctx.strokeStyle='rgb(119,220,118)';
ctx.moveTo(161522656,257846440);
ctx.lineTo(161522656,135916023);
ctx.lineTo(639145614,135916023);
ctx.lineTo(639145614,257846440);
ctx.lineTo(161522656,257846440);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,119,149,0.85)';
ctx.strokeStyle='rgb(38,102,4)';
ctx.moveTo(826354751,427481881);
ctx.lineTo(826354751,398520538);
ctx.lineTo(922777884,398520538);
ctx.lineTo(922777884,427481881);
ctx.lineTo(826354751,427481881);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,125,92,0.85)';
ctx.strokeStyle='rgb(4,207,124)';
ctx.moveTo(306447154,776684947);
ctx.lineTo(306447154,185215559);
ctx.lineTo(754818660,185215559);
ctx.lineTo(754818660,776684947);
ctx.lineTo(306447154,776684947);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,13,18,0.85)';
ctx.strokeStyle='rgb(91,241,191)';
ctx.moveTo(590174553,494608974);
ctx.lineTo(590174553,357419648);
ctx.lineTo(857597540,357419648);
ctx.lineTo(857597540,494608974);
ctx.lineTo(590174553,494608974);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,94,152,0.85)';
ctx.strokeStyle='rgb(247,226,178)';
ctx.moveTo(659397537,277807592);
ctx.lineTo(659397537,167139892);
ctx.lineTo(742460843,167139892);
ctx.lineTo(742460843,277807592);
ctx.lineTo(659397537,277807592);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,97,160,0.85)';
ctx.strokeStyle='rgb(65,0,132)';
ctx.moveTo(588441214,94638562);
ctx.lineTo(588441214,35125268);
ctx.lineTo(716047527,35125268);
ctx.lineTo(716047527,94638562);
ctx.lineTo(588441214,94638562);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,227,91,0.85)';
ctx.strokeStyle='rgb(47,210,130)';
ctx.moveTo(580663498,400704045);
ctx.lineTo(580663498,386256569);
ctx.lineTo(994617333,386256569);
ctx.lineTo(994617333,400704045);
ctx.lineTo(580663498,400704045);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,213,42,0.85)';
ctx.strokeStyle='rgb(45,185,212)';
ctx.moveTo(956995146,849550265);
ctx.lineTo(956995146,158784685);
ctx.lineTo(969587966,158784685);
ctx.lineTo(969587966,849550265);
ctx.lineTo(956995146,849550265);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,57,158,0.85)';
ctx.strokeStyle='rgb(196,197,116)';
ctx.moveTo(503751590,100280504);
ctx.lineTo(503751590,3678322);
ctx.lineTo(668317315,3678322);
ctx.lineTo(668317315,100280504);
ctx.lineTo(503751590,100280504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,89,205,0.85)';
ctx.strokeStyle='rgb(245,34,142)';
ctx.moveTo(329400638,261800799);
ctx.lineTo(329400638,174471009);
ctx.lineTo(646053576,174471009);
ctx.lineTo(646053576,261800799);
ctx.lineTo(329400638,261800799);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,8,6,0.85)';
ctx.strokeStyle='rgb(151,78,3)';
ctx.moveTo(247228081,661761505);
ctx.lineTo(247228081,60700870);
ctx.lineTo(713072038,60700870);
ctx.lineTo(713072038,661761505);
ctx.lineTo(247228081,661761505);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,180,146,0.85)';
ctx.strokeStyle='rgb(24,190,76)';
ctx.moveTo(587406631,979467603);
ctx.lineTo(587406631,36897965);
ctx.lineTo(947338384,36897965);
ctx.lineTo(947338384,979467603);
ctx.lineTo(587406631,979467603);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,146,202,0.85)';
ctx.strokeStyle='rgb(235,183,201)';
ctx.moveTo(111699477,183980408);
ctx.lineTo(111699477,40828265);
ctx.lineTo(371173582,40828265);
ctx.lineTo(371173582,183980408);
ctx.lineTo(111699477,183980408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,20,216,0.85)';
ctx.strokeStyle='rgb(91,235,236)';
ctx.moveTo(160351299,239314052);
ctx.lineTo(160351299,217995665);
ctx.lineTo(820491474,217995665);
ctx.lineTo(820491474,239314052);
ctx.lineTo(160351299,239314052);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,245,239,0.85)';
ctx.strokeStyle='rgb(16,231,139)';
ctx.moveTo(23792350,695416052);
ctx.lineTo(23792350,127087400);
ctx.lineTo(909774778,127087400);
ctx.lineTo(909774778,695416052);
ctx.lineTo(23792350,695416052);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,76,94,0.85)';
ctx.strokeStyle='rgb(182,63,184)';
ctx.moveTo(115981409,259941160);
ctx.lineTo(115981409,124673274);
ctx.lineTo(623241444,124673274);
ctx.lineTo(623241444,259941160);
ctx.lineTo(115981409,259941160);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,126,208,0.85)';
ctx.strokeStyle='rgb(184,62,22)';
ctx.moveTo(243719012,850918904);
ctx.lineTo(243719012,112178702);
ctx.lineTo(349873397,112178702);
ctx.lineTo(349873397,850918904);
ctx.lineTo(243719012,850918904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,148,3,0.85)';
ctx.strokeStyle='rgb(4,146,53)';
ctx.moveTo(723806801,409517688);
ctx.lineTo(723806801,189177680);
ctx.lineTo(870163216,189177680);
ctx.lineTo(870163216,409517688);
ctx.lineTo(723806801,409517688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,178,191,0.85)';
ctx.strokeStyle='rgb(177,252,243)';
ctx.moveTo(877454354,501384802);
ctx.lineTo(877454354,185821885);
ctx.lineTo(890246594,185821885);
ctx.lineTo(890246594,501384802);
ctx.lineTo(877454354,501384802);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,96,25,0.85)';
ctx.strokeStyle='rgb(142,137,75)';
ctx.moveTo(624174818,317399065);
ctx.lineTo(624174818,62307707);
ctx.lineTo(799675675,62307707);
ctx.lineTo(799675675,317399065);
ctx.lineTo(624174818,317399065);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,93,220,0.85)';
ctx.strokeStyle='rgb(139,247,178)';
ctx.moveTo(620544515,174384200);
ctx.lineTo(620544515,131162381);
ctx.lineTo(761967828,131162381);
ctx.lineTo(761967828,174384200);
ctx.lineTo(620544515,174384200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,35,214,0.85)';
ctx.strokeStyle='rgb(239,96,146)';
ctx.moveTo(360717464,113169751);
ctx.lineTo(360717464,93178230);
ctx.lineTo(398821008,93178230);
ctx.lineTo(398821008,113169751);
ctx.lineTo(360717464,113169751);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,157,84,0.85)';
ctx.strokeStyle='rgb(2,72,56)';
ctx.moveTo(181024814,973951921);
ctx.lineTo(181024814,13123882);
ctx.lineTo(367236360,13123882);
ctx.lineTo(367236360,973951921);
ctx.lineTo(181024814,973951921);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,180,124,0.85)';
ctx.strokeStyle='rgb(122,89,113)';
ctx.moveTo(739691981,542860102);
ctx.lineTo(739691981,14118466);
ctx.lineTo(911351931,14118466);
ctx.lineTo(911351931,542860102);
ctx.lineTo(739691981,542860102);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,252,189,0.85)';
ctx.strokeStyle='rgb(26,241,73)';
ctx.moveTo(960154070,644621991);
ctx.lineTo(960154070,542100988);
ctx.lineTo(981477175,542100988);
ctx.lineTo(981477175,644621991);
ctx.lineTo(960154070,644621991);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,133,225,0.85)';
ctx.strokeStyle='rgb(121,79,238)';
ctx.moveTo(293506746,787194962);
ctx.lineTo(293506746,102717391);
ctx.lineTo(739017428,102717391);
ctx.lineTo(739017428,787194962);
ctx.lineTo(293506746,787194962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,231,21,0.85)';
ctx.strokeStyle='rgb(221,127,154)';
ctx.moveTo(662794921,498931432);
ctx.lineTo(662794921,259835691);
ctx.lineTo(855277229,259835691);
ctx.lineTo(855277229,498931432);
ctx.lineTo(662794921,498931432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,221,146,0.85)';
ctx.strokeStyle='rgb(101,112,6)';
ctx.moveTo(806990908,355446982);
ctx.lineTo(806990908,355032669);
ctx.lineTo(901275530,355032669);
ctx.lineTo(901275530,355446982);
ctx.lineTo(806990908,355446982);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,184,180,0.85)';
ctx.strokeStyle='rgb(226,250,243)';
ctx.moveTo(614714417,619443111);
ctx.lineTo(614714417,106854500);
ctx.lineTo(706735436,106854500);
ctx.lineTo(706735436,619443111);
ctx.lineTo(614714417,619443111);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,178,23,0.85)';
ctx.strokeStyle='rgb(160,246,65)';
ctx.moveTo(968152406,622465002);
ctx.lineTo(968152406,615630104);
ctx.lineTo(994043508,615630104);
ctx.lineTo(994043508,622465002);
ctx.lineTo(968152406,622465002);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,144,44,0.85)';
ctx.strokeStyle='rgb(120,235,119)';
ctx.moveTo(19934695,661984769);
ctx.lineTo(19934695,588083483);
ctx.lineTo(972370478,588083483);
ctx.lineTo(972370478,661984769);
ctx.lineTo(19934695,661984769);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,75,244,0.85)';
ctx.strokeStyle='rgb(213,185,132)';
ctx.moveTo(839696149,469242245);
ctx.lineTo(839696149,272808263);
ctx.lineTo(939330874,272808263);
ctx.lineTo(939330874,469242245);
ctx.lineTo(839696149,469242245);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,206,45,0.85)';
ctx.strokeStyle='rgb(128,41,98)';
ctx.moveTo(130558847,358789741);
ctx.lineTo(130558847,97434333);
ctx.lineTo(510621565,97434333);
ctx.lineTo(510621565,358789741);
ctx.lineTo(130558847,358789741);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,98,62,0.85)';
ctx.strokeStyle='rgb(85,131,185)';
ctx.moveTo(102652471,376079680);
ctx.lineTo(102652471,272295272);
ctx.lineTo(987705773,272295272);
ctx.lineTo(987705773,376079680);
ctx.lineTo(102652471,376079680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,230,76,0.85)';
ctx.strokeStyle='rgb(27,17,139)';
ctx.moveTo(156144141,898952160);
ctx.lineTo(156144141,102946285);
ctx.lineTo(276513602,102946285);
ctx.lineTo(276513602,898952160);
ctx.lineTo(156144141,898952160);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,146,126,0.85)';
ctx.strokeStyle='rgb(110,249,54)';
ctx.moveTo(846932717,917394515);
ctx.lineTo(846932717,764041251);
ctx.lineTo(937352592,764041251);
ctx.lineTo(937352592,917394515);
ctx.lineTo(846932717,917394515);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,72,60,0.85)';
ctx.strokeStyle='rgb(233,59,133)';
ctx.moveTo(199242950,411387667);
ctx.lineTo(199242950,75701343);
ctx.lineTo(694326516,75701343);
ctx.lineTo(694326516,411387667);
ctx.lineTo(199242950,411387667);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,167,165,0.85)';
ctx.strokeStyle='rgb(10,166,25)';
ctx.moveTo(651208953,241863046);
ctx.lineTo(651208953,159976720);
ctx.lineTo(809730053,159976720);
ctx.lineTo(809730053,241863046);
ctx.lineTo(651208953,241863046);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,66,127,0.85)';
ctx.strokeStyle='rgb(18,175,97)';
ctx.moveTo(704873999,437212658);
ctx.lineTo(704873999,184120084);
ctx.lineTo(907803961,184120084);
ctx.lineTo(907803961,437212658);
ctx.lineTo(704873999,437212658);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,182,246,0.85)';
ctx.strokeStyle='rgb(131,204,52)';
ctx.moveTo(898931471,240889421);
ctx.lineTo(898931471,66928067);
ctx.lineTo(925045025,66928067);
ctx.lineTo(925045025,240889421);
ctx.lineTo(898931471,240889421);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,80,46,0.85)';
ctx.strokeStyle='rgb(46,16,83)';
ctx.moveTo(373199930,805340889);
ctx.lineTo(373199930,632781404);
ctx.lineTo(675766463,632781404);
ctx.lineTo(675766463,805340889);
ctx.lineTo(373199930,805340889);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,31,77,0.85)';
ctx.strokeStyle='rgb(143,191,7)';
ctx.moveTo(677735774,405570209);
ctx.lineTo(677735774,234177888);
ctx.lineTo(883827470,234177888);
ctx.lineTo(883827470,405570209);
ctx.lineTo(677735774,405570209);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,66,128,0.85)';
ctx.strokeStyle='rgb(63,147,60)';
ctx.moveTo(405981957,821507800);
ctx.lineTo(405981957,101664968);
ctx.lineTo(429230643,101664968);
ctx.lineTo(429230643,821507800);
ctx.lineTo(405981957,821507800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,225,160,0.85)';
ctx.strokeStyle='rgb(6,208,222)';
ctx.moveTo(329092469,770048627);
ctx.lineTo(329092469,640104056);
ctx.lineTo(382361448,640104056);
ctx.lineTo(382361448,770048627);
ctx.lineTo(329092469,770048627);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,67,20,0.85)';
ctx.strokeStyle='rgb(95,165,143)';
ctx.moveTo(653258754,229584869);
ctx.lineTo(653258754,14968770);
ctx.lineTo(993156412,14968770);
ctx.lineTo(993156412,229584869);
ctx.lineTo(653258754,229584869);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,38,25,0.85)';
ctx.strokeStyle='rgb(86,227,42)';
ctx.moveTo(357841908,539949767);
ctx.lineTo(357841908,444537241);
ctx.lineTo(509703227,444537241);
ctx.lineTo(509703227,539949767);
ctx.lineTo(357841908,539949767);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,222,165,0.85)';
ctx.strokeStyle='rgb(185,107,90)';
ctx.moveTo(163867760,352600910);
ctx.lineTo(163867760,62154932);
ctx.lineTo(817899466,62154932);
ctx.lineTo(817899466,352600910);
ctx.lineTo(163867760,352600910);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,160,163,0.85)';
ctx.strokeStyle='rgb(18,249,25)';
ctx.moveTo(289347701,686077987);
ctx.lineTo(289347701,13568712);
ctx.lineTo(955144739,13568712);
ctx.lineTo(955144739,686077987);
ctx.lineTo(289347701,686077987);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,111,235,0.85)';
ctx.strokeStyle='rgb(180,71,180)';
ctx.moveTo(542037750,954957359);
ctx.lineTo(542037750,726613354);
ctx.lineTo(860394588,726613354);
ctx.lineTo(860394588,954957359);
ctx.lineTo(542037750,954957359);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,1,172,0.85)';
ctx.strokeStyle='rgb(71,216,22)';
ctx.moveTo(644009673,458755329);
ctx.lineTo(644009673,366588450);
ctx.lineTo(958822118,366588450);
ctx.lineTo(958822118,458755329);
ctx.lineTo(644009673,458755329);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,151,221,0.85)';
ctx.strokeStyle='rgb(186,231,26)';
ctx.moveTo(497619033,444724370);
ctx.lineTo(497619033,67462983);
ctx.lineTo(780074653,67462983);
ctx.lineTo(780074653,444724370);
ctx.lineTo(497619033,444724370);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,174,215,0.85)';
ctx.strokeStyle='rgb(108,195,233)';
ctx.moveTo(242407822,304555346);
ctx.lineTo(242407822,197309756);
ctx.lineTo(962940561,197309756);
ctx.lineTo(962940561,304555346);
ctx.lineTo(242407822,304555346);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,213,7,0.85)';
ctx.strokeStyle='rgb(151,120,57)';
ctx.moveTo(228817371,177906969);
ctx.lineTo(228817371,79954734);
ctx.lineTo(761477737,79954734);
ctx.lineTo(761477737,177906969);
ctx.lineTo(228817371,177906969);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,92,117,0.85)';
ctx.strokeStyle='rgb(218,89,197)';
ctx.moveTo(435043105,195873366);
ctx.lineTo(435043105,171172624);
ctx.lineTo(698404818,171172624);
ctx.lineTo(698404818,195873366);
ctx.lineTo(435043105,195873366);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,41,67,0.85)';
ctx.strokeStyle='rgb(21,115,30)';
ctx.moveTo(540711983,171707985);
ctx.lineTo(540711983,96975286);
ctx.lineTo(739092021,96975286);
ctx.lineTo(739092021,171707985);
ctx.lineTo(540711983,171707985);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,110,225,0.85)';
ctx.strokeStyle='rgb(81,215,81)';
ctx.moveTo(249258719,302976481);
ctx.lineTo(249258719,166870445);
ctx.lineTo(404104342,166870445);
ctx.lineTo(404104342,302976481);
ctx.lineTo(249258719,302976481);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,26,138,0.85)';
ctx.strokeStyle='rgb(42,50,166)';
ctx.moveTo(489202673,504952966);
ctx.lineTo(489202673,440627083);
ctx.lineTo(994407143,440627083);
ctx.lineTo(994407143,504952966);
ctx.lineTo(489202673,504952966);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,243,88,0.85)';
ctx.strokeStyle='rgb(169,234,55)';
ctx.moveTo(45167531,43094387);
ctx.lineTo(45167531,12401362);
ctx.lineTo(936440511,12401362);
ctx.lineTo(936440511,43094387);
ctx.lineTo(45167531,43094387);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,44,118,0.85)';
ctx.strokeStyle='rgb(201,120,247)';
ctx.moveTo(72599932,663355301);
ctx.lineTo(72599932,222327576);
ctx.lineTo(99844608,222327576);
ctx.lineTo(99844608,663355301);
ctx.lineTo(72599932,663355301);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,228,117,0.85)';
ctx.strokeStyle='rgb(142,87,156)';
ctx.moveTo(527832455,113072393);
ctx.lineTo(527832455,9032294);
ctx.lineTo(566297967,9032294);
ctx.lineTo(566297967,113072393);
ctx.lineTo(527832455,113072393);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,157,9,0.85)';
ctx.strokeStyle='rgb(29,174,16)';
ctx.moveTo(202878775,452206744);
ctx.lineTo(202878775,73389649);
ctx.lineTo(796367197,73389649);
ctx.lineTo(796367197,452206744);
ctx.lineTo(202878775,452206744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,252,154,0.85)';
ctx.strokeStyle='rgb(143,143,183)';
ctx.moveTo(376929044,910368306);
ctx.lineTo(376929044,532313295);
ctx.lineTo(546167247,532313295);
ctx.lineTo(546167247,910368306);
ctx.lineTo(376929044,910368306);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,213,39,0.85)';
ctx.strokeStyle='rgb(192,209,75)';
ctx.moveTo(841158866,958695772);
ctx.lineTo(841158866,662853858);
ctx.lineTo(934525158,662853858);
ctx.lineTo(934525158,958695772);
ctx.lineTo(841158866,958695772);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,235,213,0.85)';
ctx.strokeStyle='rgb(206,158,241)';
ctx.moveTo(866870016,831649986);
ctx.lineTo(866870016,430632155);
ctx.lineTo(993574661,430632155);
ctx.lineTo(993574661,831649986);
ctx.lineTo(866870016,831649986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,227,182,0.85)';
ctx.strokeStyle='rgb(30,9,216)';
ctx.moveTo(409196240,72212910);
ctx.lineTo(409196240,6400029);
ctx.lineTo(896092811,6400029);
ctx.lineTo(896092811,72212910);
ctx.lineTo(409196240,72212910);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,188,254,0.85)';
ctx.strokeStyle='rgb(41,31,19)';
ctx.moveTo(682754157,292069384);
ctx.lineTo(682754157,144366554);
ctx.lineTo(755453099,144366554);
ctx.lineTo(755453099,292069384);
ctx.lineTo(682754157,292069384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,135,205,0.85)';
ctx.strokeStyle='rgb(233,127,100)';
ctx.moveTo(332439951,434069054);
ctx.lineTo(332439951,134540060);
ctx.lineTo(986036106,134540060);
ctx.lineTo(986036106,434069054);
ctx.lineTo(332439951,434069054);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,24,210,0.85)';
ctx.strokeStyle='rgb(111,78,127)';
ctx.moveTo(180970003,925408372);
ctx.lineTo(180970003,614502296);
ctx.lineTo(186277553,614502296);
ctx.lineTo(186277553,925408372);
ctx.lineTo(180970003,925408372);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,198,27,0.85)';
ctx.strokeStyle='rgb(29,214,244)';
ctx.moveTo(979410285,287235106);
ctx.lineTo(979410285,107852596);
ctx.lineTo(990632504,107852596);
ctx.lineTo(990632504,287235106);
ctx.lineTo(979410285,287235106);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,168,155,0.85)';
ctx.strokeStyle='rgb(107,237,147)';
ctx.moveTo(360214396,733096683);
ctx.lineTo(360214396,321778177);
ctx.lineTo(703584492,321778177);
ctx.lineTo(703584492,733096683);
ctx.lineTo(360214396,733096683);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,114,124,0.85)';
ctx.strokeStyle='rgb(69,130,56)';
ctx.moveTo(332210998,645827474);
ctx.lineTo(332210998,352805378);
ctx.lineTo(877344509,352805378);
ctx.lineTo(877344509,645827474);
ctx.lineTo(332210998,645827474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,53,205,0.85)';
ctx.strokeStyle='rgb(244,143,247)';
ctx.moveTo(692938172,29001695);
ctx.lineTo(692938172,17241549);
ctx.lineTo(942142722,17241549);
ctx.lineTo(942142722,29001695);
ctx.lineTo(692938172,29001695);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,51,211,0.85)';
ctx.strokeStyle='rgb(237,136,77)';
ctx.moveTo(946307277,53423046);
ctx.lineTo(946307277,5976429);
ctx.lineTo(953575523,5976429);
ctx.lineTo(953575523,53423046);
ctx.lineTo(946307277,53423046);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,198,178,0.85)';
ctx.strokeStyle='rgb(214,252,204)';
ctx.moveTo(767821247,458223296);
ctx.lineTo(767821247,106076789);
ctx.lineTo(818661710,106076789);
ctx.lineTo(818661710,458223296);
ctx.lineTo(767821247,458223296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,104,5,0.85)';
ctx.strokeStyle='rgb(215,254,190)';
ctx.moveTo(83163396,912809795);
ctx.lineTo(83163396,651353431);
ctx.lineTo(673164077,651353431);
ctx.lineTo(673164077,912809795);
ctx.lineTo(83163396,912809795);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,190,251,0.85)';
ctx.strokeStyle='rgb(213,218,8)';
ctx.moveTo(93866111,479330662);
ctx.lineTo(93866111,162559806);
ctx.lineTo(897353502,162559806);
ctx.lineTo(897353502,479330662);
ctx.lineTo(93866111,479330662);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,109,234,0.85)';
ctx.strokeStyle='rgb(182,248,183)';
ctx.moveTo(745701317,723016240);
ctx.lineTo(745701317,22893586);
ctx.lineTo(958694447,22893586);
ctx.lineTo(958694447,723016240);
ctx.lineTo(745701317,723016240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,87,136,0.85)';
ctx.strokeStyle='rgb(217,127,24)';
ctx.moveTo(338909584,900841551);
ctx.lineTo(338909584,123142962);
ctx.lineTo(364246161,123142962);
ctx.lineTo(364246161,900841551);
ctx.lineTo(338909584,900841551);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,33,221,0.85)';
ctx.strokeStyle='rgb(133,200,106)';
ctx.moveTo(209623665,437031005);
ctx.lineTo(209623665,276004979);
ctx.lineTo(688708975,276004979);
ctx.lineTo(688708975,437031005);
ctx.lineTo(209623665,437031005);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,218,247,0.85)';
ctx.strokeStyle='rgb(54,136,174)';
ctx.moveTo(185591965,823807540);
ctx.lineTo(185591965,404399442);
ctx.lineTo(211703157,404399442);
ctx.lineTo(211703157,823807540);
ctx.lineTo(185591965,823807540);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,143,12,0.85)';
ctx.strokeStyle='rgb(221,187,3)';
ctx.moveTo(411553023,637238871);
ctx.lineTo(411553023,163787094);
ctx.lineTo(935479184,163787094);
ctx.lineTo(935479184,637238871);
ctx.lineTo(411553023,637238871);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,41,106,0.85)';
ctx.strokeStyle='rgb(109,222,88)';
ctx.moveTo(922643854,365251408);
ctx.lineTo(922643854,356468799);
ctx.lineTo(963151321,356468799);
ctx.lineTo(963151321,365251408);
ctx.lineTo(922643854,365251408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,38,33,0.85)';
ctx.strokeStyle='rgb(205,235,101)';
ctx.moveTo(230732673,384634492);
ctx.lineTo(230732673,236041578);
ctx.lineTo(558388648,236041578);
ctx.lineTo(558388648,384634492);
ctx.lineTo(230732673,384634492);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,35,243,0.85)';
ctx.strokeStyle='rgb(36,100,203)';
ctx.moveTo(113624298,845235834);
ctx.lineTo(113624298,365868523);
ctx.lineTo(662167906,365868523);
ctx.lineTo(662167906,845235834);
ctx.lineTo(113624298,845235834);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,85,60,0.85)';
ctx.strokeStyle='rgb(248,75,229)';
ctx.moveTo(843891092,153124321);
ctx.lineTo(843891092,80211850);
ctx.lineTo(866545998,80211850);
ctx.lineTo(866545998,153124321);
ctx.lineTo(843891092,153124321);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,89,166,0.85)';
ctx.strokeStyle='rgb(69,94,40)';
ctx.moveTo(925612453,321394387);
ctx.lineTo(925612453,82658781);
ctx.lineTo(947567792,82658781);
ctx.lineTo(947567792,321394387);
ctx.lineTo(925612453,321394387);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,6,193,0.85)';
ctx.strokeStyle='rgb(116,225,81)';
ctx.moveTo(163255537,254937737);
ctx.lineTo(163255537,198197924);
ctx.lineTo(584895756,198197924);
ctx.lineTo(584895756,254937737);
ctx.lineTo(163255537,254937737);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,54,42,0.85)';
ctx.strokeStyle='rgb(247,17,189)';
ctx.moveTo(649917119,934943061);
ctx.lineTo(649917119,508690892);
ctx.lineTo(667044073,508690892);
ctx.lineTo(667044073,934943061);
ctx.lineTo(649917119,934943061);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,35,225,0.85)';
ctx.strokeStyle='rgb(191,61,67)';
ctx.moveTo(84177099,795336488);
ctx.lineTo(84177099,679574683);
ctx.lineTo(513063495,679574683);
ctx.lineTo(513063495,795336488);
ctx.lineTo(84177099,795336488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,38,105,0.85)';
ctx.strokeStyle='rgb(80,199,114)';
ctx.moveTo(818259868,792595812);
ctx.lineTo(818259868,522161241);
ctx.lineTo(992441961,522161241);
ctx.lineTo(992441961,792595812);
ctx.lineTo(818259868,792595812);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,67,242,0.85)';
ctx.strokeStyle='rgb(220,231,97)';
ctx.moveTo(543876337,336101793);
ctx.lineTo(543876337,220116230);
ctx.lineTo(601333630,220116230);
ctx.lineTo(601333630,336101793);
ctx.lineTo(543876337,336101793);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,133,66,0.85)';
ctx.strokeStyle='rgb(211,37,114)';
ctx.moveTo(219051501,49669164);
ctx.lineTo(219051501,10431444);
ctx.lineTo(785679757,10431444);
ctx.lineTo(785679757,49669164);
ctx.lineTo(219051501,49669164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,156,79,0.85)';
ctx.strokeStyle='rgb(27,12,130)';
ctx.moveTo(674706368,456755309);
ctx.lineTo(674706368,351091518);
ctx.lineTo(737889383,351091518);
ctx.lineTo(737889383,456755309);
ctx.lineTo(674706368,456755309);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,157,135,0.85)';
ctx.strokeStyle='rgb(2,81,119)';
ctx.moveTo(785122627,167671508);
ctx.lineTo(785122627,29142563);
ctx.lineTo(968062067,29142563);
ctx.lineTo(968062067,167671508);
ctx.lineTo(785122627,167671508);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,135,247,0.85)';
ctx.strokeStyle='rgb(134,100,98)';
ctx.moveTo(851914645,888647195);
ctx.lineTo(851914645,791960794);
ctx.lineTo(877502375,791960794);
ctx.lineTo(877502375,888647195);
ctx.lineTo(851914645,888647195);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,55,154,0.85)';
ctx.strokeStyle='rgb(120,71,95)';
ctx.moveTo(231006117,515183668);
ctx.lineTo(231006117,210571647);
ctx.lineTo(682475566,210571647);
ctx.lineTo(682475566,515183668);
ctx.lineTo(231006117,515183668);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,124,235,0.85)';
ctx.strokeStyle='rgb(30,245,26)';
ctx.moveTo(882141418,919771469);
ctx.lineTo(882141418,557998103);
ctx.lineTo(962228777,557998103);
ctx.lineTo(962228777,919771469);
ctx.lineTo(882141418,919771469);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,118,119,0.85)';
ctx.strokeStyle='rgb(21,154,111)';
ctx.moveTo(95556799,779235467);
ctx.lineTo(95556799,592024790);
ctx.lineTo(299538842,592024790);
ctx.lineTo(299538842,779235467);
ctx.lineTo(95556799,779235467);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,120,122,0.85)';
ctx.strokeStyle='rgb(8,192,179)';
ctx.moveTo(252185573,312181594);
ctx.lineTo(252185573,89333057);
ctx.lineTo(310250025,89333057);
ctx.lineTo(310250025,312181594);
ctx.lineTo(252185573,312181594);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,229,179,0.85)';
ctx.strokeStyle='rgb(164,113,199)';
ctx.moveTo(533972533,145889947);
ctx.lineTo(533972533,99095401);
ctx.lineTo(723304293,99095401);
ctx.lineTo(723304293,145889947);
ctx.lineTo(533972533,145889947);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,204,148,0.85)';
ctx.strokeStyle='rgb(56,177,198)';
ctx.moveTo(697921001,580412455);
ctx.lineTo(697921001,543666241);
ctx.lineTo(893447515,543666241);
ctx.lineTo(893447515,580412455);
ctx.lineTo(697921001,580412455);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,147,201,0.85)';
ctx.strokeStyle='rgb(177,218,48)';
ctx.moveTo(775410786,102541814);
ctx.lineTo(775410786,70967919);
ctx.lineTo(913295329,70967919);
ctx.lineTo(913295329,102541814);
ctx.lineTo(775410786,102541814);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,169,6,0.85)';
ctx.strokeStyle='rgb(36,152,223)';
ctx.moveTo(98973486,364781964);
ctx.lineTo(98973486,178025323);
ctx.lineTo(660617102,178025323);
ctx.lineTo(660617102,364781964);
ctx.lineTo(98973486,364781964);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,125,159,0.85)';
ctx.strokeStyle='rgb(217,50,200)';
ctx.moveTo(734029213,820519914);
ctx.lineTo(734029213,586941018);
ctx.lineTo(974684071,586941018);
ctx.lineTo(974684071,820519914);
ctx.lineTo(734029213,820519914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,26,139,0.85)';
ctx.strokeStyle='rgb(70,123,16)';
ctx.moveTo(932480508,616751054);
ctx.lineTo(932480508,609974172);
ctx.lineTo(948959268,609974172);
ctx.lineTo(948959268,616751054);
ctx.lineTo(932480508,616751054);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,157,141,0.85)';
ctx.strokeStyle='rgb(83,11,48)';
ctx.moveTo(353251024,11779297);
ctx.lineTo(353251024,2540146);
ctx.lineTo(852411794,2540146);
ctx.lineTo(852411794,11779297);
ctx.lineTo(353251024,11779297);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,200,196,0.85)';
ctx.strokeStyle='rgb(171,2,64)';
ctx.moveTo(972661852,463449352);
ctx.lineTo(972661852,239931835);
ctx.lineTo(979308904,239931835);
ctx.lineTo(979308904,463449352);
ctx.lineTo(972661852,463449352);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,92,33,0.85)';
ctx.strokeStyle='rgb(70,98,77)';
ctx.moveTo(692130798,764578396);
ctx.lineTo(692130798,213524507);
ctx.lineTo(986443562,213524507);
ctx.lineTo(986443562,764578396);
ctx.lineTo(692130798,764578396);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,189,59,0.85)';
ctx.strokeStyle='rgb(197,149,73)';
ctx.moveTo(88667026,302697436);
ctx.lineTo(88667026,265107856);
ctx.lineTo(668636949,265107856);
ctx.lineTo(668636949,302697436);
ctx.lineTo(88667026,302697436);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,134,87,0.85)';
ctx.strokeStyle='rgb(213,161,109)';
ctx.moveTo(608976873,452834537);
ctx.lineTo(608976873,256750329);
ctx.lineTo(880173420,256750329);
ctx.lineTo(880173420,452834537);
ctx.lineTo(608976873,452834537);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,54,1,0.85)';
ctx.strokeStyle='rgb(72,78,223)';
ctx.moveTo(462601216,725534053);
ctx.lineTo(462601216,648672001);
ctx.lineTo(698094761,648672001);
ctx.lineTo(698094761,725534053);
ctx.lineTo(462601216,725534053);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,162,195,0.85)';
ctx.strokeStyle='rgb(84,1,37)';
ctx.moveTo(18913156,647634330);
ctx.lineTo(18913156,401987974);
ctx.lineTo(671253848,401987974);
ctx.lineTo(671253848,647634330);
ctx.lineTo(18913156,647634330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,93,47,0.85)';
ctx.strokeStyle='rgb(154,72,41)';
ctx.moveTo(574360114,786261366);
ctx.lineTo(574360114,338357332);
ctx.lineTo(811269289,338357332);
ctx.lineTo(811269289,786261366);
ctx.lineTo(574360114,786261366);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,70,108,0.85)';
ctx.strokeStyle='rgb(251,91,148)';
ctx.moveTo(852458640,664593988);
ctx.lineTo(852458640,326042290);
ctx.lineTo(868370320,326042290);
ctx.lineTo(868370320,664593988);
ctx.lineTo(852458640,664593988);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,181,226,0.85)';
ctx.strokeStyle='rgb(171,179,134)';
ctx.moveTo(262086401,143626459);
ctx.lineTo(262086401,131266408);
ctx.lineTo(396009532,131266408);
ctx.lineTo(396009532,143626459);
ctx.lineTo(262086401,143626459);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,21,111,0.85)';
ctx.strokeStyle='rgb(18,208,134)';
ctx.moveTo(263050422,858791416);
ctx.lineTo(263050422,713765769);
ctx.lineTo(796027374,713765769);
ctx.lineTo(796027374,858791416);
ctx.lineTo(263050422,858791416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,90,145,0.85)';
ctx.strokeStyle='rgb(206,251,41)';
ctx.moveTo(255977638,855171900);
ctx.lineTo(255977638,92881121);
ctx.lineTo(483739732,92881121);
ctx.lineTo(483739732,855171900);
ctx.lineTo(255977638,855171900);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,21,130,0.85)';
ctx.strokeStyle='rgb(100,84,214)';
ctx.moveTo(981071419,101544307);
ctx.lineTo(981071419,93493441);
ctx.lineTo(988689410,93493441);
ctx.lineTo(988689410,101544307);
ctx.lineTo(981071419,101544307);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,132,21,0.85)';
ctx.strokeStyle='rgb(197,90,212)';
ctx.moveTo(924160528,525205493);
ctx.lineTo(924160528,39214393);
ctx.lineTo(938388225,39214393);
ctx.lineTo(938388225,525205493);
ctx.lineTo(924160528,525205493);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,117,78,0.85)';
ctx.strokeStyle='rgb(52,116,129)';
ctx.moveTo(608850650,2903016);
ctx.lineTo(608850650,1503410);
ctx.lineTo(643314201,1503410);
ctx.lineTo(643314201,2903016);
ctx.lineTo(608850650,2903016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,188,78,0.85)';
ctx.strokeStyle='rgb(38,232,61)';
ctx.moveTo(954712950,397666636);
ctx.lineTo(954712950,170088655);
ctx.lineTo(969682176,170088655);
ctx.lineTo(969682176,397666636);
ctx.lineTo(954712950,397666636);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,204,38,0.85)';
ctx.strokeStyle='rgb(20,15,9)';
ctx.moveTo(799941256,517567605);
ctx.lineTo(799941256,202990340);
ctx.lineTo(964997170,202990340);
ctx.lineTo(964997170,517567605);
ctx.lineTo(799941256,517567605);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,44,118,0.85)';
ctx.strokeStyle='rgb(177,79,201)';
ctx.moveTo(612926920,637052169);
ctx.lineTo(612926920,115024986);
ctx.lineTo(625165874,115024986);
ctx.lineTo(625165874,637052169);
ctx.lineTo(612926920,637052169);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,184,46,0.85)';
ctx.strokeStyle='rgb(26,88,48)';
ctx.moveTo(964916688,734832356);
ctx.lineTo(964916688,209129064);
ctx.lineTo(986965544,209129064);
ctx.lineTo(986965544,734832356);
ctx.lineTo(964916688,734832356);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,26,100,0.85)';
ctx.strokeStyle='rgb(100,191,197)';
ctx.moveTo(319358137,275572665);
ctx.lineTo(319358137,86162334);
ctx.lineTo(763094563,86162334);
ctx.lineTo(763094563,275572665);
ctx.lineTo(319358137,275572665);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,52,160,0.85)';
ctx.strokeStyle='rgb(136,57,238)';
ctx.moveTo(62068145,332764091);
ctx.lineTo(62068145,294912273);
ctx.lineTo(641269193,294912273);
ctx.lineTo(641269193,332764091);
ctx.lineTo(62068145,332764091);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,114,118,0.85)';
ctx.strokeStyle='rgb(246,112,124)';
ctx.moveTo(922621807,830545510);
ctx.lineTo(922621807,497121540);
ctx.lineTo(938765514,497121540);
ctx.lineTo(938765514,830545510);
ctx.lineTo(922621807,830545510);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,111,98,0.85)';
ctx.strokeStyle='rgb(230,14,29)';
ctx.moveTo(929912063,269362191);
ctx.lineTo(929912063,158005540);
ctx.lineTo(981505180,158005540);
ctx.lineTo(981505180,269362191);
ctx.lineTo(929912063,269362191);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,186,215,0.85)';
ctx.strokeStyle='rgb(231,169,59)';
ctx.moveTo(54218891,392281404);
ctx.lineTo(54218891,385138561);
ctx.lineTo(763190356,385138561);
ctx.lineTo(763190356,392281404);
ctx.lineTo(54218891,392281404);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,45,91,0.85)';
ctx.strokeStyle='rgb(105,2,18)';
ctx.moveTo(953744722,789655539);
ctx.lineTo(953744722,418477561);
ctx.lineTo(980451668,418477561);
ctx.lineTo(980451668,789655539);
ctx.lineTo(953744722,789655539);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,162,170,0.85)';
ctx.strokeStyle='rgb(182,192,49)';
ctx.moveTo(196198428,424640283);
ctx.lineTo(196198428,281332685);
ctx.lineTo(870109055,281332685);
ctx.lineTo(870109055,424640283);
ctx.lineTo(196198428,424640283);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,8,85,0.85)';
ctx.strokeStyle='rgb(64,217,4)';
ctx.moveTo(201815290,319278088);
ctx.lineTo(201815290,271398735);
ctx.lineTo(872364106,271398735);
ctx.lineTo(872364106,319278088);
ctx.lineTo(201815290,319278088);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,206,86,0.85)';
ctx.strokeStyle='rgb(66,215,163)';
ctx.moveTo(291091820,786899158);
ctx.lineTo(291091820,26012315);
ctx.lineTo(878788161,26012315);
ctx.lineTo(878788161,786899158);
ctx.lineTo(291091820,786899158);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,111,64,0.85)';
ctx.strokeStyle='rgb(201,77,39)';
ctx.moveTo(378183787,166328618);
ctx.lineTo(378183787,70321547);
ctx.lineTo(408876854,70321547);
ctx.lineTo(408876854,166328618);
ctx.lineTo(378183787,166328618);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,217,163,0.85)';
ctx.strokeStyle='rgb(240,47,64)';
ctx.moveTo(518703245,570825126);
ctx.lineTo(518703245,558653851);
ctx.lineTo(586690406,558653851);
ctx.lineTo(586690406,570825126);
ctx.lineTo(518703245,570825126);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,62,23,0.85)';
ctx.strokeStyle='rgb(202,29,226)';
ctx.moveTo(320965840,240853214);
ctx.lineTo(320965840,145653969);
ctx.lineTo(322780016,145653969);
ctx.lineTo(322780016,240853214);
ctx.lineTo(320965840,240853214);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,11,143,0.85)';
ctx.strokeStyle='rgb(4,9,3)';
ctx.moveTo(467746063,992861175);
ctx.lineTo(467746063,110025235);
ctx.lineTo(910570829,110025235);
ctx.lineTo(910570829,992861175);
ctx.lineTo(467746063,992861175);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,152,11,0.85)';
ctx.strokeStyle='rgb(113,52,38)';
ctx.moveTo(429477343,126480230);
ctx.lineTo(429477343,89133903);
ctx.lineTo(546315030,89133903);
ctx.lineTo(546315030,126480230);
ctx.lineTo(429477343,126480230);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,223,90,0.85)';
ctx.strokeStyle='rgb(254,9,250)';
ctx.moveTo(612035734,252263115);
ctx.lineTo(612035734,119048595);
ctx.lineTo(806820578,119048595);
ctx.lineTo(806820578,252263115);
ctx.lineTo(612035734,252263115);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,110,163,0.85)';
ctx.strokeStyle='rgb(203,92,226)';
ctx.moveTo(803349749,771666530);
ctx.lineTo(803349749,499880954);
ctx.lineTo(808841660,499880954);
ctx.lineTo(808841660,771666530);
ctx.lineTo(803349749,771666530);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,38,23,0.85)';
ctx.strokeStyle='rgb(223,179,63)';
ctx.moveTo(417433279,717148268);
ctx.lineTo(417433279,64636292);
ctx.lineTo(684915382,64636292);
ctx.lineTo(684915382,717148268);
ctx.lineTo(417433279,717148268);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,166,135,0.85)';
ctx.strokeStyle='rgb(254,52,162)';
ctx.moveTo(170849121,820647359);
ctx.lineTo(170849121,335522228);
ctx.lineTo(293823368,335522228);
ctx.lineTo(293823368,820647359);
ctx.lineTo(170849121,820647359);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,75,51,0.85)';
ctx.strokeStyle='rgb(219,77,21)';
ctx.moveTo(809474730,388434047);
ctx.lineTo(809474730,318757038);
ctx.lineTo(993681739,318757038);
ctx.lineTo(993681739,388434047);
ctx.lineTo(809474730,388434047);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,84,235,0.85)';
ctx.strokeStyle='rgb(201,235,202)';
ctx.moveTo(89924154,4655633);
ctx.lineTo(89924154,1457683);
ctx.lineTo(259518871,1457683);
ctx.lineTo(259518871,4655633);
ctx.lineTo(89924154,4655633);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,8,156,0.85)';
ctx.strokeStyle='rgb(111,126,158)';
ctx.moveTo(237840648,584782884);
ctx.lineTo(237840648,376613172);
ctx.lineTo(771340575,376613172);
ctx.lineTo(771340575,584782884);
ctx.lineTo(237840648,584782884);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,253,115,0.85)';
ctx.strokeStyle='rgb(92,160,51)';
ctx.moveTo(777135110,980530690);
ctx.lineTo(777135110,738058794);
ctx.lineTo(881369197,738058794);
ctx.lineTo(881369197,980530690);
ctx.lineTo(777135110,980530690);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,174,181,0.85)';
ctx.strokeStyle='rgb(66,250,18)';
ctx.moveTo(817245023,342375083);
ctx.lineTo(817245023,213652951);
ctx.lineTo(920053937,213652951);
ctx.lineTo(920053937,342375083);
ctx.lineTo(817245023,342375083);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,37,40,0.85)';
ctx.strokeStyle='rgb(74,107,161)';
ctx.moveTo(208097351,157844331);
ctx.lineTo(208097351,796069);
ctx.lineTo(380506560,796069);
ctx.lineTo(380506560,157844331);
ctx.lineTo(208097351,157844331);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,215,243,0.85)';
ctx.strokeStyle='rgb(196,89,44)';
ctx.moveTo(72057348,142259241);
ctx.lineTo(72057348,25051053);
ctx.lineTo(536663586,25051053);
ctx.lineTo(536663586,142259241);
ctx.lineTo(72057348,142259241);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,167,55,0.85)';
ctx.strokeStyle='rgb(183,24,198)';
ctx.moveTo(358033323,872465840);
ctx.lineTo(358033323,459307409);
ctx.lineTo(517522612,459307409);
ctx.lineTo(517522612,872465840);
ctx.lineTo(358033323,872465840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,48,47,0.85)';
ctx.strokeStyle='rgb(138,43,45)';
ctx.moveTo(437908217,494984906);
ctx.lineTo(437908217,425013672);
ctx.lineTo(598648348,425013672);
ctx.lineTo(598648348,494984906);
ctx.lineTo(437908217,494984906);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,228,121,0.85)';
ctx.strokeStyle='rgb(246,19,188)';
ctx.moveTo(489542689,424908009);
ctx.lineTo(489542689,85925728);
ctx.lineTo(902333235,85925728);
ctx.lineTo(902333235,424908009);
ctx.lineTo(489542689,424908009);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,69,247,0.85)';
ctx.strokeStyle='rgb(248,41,238)';
ctx.moveTo(124820084,575556313);
ctx.lineTo(124820084,294250815);
ctx.lineTo(165286108,294250815);
ctx.lineTo(165286108,575556313);
ctx.lineTo(124820084,575556313);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,30,130,0.85)';
ctx.strokeStyle='rgb(20,13,85)';
ctx.moveTo(968239060,311304037);
ctx.lineTo(968239060,144590473);
ctx.lineTo(980837763,144590473);
ctx.lineTo(980837763,311304037);
ctx.lineTo(968239060,311304037);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,216,136,0.85)';
ctx.strokeStyle='rgb(133,13,135)';
ctx.moveTo(288291276,447781709);
ctx.lineTo(288291276,72932782);
ctx.lineTo(459470175,72932782);
ctx.lineTo(459470175,447781709);
ctx.lineTo(288291276,447781709);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,207,19,0.85)';
ctx.strokeStyle='rgb(117,122,155)';
ctx.moveTo(136232250,398739241);
ctx.lineTo(136232250,314687999);
ctx.lineTo(661919637,314687999);
ctx.lineTo(661919637,398739241);
ctx.lineTo(136232250,398739241);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,184,205,0.85)';
ctx.strokeStyle='rgb(150,240,82)';
ctx.moveTo(721786885,162110299);
ctx.lineTo(721786885,75526107);
ctx.lineTo(791463060,75526107);
ctx.lineTo(791463060,162110299);
ctx.lineTo(721786885,162110299);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,150,43,0.85)';
ctx.strokeStyle='rgb(30,234,234)';
ctx.moveTo(38138577,694061959);
ctx.lineTo(38138577,459785666);
ctx.lineTo(894917435,459785666);
ctx.lineTo(894917435,694061959);
ctx.lineTo(38138577,694061959);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,149,45,0.85)';
ctx.strokeStyle='rgb(225,177,126)';
ctx.moveTo(443542614,502564634);
ctx.lineTo(443542614,62315016);
ctx.lineTo(531870407,62315016);
ctx.lineTo(531870407,502564634);
ctx.lineTo(443542614,502564634);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,49,67,0.85)';
ctx.strokeStyle='rgb(178,34,103)';
ctx.moveTo(991853418,293629526);
ctx.lineTo(991853418,225657242);
ctx.lineTo(994699303,225657242);
ctx.lineTo(994699303,293629526);
ctx.lineTo(991853418,293629526);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,19,231,0.85)';
ctx.strokeStyle='rgb(155,181,69)';
ctx.moveTo(750317901,570283291);
ctx.lineTo(750317901,545426154);
ctx.lineTo(959280635,545426154);
ctx.lineTo(959280635,570283291);
ctx.lineTo(750317901,570283291);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,5,213,0.85)';
ctx.strokeStyle='rgb(168,64,160)';
ctx.moveTo(496373102,427957119);
ctx.lineTo(496373102,63414846);
ctx.lineTo(855928685,63414846);
ctx.lineTo(855928685,427957119);
ctx.lineTo(496373102,427957119);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,226,199,0.85)';
ctx.strokeStyle='rgb(59,83,84)';
ctx.moveTo(157950598,935752893);
ctx.lineTo(157950598,114015127);
ctx.lineTo(824271554,114015127);
ctx.lineTo(824271554,935752893);
ctx.lineTo(157950598,935752893);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,23,99,0.85)';
ctx.strokeStyle='rgb(66,106,50)';
ctx.moveTo(940242616,585467808);
ctx.lineTo(940242616,400490555);
ctx.lineTo(941820397,400490555);
ctx.lineTo(941820397,585467808);
ctx.lineTo(940242616,585467808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,170,219,0.85)';
ctx.strokeStyle='rgb(244,43,12)';
ctx.moveTo(579342778,186522548);
ctx.lineTo(579342778,109594571);
ctx.lineTo(769174300,109594571);
ctx.lineTo(769174300,186522548);
ctx.lineTo(579342778,186522548);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,140,230,0.85)';
ctx.strokeStyle='rgb(252,220,65)';
ctx.moveTo(65697907,187311152);
ctx.lineTo(65697907,186370013);
ctx.lineTo(90541095,186370013);
ctx.lineTo(90541095,187311152);
ctx.lineTo(65697907,187311152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,140,61,0.85)';
ctx.strokeStyle='rgb(14,29,110)';
ctx.moveTo(769515958,224082065);
ctx.lineTo(769515958,110690609);
ctx.lineTo(786188179,110690609);
ctx.lineTo(786188179,224082065);
ctx.lineTo(769515958,224082065);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,242,90,0.85)';
ctx.strokeStyle='rgb(117,137,191)';
ctx.moveTo(919629464,106194488);
ctx.lineTo(919629464,92583163);
ctx.lineTo(926562558,92583163);
ctx.lineTo(926562558,106194488);
ctx.lineTo(919629464,106194488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,234,122,0.85)';
ctx.strokeStyle='rgb(99,126,113)';
ctx.moveTo(431758761,541983658);
ctx.lineTo(431758761,28607119);
ctx.lineTo(635302753,28607119);
ctx.lineTo(635302753,541983658);
ctx.lineTo(431758761,541983658);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,187,52,0.85)';
ctx.strokeStyle='rgb(111,73,30)';
ctx.moveTo(907474666,192768444);
ctx.lineTo(907474666,163609427);
ctx.lineTo(908565945,163609427);
ctx.lineTo(908565945,192768444);
ctx.lineTo(907474666,192768444);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,53,125,0.85)';
ctx.strokeStyle='rgb(167,191,235)';
ctx.moveTo(586228509,588333573);
ctx.lineTo(586228509,416779172);
ctx.lineTo(846785543,416779172);
ctx.lineTo(846785543,588333573);
ctx.lineTo(586228509,588333573);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,47,47,0.85)';
ctx.strokeStyle='rgb(39,96,127)';
ctx.moveTo(111040423,89671135);
ctx.lineTo(111040423,52650553);
ctx.lineTo(905732331,52650553);
ctx.lineTo(905732331,89671135);
ctx.lineTo(111040423,89671135);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,83,41,0.85)';
ctx.strokeStyle='rgb(53,40,216)';
ctx.moveTo(7519593,7712583);
ctx.lineTo(7519593,1445309);
ctx.lineTo(17852998,1445309);
ctx.lineTo(17852998,7712583);
ctx.lineTo(7519593,7712583);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,25,75,0.85)';
ctx.strokeStyle='rgb(165,71,44)';
ctx.moveTo(205996085,759106816);
ctx.lineTo(205996085,556330064);
ctx.lineTo(663247089,556330064);
ctx.lineTo(663247089,759106816);
ctx.lineTo(205996085,759106816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,131,219,0.85)';
ctx.strokeStyle='rgb(131,9,46)';
ctx.moveTo(252943739,538651363);
ctx.lineTo(252943739,38608029);
ctx.lineTo(332239541,38608029);
ctx.lineTo(332239541,538651363);
ctx.lineTo(252943739,538651363);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,28,89,0.85)';
ctx.strokeStyle='rgb(153,237,220)';
ctx.moveTo(30322126,375181369);
ctx.lineTo(30322126,357842058);
ctx.lineTo(396376295,357842058);
ctx.lineTo(396376295,375181369);
ctx.lineTo(30322126,375181369);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,29,88,0.85)';
ctx.strokeStyle='rgb(100,137,132)';
ctx.moveTo(789305405,491648226);
ctx.lineTo(789305405,389298670);
ctx.lineTo(904928861,389298670);
ctx.lineTo(904928861,491648226);
ctx.lineTo(789305405,491648226);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,76,79,0.85)';
ctx.strokeStyle='rgb(9,127,151)';
ctx.moveTo(699189652,814517591);
ctx.lineTo(699189652,532507967);
ctx.lineTo(958682871,532507967);
ctx.lineTo(958682871,814517591);
ctx.lineTo(699189652,814517591);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,136,212,0.85)';
ctx.strokeStyle='rgb(173,2,89)';
ctx.moveTo(771660198,360542610);
ctx.lineTo(771660198,42358741);
ctx.lineTo(917034099,42358741);
ctx.lineTo(917034099,360542610);
ctx.lineTo(771660198,360542610);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,219,225,0.85)';
ctx.strokeStyle='rgb(240,155,196)';
ctx.moveTo(225831976,775496122);
ctx.lineTo(225831976,99337750);
ctx.lineTo(893066536,99337750);
ctx.lineTo(893066536,775496122);
ctx.lineTo(225831976,775496122);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,81,134,0.85)';
ctx.strokeStyle='rgb(227,203,53)';
ctx.moveTo(567712294,60307588);
ctx.lineTo(567712294,16538715);
ctx.lineTo(613729887,16538715);
ctx.lineTo(613729887,60307588);
ctx.lineTo(567712294,60307588);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,29,22,0.85)';
ctx.strokeStyle='rgb(251,152,51)';
ctx.moveTo(938801318,812977938);
ctx.lineTo(938801318,245216845);
ctx.lineTo(945096317,245216845);
ctx.lineTo(945096317,812977938);
ctx.lineTo(938801318,812977938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,234,219,0.85)';
ctx.strokeStyle='rgb(122,203,148)';
ctx.moveTo(768947158,951901908);
ctx.lineTo(768947158,182372299);
ctx.lineTo(982494541,182372299);
ctx.lineTo(982494541,951901908);
ctx.lineTo(768947158,951901908);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,77,244,0.85)';
ctx.strokeStyle='rgb(105,194,133)';
ctx.moveTo(788255571,6577337);
ctx.lineTo(788255571,2565022);
ctx.lineTo(878815855,2565022);
ctx.lineTo(878815855,6577337);
ctx.lineTo(788255571,6577337);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,117,143,0.85)';
ctx.strokeStyle='rgb(232,57,192)';
ctx.moveTo(731800771,94259211);
ctx.lineTo(731800771,27687480);
ctx.lineTo(924241661,27687480);
ctx.lineTo(924241661,94259211);
ctx.lineTo(731800771,94259211);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,10,159,0.85)';
ctx.strokeStyle='rgb(63,13,46)';
ctx.moveTo(739588327,891715891);
ctx.lineTo(739588327,198942114);
ctx.lineTo(853265421,198942114);
ctx.lineTo(853265421,891715891);
ctx.lineTo(739588327,891715891);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,111,246,0.85)';
ctx.strokeStyle='rgb(236,219,210)';
ctx.moveTo(709673945,132904193);
ctx.lineTo(709673945,103116261);
ctx.lineTo(842165658,103116261);
ctx.lineTo(842165658,132904193);
ctx.lineTo(709673945,132904193);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,73,234,0.85)';
ctx.strokeStyle='rgb(64,32,93)';
ctx.moveTo(359275639,978480882);
ctx.lineTo(359275639,729062879);
ctx.lineTo(649848148,729062879);
ctx.lineTo(649848148,978480882);
ctx.lineTo(359275639,978480882);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,57,95,0.85)';
ctx.strokeStyle='rgb(149,202,38)';
ctx.moveTo(308385990,407576312);
ctx.lineTo(308385990,90187648);
ctx.lineTo(377643821,90187648);
ctx.lineTo(377643821,407576312);
ctx.lineTo(308385990,407576312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,12,141,0.85)';
ctx.strokeStyle='rgb(70,235,154)';
ctx.moveTo(200344363,563184291);
ctx.lineTo(200344363,9953758);
ctx.lineTo(292779446,9953758);
ctx.lineTo(292779446,563184291);
ctx.lineTo(200344363,563184291);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,80,192,0.85)';
ctx.strokeStyle='rgb(162,144,76)';
ctx.moveTo(564719008,945483433);
ctx.lineTo(564719008,904525717);
ctx.lineTo(582937756,904525717);
ctx.lineTo(582937756,945483433);
ctx.lineTo(564719008,945483433);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,55,31,0.85)';
ctx.strokeStyle='rgb(237,216,50)';
ctx.moveTo(482415286,313106939);
ctx.lineTo(482415286,136584419);
ctx.lineTo(581149306,136584419);
ctx.lineTo(581149306,313106939);
ctx.lineTo(482415286,313106939);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,180,186,0.85)';
ctx.strokeStyle='rgb(151,134,167)';
ctx.moveTo(311136932,829667458);
ctx.lineTo(311136932,710175098);
ctx.lineTo(403080492,710175098);
ctx.lineTo(403080492,829667458);
ctx.lineTo(311136932,829667458);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,75,146,0.85)';
ctx.strokeStyle='rgb(71,132,115)';
ctx.moveTo(656263398,873447028);
ctx.lineTo(656263398,334262598);
ctx.lineTo(664671630,334262598);
ctx.lineTo(664671630,873447028);
ctx.lineTo(656263398,873447028);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,147,86,0.85)';
ctx.strokeStyle='rgb(47,83,31)';
ctx.moveTo(698418446,227491087);
ctx.lineTo(698418446,179178269);
ctx.lineTo(822511314,179178269);
ctx.lineTo(822511314,227491087);
ctx.lineTo(698418446,227491087);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,183,51,0.85)';
ctx.strokeStyle='rgb(65,156,181)';
ctx.moveTo(448234893,277556644);
ctx.lineTo(448234893,94240466);
ctx.lineTo(649509893,94240466);
ctx.lineTo(649509893,277556644);
ctx.lineTo(448234893,277556644);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,91,22,0.85)';
ctx.strokeStyle='rgb(123,83,68)';
ctx.moveTo(183103975,797910357);
ctx.lineTo(183103975,307177237);
ctx.lineTo(486222668,307177237);
ctx.lineTo(486222668,797910357);
ctx.lineTo(183103975,797910357);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,175,71,0.85)';
ctx.strokeStyle='rgb(166,138,115)';
ctx.moveTo(449603426,477495034);
ctx.lineTo(449603426,374882716);
ctx.lineTo(766320329,374882716);
ctx.lineTo(766320329,477495034);
ctx.lineTo(449603426,477495034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,225,118,0.85)';
ctx.strokeStyle='rgb(158,107,11)';
ctx.moveTo(957238693,996952814);
ctx.lineTo(957238693,126883027);
ctx.lineTo(994186014,126883027);
ctx.lineTo(994186014,996952814);
ctx.lineTo(957238693,996952814);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,99,127,0.85)';
ctx.strokeStyle='rgb(80,55,92)';
ctx.moveTo(319314434,712427613);
ctx.lineTo(319314434,277904201);
ctx.lineTo(805125828,277904201);
ctx.lineTo(805125828,712427613);
ctx.lineTo(319314434,712427613);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,124,212,0.85)';
ctx.strokeStyle='rgb(45,20,86)';
ctx.moveTo(139297748,997664564);
ctx.lineTo(139297748,951916191);
ctx.lineTo(631726865,951916191);
ctx.lineTo(631726865,997664564);
ctx.lineTo(139297748,997664564);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,76,138,0.85)';
ctx.strokeStyle='rgb(126,206,9)';
ctx.moveTo(321893481,398792322);
ctx.lineTo(321893481,93763743);
ctx.lineTo(362688019,93763743);
ctx.lineTo(362688019,398792322);
ctx.lineTo(321893481,398792322);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,243,85,0.85)';
ctx.strokeStyle='rgb(77,132,246)';
ctx.moveTo(172048411,437789704);
ctx.lineTo(172048411,41826338);
ctx.lineTo(265757308,41826338);
ctx.lineTo(265757308,437789704);
ctx.lineTo(172048411,437789704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,183,128,0.85)';
ctx.strokeStyle='rgb(84,213,80)';
ctx.moveTo(41382667,634520302);
ctx.lineTo(41382667,96426835);
ctx.lineTo(745062160,96426835);
ctx.lineTo(745062160,634520302);
ctx.lineTo(41382667,634520302);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,104,5,0.85)';
ctx.strokeStyle='rgb(173,151,11)';
ctx.moveTo(399554655,868636622);
ctx.lineTo(399554655,540303036);
ctx.lineTo(850883157,540303036);
ctx.lineTo(850883157,868636622);
ctx.lineTo(399554655,868636622);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,208,252,0.85)';
ctx.strokeStyle='rgb(4,14,171)';
ctx.moveTo(909793318,236772098);
ctx.lineTo(909793318,209399777);
ctx.lineTo(961066635,209399777);
ctx.lineTo(961066635,236772098);
ctx.lineTo(909793318,236772098);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,105,248,0.85)';
ctx.strokeStyle='rgb(67,45,6)';
ctx.moveTo(387329221,490223279);
ctx.lineTo(387329221,225784873);
ctx.lineTo(721180795,225784873);
ctx.lineTo(721180795,490223279);
ctx.lineTo(387329221,490223279);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,14,195,0.85)';
ctx.strokeStyle='rgb(44,58,101)';
ctx.moveTo(68905866,50459336);
ctx.lineTo(68905866,25092508);
ctx.lineTo(330306562,25092508);
ctx.lineTo(330306562,50459336);
ctx.lineTo(68905866,50459336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,245,14,0.85)';
ctx.strokeStyle='rgb(33,87,80)';
ctx.moveTo(670065953,77087292);
ctx.lineTo(670065953,58456538);
ctx.lineTo(814236597,58456538);
ctx.lineTo(814236597,77087292);
ctx.lineTo(670065953,77087292);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,13,66,0.85)';
ctx.strokeStyle='rgb(202,180,96)';
ctx.moveTo(63491573,595156272);
ctx.lineTo(63491573,258727014);
ctx.lineTo(219786730,258727014);
ctx.lineTo(219786730,595156272);
ctx.lineTo(63491573,595156272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,12,26,0.85)';
ctx.strokeStyle='rgb(108,26,166)';
ctx.moveTo(823950728,286627917);
ctx.lineTo(823950728,46472207);
ctx.lineTo(874590293,46472207);
ctx.lineTo(874590293,286627917);
ctx.lineTo(823950728,286627917);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,0,108,0.85)';
ctx.strokeStyle='rgb(210,216,137)';
ctx.moveTo(616649126,495040826);
ctx.lineTo(616649126,377325285);
ctx.lineTo(974250339,377325285);
ctx.lineTo(974250339,495040826);
ctx.lineTo(616649126,495040826);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,31,32,0.85)';
ctx.strokeStyle='rgb(9,196,211)';
ctx.moveTo(839892653,766006264);
ctx.lineTo(839892653,256607843);
ctx.lineTo(951028691,256607843);
ctx.lineTo(951028691,766006264);
ctx.lineTo(839892653,766006264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,225,215,0.85)';
ctx.strokeStyle='rgb(57,163,225)';
ctx.moveTo(239493816,405011735);
ctx.lineTo(239493816,201463579);
ctx.lineTo(508022786,201463579);
ctx.lineTo(508022786,405011735);
ctx.lineTo(239493816,405011735);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,247,112,0.85)';
ctx.strokeStyle='rgb(241,133,155)';
ctx.moveTo(348352344,318052773);
ctx.lineTo(348352344,8854328);
ctx.lineTo(521262906,8854328);
ctx.lineTo(521262906,318052773);
ctx.lineTo(348352344,318052773);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,149,247,0.85)';
ctx.strokeStyle='rgb(161,67,111)';
ctx.moveTo(903484610,590663153);
ctx.lineTo(903484610,291954561);
ctx.lineTo(949482211,291954561);
ctx.lineTo(949482211,590663153);
ctx.lineTo(903484610,590663153);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,206,178,0.85)';
ctx.strokeStyle='rgb(163,181,146)';
ctx.moveTo(357697875,718720650);
ctx.lineTo(357697875,550575218);
ctx.lineTo(843038411,550575218);
ctx.lineTo(843038411,718720650);
ctx.lineTo(357697875,718720650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,56,151,0.85)';
ctx.strokeStyle='rgb(208,87,233)';
ctx.moveTo(121218597,932656271);
ctx.lineTo(121218597,679086466);
ctx.lineTo(810057011,679086466);
ctx.lineTo(810057011,932656271);
ctx.lineTo(121218597,932656271);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,78,6,0.85)';
ctx.strokeStyle='rgb(236,2,1)';
ctx.moveTo(235369646,929522501);
ctx.lineTo(235369646,10235159);
ctx.lineTo(356895375,10235159);
ctx.lineTo(356895375,929522501);
ctx.lineTo(235369646,929522501);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,126,105,0.85)';
ctx.strokeStyle='rgb(166,82,84)';
ctx.moveTo(273926190,791584638);
ctx.lineTo(273926190,618976424);
ctx.lineTo(438377025,618976424);
ctx.lineTo(438377025,791584638);
ctx.lineTo(273926190,791584638);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,47,21,0.85)';
ctx.strokeStyle='rgb(170,223,58)';
ctx.moveTo(462001583,233771977);
ctx.lineTo(462001583,180309395);
ctx.lineTo(860902373,180309395);
ctx.lineTo(860902373,233771977);
ctx.lineTo(462001583,233771977);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,55,32,0.85)';
ctx.strokeStyle='rgb(192,245,176)';
ctx.moveTo(430304522,724680248);
ctx.lineTo(430304522,343220502);
ctx.lineTo(464418119,343220502);
ctx.lineTo(464418119,724680248);
ctx.lineTo(430304522,724680248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,124,127,0.85)';
ctx.strokeStyle='rgb(237,81,203)';
ctx.moveTo(781696879,641281097);
ctx.lineTo(781696879,394174967);
ctx.lineTo(843804014,394174967);
ctx.lineTo(843804014,641281097);
ctx.lineTo(781696879,641281097);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,181,181,0.85)';
ctx.strokeStyle='rgb(236,116,135)';
ctx.moveTo(534283355,489323502);
ctx.lineTo(534283355,266508711);
ctx.lineTo(878791496,266508711);
ctx.lineTo(878791496,489323502);
ctx.lineTo(534283355,489323502);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,152,162,0.85)';
ctx.strokeStyle='rgb(45,221,20)';
ctx.moveTo(248424481,894027788);
ctx.lineTo(248424481,356241791);
ctx.lineTo(509613765,356241791);
ctx.lineTo(509613765,894027788);
ctx.lineTo(248424481,894027788);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,180,136,0.85)';
ctx.strokeStyle='rgb(46,36,70)';
ctx.moveTo(870502565,10479405);
ctx.lineTo(870502565,4556990);
ctx.lineTo(885206788,4556990);
ctx.lineTo(885206788,10479405);
ctx.lineTo(870502565,10479405);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,122,211,0.85)';
ctx.strokeStyle='rgb(40,160,113)';
ctx.moveTo(302252767,39980371);
ctx.lineTo(302252767,15619656);
ctx.lineTo(762739186,15619656);
ctx.lineTo(762739186,39980371);
ctx.lineTo(302252767,39980371);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,176,103,0.85)';
ctx.strokeStyle='rgb(62,28,148)';
ctx.moveTo(126344191,3292077);
ctx.lineTo(126344191,1279263);
ctx.lineTo(494422902,1279263);
ctx.lineTo(494422902,3292077);
ctx.lineTo(126344191,3292077);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,81,47,0.85)';
ctx.strokeStyle='rgb(54,51,18)';
ctx.moveTo(894498474,674840849);
ctx.lineTo(894498474,146871368);
ctx.lineTo(899613768,146871368);
ctx.lineTo(899613768,674840849);
ctx.lineTo(894498474,674840849);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,165,14,0.85)';
ctx.strokeStyle='rgb(46,100,225)';
ctx.moveTo(235338346,336811180);
ctx.lineTo(235338346,64702967);
ctx.lineTo(411431044,64702967);
ctx.lineTo(411431044,336811180);
ctx.lineTo(235338346,336811180);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,122,222,0.85)';
ctx.strokeStyle='rgb(44,59,15)';
ctx.moveTo(306041054,899170150);
ctx.lineTo(306041054,384624627);
ctx.lineTo(873301945,384624627);
ctx.lineTo(873301945,899170150);
ctx.lineTo(306041054,899170150);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,229,170,0.85)';
ctx.strokeStyle='rgb(37,130,107)';
ctx.moveTo(861741233,171908960);
ctx.lineTo(861741233,35403549);
ctx.lineTo(888459213,35403549);
ctx.lineTo(888459213,171908960);
ctx.lineTo(861741233,171908960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,240,196,0.85)';
ctx.strokeStyle='rgb(119,96,179)';
ctx.moveTo(188597583,312646118);
ctx.lineTo(188597583,82273674);
ctx.lineTo(481647509,82273674);
ctx.lineTo(481647509,312646118);
ctx.lineTo(188597583,312646118);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,122,73,0.85)';
ctx.strokeStyle='rgb(98,122,185)';
ctx.moveTo(992410290,881005);
ctx.lineTo(992410290,614315);
ctx.lineTo(996227013,614315);
ctx.lineTo(996227013,881005);
ctx.lineTo(992410290,881005);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,209,199,0.85)';
ctx.strokeStyle='rgb(146,80,135)';
ctx.moveTo(785074205,663044832);
ctx.lineTo(785074205,343865487);
ctx.lineTo(847407284,343865487);
ctx.lineTo(847407284,663044832);
ctx.lineTo(785074205,663044832);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,96,184,0.85)';
ctx.strokeStyle='rgb(171,147,3)';
ctx.moveTo(697503440,700845689);
ctx.lineTo(697503440,354008191);
ctx.lineTo(698146973,354008191);
ctx.lineTo(698146973,700845689);
ctx.lineTo(697503440,700845689);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,14,14,0.85)';
ctx.strokeStyle='rgb(224,98,155)';
ctx.moveTo(757996880,506389243);
ctx.lineTo(757996880,133850784);
ctx.lineTo(931348020,133850784);
ctx.lineTo(931348020,506389243);
ctx.lineTo(757996880,506389243);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,92,129,0.85)';
ctx.strokeStyle='rgb(86,33,215)';
ctx.moveTo(708735886,160808356);
ctx.lineTo(708735886,39889291);
ctx.lineTo(814960144,39889291);
ctx.lineTo(814960144,160808356);
ctx.lineTo(708735886,160808356);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,150,69,0.85)';
ctx.strokeStyle='rgb(226,89,62)';
ctx.moveTo(405829230,308669030);
ctx.lineTo(405829230,285945694);
ctx.lineTo(703841954,285945694);
ctx.lineTo(703841954,308669030);
ctx.lineTo(405829230,308669030);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,195,194,0.85)';
ctx.strokeStyle='rgb(111,19,223)';
ctx.moveTo(445633342,230874925);
ctx.lineTo(445633342,164049866);
ctx.lineTo(840781626,164049866);
ctx.lineTo(840781626,230874925);
ctx.lineTo(445633342,230874925);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,187,124,0.85)';
ctx.strokeStyle='rgb(197,112,10)';
ctx.moveTo(366815693,301457365);
ctx.lineTo(366815693,219256985);
ctx.lineTo(494063771,219256985);
ctx.lineTo(494063771,301457365);
ctx.lineTo(366815693,301457365);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,134,83,0.85)';
ctx.strokeStyle='rgb(148,182,109)';
ctx.moveTo(466172216,422705091);
ctx.lineTo(466172216,70184050);
ctx.lineTo(498073330,70184050);
ctx.lineTo(498073330,422705091);
ctx.lineTo(466172216,422705091);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,54,32,0.85)';
ctx.strokeStyle='rgb(74,187,156)';
ctx.moveTo(510929742,323370970);
ctx.lineTo(510929742,136092737);
ctx.lineTo(899887393,136092737);
ctx.lineTo(899887393,323370970);
ctx.lineTo(510929742,323370970);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,41,84,0.85)';
ctx.strokeStyle='rgb(109,193,13)';
ctx.moveTo(254643614,653496598);
ctx.lineTo(254643614,435699814);
ctx.lineTo(605441293,435699814);
ctx.lineTo(605441293,653496598);
ctx.lineTo(254643614,653496598);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,174,108,0.85)';
ctx.strokeStyle='rgb(1,193,63)';
ctx.moveTo(160704033,422857032);
ctx.lineTo(160704033,216606263);
ctx.lineTo(532987420,216606263);
ctx.lineTo(532987420,422857032);
ctx.lineTo(160704033,422857032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,98,126,0.85)';
ctx.strokeStyle='rgb(64,34,2)';
ctx.moveTo(378161623,84903325);
ctx.lineTo(378161623,21721469);
ctx.lineTo(463591920,21721469);
ctx.lineTo(463591920,84903325);
ctx.lineTo(378161623,84903325);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,106,216,0.85)';
ctx.strokeStyle='rgb(61,174,23)';
ctx.moveTo(53698345,306173395);
ctx.lineTo(53698345,101993348);
ctx.lineTo(55439586,101993348);
ctx.lineTo(55439586,306173395);
ctx.lineTo(53698345,306173395);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,253,192,0.85)';
ctx.strokeStyle='rgb(220,103,49)';
ctx.moveTo(116796937,390537847);
ctx.lineTo(116796937,376069214);
ctx.lineTo(234354873,376069214);
ctx.lineTo(234354873,390537847);
ctx.lineTo(116796937,390537847);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,16,6,0.85)';
ctx.strokeStyle='rgb(228,17,140)';
ctx.moveTo(862407706,751495738);
ctx.lineTo(862407706,405478187);
ctx.lineTo(924662717,405478187);
ctx.lineTo(924662717,751495738);
ctx.lineTo(862407706,751495738);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,9,178,0.85)';
ctx.strokeStyle='rgb(34,156,80)';
ctx.moveTo(846271044,126723298);
ctx.lineTo(846271044,113102904);
ctx.lineTo(856151469,113102904);
ctx.lineTo(856151469,126723298);
ctx.lineTo(846271044,126723298);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,128,208,0.85)';
ctx.strokeStyle='rgb(147,27,161)';
ctx.moveTo(109849706,458602799);
ctx.lineTo(109849706,378320104);
ctx.lineTo(510930188,378320104);
ctx.lineTo(510930188,458602799);
ctx.lineTo(109849706,458602799);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,36,12,0.85)';
ctx.strokeStyle='rgb(79,103,52)';
ctx.moveTo(883998147,572159795);
ctx.lineTo(883998147,65947128);
ctx.lineTo(964660525,65947128);
ctx.lineTo(964660525,572159795);
ctx.lineTo(883998147,572159795);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,12,17,0.85)';
ctx.strokeStyle='rgb(120,120,65)';
ctx.moveTo(547283406,908416780);
ctx.lineTo(547283406,749964060);
ctx.lineTo(818193420,749964060);
ctx.lineTo(818193420,908416780);
ctx.lineTo(547283406,908416780);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,121,190,0.85)';
ctx.strokeStyle='rgb(147,29,176)';
ctx.moveTo(519833923,544404472);
ctx.lineTo(519833923,435489725);
ctx.lineTo(890930281,435489725);
ctx.lineTo(890930281,544404472);
ctx.lineTo(519833923,544404472);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,162,16,0.85)';
ctx.strokeStyle='rgb(239,211,108)';
ctx.moveTo(87825474,322665348);
ctx.lineTo(87825474,277182242);
ctx.lineTo(92965513,277182242);
ctx.lineTo(92965513,322665348);
ctx.lineTo(87825474,322665348);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,56,230,0.85)';
ctx.strokeStyle='rgb(58,24,130)';
ctx.moveTo(356809492,816301837);
ctx.lineTo(356809492,248204293);
ctx.lineTo(549540259,248204293);
ctx.lineTo(549540259,816301837);
ctx.lineTo(356809492,816301837);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,253,115,0.85)';
ctx.strokeStyle='rgb(109,164,106)';
ctx.moveTo(825506620,6268411);
ctx.lineTo(825506620,3304938);
ctx.lineTo(927167007,3304938);
ctx.lineTo(927167007,6268411);
ctx.lineTo(825506620,6268411);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,119,195,0.85)';
ctx.strokeStyle='rgb(35,158,124)';
ctx.moveTo(279370456,355408754);
ctx.lineTo(279370456,87307986);
ctx.lineTo(992427069,87307986);
ctx.lineTo(992427069,355408754);
ctx.lineTo(279370456,355408754);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,45,228,0.85)';
ctx.strokeStyle='rgb(226,2,24)';
ctx.moveTo(785440199,699421578);
ctx.lineTo(785440199,439827910);
ctx.lineTo(811923333,439827910);
ctx.lineTo(811923333,699421578);
ctx.lineTo(785440199,699421578);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,108,179,0.85)';
ctx.strokeStyle='rgb(19,147,57)';
ctx.moveTo(98504983,590372041);
ctx.lineTo(98504983,193464920);
ctx.lineTo(199199187,193464920);
ctx.lineTo(199199187,590372041);
ctx.lineTo(98504983,590372041);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,208,144,0.85)';
ctx.strokeStyle='rgb(93,197,58)';
ctx.moveTo(719708245,502234012);
ctx.lineTo(719708245,396540217);
ctx.lineTo(984843783,396540217);
ctx.lineTo(984843783,502234012);
ctx.lineTo(719708245,502234012);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,211,73,0.85)';
ctx.strokeStyle='rgb(120,50,231)';
ctx.moveTo(916404445,696520056);
ctx.lineTo(916404445,542096811);
ctx.lineTo(981644336,542096811);
ctx.lineTo(981644336,696520056);
ctx.lineTo(916404445,696520056);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,80,120,0.85)';
ctx.strokeStyle='rgb(254,208,123)';
ctx.moveTo(155577366,605040742);
ctx.lineTo(155577366,498436447);
ctx.lineTo(368204156,498436447);
ctx.lineTo(368204156,605040742);
ctx.lineTo(155577366,605040742);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,82,156,0.85)';
ctx.strokeStyle='rgb(81,68,80)';
ctx.moveTo(824863599,996268070);
ctx.lineTo(824863599,381729547);
ctx.lineTo(995352805,381729547);
ctx.lineTo(995352805,996268070);
ctx.lineTo(824863599,996268070);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,115,25,0.85)';
ctx.strokeStyle='rgb(126,214,48)';
ctx.moveTo(529421136,291042973);
ctx.lineTo(529421136,164448993);
ctx.lineTo(677296207,164448993);
ctx.lineTo(677296207,291042973);
ctx.lineTo(529421136,291042973);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,162,82,0.85)';
ctx.strokeStyle='rgb(196,93,58)';
ctx.moveTo(571126618,270451508);
ctx.lineTo(571126618,161877309);
ctx.lineTo(782573332,161877309);
ctx.lineTo(782573332,270451508);
ctx.lineTo(571126618,270451508);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,0,78,0.85)';
ctx.strokeStyle='rgb(41,235,5)';
ctx.moveTo(312156330,17530748);
ctx.lineTo(312156330,395320);
ctx.lineTo(831275736,395320);
ctx.lineTo(831275736,17530748);
ctx.lineTo(312156330,17530748);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,218,182,0.85)';
ctx.strokeStyle='rgb(129,237,157)';
ctx.moveTo(63954748,218791072);
ctx.lineTo(63954748,194522989);
ctx.lineTo(947085694,194522989);
ctx.lineTo(947085694,218791072);
ctx.lineTo(63954748,218791072);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,212,54,0.85)';
ctx.strokeStyle='rgb(29,132,86)';
ctx.moveTo(15218677,588918870);
ctx.lineTo(15218677,478920105);
ctx.lineTo(693119474,478920105);
ctx.lineTo(693119474,588918870);
ctx.lineTo(15218677,588918870);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,197,27,0.85)';
ctx.strokeStyle='rgb(50,37,88)';
ctx.moveTo(864460490,303141818);
ctx.lineTo(864460490,11093505);
ctx.lineTo(916908345,11093505);
ctx.lineTo(916908345,303141818);
ctx.lineTo(864460490,303141818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,133,85,0.85)';
ctx.strokeStyle='rgb(146,152,150)';
ctx.moveTo(954328029,990480602);
ctx.lineTo(954328029,32704976);
ctx.lineTo(971100626,32704976);
ctx.lineTo(971100626,990480602);
ctx.lineTo(954328029,990480602);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,180,90,0.85)';
ctx.strokeStyle='rgb(9,248,130)';
ctx.moveTo(219450410,919682561);
ctx.lineTo(219450410,214648722);
ctx.lineTo(834406422,214648722);
ctx.lineTo(834406422,919682561);
ctx.lineTo(219450410,919682561);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,62,130,0.85)';
ctx.strokeStyle='rgb(19,250,70)';
ctx.moveTo(260358856,165777642);
ctx.lineTo(260358856,31629163);
ctx.lineTo(589628292,31629163);
ctx.lineTo(589628292,165777642);
ctx.lineTo(260358856,165777642);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,198,182,0.85)';
ctx.strokeStyle='rgb(178,244,213)';
ctx.moveTo(204213871,583962511);
ctx.lineTo(204213871,131414064);
ctx.lineTo(360710750,131414064);
ctx.lineTo(360710750,583962511);
ctx.lineTo(204213871,583962511);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,90,182,0.85)';
ctx.strokeStyle='rgb(166,247,227)';
ctx.moveTo(121014314,363647619);
ctx.lineTo(121014314,27131919);
ctx.lineTo(698270973,27131919);
ctx.lineTo(698270973,363647619);
ctx.lineTo(121014314,363647619);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,135,171,0.85)';
ctx.strokeStyle='rgb(33,26,104)';
ctx.moveTo(750235922,128170118);
ctx.lineTo(750235922,49983302);
ctx.lineTo(973129375,49983302);
ctx.lineTo(973129375,128170118);
ctx.lineTo(750235922,128170118);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,32,108,0.85)';
ctx.strokeStyle='rgb(76,73,64)';
ctx.moveTo(869378505,626930045);
ctx.lineTo(869378505,177218161);
ctx.lineTo(923502935,177218161);
ctx.lineTo(923502935,626930045);
ctx.lineTo(869378505,626930045);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,71,123,0.85)';
ctx.strokeStyle='rgb(211,187,77)';
ctx.moveTo(921376750,158502505);
ctx.lineTo(921376750,39344471);
ctx.lineTo(949252987,39344471);
ctx.lineTo(949252987,158502505);
ctx.lineTo(921376750,158502505);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,252,55,0.85)';
ctx.strokeStyle='rgb(64,159,94)';
ctx.moveTo(101641637,951991475);
ctx.lineTo(101641637,361286476);
ctx.lineTo(353527797,361286476);
ctx.lineTo(353527797,951991475);
ctx.lineTo(101641637,951991475);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,68,247,0.85)';
ctx.strokeStyle='rgb(243,234,235)';
ctx.moveTo(697757565,616918668);
ctx.lineTo(697757565,569879429);
ctx.lineTo(948480066,569879429);
ctx.lineTo(948480066,616918668);
ctx.lineTo(697757565,616918668);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,196,71,0.85)';
ctx.strokeStyle='rgb(150,8,76)';
ctx.moveTo(180042820,45978665);
ctx.lineTo(180042820,9481967);
ctx.lineTo(957170371,9481967);
ctx.lineTo(957170371,45978665);
ctx.lineTo(180042820,45978665);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,62,236,0.85)';
ctx.strokeStyle='rgb(119,219,62)';
ctx.moveTo(513930061,793616644);
ctx.lineTo(513930061,616416231);
ctx.lineTo(846461842,616416231);
ctx.lineTo(846461842,793616644);
ctx.lineTo(513930061,793616644);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,120,45,0.85)';
ctx.strokeStyle='rgb(79,82,7)';
ctx.moveTo(392425284,173021129);
ctx.lineTo(392425284,91939624);
ctx.lineTo(965137044,91939624);
ctx.lineTo(965137044,173021129);
ctx.lineTo(392425284,173021129);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,190,229,0.85)';
ctx.strokeStyle='rgb(16,220,198)';
ctx.moveTo(890796932,693591666);
ctx.lineTo(890796932,104096221);
ctx.lineTo(975886027,104096221);
ctx.lineTo(975886027,693591666);
ctx.lineTo(890796932,693591666);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,143,236,0.85)';
ctx.strokeStyle='rgb(203,133,24)';
ctx.moveTo(413959196,81412027);
ctx.lineTo(413959196,35265213);
ctx.lineTo(926414497,35265213);
ctx.lineTo(926414497,81412027);
ctx.lineTo(413959196,81412027);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,93,185,0.85)';
ctx.strokeStyle='rgb(129,248,149)';
ctx.moveTo(518103477,145457351);
ctx.lineTo(518103477,73244292);
ctx.lineTo(810267740,73244292);
ctx.lineTo(810267740,145457351);
ctx.lineTo(518103477,145457351);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,21,93,0.85)';
ctx.strokeStyle='rgb(88,189,94)';
ctx.moveTo(275474793,753043876);
ctx.lineTo(275474793,179343519);
ctx.lineTo(653624428,179343519);
ctx.lineTo(653624428,753043876);
ctx.lineTo(275474793,753043876);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,245,103,0.85)';
ctx.strokeStyle='rgb(109,79,45)';
ctx.moveTo(359551515,7341003);
ctx.lineTo(359551515,4448671);
ctx.lineTo(672297106,4448671);
ctx.lineTo(672297106,7341003);
ctx.lineTo(359551515,7341003);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,247,174,0.85)';
ctx.strokeStyle='rgb(236,130,79)';
ctx.moveTo(520318124,337634581);
ctx.lineTo(520318124,125751519);
ctx.lineTo(520460042,125751519);
ctx.lineTo(520460042,337634581);
ctx.lineTo(520318124,337634581);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,203,47,0.85)';
ctx.strokeStyle='rgb(106,25,100)';
ctx.moveTo(873567818,209722356);
ctx.lineTo(873567818,42286772);
ctx.lineTo(923691536,42286772);
ctx.lineTo(923691536,209722356);
ctx.lineTo(873567818,209722356);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,124,129,0.85)';
ctx.strokeStyle='rgb(247,23,126)';
ctx.moveTo(883615062,725763055);
ctx.lineTo(883615062,660920072);
ctx.lineTo(984602757,660920072);
ctx.lineTo(984602757,725763055);
ctx.lineTo(883615062,725763055);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,69,78,0.85)';
ctx.strokeStyle='rgb(66,105,216)';
ctx.moveTo(656329710,101978048);
ctx.lineTo(656329710,80594764);
ctx.lineTo(759619104,80594764);
ctx.lineTo(759619104,101978048);
ctx.lineTo(656329710,101978048);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,207,66,0.85)';
ctx.strokeStyle='rgb(138,235,8)';
ctx.moveTo(760952869,191742851);
ctx.lineTo(760952869,136540251);
ctx.lineTo(793286628,136540251);
ctx.lineTo(793286628,191742851);
ctx.lineTo(760952869,191742851);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,222,193,0.85)';
ctx.strokeStyle='rgb(105,252,249)';
ctx.moveTo(126666206,48578995);
ctx.lineTo(126666206,37703228);
ctx.lineTo(801729063,37703228);
ctx.lineTo(801729063,48578995);
ctx.lineTo(126666206,48578995);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,166,254,0.85)';
ctx.strokeStyle='rgb(10,145,79)';
ctx.moveTo(188146935,981870872);
ctx.lineTo(188146935,572840297);
ctx.lineTo(642767047,572840297);
ctx.lineTo(642767047,981870872);
ctx.lineTo(188146935,981870872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,188,37,0.85)';
ctx.strokeStyle='rgb(195,214,249)';
ctx.moveTo(715487881,39319603);
ctx.lineTo(715487881,11869895);
ctx.lineTo(974688591,11869895);
ctx.lineTo(974688591,39319603);
ctx.lineTo(715487881,39319603);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,210,38,0.85)';
ctx.strokeStyle='rgb(164,237,85)';
ctx.moveTo(752291433,876041166);
ctx.lineTo(752291433,507790775);
ctx.lineTo(804081933,507790775);
ctx.lineTo(804081933,876041166);
ctx.lineTo(752291433,876041166);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,42,200,0.85)';
ctx.strokeStyle='rgb(118,95,161)';
ctx.moveTo(15940647,160629291);
ctx.lineTo(15940647,82902596);
ctx.lineTo(634675661,82902596);
ctx.lineTo(634675661,160629291);
ctx.lineTo(15940647,160629291);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,152,177,0.85)';
ctx.strokeStyle='rgb(155,38,80)';
ctx.moveTo(600080907,512187940);
ctx.lineTo(600080907,11715778);
ctx.lineTo(869759807,11715778);
ctx.lineTo(869759807,512187940);
ctx.lineTo(600080907,512187940);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,2,153,0.85)';
ctx.strokeStyle='rgb(204,195,46)';
ctx.moveTo(829340555,367086296);
ctx.lineTo(829340555,339795558);
ctx.lineTo(880227445,339795558);
ctx.lineTo(880227445,367086296);
ctx.lineTo(829340555,367086296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,172,108,0.85)';
ctx.strokeStyle='rgb(207,71,21)';
ctx.moveTo(53471680,954743198);
ctx.lineTo(53471680,477539845);
ctx.lineTo(698115596,477539845);
ctx.lineTo(698115596,954743198);
ctx.lineTo(53471680,954743198);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,76,253,0.85)';
ctx.strokeStyle='rgb(159,124,235)';
ctx.moveTo(844671736,283863396);
ctx.lineTo(844671736,180327045);
ctx.lineTo(892063413,180327045);
ctx.lineTo(892063413,283863396);
ctx.lineTo(844671736,283863396);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,75,156,0.85)';
ctx.strokeStyle='rgb(26,57,146)';
ctx.moveTo(185840554,215890925);
ctx.lineTo(185840554,8218724);
ctx.lineTo(211677188,8218724);
ctx.lineTo(211677188,215890925);
ctx.lineTo(185840554,215890925);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,192,144,0.85)';
ctx.strokeStyle='rgb(112,205,50)';
ctx.moveTo(390642252,874457794);
ctx.lineTo(390642252,25287270);
ctx.lineTo(784810314,25287270);
ctx.lineTo(784810314,874457794);
ctx.lineTo(390642252,874457794);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,117,236,0.85)';
ctx.strokeStyle='rgb(154,10,194)';
ctx.moveTo(659762641,175577015);
ctx.lineTo(659762641,99970352);
ctx.lineTo(812167305,99970352);
ctx.lineTo(812167305,175577015);
ctx.lineTo(659762641,175577015);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,100,58,0.85)';
ctx.strokeStyle='rgb(107,68,79)';
ctx.moveTo(653235467,328818477);
ctx.lineTo(653235467,215911759);
ctx.lineTo(987436902,215911759);
ctx.lineTo(987436902,328818477);
ctx.lineTo(653235467,328818477);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,18,101,0.85)';
ctx.strokeStyle='rgb(37,67,232)';
ctx.moveTo(658406824,136935396);
ctx.lineTo(658406824,110337560);
ctx.lineTo(818042233,110337560);
ctx.lineTo(818042233,136935396);
ctx.lineTo(658406824,136935396);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,135,12,0.85)';
ctx.strokeStyle='rgb(212,42,244)';
ctx.moveTo(107104832,179060120);
ctx.lineTo(107104832,46052001);
ctx.lineTo(763494415,46052001);
ctx.lineTo(763494415,179060120);
ctx.lineTo(107104832,179060120);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,234,44,0.85)';
ctx.strokeStyle='rgb(138,52,154)';
ctx.moveTo(801984804,87516223);
ctx.lineTo(801984804,86669460);
ctx.lineTo(874020860,86669460);
ctx.lineTo(874020860,87516223);
ctx.lineTo(801984804,87516223);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,211,212,0.85)';
ctx.strokeStyle='rgb(47,88,62)';
ctx.moveTo(741805275,676212900);
ctx.lineTo(741805275,520642456);
ctx.lineTo(825261271,520642456);
ctx.lineTo(825261271,676212900);
ctx.lineTo(741805275,676212900);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,5,62,0.85)';
ctx.strokeStyle='rgb(141,184,172)';
ctx.moveTo(457522166,603184709);
ctx.lineTo(457522166,94731063);
ctx.lineTo(785900458,94731063);
ctx.lineTo(785900458,603184709);
ctx.lineTo(457522166,603184709);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,18,104,0.85)';
ctx.strokeStyle='rgb(34,182,15)';
ctx.moveTo(603234609,653882851);
ctx.lineTo(603234609,214425207);
ctx.lineTo(986740629,214425207);
ctx.lineTo(986740629,653882851);
ctx.lineTo(603234609,653882851);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,204,145,0.85)';
ctx.strokeStyle='rgb(0,25,94)';
ctx.moveTo(685395448,289648602);
ctx.lineTo(685395448,84770279);
ctx.lineTo(863901344,84770279);
ctx.lineTo(863901344,289648602);
ctx.lineTo(685395448,289648602);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,209,200,0.85)';
ctx.strokeStyle='rgb(90,78,88)';
ctx.moveTo(700791174,471075295);
ctx.lineTo(700791174,110759537);
ctx.lineTo(973196963,110759537);
ctx.lineTo(973196963,471075295);
ctx.lineTo(700791174,471075295);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,209,167,0.85)';
ctx.strokeStyle='rgb(161,183,72)';
ctx.moveTo(254855260,165233267);
ctx.lineTo(254855260,160988022);
ctx.lineTo(612128099,160988022);
ctx.lineTo(612128099,165233267);
ctx.lineTo(254855260,165233267);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,45,215,0.85)';
ctx.strokeStyle='rgb(6,72,75)';
ctx.moveTo(108712967,931333260);
ctx.lineTo(108712967,512284888);
ctx.lineTo(366130877,512284888);
ctx.lineTo(366130877,931333260);
ctx.lineTo(108712967,931333260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,29,20,0.85)';
ctx.strokeStyle='rgb(115,115,178)';
ctx.moveTo(590059226,821026703);
ctx.lineTo(590059226,162454490);
ctx.lineTo(717850767,162454490);
ctx.lineTo(717850767,821026703);
ctx.lineTo(590059226,821026703);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,226,117,0.85)';
ctx.strokeStyle='rgb(243,137,83)';
ctx.moveTo(773331352,718601768);
ctx.lineTo(773331352,116192104);
ctx.lineTo(938322628,116192104);
ctx.lineTo(938322628,718601768);
ctx.lineTo(773331352,718601768);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,70,28,0.85)';
ctx.strokeStyle='rgb(24,188,247)';
ctx.moveTo(919471692,366951522);
ctx.lineTo(919471692,189340599);
ctx.lineTo(942390531,189340599);
ctx.lineTo(942390531,366951522);
ctx.lineTo(919471692,366951522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,106,246,0.85)';
ctx.strokeStyle='rgb(86,250,229)';
ctx.moveTo(370733165,812312441);
ctx.lineTo(370733165,596221397);
ctx.lineTo(650630546,596221397);
ctx.lineTo(650630546,812312441);
ctx.lineTo(370733165,812312441);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,122,7,0.85)';
ctx.strokeStyle='rgb(131,55,42)';
ctx.moveTo(558895599,722322890);
ctx.lineTo(558895599,117167180);
ctx.lineTo(922902720,117167180);
ctx.lineTo(922902720,722322890);
ctx.lineTo(558895599,722322890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,219,90,0.85)';
ctx.strokeStyle='rgb(27,53,68)';
ctx.moveTo(312197238,166649729);
ctx.lineTo(312197238,7906625);
ctx.lineTo(769909933,7906625);
ctx.lineTo(769909933,166649729);
ctx.lineTo(312197238,166649729);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,26,252,0.85)';
ctx.strokeStyle='rgb(229,95,103)';
ctx.moveTo(734217851,576077053);
ctx.lineTo(734217851,95340742);
ctx.lineTo(945572514,95340742);
ctx.lineTo(945572514,576077053);
ctx.lineTo(734217851,576077053);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,35,175,0.85)';
ctx.strokeStyle='rgb(95,73,4)';
ctx.moveTo(747356857,190980092);
ctx.lineTo(747356857,147126904);
ctx.lineTo(973376155,147126904);
ctx.lineTo(973376155,190980092);
ctx.lineTo(747356857,190980092);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,24,118,0.85)';
ctx.strokeStyle='rgb(59,158,21)';
ctx.moveTo(951149648,975741896);
ctx.lineTo(951149648,606049623);
ctx.lineTo(967311644,606049623);
ctx.lineTo(967311644,975741896);
ctx.lineTo(951149648,975741896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,100,58,0.85)';
ctx.strokeStyle='rgb(158,135,19)';
ctx.moveTo(102614468,823939357);
ctx.lineTo(102614468,427760618);
ctx.lineTo(510826341,427760618);
ctx.lineTo(510826341,823939357);
ctx.lineTo(102614468,823939357);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,167,128,0.85)';
ctx.strokeStyle='rgb(245,61,40)';
ctx.moveTo(658630829,280168063);
ctx.lineTo(658630829,177630232);
ctx.lineTo(785135612,177630232);
ctx.lineTo(785135612,280168063);
ctx.lineTo(658630829,280168063);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,161,119,0.85)';
ctx.strokeStyle='rgb(77,71,92)';
ctx.moveTo(123942350,910725717);
ctx.lineTo(123942350,174015494);
ctx.lineTo(573779364,174015494);
ctx.lineTo(573779364,910725717);
ctx.lineTo(123942350,910725717);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,136,89,0.85)';
ctx.strokeStyle='rgb(240,190,67)';
ctx.moveTo(626167513,238668296);
ctx.lineTo(626167513,160429170);
ctx.lineTo(806349590,160429170);
ctx.lineTo(806349590,238668296);
ctx.lineTo(626167513,238668296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,11,125,0.85)';
ctx.strokeStyle='rgb(163,46,184)';
ctx.moveTo(763893003,457037182);
ctx.lineTo(763893003,403845796);
ctx.lineTo(965691792,403845796);
ctx.lineTo(965691792,457037182);
ctx.lineTo(763893003,457037182);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,93,233,0.85)';
ctx.strokeStyle='rgb(154,172,152)';
ctx.moveTo(45761093,688688615);
ctx.lineTo(45761093,389489343);
ctx.lineTo(668332603,389489343);
ctx.lineTo(668332603,688688615);
ctx.lineTo(45761093,688688615);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,105,64,0.85)';
ctx.strokeStyle='rgb(150,217,153)';
ctx.moveTo(226109020,202376314);
ctx.lineTo(226109020,183580141);
ctx.lineTo(438218046,183580141);
ctx.lineTo(438218046,202376314);
ctx.lineTo(226109020,202376314);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,109,70,0.85)';
ctx.strokeStyle='rgb(62,105,218)';
ctx.moveTo(399874730,137048321);
ctx.lineTo(399874730,124875198);
ctx.lineTo(756697344,124875198);
ctx.lineTo(756697344,137048321);
ctx.lineTo(399874730,137048321);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,202,211,0.85)';
ctx.strokeStyle='rgb(174,55,112)';
ctx.moveTo(936720212,789197251);
ctx.lineTo(936720212,49468905);
ctx.lineTo(988997627,49468905);
ctx.lineTo(988997627,789197251);
ctx.lineTo(936720212,789197251);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,47,222,0.85)';
ctx.strokeStyle='rgb(28,38,40)';
ctx.moveTo(690290017,864695521);
ctx.lineTo(690290017,29561876);
ctx.lineTo(713495638,29561876);
ctx.lineTo(713495638,864695521);
ctx.lineTo(690290017,864695521);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,144,28,0.85)';
ctx.strokeStyle='rgb(131,3,167)';
ctx.moveTo(857773749,795411644);
ctx.lineTo(857773749,17834475);
ctx.lineTo(994992380,17834475);
ctx.lineTo(994992380,795411644);
ctx.lineTo(857773749,795411644);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,138,175,0.85)';
ctx.strokeStyle='rgb(113,233,145)';
ctx.moveTo(616830350,880980969);
ctx.lineTo(616830350,611225885);
ctx.lineTo(684429894,611225885);
ctx.lineTo(684429894,880980969);
ctx.lineTo(616830350,880980969);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,211,15,0.85)';
ctx.strokeStyle='rgb(233,89,149)';
ctx.moveTo(817518579,557417601);
ctx.lineTo(817518579,388862923);
ctx.lineTo(954745212,388862923);
ctx.lineTo(954745212,557417601);
ctx.lineTo(817518579,557417601);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,131,0,0.85)';
ctx.strokeStyle='rgb(246,208,92)';
ctx.moveTo(144423837,899919562);
ctx.lineTo(144423837,307032505);
ctx.lineTo(845972351,307032505);
ctx.lineTo(845972351,899919562);
ctx.lineTo(144423837,899919562);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,145,77,0.85)';
ctx.strokeStyle='rgb(102,21,195)';
ctx.moveTo(163565925,814507116);
ctx.lineTo(163565925,366802068);
ctx.lineTo(661636108,366802068);
ctx.lineTo(661636108,814507116);
ctx.lineTo(163565925,814507116);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,3,212,0.85)';
ctx.strokeStyle='rgb(168,163,182)';
ctx.moveTo(136478808,159587236);
ctx.lineTo(136478808,147777829);
ctx.lineTo(560418406,147777829);
ctx.lineTo(560418406,159587236);
ctx.lineTo(136478808,159587236);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,251,99,0.85)';
ctx.strokeStyle='rgb(224,36,61)';
ctx.moveTo(319890168,708659987);
ctx.lineTo(319890168,161583748);
ctx.lineTo(942779207,161583748);
ctx.lineTo(942779207,708659987);
ctx.lineTo(319890168,708659987);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,33,173,0.85)';
ctx.strokeStyle='rgb(99,141,14)';
ctx.moveTo(638435609,850706303);
ctx.lineTo(638435609,502997022);
ctx.lineTo(803391998,502997022);
ctx.lineTo(803391998,850706303);
ctx.lineTo(638435609,850706303);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,165,240,0.85)';
ctx.strokeStyle='rgb(244,205,242)';
ctx.moveTo(928947390,697338398);
ctx.lineTo(928947390,11925287);
ctx.lineTo(996631169,11925287);
ctx.lineTo(996631169,697338398);
ctx.lineTo(928947390,697338398);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,183,115,0.85)';
ctx.strokeStyle='rgb(119,117,41)';
ctx.moveTo(496114709,124516974);
ctx.lineTo(496114709,108829114);
ctx.lineTo(850859045,108829114);
ctx.lineTo(850859045,124516974);
ctx.lineTo(496114709,124516974);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,164,90,0.85)';
ctx.strokeStyle='rgb(42,40,121)';
ctx.moveTo(520426121,238163292);
ctx.lineTo(520426121,121008514);
ctx.lineTo(593642772,121008514);
ctx.lineTo(593642772,238163292);
ctx.lineTo(520426121,238163292);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,84,241,0.85)';
ctx.strokeStyle='rgb(91,39,201)';
ctx.moveTo(561210898,152567881);
ctx.lineTo(561210898,121353014);
ctx.lineTo(947960506,121353014);
ctx.lineTo(947960506,152567881);
ctx.lineTo(561210898,152567881);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,109,171,0.85)';
ctx.strokeStyle='rgb(100,6,190)';
ctx.moveTo(351462534,429548431);
ctx.lineTo(351462534,81488636);
ctx.lineTo(837837955,81488636);
ctx.lineTo(837837955,429548431);
ctx.lineTo(351462534,429548431);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,173,101,0.85)';
ctx.strokeStyle='rgb(115,117,202)';
ctx.moveTo(164045750,759796817);
ctx.lineTo(164045750,482601102);
ctx.lineTo(192569477,482601102);
ctx.lineTo(192569477,759796817);
ctx.lineTo(164045750,759796817);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,173,84,0.85)';
ctx.strokeStyle='rgb(144,161,12)';
ctx.moveTo(474000684,176705062);
ctx.lineTo(474000684,106123429);
ctx.lineTo(489521636,106123429);
ctx.lineTo(489521636,176705062);
ctx.lineTo(474000684,176705062);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,36,68,0.85)';
ctx.strokeStyle='rgb(210,1,201)';
ctx.moveTo(977498740,997156836);
ctx.lineTo(977498740,603697815);
ctx.lineTo(980056444,603697815);
ctx.lineTo(980056444,997156836);
ctx.lineTo(977498740,997156836);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,62,43,0.85)';
ctx.strokeStyle='rgb(235,56,162)';
ctx.moveTo(256569643,451349224);
ctx.lineTo(256569643,407767847);
ctx.lineTo(755432002,407767847);
ctx.lineTo(755432002,451349224);
ctx.lineTo(256569643,451349224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,18,167,0.85)';
ctx.strokeStyle='rgb(76,191,110)';
ctx.moveTo(536974623,253817784);
ctx.lineTo(536974623,116166403);
ctx.lineTo(924947444,116166403);
ctx.lineTo(924947444,253817784);
ctx.lineTo(536974623,253817784);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,199,24,0.85)';
ctx.strokeStyle='rgb(207,172,121)';
ctx.moveTo(415635066,361477139);
ctx.lineTo(415635066,105148583);
ctx.lineTo(829251666,105148583);
ctx.lineTo(829251666,361477139);
ctx.lineTo(415635066,361477139);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,87,252,0.85)';
ctx.strokeStyle='rgb(71,66,150)';
ctx.moveTo(83749070,293032264);
ctx.lineTo(83749070,218407579);
ctx.lineTo(321521999,218407579);
ctx.lineTo(321521999,293032264);
ctx.lineTo(83749070,293032264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,14,79,0.85)';
ctx.strokeStyle='rgb(34,37,75)';
ctx.moveTo(668656654,201710189);
ctx.lineTo(668656654,19250001);
ctx.lineTo(849198526,19250001);
ctx.lineTo(849198526,201710189);
ctx.lineTo(668656654,201710189);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,161,203,0.85)';
ctx.strokeStyle='rgb(118,6,46)';
ctx.moveTo(171686530,222544307);
ctx.lineTo(171686530,42945076);
ctx.lineTo(294339601,42945076);
ctx.lineTo(294339601,222544307);
ctx.lineTo(171686530,222544307);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,251,117,0.85)';
ctx.strokeStyle='rgb(232,116,164)';
ctx.moveTo(337249236,275769120);
ctx.lineTo(337249236,134939247);
ctx.lineTo(936201101,134939247);
ctx.lineTo(936201101,275769120);
ctx.lineTo(337249236,275769120);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,248,202,0.85)';
ctx.strokeStyle='rgb(234,89,108)';
ctx.moveTo(378847983,908753766);
ctx.lineTo(378847983,606109382);
ctx.lineTo(755023623,606109382);
ctx.lineTo(755023623,908753766);
ctx.lineTo(378847983,908753766);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,117,23,0.85)';
ctx.strokeStyle='rgb(144,245,182)';
ctx.moveTo(254473786,89507959);
ctx.lineTo(254473786,4029699);
ctx.lineTo(910652927,4029699);
ctx.lineTo(910652927,89507959);
ctx.lineTo(254473786,89507959);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,80,51,0.85)';
ctx.strokeStyle='rgb(11,175,7)';
ctx.moveTo(54881478,237938275);
ctx.lineTo(54881478,229570887);
ctx.lineTo(444835585,229570887);
ctx.lineTo(444835585,237938275);
ctx.lineTo(54881478,237938275);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,103,229,0.85)';
ctx.strokeStyle='rgb(186,168,190)';
ctx.moveTo(931893371,419071372);
ctx.lineTo(931893371,121065757);
ctx.lineTo(943166847,121065757);
ctx.lineTo(943166847,419071372);
ctx.lineTo(931893371,419071372);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,180,192,0.85)';
ctx.strokeStyle='rgb(177,168,7)';
ctx.moveTo(523930904,36355679);
ctx.lineTo(523930904,22889873);
ctx.lineTo(932727263,22889873);
ctx.lineTo(932727263,36355679);
ctx.lineTo(523930904,36355679);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,169,156,0.85)';
ctx.strokeStyle='rgb(176,98,222)';
ctx.moveTo(480702284,720567144);
ctx.lineTo(480702284,488603877);
ctx.lineTo(950101012,488603877);
ctx.lineTo(950101012,720567144);
ctx.lineTo(480702284,720567144);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,252,60,0.85)';
ctx.strokeStyle='rgb(82,203,146)';
ctx.moveTo(328206073,772576442);
ctx.lineTo(328206073,520769961);
ctx.lineTo(499677377,520769961);
ctx.lineTo(499677377,772576442);
ctx.lineTo(328206073,772576442);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,112,224,0.85)';
ctx.strokeStyle='rgb(199,175,227)';
ctx.moveTo(904739603,727530709);
ctx.lineTo(904739603,679107936);
ctx.lineTo(932352303,679107936);
ctx.lineTo(932352303,727530709);
ctx.lineTo(904739603,727530709);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,41,99,0.85)';
ctx.strokeStyle='rgb(248,77,111)';
ctx.moveTo(685738015,626896218);
ctx.lineTo(685738015,386517540);
ctx.lineTo(832591316,386517540);
ctx.lineTo(832591316,626896218);
ctx.lineTo(685738015,626896218);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,232,226,0.85)';
ctx.strokeStyle='rgb(45,250,197)';
ctx.moveTo(667204490,352207063);
ctx.lineTo(667204490,215520546);
ctx.lineTo(789195164,215520546);
ctx.lineTo(789195164,352207063);
ctx.lineTo(667204490,352207063);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,71,63,0.85)';
ctx.strokeStyle='rgb(170,212,49)';
ctx.moveTo(366958201,459241239);
ctx.lineTo(366958201,245110197);
ctx.lineTo(760610566,245110197);
ctx.lineTo(760610566,459241239);
ctx.lineTo(366958201,459241239);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,16,132,0.85)';
ctx.strokeStyle='rgb(139,191,243)';
ctx.moveTo(652092009,351268079);
ctx.lineTo(652092009,101775955);
ctx.lineTo(897148689,101775955);
ctx.lineTo(897148689,351268079);
ctx.lineTo(652092009,351268079);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,150,213,0.85)';
ctx.strokeStyle='rgb(169,158,100)';
ctx.moveTo(825172393,331624771);
ctx.lineTo(825172393,11553759);
ctx.lineTo(832664238,11553759);
ctx.lineTo(832664238,331624771);
ctx.lineTo(825172393,331624771);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,182,212,0.85)';
ctx.strokeStyle='rgb(218,251,216)';
ctx.moveTo(663619728,31281558);
ctx.lineTo(663619728,16740845);
ctx.lineTo(766576911,16740845);
ctx.lineTo(766576911,31281558);
ctx.lineTo(663619728,31281558);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,142,17,0.85)';
ctx.strokeStyle='rgb(195,254,177)';
ctx.moveTo(411630655,377751117);
ctx.lineTo(411630655,203454522);
ctx.lineTo(910519992,203454522);
ctx.lineTo(910519992,377751117);
ctx.lineTo(411630655,377751117);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,159,167,0.85)';
ctx.strokeStyle='rgb(90,50,83)';
ctx.moveTo(433450940,666855479);
ctx.lineTo(433450940,563120779);
ctx.lineTo(912080072,563120779);
ctx.lineTo(912080072,666855479);
ctx.lineTo(433450940,666855479);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,99,107,0.85)';
ctx.strokeStyle='rgb(45,159,208)';
ctx.moveTo(444880252,304299250);
ctx.lineTo(444880252,277191048);
ctx.lineTo(754817879,277191048);
ctx.lineTo(754817879,304299250);
ctx.lineTo(444880252,304299250);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,162,150,0.85)';
ctx.strokeStyle='rgb(123,204,177)';
ctx.moveTo(766591273,626609351);
ctx.lineTo(766591273,82873150);
ctx.lineTo(888930160,82873150);
ctx.lineTo(888930160,626609351);
ctx.lineTo(766591273,626609351);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,80,145,0.85)';
ctx.strokeStyle='rgb(130,108,69)';
ctx.moveTo(507032363,845264323);
ctx.lineTo(507032363,678826783);
ctx.lineTo(783468410,678826783);
ctx.lineTo(783468410,845264323);
ctx.lineTo(507032363,845264323);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,168,7,0.85)';
ctx.strokeStyle='rgb(239,44,66)';
ctx.moveTo(511753483,773969176);
ctx.lineTo(511753483,689852597);
ctx.lineTo(794692785,689852597);
ctx.lineTo(794692785,773969176);
ctx.lineTo(511753483,773969176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,30,96,0.85)';
ctx.strokeStyle='rgb(184,131,74)';
ctx.moveTo(548823171,448779472);
ctx.lineTo(548823171,174562928);
ctx.lineTo(568157200,174562928);
ctx.lineTo(568157200,448779472);
ctx.lineTo(548823171,448779472);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,239,181,0.85)';
ctx.strokeStyle='rgb(144,167,119)';
ctx.moveTo(728345618,116005769);
ctx.lineTo(728345618,8253560);
ctx.lineTo(828095196,8253560);
ctx.lineTo(828095196,116005769);
ctx.lineTo(728345618,116005769);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,3,132,0.85)';
ctx.strokeStyle='rgb(220,53,188)';
ctx.moveTo(979941334,102336210);
ctx.lineTo(979941334,95799946);
ctx.lineTo(989063553,95799946);
ctx.lineTo(989063553,102336210);
ctx.lineTo(979941334,102336210);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,120,177,0.85)';
ctx.strokeStyle='rgb(96,215,176)';
ctx.moveTo(490390086,493497481);
ctx.lineTo(490390086,262532789);
ctx.lineTo(831952060,262532789);
ctx.lineTo(831952060,493497481);
ctx.lineTo(490390086,493497481);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,239,197,0.85)';
ctx.strokeStyle='rgb(47,152,184)';
ctx.moveTo(416491476,704102520);
ctx.lineTo(416491476,17809490);
ctx.lineTo(712678090,17809490);
ctx.lineTo(712678090,704102520);
ctx.lineTo(416491476,704102520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,90,214,0.85)';
ctx.strokeStyle='rgb(195,52,117)';
ctx.moveTo(3571383,234539109);
ctx.lineTo(3571383,87905727);
ctx.lineTo(297773802,87905727);
ctx.lineTo(297773802,234539109);
ctx.lineTo(3571383,234539109);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,20,55,0.85)';
ctx.strokeStyle='rgb(189,206,239)';
ctx.moveTo(597249302,795630328);
ctx.lineTo(597249302,193661088);
ctx.lineTo(859117754,193661088);
ctx.lineTo(859117754,795630328);
ctx.lineTo(597249302,795630328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,150,42,0.85)';
ctx.strokeStyle='rgb(249,252,223)';
ctx.moveTo(75639347,334028868);
ctx.lineTo(75639347,178979192);
ctx.lineTo(401063183,178979192);
ctx.lineTo(401063183,334028868);
ctx.lineTo(75639347,334028868);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,65,196,0.85)';
ctx.strokeStyle='rgb(149,200,134)';
ctx.moveTo(861145521,6513621);
ctx.lineTo(861145521,6141008);
ctx.lineTo(897935689,6141008);
ctx.lineTo(897935689,6513621);
ctx.lineTo(861145521,6513621);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,52,207,0.85)';
ctx.strokeStyle='rgb(103,127,157)';
ctx.moveTo(146432475,571785915);
ctx.lineTo(146432475,508874137);
ctx.lineTo(401205882,508874137);
ctx.lineTo(401205882,571785915);
ctx.lineTo(146432475,571785915);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,46,176,0.85)';
ctx.strokeStyle='rgb(225,143,209)';
ctx.moveTo(484736129,358172444);
ctx.lineTo(484736129,55554455);
ctx.lineTo(940081437,55554455);
ctx.lineTo(940081437,358172444);
ctx.lineTo(484736129,358172444);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,182,183,0.85)';
ctx.strokeStyle='rgb(48,109,72)';
ctx.moveTo(614440773,623684458);
ctx.lineTo(614440773,417854762);
ctx.lineTo(912232730,417854762);
ctx.lineTo(912232730,623684458);
ctx.lineTo(614440773,623684458);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,98,209,0.85)';
ctx.strokeStyle='rgb(86,116,187)';
ctx.moveTo(410789189,48494364);
ctx.lineTo(410789189,14884236);
ctx.lineTo(613883277,14884236);
ctx.lineTo(613883277,48494364);
ctx.lineTo(410789189,48494364);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,156,116,0.85)';
ctx.strokeStyle='rgb(102,250,74)';
ctx.moveTo(322623894,649904464);
ctx.lineTo(322623894,51127841);
ctx.lineTo(448475038,51127841);
ctx.lineTo(448475038,649904464);
ctx.lineTo(322623894,649904464);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,173,156,0.85)';
ctx.strokeStyle='rgb(118,33,127)';
ctx.moveTo(267512055,265512680);
ctx.lineTo(267512055,10949591);
ctx.lineTo(587923702,10949591);
ctx.lineTo(587923702,265512680);
ctx.lineTo(267512055,265512680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,239,242,0.85)';
ctx.strokeStyle='rgb(145,37,60)';
ctx.moveTo(542035960,475219546);
ctx.lineTo(542035960,469107649);
ctx.lineTo(808727938,469107649);
ctx.lineTo(808727938,475219546);
ctx.lineTo(542035960,475219546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,90,228,0.85)';
ctx.strokeStyle='rgb(67,210,95)';
ctx.moveTo(221420632,596699690);
ctx.lineTo(221420632,351010040);
ctx.lineTo(256892268,351010040);
ctx.lineTo(256892268,596699690);
ctx.lineTo(221420632,596699690);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,23,109,0.85)';
ctx.strokeStyle='rgb(170,12,139)';
ctx.moveTo(584050438,696890499);
ctx.lineTo(584050438,672441924);
ctx.lineTo(941275593,672441924);
ctx.lineTo(941275593,696890499);
ctx.lineTo(584050438,696890499);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,194,92,0.85)';
ctx.strokeStyle='rgb(169,134,4)';
ctx.moveTo(184393661,48743808);
ctx.lineTo(184393661,14589927);
ctx.lineTo(539732449,14589927);
ctx.lineTo(539732449,48743808);
ctx.lineTo(184393661,48743808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,12,190,0.85)';
ctx.strokeStyle='rgb(45,87,224)';
ctx.moveTo(181199984,91595205);
ctx.lineTo(181199984,12608334);
ctx.lineTo(253106047,12608334);
ctx.lineTo(253106047,91595205);
ctx.lineTo(181199984,91595205);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,152,68,0.85)';
ctx.strokeStyle='rgb(201,217,231)';
ctx.moveTo(423276443,372380224);
ctx.lineTo(423276443,270344651);
ctx.lineTo(481694605,270344651);
ctx.lineTo(481694605,372380224);
ctx.lineTo(423276443,372380224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,29,130,0.85)';
ctx.strokeStyle='rgb(13,247,72)';
ctx.moveTo(916679437,180861847);
ctx.lineTo(916679437,141685125);
ctx.lineTo(935830826,141685125);
ctx.lineTo(935830826,180861847);
ctx.lineTo(916679437,180861847);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,134,129,0.85)';
ctx.strokeStyle='rgb(83,127,242)';
ctx.moveTo(219754281,815277298);
ctx.lineTo(219754281,146560298);
ctx.lineTo(682565933,146560298);
ctx.lineTo(682565933,815277298);
ctx.lineTo(219754281,815277298);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,9,84,0.85)';
ctx.strokeStyle='rgb(81,200,108)';
ctx.moveTo(402631140,625757605);
ctx.lineTo(402631140,421251243);
ctx.lineTo(611112129,421251243);
ctx.lineTo(611112129,625757605);
ctx.lineTo(402631140,625757605);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,5,38,0.85)';
ctx.strokeStyle='rgb(79,2,112)';
ctx.moveTo(621271083,82206272);
ctx.lineTo(621271083,27217113);
ctx.lineTo(643360005,27217113);
ctx.lineTo(643360005,82206272);
ctx.lineTo(621271083,82206272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,193,162,0.85)';
ctx.strokeStyle='rgb(23,152,118)';
ctx.moveTo(799329535,760860455);
ctx.lineTo(799329535,400768405);
ctx.lineTo(972217291,400768405);
ctx.lineTo(972217291,760860455);
ctx.lineTo(799329535,760860455);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,31,129,0.85)';
ctx.strokeStyle='rgb(245,5,117)';
ctx.moveTo(605422510,965483906);
ctx.lineTo(605422510,920072633);
ctx.lineTo(955900914,920072633);
ctx.lineTo(955900914,965483906);
ctx.lineTo(605422510,965483906);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,124,48,0.85)';
ctx.strokeStyle='rgb(151,122,22)';
ctx.moveTo(14304262,771872185);
ctx.lineTo(14304262,84327766);
ctx.lineTo(379785686,84327766);
ctx.lineTo(379785686,771872185);
ctx.lineTo(14304262,771872185);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,18,159,0.85)';
ctx.strokeStyle='rgb(125,80,69)';
ctx.moveTo(689887595,225978706);
ctx.lineTo(689887595,18846541);
ctx.lineTo(837334423,18846541);
ctx.lineTo(837334423,225978706);
ctx.lineTo(689887595,225978706);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,206,80,0.85)';
ctx.strokeStyle='rgb(229,200,143)';
ctx.moveTo(194746820,687851512);
ctx.lineTo(194746820,150554950);
ctx.lineTo(386386646,150554950);
ctx.lineTo(386386646,687851512);
ctx.lineTo(194746820,687851512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,174,140,0.85)';
ctx.strokeStyle='rgb(177,235,195)';
ctx.moveTo(367877482,379549940);
ctx.lineTo(367877482,129094423);
ctx.lineTo(375633549,129094423);
ctx.lineTo(375633549,379549940);
ctx.lineTo(367877482,379549940);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,149,41,0.85)';
ctx.strokeStyle='rgb(74,109,159)';
ctx.moveTo(279922232,982522770);
ctx.lineTo(279922232,798534487);
ctx.lineTo(550949946,798534487);
ctx.lineTo(550949946,982522770);
ctx.lineTo(279922232,982522770);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,192,69,0.85)';
ctx.strokeStyle='rgb(101,208,171)';
ctx.moveTo(665056531,72315583);
ctx.lineTo(665056531,59388599);
ctx.lineTo(686718837,59388599);
ctx.lineTo(686718837,72315583);
ctx.lineTo(665056531,72315583);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,20,159,0.85)';
ctx.strokeStyle='rgb(173,241,59)';
ctx.moveTo(392505577,887393456);
ctx.lineTo(392505577,884400689);
ctx.lineTo(712556587,884400689);
ctx.lineTo(712556587,887393456);
ctx.lineTo(392505577,887393456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,111,11,0.85)';
ctx.strokeStyle='rgb(108,175,64)';
ctx.moveTo(444501511,504852185);
ctx.lineTo(444501511,418003533);
ctx.lineTo(622651578,418003533);
ctx.lineTo(622651578,504852185);
ctx.lineTo(444501511,504852185);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,108,74,0.85)';
ctx.strokeStyle='rgb(81,232,220)';
ctx.moveTo(779233925,586335437);
ctx.lineTo(779233925,171046451);
ctx.lineTo(910453387,171046451);
ctx.lineTo(910453387,586335437);
ctx.lineTo(779233925,586335437);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,191,201,0.85)';
ctx.strokeStyle='rgb(192,232,97)';
ctx.moveTo(840647943,125557928);
ctx.lineTo(840647943,11896036);
ctx.lineTo(977158672,11896036);
ctx.lineTo(977158672,125557928);
ctx.lineTo(840647943,125557928);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,203,158,0.85)';
ctx.strokeStyle='rgb(213,105,243)';
ctx.moveTo(148059251,233932815);
ctx.lineTo(148059251,102132490);
ctx.lineTo(487797027,102132490);
ctx.lineTo(487797027,233932815);
ctx.lineTo(148059251,233932815);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,157,253,0.85)';
ctx.strokeStyle='rgb(75,92,89)';
ctx.moveTo(763494172,734038666);
ctx.lineTo(763494172,629252058);
ctx.lineTo(818387926,629252058);
ctx.lineTo(818387926,734038666);
ctx.lineTo(763494172,734038666);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,87,26,0.85)';
ctx.strokeStyle='rgb(68,155,55)';
ctx.moveTo(740072415,265227035);
ctx.lineTo(740072415,256031953);
ctx.lineTo(947311100,256031953);
ctx.lineTo(947311100,265227035);
ctx.lineTo(740072415,265227035);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,95,196,0.85)';
ctx.strokeStyle='rgb(115,42,18)';
ctx.moveTo(788499469,636431460);
ctx.lineTo(788499469,150312183);
ctx.lineTo(823735820,150312183);
ctx.lineTo(823735820,636431460);
ctx.lineTo(788499469,636431460);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,27,221,0.85)';
ctx.strokeStyle='rgb(214,1,215)';
ctx.moveTo(283371015,539483692);
ctx.lineTo(283371015,305168655);
ctx.lineTo(734031466,305168655);
ctx.lineTo(734031466,539483692);
ctx.lineTo(283371015,539483692);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,168,205,0.85)';
ctx.strokeStyle='rgb(9,35,125)';
ctx.moveTo(127605639,263868832);
ctx.lineTo(127605639,187001723);
ctx.lineTo(472507204,187001723);
ctx.lineTo(472507204,263868832);
ctx.lineTo(127605639,263868832);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,115,48,0.85)';
ctx.strokeStyle='rgb(128,142,211)';
ctx.moveTo(362343326,299429138);
ctx.lineTo(362343326,266771763);
ctx.lineTo(861995185,266771763);
ctx.lineTo(861995185,299429138);
ctx.lineTo(362343326,299429138);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,77,120,0.85)';
ctx.strokeStyle='rgb(94,180,101)';
ctx.moveTo(180492491,208904448);
ctx.lineTo(180492491,189996579);
ctx.lineTo(817605585,189996579);
ctx.lineTo(817605585,208904448);
ctx.lineTo(180492491,208904448);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,39,101,0.85)';
ctx.strokeStyle='rgb(193,58,33)';
ctx.moveTo(900083865,592948141);
ctx.lineTo(900083865,544049947);
ctx.lineTo(900191828,544049947);
ctx.lineTo(900191828,592948141);
ctx.lineTo(900083865,592948141);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,189,130,0.85)';
ctx.strokeStyle='rgb(49,235,176)';
ctx.moveTo(323771806,118251616);
ctx.lineTo(323771806,17414013);
ctx.lineTo(494472331,17414013);
ctx.lineTo(494472331,118251616);
ctx.lineTo(323771806,118251616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,163,155,0.85)';
ctx.strokeStyle='rgb(131,62,122)';
ctx.moveTo(452620697,23275376);
ctx.lineTo(452620697,5083090);
ctx.lineTo(751917294,5083090);
ctx.lineTo(751917294,23275376);
ctx.lineTo(452620697,23275376);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,65,238,0.85)';
ctx.strokeStyle='rgb(190,48,188)';
ctx.moveTo(709609602,670508773);
ctx.lineTo(709609602,624695929);
ctx.lineTo(831628969,624695929);
ctx.lineTo(831628969,670508773);
ctx.lineTo(709609602,670508773);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,249,66,0.85)';
ctx.strokeStyle='rgb(202,51,103)';
ctx.moveTo(482127782,135785282);
ctx.lineTo(482127782,50631196);
ctx.lineTo(992685092,50631196);
ctx.lineTo(992685092,135785282);
ctx.lineTo(482127782,135785282);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,35,188,0.85)';
ctx.strokeStyle='rgb(11,123,30)';
ctx.moveTo(652130862,988047776);
ctx.lineTo(652130862,312831269);
ctx.lineTo(776959379,312831269);
ctx.lineTo(776959379,988047776);
ctx.lineTo(652130862,988047776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,202,73,0.85)';
ctx.strokeStyle='rgb(182,253,198)';
ctx.moveTo(27616124,166297694);
ctx.lineTo(27616124,85293810);
ctx.lineTo(248766554,85293810);
ctx.lineTo(248766554,166297694);
ctx.lineTo(27616124,166297694);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,20,44,0.85)';
ctx.strokeStyle='rgb(71,112,71)';
ctx.moveTo(486742675,787505672);
ctx.lineTo(486742675,535109344);
ctx.lineTo(679268795,535109344);
ctx.lineTo(679268795,787505672);
ctx.lineTo(486742675,787505672);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,25,52,0.85)';
ctx.strokeStyle='rgb(233,9,127)';
ctx.moveTo(411776778,654662995);
ctx.lineTo(411776778,87717067);
ctx.lineTo(597087034,87717067);
ctx.lineTo(597087034,654662995);
ctx.lineTo(411776778,654662995);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,146,145,0.85)';
ctx.strokeStyle='rgb(40,123,159)';
ctx.moveTo(750065882,422715556);
ctx.lineTo(750065882,230277129);
ctx.lineTo(867749079,230277129);
ctx.lineTo(867749079,422715556);
ctx.lineTo(750065882,422715556);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,145,141,0.85)';
ctx.strokeStyle='rgb(6,5,241)';
ctx.moveTo(2985510,380896572);
ctx.lineTo(2985510,38816124);
ctx.lineTo(146887338,38816124);
ctx.lineTo(146887338,380896572);
ctx.lineTo(2985510,380896572);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,115,205,0.85)';
ctx.strokeStyle='rgb(82,179,253)';
ctx.moveTo(287229473,528841826);
ctx.lineTo(287229473,133865828);
ctx.lineTo(761218534,133865828);
ctx.lineTo(761218534,528841826);
ctx.lineTo(287229473,528841826);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,61,106,0.85)';
ctx.strokeStyle='rgb(201,66,26)';
ctx.moveTo(563225427,655662557);
ctx.lineTo(563225427,592194414);
ctx.lineTo(883793114,592194414);
ctx.lineTo(883793114,655662557);
ctx.lineTo(563225427,655662557);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,39,105,0.85)';
ctx.strokeStyle='rgb(27,123,5)';
ctx.moveTo(680423481,393791296);
ctx.lineTo(680423481,68488855);
ctx.lineTo(757898814,68488855);
ctx.lineTo(757898814,393791296);
ctx.lineTo(680423481,393791296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,231,166,0.85)';
ctx.strokeStyle='rgb(65,122,179)';
ctx.moveTo(8166061,469222790);
ctx.lineTo(8166061,91029143);
ctx.lineTo(849258669,91029143);
ctx.lineTo(849258669,469222790);
ctx.lineTo(8166061,469222790);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,143,219,0.85)';
ctx.strokeStyle='rgb(154,151,180)';
ctx.moveTo(173098563,406263177);
ctx.lineTo(173098563,67963609);
ctx.lineTo(765855379,67963609);
ctx.lineTo(765855379,406263177);
ctx.lineTo(173098563,406263177);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,3,117,0.85)';
ctx.strokeStyle='rgb(101,239,192)';
ctx.moveTo(346335320,599810851);
ctx.lineTo(346335320,239256301);
ctx.lineTo(961440009,239256301);
ctx.lineTo(961440009,599810851);
ctx.lineTo(346335320,599810851);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,68,143,0.85)';
ctx.strokeStyle='rgb(39,155,19)';
ctx.moveTo(157134008,922894837);
ctx.lineTo(157134008,695627231);
ctx.lineTo(371079271,695627231);
ctx.lineTo(371079271,922894837);
ctx.lineTo(157134008,922894837);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,204,90,0.85)';
ctx.strokeStyle='rgb(31,253,131)';
ctx.moveTo(773389516,209546678);
ctx.lineTo(773389516,124227576);
ctx.lineTo(994968631,124227576);
ctx.lineTo(994968631,209546678);
ctx.lineTo(773389516,209546678);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,74,14,0.85)';
ctx.strokeStyle='rgb(105,2,222)';
ctx.moveTo(833867883,770345334);
ctx.lineTo(833867883,402329246);
ctx.lineTo(989819256,402329246);
ctx.lineTo(989819256,770345334);
ctx.lineTo(833867883,770345334);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,55,75,0.85)';
ctx.strokeStyle='rgb(177,207,143)';
ctx.moveTo(896557105,687350493);
ctx.lineTo(896557105,84126337);
ctx.lineTo(979467273,84126337);
ctx.lineTo(979467273,687350493);
ctx.lineTo(896557105,687350493);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,210,144,0.85)';
ctx.strokeStyle='rgb(208,73,195)';
ctx.moveTo(571720223,644452943);
ctx.lineTo(571720223,119587632);
ctx.lineTo(837533365,119587632);
ctx.lineTo(837533365,644452943);
ctx.lineTo(571720223,644452943);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,245,202,0.85)';
ctx.strokeStyle='rgb(139,116,224)';
ctx.moveTo(312773567,407859012);
ctx.lineTo(312773567,45259757);
ctx.lineTo(442735093,45259757);
ctx.lineTo(442735093,407859012);
ctx.lineTo(312773567,407859012);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,215,174,0.85)';
ctx.strokeStyle='rgb(67,212,81)';
ctx.moveTo(475717547,473572632);
ctx.lineTo(475717547,222062809);
ctx.lineTo(743027649,222062809);
ctx.lineTo(743027649,473572632);
ctx.lineTo(475717547,473572632);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,65,169,0.85)';
ctx.strokeStyle='rgb(91,175,80)';
ctx.moveTo(331666499,520426684);
ctx.lineTo(331666499,75546024);
ctx.lineTo(804391612,75546024);
ctx.lineTo(804391612,520426684);
ctx.lineTo(331666499,520426684);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,23,163,0.85)';
ctx.strokeStyle='rgb(51,149,51)';
ctx.moveTo(302415281,371849026);
ctx.lineTo(302415281,80898977);
ctx.lineTo(559683943,80898977);
ctx.lineTo(559683943,371849026);
ctx.lineTo(302415281,371849026);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,26,211,0.85)';
ctx.strokeStyle='rgb(244,27,208)';
ctx.moveTo(188552211,397608915);
ctx.lineTo(188552211,126433107);
ctx.lineTo(935789339,126433107);
ctx.lineTo(935789339,397608915);
ctx.lineTo(188552211,397608915);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,188,122,0.85)';
ctx.strokeStyle='rgb(116,105,245)';
ctx.moveTo(446642057,990717272);
ctx.lineTo(446642057,782888096);
ctx.lineTo(525919891,782888096);
ctx.lineTo(525919891,990717272);
ctx.lineTo(446642057,990717272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,142,117,0.85)';
ctx.strokeStyle='rgb(88,82,14)';
ctx.moveTo(707437033,318049501);
ctx.lineTo(707437033,36357300);
ctx.lineTo(726470651,36357300);
ctx.lineTo(726470651,318049501);
ctx.lineTo(707437033,318049501);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,123,139,0.85)';
ctx.strokeStyle='rgb(122,66,240)';
ctx.moveTo(56195028,127564574);
ctx.lineTo(56195028,87370217);
ctx.lineTo(378222976,87370217);
ctx.lineTo(378222976,127564574);
ctx.lineTo(56195028,127564574);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,139,1,0.85)';
ctx.strokeStyle='rgb(9,16,215)';
ctx.moveTo(195567242,599706139);
ctx.lineTo(195567242,483561515);
ctx.lineTo(706940297,483561515);
ctx.lineTo(706940297,599706139);
ctx.lineTo(195567242,599706139);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,91,142,0.85)';
ctx.strokeStyle='rgb(251,117,18)';
ctx.moveTo(374666916,849652084);
ctx.lineTo(374666916,5077694);
ctx.lineTo(647556674,5077694);
ctx.lineTo(647556674,849652084);
ctx.lineTo(374666916,849652084);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,10,167,0.85)';
ctx.strokeStyle='rgb(129,16,11)';
ctx.moveTo(457063957,784631056);
ctx.lineTo(457063957,393648801);
ctx.lineTo(725881135,393648801);
ctx.lineTo(725881135,784631056);
ctx.lineTo(457063957,784631056);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,120,208,0.85)';
ctx.strokeStyle='rgb(24,244,78)';
ctx.moveTo(155506256,239462711);
ctx.lineTo(155506256,89751470);
ctx.lineTo(661526732,89751470);
ctx.lineTo(661526732,239462711);
ctx.lineTo(155506256,239462711);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,168,5,0.85)';
ctx.strokeStyle='rgb(36,18,158)';
ctx.moveTo(722773657,297909073);
ctx.lineTo(722773657,144386593);
ctx.lineTo(825224265,144386593);
ctx.lineTo(825224265,297909073);
ctx.lineTo(722773657,297909073);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,48,101,0.85)';
ctx.strokeStyle='rgb(235,104,129)';
ctx.moveTo(267775489,202209712);
ctx.lineTo(267775489,185204499);
ctx.lineTo(653148139,185204499);
ctx.lineTo(653148139,202209712);
ctx.lineTo(267775489,202209712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,182,10,0.85)';
ctx.strokeStyle='rgb(149,45,46)';
ctx.moveTo(357962631,803002646);
ctx.lineTo(357962631,233084359);
ctx.lineTo(646668535,233084359);
ctx.lineTo(646668535,803002646);
ctx.lineTo(357962631,803002646);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,122,249,0.85)';
ctx.strokeStyle='rgb(22,89,102)';
ctx.moveTo(677571374,104151201);
ctx.lineTo(677571374,83823774);
ctx.lineTo(857710512,83823774);
ctx.lineTo(857710512,104151201);
ctx.lineTo(677571374,104151201);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,39,1,0.85)';
ctx.strokeStyle='rgb(228,196,27)';
ctx.moveTo(313376730,722840600);
ctx.lineTo(313376730,417472545);
ctx.lineTo(655665310,417472545);
ctx.lineTo(655665310,722840600);
ctx.lineTo(313376730,722840600);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,85,226,0.85)';
ctx.strokeStyle='rgb(40,66,226)';
ctx.moveTo(622432388,567395020);
ctx.lineTo(622432388,82439428);
ctx.lineTo(859654180,82439428);
ctx.lineTo(859654180,567395020);
ctx.lineTo(622432388,567395020);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,54,172,0.85)';
ctx.strokeStyle='rgb(191,9,194)';
ctx.moveTo(139456280,335048961);
ctx.lineTo(139456280,122901309);
ctx.lineTo(425053741,122901309);
ctx.lineTo(425053741,335048961);
ctx.lineTo(139456280,335048961);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,18,42,0.85)';
ctx.strokeStyle='rgb(82,180,77)';
ctx.moveTo(123559200,979089498);
ctx.lineTo(123559200,533711482);
ctx.lineTo(881420341,533711482);
ctx.lineTo(881420341,979089498);
ctx.lineTo(123559200,979089498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,52,177,0.85)';
ctx.strokeStyle='rgb(147,113,244)';
ctx.moveTo(389215681,912098365);
ctx.lineTo(389215681,87303536);
ctx.lineTo(560689812,87303536);
ctx.lineTo(560689812,912098365);
ctx.lineTo(389215681,912098365);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,151,194,0.85)';
ctx.strokeStyle='rgb(86,218,32)';
ctx.moveTo(158416727,951561516);
ctx.lineTo(158416727,920502868);
ctx.lineTo(594604939,920502868);
ctx.lineTo(594604939,951561516);
ctx.lineTo(158416727,951561516);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,178,229,0.85)';
ctx.strokeStyle='rgb(2,11,91)';
ctx.moveTo(503094091,756790273);
ctx.lineTo(503094091,175605265);
ctx.lineTo(777598072,175605265);
ctx.lineTo(777598072,756790273);
ctx.lineTo(503094091,756790273);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,167,170,0.85)';
ctx.strokeStyle='rgb(130,254,117)';
ctx.moveTo(108448209,80653087);
ctx.lineTo(108448209,22230113);
ctx.lineTo(116517854,22230113);
ctx.lineTo(116517854,80653087);
ctx.lineTo(108448209,80653087);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,114,111,0.85)';
ctx.strokeStyle='rgb(78,92,127)';
ctx.moveTo(28863706,93885959);
ctx.lineTo(28863706,93527055);
ctx.lineTo(255447227,93527055);
ctx.lineTo(255447227,93885959);
ctx.lineTo(28863706,93885959);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,95,4,0.85)';
ctx.strokeStyle='rgb(235,181,132)';
ctx.moveTo(742928201,513416236);
ctx.lineTo(742928201,287884662);
ctx.lineTo(786764505,287884662);
ctx.lineTo(786764505,513416236);
ctx.lineTo(742928201,513416236);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,73,100,0.85)';
ctx.strokeStyle='rgb(141,175,219)';
ctx.moveTo(724915056,499971632);
ctx.lineTo(724915056,244281984);
ctx.lineTo(792493420,244281984);
ctx.lineTo(792493420,499971632);
ctx.lineTo(724915056,499971632);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,132,26,0.85)';
ctx.strokeStyle='rgb(159,143,4)';
ctx.moveTo(918559644,104737699);
ctx.lineTo(918559644,3803990);
ctx.lineTo(950309610,3803990);
ctx.lineTo(950309610,104737699);
ctx.lineTo(918559644,104737699);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,229,210,0.85)';
ctx.strokeStyle='rgb(84,221,223)';
ctx.moveTo(718829059,52976023);
ctx.lineTo(718829059,45390451);
ctx.lineTo(903673923,45390451);
ctx.lineTo(903673923,52976023);
ctx.lineTo(718829059,52976023);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,202,93,0.85)';
ctx.strokeStyle='rgb(145,49,168)';
ctx.moveTo(336323375,74597683);
ctx.lineTo(336323375,33152081);
ctx.lineTo(884676719,33152081);
ctx.lineTo(884676719,74597683);
ctx.lineTo(336323375,74597683);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,208,70,0.85)';
ctx.strokeStyle='rgb(208,157,12)';
ctx.moveTo(830399835,111050508);
ctx.lineTo(830399835,109528618);
ctx.lineTo(925586414,109528618);
ctx.lineTo(925586414,111050508);
ctx.lineTo(830399835,111050508);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,130,254,0.85)';
ctx.strokeStyle='rgb(69,241,12)';
ctx.moveTo(303227647,218240012);
ctx.lineTo(303227647,177314954);
ctx.lineTo(797152967,177314954);
ctx.lineTo(797152967,218240012);
ctx.lineTo(303227647,218240012);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,0,73,0.85)';
ctx.strokeStyle='rgb(66,67,178)';
ctx.moveTo(756512582,150066062);
ctx.lineTo(756512582,60178960);
ctx.lineTo(829240785,60178960);
ctx.lineTo(829240785,150066062);
ctx.lineTo(756512582,150066062);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,186,179,0.85)';
ctx.strokeStyle='rgb(91,18,187)';
ctx.moveTo(641830103,826413969);
ctx.lineTo(641830103,28609203);
ctx.lineTo(802144049,28609203);
ctx.lineTo(802144049,826413969);
ctx.lineTo(641830103,826413969);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,87,228,0.85)';
ctx.strokeStyle='rgb(43,170,247)';
ctx.moveTo(492959866,955560566);
ctx.lineTo(492959866,181187869);
ctx.lineTo(505108121,181187869);
ctx.lineTo(505108121,955560566);
ctx.lineTo(492959866,955560566);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,148,90,0.85)';
ctx.strokeStyle='rgb(150,33,252)';
ctx.moveTo(805235750,195482619);
ctx.lineTo(805235750,118620577);
ctx.lineTo(859739924,118620577);
ctx.lineTo(859739924,195482619);
ctx.lineTo(805235750,195482619);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,146,30,0.85)';
ctx.strokeStyle='rgb(244,25,6)';
ctx.moveTo(278432144,189261535);
ctx.lineTo(278432144,37356600);
ctx.lineTo(409166800,37356600);
ctx.lineTo(409166800,189261535);
ctx.lineTo(278432144,189261535);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,103,98,0.85)';
ctx.strokeStyle='rgb(246,26,143)';
ctx.moveTo(706473927,562219327);
ctx.lineTo(706473927,187404900);
ctx.lineTo(787657746,187404900);
ctx.lineTo(787657746,562219327);
ctx.lineTo(706473927,562219327);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,50,146,0.85)';
ctx.strokeStyle='rgb(34,41,210)';
ctx.moveTo(579519457,612987876);
ctx.lineTo(579519457,76921861);
ctx.lineTo(843678073,76921861);
ctx.lineTo(843678073,612987876);
ctx.lineTo(579519457,612987876);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,87,153,0.85)';
ctx.strokeStyle='rgb(79,188,193)';
ctx.moveTo(689614626,792386045);
ctx.lineTo(689614626,7376988);
ctx.lineTo(780544873,7376988);
ctx.lineTo(780544873,792386045);
ctx.lineTo(689614626,792386045);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,220,223,0.85)';
ctx.strokeStyle='rgb(5,245,88)';
ctx.moveTo(578328222,582738018);
ctx.lineTo(578328222,305539834);
ctx.lineTo(838956955,305539834);
ctx.lineTo(838956955,582738018);
ctx.lineTo(578328222,582738018);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,254,101,0.85)';
ctx.strokeStyle='rgb(158,81,5)';
ctx.moveTo(757265665,342465808);
ctx.lineTo(757265665,249794864);
ctx.lineTo(804288849,249794864);
ctx.lineTo(804288849,342465808);
ctx.lineTo(757265665,342465808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,170,89,0.85)';
ctx.strokeStyle='rgb(89,83,33)';
ctx.moveTo(168700097,501967944);
ctx.lineTo(168700097,245830936);
ctx.lineTo(686875060,245830936);
ctx.lineTo(686875060,501967944);
ctx.lineTo(168700097,501967944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,234,223,0.85)';
ctx.strokeStyle='rgb(244,126,10)';
ctx.moveTo(639907008,451390174);
ctx.lineTo(639907008,53762321);
ctx.lineTo(958051764,53762321);
ctx.lineTo(958051764,451390174);
ctx.lineTo(639907008,451390174);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,198,51,0.85)';
ctx.strokeStyle='rgb(25,107,140)';
ctx.moveTo(383361485,938890644);
ctx.lineTo(383361485,588893951);
ctx.lineTo(990262188,588893951);
ctx.lineTo(990262188,938890644);
ctx.lineTo(383361485,938890644);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,150,37,0.85)';
ctx.strokeStyle='rgb(32,20,190)';
ctx.moveTo(295485889,466576690);
ctx.lineTo(295485889,249570065);
ctx.lineTo(702387198,249570065);
ctx.lineTo(702387198,466576690);
ctx.lineTo(295485889,466576690);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,76,180,0.85)';
ctx.strokeStyle='rgb(179,57,123)';
ctx.moveTo(506695163,522706352);
ctx.lineTo(506695163,401959843);
ctx.lineTo(668466612,401959843);
ctx.lineTo(668466612,522706352);
ctx.lineTo(506695163,522706352);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,180,96,0.85)';
ctx.strokeStyle='rgb(199,175,152)';
ctx.moveTo(624653206,249939960);
ctx.lineTo(624653206,14032831);
ctx.lineTo(980666072,14032831);
ctx.lineTo(980666072,249939960);
ctx.lineTo(624653206,249939960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,174,229,0.85)';
ctx.strokeStyle='rgb(159,232,75)';
ctx.moveTo(284987775,176734963);
ctx.lineTo(284987775,81106327);
ctx.lineTo(658952397,81106327);
ctx.lineTo(658952397,176734963);
ctx.lineTo(284987775,176734963);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,165,70,0.85)';
ctx.strokeStyle='rgb(147,23,192)';
ctx.moveTo(640650526,284913499);
ctx.lineTo(640650526,46799872);
ctx.lineTo(793160748,46799872);
ctx.lineTo(793160748,284913499);
ctx.lineTo(640650526,284913499);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,96,101,0.85)';
ctx.strokeStyle='rgb(69,76,244)';
ctx.moveTo(187915671,967655419);
ctx.lineTo(187915671,526887571);
ctx.lineTo(195002746,526887571);
ctx.lineTo(195002746,967655419);
ctx.lineTo(187915671,967655419);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,47,235,0.85)';
ctx.strokeStyle='rgb(138,28,154)';
ctx.moveTo(774422252,282304197);
ctx.lineTo(774422252,251518436);
ctx.lineTo(783822858,251518436);
ctx.lineTo(783822858,282304197);
ctx.lineTo(774422252,282304197);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,160,142,0.85)';
ctx.strokeStyle='rgb(181,243,225)';
ctx.moveTo(212989341,504663561);
ctx.lineTo(212989341,50325590);
ctx.lineTo(735518527,50325590);
ctx.lineTo(735518527,504663561);
ctx.lineTo(212989341,504663561);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,119,159,0.85)';
ctx.strokeStyle='rgb(106,180,12)';
ctx.moveTo(352285104,959424623);
ctx.lineTo(352285104,338621908);
ctx.lineTo(915546324,338621908);
ctx.lineTo(915546324,959424623);
ctx.lineTo(352285104,959424623);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,233,110,0.85)';
ctx.strokeStyle='rgb(1,171,93)';
ctx.moveTo(735332669,61129880);
ctx.lineTo(735332669,48435056);
ctx.lineTo(842571155,48435056);
ctx.lineTo(842571155,61129880);
ctx.lineTo(735332669,61129880);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,15,40,0.85)';
ctx.strokeStyle='rgb(243,82,40)';
ctx.moveTo(636115448,541485041);
ctx.lineTo(636115448,143271585);
ctx.lineTo(913317103,143271585);
ctx.lineTo(913317103,541485041);
ctx.lineTo(636115448,541485041);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,231,181,0.85)';
ctx.strokeStyle='rgb(202,194,84)';
ctx.moveTo(490832564,543826771);
ctx.lineTo(490832564,407760203);
ctx.lineTo(667485007,407760203);
ctx.lineTo(667485007,543826771);
ctx.lineTo(490832564,543826771);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,149,103,0.85)';
ctx.strokeStyle='rgb(134,247,152)';
ctx.moveTo(533068223,709376400);
ctx.lineTo(533068223,505088538);
ctx.lineTo(991519920,505088538);
ctx.lineTo(991519920,709376400);
ctx.lineTo(533068223,709376400);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,222,27,0.85)';
ctx.strokeStyle='rgb(245,26,15)';
ctx.moveTo(388696610,667443401);
ctx.lineTo(388696610,655075842);
ctx.lineTo(983976195,655075842);
ctx.lineTo(983976195,667443401);
ctx.lineTo(388696610,667443401);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,81,197,0.85)';
ctx.strokeStyle='rgb(186,192,161)';
ctx.moveTo(248764007,940566285);
ctx.lineTo(248764007,517583131);
ctx.lineTo(403826926,517583131);
ctx.lineTo(403826926,940566285);
ctx.lineTo(248764007,940566285);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,124,196,0.85)';
ctx.strokeStyle='rgb(118,172,186)';
ctx.moveTo(152413186,141782035);
ctx.lineTo(152413186,19435729);
ctx.lineTo(955377068,19435729);
ctx.lineTo(955377068,141782035);
ctx.lineTo(152413186,141782035);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,81,230,0.85)';
ctx.strokeStyle='rgb(59,113,178)';
ctx.moveTo(246416346,522209631);
ctx.lineTo(246416346,1497094);
ctx.lineTo(883829912,1497094);
ctx.lineTo(883829912,522209631);
ctx.lineTo(246416346,522209631);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,148,13,0.85)';
ctx.strokeStyle='rgb(113,232,80)';
ctx.moveTo(88616507,526682403);
ctx.lineTo(88616507,258674650);
ctx.lineTo(116068045,258674650);
ctx.lineTo(116068045,526682403);
ctx.lineTo(88616507,526682403);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,77,24,0.85)';
ctx.strokeStyle='rgb(214,39,8)';
ctx.moveTo(120540985,810160321);
ctx.lineTo(120540985,357829540);
ctx.lineTo(442893785,357829540);
ctx.lineTo(442893785,810160321);
ctx.lineTo(120540985,810160321);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,184,198,0.85)';
ctx.strokeStyle='rgb(55,136,220)';
ctx.moveTo(416103408,987971803);
ctx.lineTo(416103408,849091702);
ctx.lineTo(812667297,849091702);
ctx.lineTo(812667297,987971803);
ctx.lineTo(416103408,987971803);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,6,75,0.85)';
ctx.strokeStyle='rgb(195,139,10)';
ctx.moveTo(702389559,960987665);
ctx.lineTo(702389559,753984879);
ctx.lineTo(786630763,753984879);
ctx.lineTo(786630763,960987665);
ctx.lineTo(702389559,960987665);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,15,72,0.85)';
ctx.strokeStyle='rgb(223,205,67)';
ctx.moveTo(167812639,420556039);
ctx.lineTo(167812639,13649657);
ctx.lineTo(515812447,13649657);
ctx.lineTo(515812447,420556039);
ctx.lineTo(167812639,420556039);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,245,8,0.85)';
ctx.strokeStyle='rgb(51,97,77)';
ctx.moveTo(335440421,589140887);
ctx.lineTo(335440421,327930337);
ctx.lineTo(778614687,327930337);
ctx.lineTo(778614687,589140887);
ctx.lineTo(335440421,589140887);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,77,17,0.85)';
ctx.strokeStyle='rgb(127,112,75)';
ctx.moveTo(860187805,480133880);
ctx.lineTo(860187805,432143189);
ctx.lineTo(862557090,432143189);
ctx.lineTo(862557090,480133880);
ctx.lineTo(860187805,480133880);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,172,3,0.85)';
ctx.strokeStyle='rgb(12,111,42)';
ctx.moveTo(458176146,535284715);
ctx.lineTo(458176146,9541584);
ctx.lineTo(709283575,9541584);
ctx.lineTo(709283575,535284715);
ctx.lineTo(458176146,535284715);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,129,136,0.85)';
ctx.strokeStyle='rgb(122,76,64)';
ctx.moveTo(434325028,299082179);
ctx.lineTo(434325028,134162251);
ctx.lineTo(595296007,134162251);
ctx.lineTo(595296007,299082179);
ctx.lineTo(434325028,299082179);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,192,220,0.85)';
ctx.strokeStyle='rgb(208,51,0)';
ctx.moveTo(865337095,338743243);
ctx.lineTo(865337095,306232116);
ctx.lineTo(882964392,306232116);
ctx.lineTo(882964392,338743243);
ctx.lineTo(865337095,338743243);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,230,85,0.85)';
ctx.strokeStyle='rgb(233,195,36)';
ctx.moveTo(61265609,157108801);
ctx.lineTo(61265609,101551199);
ctx.lineTo(974686733,101551199);
ctx.lineTo(974686733,157108801);
ctx.lineTo(61265609,157108801);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,178,208,0.85)';
ctx.strokeStyle='rgb(217,74,179)';
ctx.moveTo(343154751,88534121);
ctx.lineTo(343154751,39201070);
ctx.lineTo(978391957,39201070);
ctx.lineTo(978391957,88534121);
ctx.lineTo(343154751,88534121);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,245,71,0.85)';
ctx.strokeStyle='rgb(148,211,218)';
ctx.moveTo(399613462,123207607);
ctx.lineTo(399613462,16100498);
ctx.lineTo(774241690,16100498);
ctx.lineTo(774241690,123207607);
ctx.lineTo(399613462,123207607);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,30,50,0.85)';
ctx.strokeStyle='rgb(252,172,112)';
ctx.moveTo(611182608,478700249);
ctx.lineTo(611182608,354376904);
ctx.lineTo(946954341,354376904);
ctx.lineTo(946954341,478700249);
ctx.lineTo(611182608,478700249);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,60,89,0.85)';
ctx.strokeStyle='rgb(51,239,207)';
ctx.moveTo(131157377,775177409);
ctx.lineTo(131157377,690868155);
ctx.lineTo(217826944,690868155);
ctx.lineTo(217826944,775177409);
ctx.lineTo(131157377,775177409);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,31,0,0.85)';
ctx.strokeStyle='rgb(221,17,195)';
ctx.moveTo(63586995,699334941);
ctx.lineTo(63586995,325604955);
ctx.lineTo(138639380,325604955);
ctx.lineTo(138639380,699334941);
ctx.lineTo(63586995,699334941);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,130,157,0.85)';
ctx.strokeStyle='rgb(218,197,26)';
ctx.moveTo(470930061,397756102);
ctx.lineTo(470930061,8673063);
ctx.lineTo(675449553,8673063);
ctx.lineTo(675449553,397756102);
ctx.lineTo(470930061,397756102);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,25,119,0.85)';
ctx.strokeStyle='rgb(245,233,49)';
ctx.moveTo(945893181,598977305);
ctx.lineTo(945893181,43422650);
ctx.lineTo(995109948,43422650);
ctx.lineTo(995109948,598977305);
ctx.lineTo(945893181,598977305);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,57,243,0.85)';
ctx.strokeStyle='rgb(169,2,30)';
ctx.moveTo(587431385,547089718);
ctx.lineTo(587431385,225469868);
ctx.lineTo(815579020,225469868);
ctx.lineTo(815579020,547089718);
ctx.lineTo(587431385,547089718);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,198,108,0.85)';
ctx.strokeStyle='rgb(220,127,227)';
ctx.moveTo(711064769,214790862);
ctx.lineTo(711064769,169747691);
ctx.lineTo(905782770,169747691);
ctx.lineTo(905782770,214790862);
ctx.lineTo(711064769,214790862);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,3,69,0.85)';
ctx.strokeStyle='rgb(18,84,58)';
ctx.moveTo(466379232,631605657);
ctx.lineTo(466379232,83613728);
ctx.lineTo(641670000,83613728);
ctx.lineTo(641670000,631605657);
ctx.lineTo(466379232,631605657);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,94,242,0.85)';
ctx.strokeStyle='rgb(241,122,35)';
ctx.moveTo(185581152,719195992);
ctx.lineTo(185581152,97266613);
ctx.lineTo(904478906,97266613);
ctx.lineTo(904478906,719195992);
ctx.lineTo(185581152,719195992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,171,206,0.85)';
ctx.strokeStyle='rgb(0,129,136)';
ctx.moveTo(914232869,240358407);
ctx.lineTo(914232869,155676822);
ctx.lineTo(979466874,155676822);
ctx.lineTo(979466874,240358407);
ctx.lineTo(914232869,240358407);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,24,212,0.85)';
ctx.strokeStyle='rgb(160,178,147)';
ctx.moveTo(482085969,114063035);
ctx.lineTo(482085969,42974274);
ctx.lineTo(839323587,42974274);
ctx.lineTo(839323587,114063035);
ctx.lineTo(482085969,114063035);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,36,109,0.85)';
ctx.strokeStyle='rgb(241,78,107)';
ctx.moveTo(375207237,159693454);
ctx.lineTo(375207237,35283527);
ctx.lineTo(779137475,35283527);
ctx.lineTo(779137475,159693454);
ctx.lineTo(375207237,159693454);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,95,16,0.85)';
ctx.strokeStyle='rgb(55,139,81)';
ctx.moveTo(737566973,629942947);
ctx.lineTo(737566973,135070388);
ctx.lineTo(843884579,135070388);
ctx.lineTo(843884579,629942947);
ctx.lineTo(737566973,629942947);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,159,103,0.85)';
ctx.strokeStyle='rgb(62,227,12)';
ctx.moveTo(204664178,500408755);
ctx.lineTo(204664178,391939475);
ctx.lineTo(519219969,391939475);
ctx.lineTo(519219969,500408755);
ctx.lineTo(204664178,500408755);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,218,140,0.85)';
ctx.strokeStyle='rgb(155,127,184)';
ctx.moveTo(413757108,116912);
ctx.lineTo(413757108,101740);
ctx.lineTo(415341813,101740);
ctx.lineTo(415341813,116912);
ctx.lineTo(413757108,116912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,6,72,0.85)';
ctx.strokeStyle='rgb(100,112,91)';
ctx.moveTo(75496864,653395352);
ctx.lineTo(75496864,10673738);
ctx.lineTo(871849012,10673738);
ctx.lineTo(871849012,653395352);
ctx.lineTo(75496864,653395352);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,249,146,0.85)';
ctx.strokeStyle='rgb(241,165,222)';
ctx.moveTo(46979777,700133613);
ctx.lineTo(46979777,144044956);
ctx.lineTo(151283550,144044956);
ctx.lineTo(151283550,700133613);
ctx.lineTo(46979777,700133613);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,98,208,0.85)';
ctx.strokeStyle='rgb(134,112,29)';
ctx.moveTo(81495726,642999118);
ctx.lineTo(81495726,607682632);
ctx.lineTo(280935267,607682632);
ctx.lineTo(280935267,642999118);
ctx.lineTo(81495726,642999118);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,170,1,0.85)';
ctx.strokeStyle='rgb(111,136,192)';
ctx.moveTo(330980076,95722709);
ctx.lineTo(330980076,58392870);
ctx.lineTo(472271982,58392870);
ctx.lineTo(472271982,95722709);
ctx.lineTo(330980076,95722709);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,130,10,0.85)';
ctx.strokeStyle='rgb(118,69,245)';
ctx.moveTo(922277573,880716099);
ctx.lineTo(922277573,729665081);
ctx.lineTo(976218569,729665081);
ctx.lineTo(976218569,880716099);
ctx.lineTo(922277573,880716099);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,252,36,0.85)';
ctx.strokeStyle='rgb(122,106,144)';
ctx.moveTo(696122687,30355574);
ctx.lineTo(696122687,3347488);
ctx.lineTo(832279836,3347488);
ctx.lineTo(832279836,30355574);
ctx.lineTo(696122687,30355574);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,197,244,0.85)';
ctx.strokeStyle='rgb(202,239,107)';
ctx.moveTo(352732951,83674278);
ctx.lineTo(352732951,8548345);
ctx.lineTo(383059346,8548345);
ctx.lineTo(383059346,83674278);
ctx.lineTo(352732951,83674278);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,94,35,0.85)';
ctx.strokeStyle='rgb(145,59,128)';
ctx.moveTo(512474009,339074628);
ctx.lineTo(512474009,88394335);
ctx.lineTo(661389562,88394335);
ctx.lineTo(661389562,339074628);
ctx.lineTo(512474009,339074628);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,171,93,0.85)';
ctx.strokeStyle='rgb(217,208,13)';
ctx.moveTo(475897468,271012634);
ctx.lineTo(475897468,197221018);
ctx.lineTo(928903737,197221018);
ctx.lineTo(928903737,271012634);
ctx.lineTo(475897468,271012634);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,18,235,0.85)';
ctx.strokeStyle='rgb(167,147,229)';
ctx.moveTo(880740932,504343867);
ctx.lineTo(880740932,253274739);
ctx.lineTo(958838882,253274739);
ctx.lineTo(958838882,504343867);
ctx.lineTo(880740932,504343867);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,119,68,0.85)';
ctx.strokeStyle='rgb(103,151,252)';
ctx.moveTo(192941194,165697759);
ctx.lineTo(192941194,99104304);
ctx.lineTo(694134829,99104304);
ctx.lineTo(694134829,165697759);
ctx.lineTo(192941194,165697759);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,100,221,0.85)';
ctx.strokeStyle='rgb(193,125,123)';
ctx.moveTo(447347702,279955257);
ctx.lineTo(447347702,87677118);
ctx.lineTo(454857208,87677118);
ctx.lineTo(454857208,279955257);
ctx.lineTo(447347702,279955257);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,73,251,0.85)';
ctx.strokeStyle='rgb(24,166,84)';
ctx.moveTo(150762840,710195180);
ctx.lineTo(150762840,534660263);
ctx.lineTo(705383448,534660263);
ctx.lineTo(705383448,710195180);
ctx.lineTo(150762840,710195180);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,165,222,0.85)';
ctx.strokeStyle='rgb(128,98,113)';
ctx.moveTo(56935785,700187713);
ctx.lineTo(56935785,351046899);
ctx.lineTo(589535526,351046899);
ctx.lineTo(589535526,700187713);
ctx.lineTo(56935785,700187713);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,119,32,0.85)';
ctx.strokeStyle='rgb(40,59,196)';
ctx.moveTo(215498223,917685367);
ctx.lineTo(215498223,40906996);
ctx.lineTo(953431480,40906996);
ctx.lineTo(953431480,917685367);
ctx.lineTo(215498223,917685367);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,68,113,0.85)';
ctx.strokeStyle='rgb(156,237,117)';
ctx.moveTo(383360764,577364070);
ctx.lineTo(383360764,154122394);
ctx.lineTo(860257277,154122394);
ctx.lineTo(860257277,577364070);
ctx.lineTo(383360764,577364070);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,136,48,0.85)';
ctx.strokeStyle='rgb(243,171,39)';
ctx.moveTo(410508883,945245036);
ctx.lineTo(410508883,663490453);
ctx.lineTo(933033356,663490453);
ctx.lineTo(933033356,945245036);
ctx.lineTo(410508883,945245036);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,166,16,0.85)';
ctx.strokeStyle='rgb(63,193,118)';
ctx.moveTo(901598941,773081457);
ctx.lineTo(901598941,297965338);
ctx.lineTo(917759200,297965338);
ctx.lineTo(917759200,773081457);
ctx.lineTo(901598941,773081457);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,180,144,0.85)';
ctx.strokeStyle='rgb(211,126,252)';
ctx.moveTo(537509829,822954885);
ctx.lineTo(537509829,252298507);
ctx.lineTo(706909677,252298507);
ctx.lineTo(706909677,822954885);
ctx.lineTo(537509829,822954885);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,82,5,0.85)';
ctx.strokeStyle='rgb(146,183,163)';
ctx.moveTo(889711950,320982202);
ctx.lineTo(889711950,107640460);
ctx.lineTo(953450384,107640460);
ctx.lineTo(953450384,320982202);
ctx.lineTo(889711950,320982202);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,115,3,0.85)';
ctx.strokeStyle='rgb(129,166,182)';
ctx.moveTo(522219926,740417145);
ctx.lineTo(522219926,223202162);
ctx.lineTo(725048816,223202162);
ctx.lineTo(725048816,740417145);
ctx.lineTo(522219926,740417145);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,80,81,0.85)';
ctx.strokeStyle='rgb(244,85,196)';
ctx.moveTo(200512323,754513866);
ctx.lineTo(200512323,595000205);
ctx.lineTo(573715663,595000205);
ctx.lineTo(573715663,754513866);
ctx.lineTo(200512323,754513866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,173,182,0.85)';
ctx.strokeStyle='rgb(112,205,9)';
ctx.moveTo(23951112,872861289);
ctx.lineTo(23951112,266626120);
ctx.lineTo(517654945,266626120);
ctx.lineTo(517654945,872861289);
ctx.lineTo(23951112,872861289);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,252,184,0.85)';
ctx.strokeStyle='rgb(32,31,169)';
ctx.moveTo(378691772,891661101);
ctx.lineTo(378691772,194540505);
ctx.lineTo(782708271,194540505);
ctx.lineTo(782708271,891661101);
ctx.lineTo(378691772,891661101);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,12,222,0.85)';
ctx.strokeStyle='rgb(28,59,125)';
ctx.moveTo(351803469,899391058);
ctx.lineTo(351803469,386179640);
ctx.lineTo(686253370,386179640);
ctx.lineTo(686253370,899391058);
ctx.lineTo(351803469,899391058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,243,176,0.85)';
ctx.strokeStyle='rgb(132,175,113)';
ctx.moveTo(262821930,694797033);
ctx.lineTo(262821930,75697717);
ctx.lineTo(477701844,75697717);
ctx.lineTo(477701844,694797033);
ctx.lineTo(262821930,694797033);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,213,202,0.85)';
ctx.strokeStyle='rgb(139,112,72)';
ctx.moveTo(893586343,514866073);
ctx.lineTo(893586343,484833050);
ctx.lineTo(920997398,484833050);
ctx.lineTo(920997398,514866073);
ctx.lineTo(893586343,514866073);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,187,177,0.85)';
ctx.strokeStyle='rgb(52,153,115)';
ctx.moveTo(876963297,235571408);
ctx.lineTo(876963297,155143221);
ctx.lineTo(903561954,155143221);
ctx.lineTo(903561954,235571408);
ctx.lineTo(876963297,235571408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,22,95,0.85)';
ctx.strokeStyle='rgb(208,107,11)';
ctx.moveTo(745132193,997356104);
ctx.lineTo(745132193,445185451);
ctx.lineTo(924071965,445185451);
ctx.lineTo(924071965,997356104);
ctx.lineTo(745132193,997356104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,126,222,0.85)';
ctx.strokeStyle='rgb(212,151,110)';
ctx.moveTo(645419733,871123353);
ctx.lineTo(645419733,206089026);
ctx.lineTo(994286221,206089026);
ctx.lineTo(994286221,871123353);
ctx.lineTo(645419733,871123353);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,248,99,0.85)';
ctx.strokeStyle='rgb(113,109,214)';
ctx.moveTo(978325515,464312911);
ctx.lineTo(978325515,247596467);
ctx.lineTo(983146564,247596467);
ctx.lineTo(983146564,464312911);
ctx.lineTo(978325515,464312911);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,238,182,0.85)';
ctx.strokeStyle='rgb(66,118,191)';
ctx.moveTo(97581412,794319004);
ctx.lineTo(97581412,638356536);
ctx.lineTo(400229980,638356536);
ctx.lineTo(400229980,794319004);
ctx.lineTo(97581412,794319004);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,202,89,0.85)';
ctx.strokeStyle='rgb(20,105,200)';
ctx.moveTo(417203276,191645355);
ctx.lineTo(417203276,29050023);
ctx.lineTo(967062801,29050023);
ctx.lineTo(967062801,191645355);
ctx.lineTo(417203276,191645355);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,175,126,0.85)';
ctx.strokeStyle='rgb(34,237,90)';
ctx.moveTo(153034604,842056995);
ctx.lineTo(153034604,114656666);
ctx.lineTo(214589025,114656666);
ctx.lineTo(214589025,842056995);
ctx.lineTo(153034604,842056995);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,144,146,0.85)';
ctx.strokeStyle='rgb(98,16,143)';
ctx.moveTo(59590084,139955981);
ctx.lineTo(59590084,20165135);
ctx.lineTo(410564424,20165135);
ctx.lineTo(410564424,139955981);
ctx.lineTo(59590084,139955981);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,179,236,0.85)';
ctx.strokeStyle='rgb(22,175,158)';
ctx.moveTo(454221383,297537792);
ctx.lineTo(454221383,140088126);
ctx.lineTo(559207393,140088126);
ctx.lineTo(559207393,297537792);
ctx.lineTo(454221383,297537792);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,52,21,0.85)';
ctx.strokeStyle='rgb(120,97,226)';
ctx.moveTo(727850427,885209954);
ctx.lineTo(727850427,98506200);
ctx.lineTo(867480177,98506200);
ctx.lineTo(867480177,885209954);
ctx.lineTo(727850427,885209954);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,135,110,0.85)';
ctx.strokeStyle='rgb(98,165,22)';
ctx.moveTo(707144444,298347932);
ctx.lineTo(707144444,252980453);
ctx.lineTo(818428615,252980453);
ctx.lineTo(818428615,298347932);
ctx.lineTo(707144444,298347932);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,198,120,0.85)';
ctx.strokeStyle='rgb(166,212,232)';
ctx.moveTo(988341920,297350369);
ctx.lineTo(988341920,125242844);
ctx.lineTo(990791488,125242844);
ctx.lineTo(990791488,297350369);
ctx.lineTo(988341920,297350369);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,39,214,0.85)';
ctx.strokeStyle='rgb(109,153,247)';
ctx.moveTo(464309638,117483365);
ctx.lineTo(464309638,116599390);
ctx.lineTo(991017577,116599390);
ctx.lineTo(991017577,117483365);
ctx.lineTo(464309638,117483365);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,72,198,0.85)';
ctx.strokeStyle='rgb(15,238,211)';
ctx.moveTo(973998884,125792603);
ctx.lineTo(973998884,115044673);
ctx.lineTo(987318875,115044673);
ctx.lineTo(987318875,125792603);
ctx.lineTo(973998884,125792603);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,67,101,0.85)';
ctx.strokeStyle='rgb(191,38,6)';
ctx.moveTo(543077688,154378138);
ctx.lineTo(543077688,58229623);
ctx.lineTo(656647328,58229623);
ctx.lineTo(656647328,154378138);
ctx.lineTo(543077688,154378138);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,247,91,0.85)';
ctx.strokeStyle='rgb(183,42,250)';
ctx.moveTo(229037035,588137760);
ctx.lineTo(229037035,537594370);
ctx.lineTo(466619936,537594370);
ctx.lineTo(466619936,588137760);
ctx.lineTo(229037035,588137760);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,251,69,0.85)';
ctx.strokeStyle='rgb(48,218,245)';
ctx.moveTo(282755601,966935661);
ctx.lineTo(282755601,887443173);
ctx.lineTo(813227963,887443173);
ctx.lineTo(813227963,966935661);
ctx.lineTo(282755601,966935661);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,52,66,0.85)';
ctx.strokeStyle='rgb(158,160,191)';
ctx.moveTo(498816770,382829452);
ctx.lineTo(498816770,294091747);
ctx.lineTo(697218053,294091747);
ctx.lineTo(697218053,382829452);
ctx.lineTo(498816770,382829452);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,72,215,0.85)';
ctx.strokeStyle='rgb(52,173,85)';
ctx.moveTo(910275318,976951048);
ctx.lineTo(910275318,710059321);
ctx.lineTo(920132311,710059321);
ctx.lineTo(920132311,976951048);
ctx.lineTo(910275318,976951048);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,21,106,0.85)';
ctx.strokeStyle='rgb(84,140,25)';
ctx.moveTo(376190051,955380024);
ctx.lineTo(376190051,291437509);
ctx.lineTo(648487764,291437509);
ctx.lineTo(648487764,955380024);
ctx.lineTo(376190051,955380024);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,31,92,0.85)';
ctx.strokeStyle='rgb(95,121,134)';
ctx.moveTo(524109373,578327986);
ctx.lineTo(524109373,71696245);
ctx.lineTo(786618710,71696245);
ctx.lineTo(786618710,578327986);
ctx.lineTo(524109373,578327986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,50,53,0.85)';
ctx.strokeStyle='rgb(153,89,175)';
ctx.moveTo(250,235511073);
ctx.lineTo(250,19845013);
ctx.lineTo(731976580,19845013);
ctx.lineTo(731976580,235511073);
ctx.lineTo(250,235511073);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,149,121,0.85)';
ctx.strokeStyle='rgb(118,61,117)';
ctx.moveTo(115187273,178071229);
ctx.lineTo(115187273,49262034);
ctx.lineTo(979781346,49262034);
ctx.lineTo(979781346,178071229);
ctx.lineTo(115187273,178071229);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,189,123,0.85)';
ctx.strokeStyle='rgb(190,228,40)';
ctx.moveTo(519631862,555449895);
ctx.lineTo(519631862,287909997);
ctx.lineTo(709673096,287909997);
ctx.lineTo(709673096,555449895);
ctx.lineTo(519631862,555449895);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,126,171,0.85)';
ctx.strokeStyle='rgb(63,253,57)';
ctx.moveTo(150196915,261615563);
ctx.lineTo(150196915,125339274);
ctx.lineTo(708297908,125339274);
ctx.lineTo(708297908,261615563);
ctx.lineTo(150196915,261615563);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,37,119,0.85)';
ctx.strokeStyle='rgb(22,121,51)';
ctx.moveTo(229274534,169423390);
ctx.lineTo(229274534,136092112);
ctx.lineTo(589429894,136092112);
ctx.lineTo(589429894,169423390);
ctx.lineTo(229274534,169423390);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,76,9,0.85)';
ctx.strokeStyle='rgb(22,56,70)';
ctx.moveTo(162508215,77406472);
ctx.lineTo(162508215,61763326);
ctx.lineTo(751911454,61763326);
ctx.lineTo(751911454,77406472);
ctx.lineTo(162508215,77406472);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,80,166,0.85)';
ctx.strokeStyle='rgb(233,0,92)';
ctx.moveTo(888288708,851276107);
ctx.lineTo(888288708,768363421);
ctx.lineTo(913435686,768363421);
ctx.lineTo(913435686,851276107);
ctx.lineTo(888288708,851276107);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,155,194,0.85)';
ctx.strokeStyle='rgb(142,224,32)';
ctx.moveTo(776873512,112752305);
ctx.lineTo(776873512,13870075);
ctx.lineTo(826921441,13870075);
ctx.lineTo(826921441,112752305);
ctx.lineTo(776873512,112752305);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,224,44,0.85)';
ctx.strokeStyle='rgb(227,162,197)';
ctx.moveTo(93627755,674226066);
ctx.lineTo(93627755,79723530);
ctx.lineTo(490693747,79723530);
ctx.lineTo(490693747,674226066);
ctx.lineTo(93627755,674226066);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,68,134,0.85)';
ctx.strokeStyle='rgb(48,231,49)';
ctx.moveTo(65534147,722979634);
ctx.lineTo(65534147,302718634);
ctx.lineTo(330015759,302718634);
ctx.lineTo(330015759,722979634);
ctx.lineTo(65534147,722979634);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,53,208,0.85)';
ctx.strokeStyle='rgb(81,208,57)';
ctx.moveTo(718648254,605360335);
ctx.lineTo(718648254,523736349);
ctx.lineTo(959868469,523736349);
ctx.lineTo(959868469,605360335);
ctx.lineTo(718648254,605360335);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,211,229,0.85)';
ctx.strokeStyle='rgb(143,72,254)';
ctx.moveTo(309710120,741600958);
ctx.lineTo(309710120,212531850);
ctx.lineTo(988522906,212531850);
ctx.lineTo(988522906,741600958);
ctx.lineTo(309710120,741600958);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,117,7,0.85)';
ctx.strokeStyle='rgb(131,5,127)';
ctx.moveTo(274078097,610868191);
ctx.lineTo(274078097,45351087);
ctx.lineTo(504782627,45351087);
ctx.lineTo(504782627,610868191);
ctx.lineTo(274078097,610868191);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,8,145,0.85)';
ctx.strokeStyle='rgb(252,17,253)';
ctx.moveTo(956389264,918428228);
ctx.lineTo(956389264,49865460);
ctx.lineTo(961763955,49865460);
ctx.lineTo(961763955,918428228);
ctx.lineTo(956389264,918428228);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,180,76,0.85)';
ctx.strokeStyle='rgb(219,21,100)';
ctx.moveTo(377894372,207972903);
ctx.lineTo(377894372,61512181);
ctx.lineTo(749138284,61512181);
ctx.lineTo(749138284,207972903);
ctx.lineTo(377894372,207972903);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,80,22,0.85)';
ctx.strokeStyle='rgb(84,191,218)';
ctx.moveTo(686752616,946969283);
ctx.lineTo(686752616,665538892);
ctx.lineTo(727149735,665538892);
ctx.lineTo(727149735,946969283);
ctx.lineTo(686752616,946969283);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,180,190,0.85)';
ctx.strokeStyle='rgb(123,219,210)';
ctx.moveTo(78951259,496603133);
ctx.lineTo(78951259,316694906);
ctx.lineTo(978596665,316694906);
ctx.lineTo(978596665,496603133);
ctx.lineTo(78951259,496603133);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,152,126,0.85)';
ctx.strokeStyle='rgb(171,49,80)';
ctx.moveTo(945966104,322382003);
ctx.lineTo(945966104,164404977);
ctx.lineTo(965513262,164404977);
ctx.lineTo(965513262,322382003);
ctx.lineTo(945966104,322382003);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,5,159,0.85)';
ctx.strokeStyle='rgb(109,95,78)';
ctx.moveTo(736653628,87083701);
ctx.lineTo(736653628,34313359);
ctx.lineTo(857497414,34313359);
ctx.lineTo(857497414,87083701);
ctx.lineTo(736653628,87083701);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,198,18,0.85)';
ctx.strokeStyle='rgb(169,3,229)';
ctx.moveTo(807643668,196769601);
ctx.lineTo(807643668,167053381);
ctx.lineTo(881432867,167053381);
ctx.lineTo(881432867,196769601);
ctx.lineTo(807643668,196769601);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,132,122,0.85)';
ctx.strokeStyle='rgb(165,219,79)';
ctx.moveTo(334815716,119624549);
ctx.lineTo(334815716,99772415);
ctx.lineTo(738740659,99772415);
ctx.lineTo(738740659,119624549);
ctx.lineTo(334815716,119624549);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,32,130,0.85)';
ctx.strokeStyle='rgb(195,194,49)';
ctx.moveTo(712017503,230581113);
ctx.lineTo(712017503,75615033);
ctx.lineTo(833965663,75615033);
ctx.lineTo(833965663,230581113);
ctx.lineTo(712017503,230581113);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,68,129,0.85)';
ctx.strokeStyle='rgb(25,108,244)';
ctx.moveTo(403469419,732622245);
ctx.lineTo(403469419,569715358);
ctx.lineTo(826760130,569715358);
ctx.lineTo(826760130,732622245);
ctx.lineTo(403469419,732622245);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,132,129,0.85)';
ctx.strokeStyle='rgb(204,163,151)';
ctx.moveTo(452627034,511577702);
ctx.lineTo(452627034,139530366);
ctx.lineTo(651048353,139530366);
ctx.lineTo(651048353,511577702);
ctx.lineTo(452627034,511577702);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,17,201,0.85)';
ctx.strokeStyle='rgb(112,151,80)';
ctx.moveTo(743568357,774336964);
ctx.lineTo(743568357,123057583);
ctx.lineTo(790695017,123057583);
ctx.lineTo(790695017,774336964);
ctx.lineTo(743568357,774336964);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,80,238,0.85)';
ctx.strokeStyle='rgb(58,244,30)';
ctx.moveTo(48935464,592048306);
ctx.lineTo(48935464,590318470);
ctx.lineTo(168348587,590318470);
ctx.lineTo(168348587,592048306);
ctx.lineTo(48935464,592048306);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,130,163,0.85)';
ctx.strokeStyle='rgb(142,66,36)';
ctx.moveTo(561766709,731899691);
ctx.lineTo(561766709,23416411);
ctx.lineTo(956042494,23416411);
ctx.lineTo(956042494,731899691);
ctx.lineTo(561766709,731899691);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,68,116,0.85)';
ctx.strokeStyle='rgb(41,44,134)';
ctx.moveTo(483953135,279656133);
ctx.lineTo(483953135,56931658);
ctx.lineTo(611320445,56931658);
ctx.lineTo(611320445,279656133);
ctx.lineTo(483953135,279656133);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,0,43,0.85)';
ctx.strokeStyle='rgb(15,227,111)';
ctx.moveTo(752699184,180670560);
ctx.lineTo(752699184,92982099);
ctx.lineTo(788753450,92982099);
ctx.lineTo(788753450,180670560);
ctx.lineTo(752699184,180670560);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,46,46,0.85)';
ctx.strokeStyle='rgb(120,184,122)';
ctx.moveTo(472105395,403458180);
ctx.lineTo(472105395,19715022);
ctx.lineTo(752444137,19715022);
ctx.lineTo(752444137,403458180);
ctx.lineTo(472105395,403458180);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,89,66,0.85)';
ctx.strokeStyle='rgb(0,224,71)';
ctx.moveTo(392705468,121107490);
ctx.lineTo(392705468,22301249);
ctx.lineTo(481845609,22301249);
ctx.lineTo(481845609,121107490);
ctx.lineTo(392705468,121107490);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,127,37,0.85)';
ctx.strokeStyle='rgb(177,172,104)';
ctx.moveTo(708193504,240443961);
ctx.lineTo(708193504,219859521);
ctx.lineTo(806435148,219859521);
ctx.lineTo(806435148,240443961);
ctx.lineTo(708193504,240443961);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,3,209,0.85)';
ctx.strokeStyle='rgb(186,57,112)';
ctx.moveTo(33792459,1506809);
ctx.lineTo(33792459,1331059);
ctx.lineTo(483302075,1331059);
ctx.lineTo(483302075,1506809);
ctx.lineTo(33792459,1506809);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,34,84,0.85)';
ctx.strokeStyle='rgb(196,98,11)';
ctx.moveTo(418682863,560862060);
ctx.lineTo(418682863,543623991);
ctx.lineTo(507496887,543623991);
ctx.lineTo(507496887,560862060);
ctx.lineTo(418682863,560862060);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,195,211,0.85)';
ctx.strokeStyle='rgb(58,54,80)';
ctx.moveTo(745943219,578061903);
ctx.lineTo(745943219,427852163);
ctx.lineTo(985861129,427852163);
ctx.lineTo(985861129,578061903);
ctx.lineTo(745943219,578061903);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,19,73,0.85)';
ctx.strokeStyle='rgb(175,126,151)';
ctx.moveTo(735720507,308639716);
ctx.lineTo(735720507,297727909);
ctx.lineTo(767827184,297727909);
ctx.lineTo(767827184,308639716);
ctx.lineTo(735720507,308639716);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,165,195,0.85)';
ctx.strokeStyle='rgb(236,205,68)';
ctx.moveTo(754077223,10624094);
ctx.lineTo(754077223,5986632);
ctx.lineTo(875772114,5986632);
ctx.lineTo(875772114,10624094);
ctx.lineTo(754077223,10624094);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,54,48,0.85)';
ctx.strokeStyle='rgb(52,243,230)';
ctx.moveTo(990691737,344610547);
ctx.lineTo(990691737,331958362);
ctx.lineTo(994766789,331958362);
ctx.lineTo(994766789,344610547);
ctx.lineTo(990691737,344610547);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,82,218,0.85)';
ctx.strokeStyle='rgb(125,240,143)';
ctx.moveTo(568073745,792098516);
ctx.lineTo(568073745,254207265);
ctx.lineTo(838956259,254207265);
ctx.lineTo(838956259,792098516);
ctx.lineTo(568073745,792098516);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,83,60,0.85)';
ctx.strokeStyle='rgb(232,40,100)';
ctx.moveTo(823343368,188141232);
ctx.lineTo(823343368,138169249);
ctx.lineTo(869090244,138169249);
ctx.lineTo(869090244,188141232);
ctx.lineTo(823343368,188141232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,2,149,0.85)';
ctx.strokeStyle='rgb(208,93,5)';
ctx.moveTo(761644272,745781483);
ctx.lineTo(761644272,368155904);
ctx.lineTo(796525010,368155904);
ctx.lineTo(796525010,745781483);
ctx.lineTo(761644272,745781483);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,178,112,0.85)';
ctx.strokeStyle='rgb(29,199,225)';
ctx.moveTo(378279872,4882940);
ctx.lineTo(378279872,2575548);
ctx.lineTo(603359670,2575548);
ctx.lineTo(603359670,4882940);
ctx.lineTo(378279872,4882940);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,128,19,0.85)';
ctx.strokeStyle='rgb(25,217,29)';
ctx.moveTo(86010533,866294167);
ctx.lineTo(86010533,821557640);
ctx.lineTo(286767087,821557640);
ctx.lineTo(286767087,866294167);
ctx.lineTo(86010533,866294167);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,149,247,0.85)';
ctx.strokeStyle='rgb(135,160,212)';
ctx.moveTo(25789390,294348372);
ctx.lineTo(25789390,174147714);
ctx.lineTo(482999955,174147714);
ctx.lineTo(482999955,294348372);
ctx.lineTo(25789390,294348372);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,230,193,0.85)';
ctx.strokeStyle='rgb(2,151,23)';
ctx.moveTo(729228948,911370103);
ctx.lineTo(729228948,685194526);
ctx.lineTo(742873065,685194526);
ctx.lineTo(742873065,911370103);
ctx.lineTo(729228948,911370103);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,105,20,0.85)';
ctx.strokeStyle='rgb(16,22,67)';
ctx.moveTo(398604431,237562521);
ctx.lineTo(398604431,187499811);
ctx.lineTo(887645754,187499811);
ctx.lineTo(887645754,237562521);
ctx.lineTo(398604431,237562521);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,167,44,0.85)';
ctx.strokeStyle='rgb(193,29,171)';
ctx.moveTo(727379510,987696993);
ctx.lineTo(727379510,39492035);
ctx.lineTo(979839305,39492035);
ctx.lineTo(979839305,987696993);
ctx.lineTo(727379510,987696993);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,230,113,0.85)';
ctx.strokeStyle='rgb(84,237,59)';
ctx.moveTo(403815936,633566717);
ctx.lineTo(403815936,430506375);
ctx.lineTo(843882445,430506375);
ctx.lineTo(843882445,633566717);
ctx.lineTo(403815936,633566717);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,21,245,0.85)';
ctx.strokeStyle='rgb(132,234,185)';
ctx.moveTo(667343696,180799607);
ctx.lineTo(667343696,37451078);
ctx.lineTo(867615506,37451078);
ctx.lineTo(867615506,180799607);
ctx.lineTo(667343696,180799607);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,16,233,0.85)';
ctx.strokeStyle='rgb(55,28,48)';
ctx.moveTo(658279974,697028870);
ctx.lineTo(658279974,317863782);
ctx.lineTo(675610783,317863782);
ctx.lineTo(675610783,697028870);
ctx.lineTo(658279974,697028870);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,145,49,0.85)';
ctx.strokeStyle='rgb(164,159,43)';
ctx.moveTo(992066099,377402369);
ctx.lineTo(992066099,371613722);
ctx.lineTo(995052966,371613722);
ctx.lineTo(995052966,377402369);
ctx.lineTo(992066099,377402369);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,135,249,0.85)';
ctx.strokeStyle='rgb(128,72,45)';
ctx.moveTo(136715035,780635885);
ctx.lineTo(136715035,499112517);
ctx.lineTo(389577146,499112517);
ctx.lineTo(389577146,780635885);
ctx.lineTo(136715035,780635885);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,28,181,0.85)';
ctx.strokeStyle='rgb(217,174,111)';
ctx.moveTo(470525521,516765980);
ctx.lineTo(470525521,161727972);
ctx.lineTo(634648105,161727972);
ctx.lineTo(634648105,516765980);
ctx.lineTo(470525521,516765980);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,125,42,0.85)';
ctx.strokeStyle='rgb(37,110,148)';
ctx.moveTo(309718629,141178244);
ctx.lineTo(309718629,86988813);
ctx.lineTo(900722578,86988813);
ctx.lineTo(900722578,141178244);
ctx.lineTo(309718629,141178244);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,156,138,0.85)';
ctx.strokeStyle='rgb(125,225,113)';
ctx.moveTo(222214304,592562851);
ctx.lineTo(222214304,498030179);
ctx.lineTo(763581734,498030179);
ctx.lineTo(763581734,592562851);
ctx.lineTo(222214304,592562851);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,35,52,0.85)';
ctx.strokeStyle='rgb(92,111,81)';
ctx.moveTo(220046259,975596334);
ctx.lineTo(220046259,893365248);
ctx.lineTo(421296884,893365248);
ctx.lineTo(421296884,975596334);
ctx.lineTo(220046259,975596334);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,80,83,0.85)';
ctx.strokeStyle='rgb(212,107,149)';
ctx.moveTo(501074190,761550058);
ctx.lineTo(501074190,287973736);
ctx.lineTo(693294830,287973736);
ctx.lineTo(693294830,761550058);
ctx.lineTo(501074190,761550058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,195,157,0.85)';
ctx.strokeStyle='rgb(226,178,85)';
ctx.moveTo(501250398,904287231);
ctx.lineTo(501250398,843649446);
ctx.lineTo(640888561,843649446);
ctx.lineTo(640888561,904287231);
ctx.lineTo(501250398,904287231);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,130,232,0.85)';
ctx.strokeStyle='rgb(190,34,41)';
ctx.moveTo(120849529,24381127);
ctx.lineTo(120849529,5524865);
ctx.lineTo(316172807,5524865);
ctx.lineTo(316172807,24381127);
ctx.lineTo(120849529,24381127);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,253,251,0.85)';
ctx.strokeStyle='rgb(34,156,167)';
ctx.moveTo(169902856,214933381);
ctx.lineTo(169902856,179446105);
ctx.lineTo(838773860,179446105);
ctx.lineTo(838773860,214933381);
ctx.lineTo(169902856,214933381);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,75,26,0.85)';
ctx.strokeStyle='rgb(130,8,60)';
ctx.moveTo(643860802,129122488);
ctx.lineTo(643860802,29023773);
ctx.lineTo(689871931,29023773);
ctx.lineTo(689871931,129122488);
ctx.lineTo(643860802,129122488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,210,202,0.85)';
ctx.strokeStyle='rgb(96,165,200)';
ctx.moveTo(381117652,327502971);
ctx.lineTo(381117652,39516430);
ctx.lineTo(761991192,39516430);
ctx.lineTo(761991192,327502971);
ctx.lineTo(381117652,327502971);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,233,89,0.85)';
ctx.strokeStyle='rgb(12,136,70)';
ctx.moveTo(978142231,185894815);
ctx.lineTo(978142231,77256361);
ctx.lineTo(988013038,77256361);
ctx.lineTo(988013038,185894815);
ctx.lineTo(978142231,185894815);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,20,138,0.85)';
ctx.strokeStyle='rgb(167,173,180)';
ctx.moveTo(653777840,959850405);
ctx.lineTo(653777840,69696739);
ctx.lineTo(689719443,69696739);
ctx.lineTo(689719443,959850405);
ctx.lineTo(653777840,959850405);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,64,63,0.85)';
ctx.strokeStyle='rgb(79,53,58)';
ctx.moveTo(813234709,511780473);
ctx.lineTo(813234709,372481882);
ctx.lineTo(984401770,372481882);
ctx.lineTo(984401770,511780473);
ctx.lineTo(813234709,511780473);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,229,57,0.85)';
ctx.strokeStyle='rgb(89,33,245)';
ctx.moveTo(763588361,427569508);
ctx.lineTo(763588361,370664971);
ctx.lineTo(841877983,370664971);
ctx.lineTo(841877983,427569508);
ctx.lineTo(763588361,427569508);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,150,8,0.85)';
ctx.strokeStyle='rgb(84,205,17)';
ctx.moveTo(888650846,785020827);
ctx.lineTo(888650846,544780047);
ctx.lineTo(971754937,544780047);
ctx.lineTo(971754937,785020827);
ctx.lineTo(888650846,785020827);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,232,177,0.85)';
ctx.strokeStyle='rgb(173,28,230)';
ctx.moveTo(870982643,85624746);
ctx.lineTo(870982643,42379754);
ctx.lineTo(962350399,42379754);
ctx.lineTo(962350399,85624746);
ctx.lineTo(870982643,85624746);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,102,61,0.85)';
ctx.strokeStyle='rgb(171,168,97)';
ctx.moveTo(936901802,781118096);
ctx.lineTo(936901802,718163187);
ctx.lineTo(992373273,718163187);
ctx.lineTo(992373273,781118096);
ctx.lineTo(936901802,781118096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,87,86,0.85)';
ctx.strokeStyle='rgb(72,121,238)';
ctx.moveTo(358391593,183102837);
ctx.lineTo(358391593,18349110);
ctx.lineTo(391121090,18349110);
ctx.lineTo(391121090,183102837);
ctx.lineTo(358391593,183102837);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,122,145,0.85)';
ctx.strokeStyle='rgb(226,121,31)';
ctx.moveTo(262461007,653126677);
ctx.lineTo(262461007,377623780);
ctx.lineTo(623424835,377623780);
ctx.lineTo(623424835,653126677);
ctx.lineTo(262461007,653126677);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,22,30,0.85)';
ctx.strokeStyle='rgb(36,28,135)';
ctx.moveTo(846843156,359477437);
ctx.lineTo(846843156,353000534);
ctx.lineTo(875608705,353000534);
ctx.lineTo(875608705,359477437);
ctx.lineTo(846843156,359477437);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,8,81,0.85)';
ctx.strokeStyle='rgb(241,63,104)';
ctx.moveTo(569054441,38786266);
ctx.lineTo(569054441,37875981);
ctx.lineTo(760422270,37875981);
ctx.lineTo(760422270,38786266);
ctx.lineTo(569054441,38786266);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,169,224,0.85)';
ctx.strokeStyle='rgb(104,170,174)';
ctx.moveTo(10828075,489048021);
ctx.lineTo(10828075,153941832);
ctx.lineTo(823067776,153941832);
ctx.lineTo(823067776,489048021);
ctx.lineTo(10828075,489048021);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,128,188,0.85)';
ctx.strokeStyle='rgb(70,198,98)';
ctx.moveTo(678326044,862427046);
ctx.lineTo(678326044,679615764);
ctx.lineTo(866020721,679615764);
ctx.lineTo(866020721,862427046);
ctx.lineTo(678326044,862427046);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,45,178,0.85)';
ctx.strokeStyle='rgb(34,95,30)';
ctx.moveTo(630825962,184412165);
ctx.lineTo(630825962,158753441);
ctx.lineTo(944118836,158753441);
ctx.lineTo(944118836,184412165);
ctx.lineTo(630825962,184412165);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,97,89,0.85)';
ctx.strokeStyle='rgb(181,7,16)';
ctx.moveTo(604815059,562649703);
ctx.lineTo(604815059,192712053);
ctx.lineTo(624838302,192712053);
ctx.lineTo(624838302,562649703);
ctx.lineTo(604815059,562649703);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,223,10,0.85)';
ctx.strokeStyle='rgb(224,80,3)';
ctx.moveTo(727466181,860937322);
ctx.lineTo(727466181,571955834);
ctx.lineTo(968002374,571955834);
ctx.lineTo(968002374,860937322);
ctx.lineTo(727466181,860937322);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,168,54,0.85)';
ctx.strokeStyle='rgb(34,17,87)';
ctx.moveTo(29488000,71558199);
ctx.lineTo(29488000,42571145);
ctx.lineTo(805064608,42571145);
ctx.lineTo(805064608,71558199);
ctx.lineTo(29488000,71558199);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,115,158,0.85)';
ctx.strokeStyle='rgb(197,188,47)';
ctx.moveTo(289693431,590627555);
ctx.lineTo(289693431,64496731);
ctx.lineTo(433941389,64496731);
ctx.lineTo(433941389,590627555);
ctx.lineTo(289693431,590627555);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,12,241,0.85)';
ctx.strokeStyle='rgb(145,252,244)';
ctx.moveTo(954563497,762055734);
ctx.lineTo(954563497,755140297);
ctx.lineTo(957494544,755140297);
ctx.lineTo(957494544,762055734);
ctx.lineTo(954563497,762055734);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,186,222,0.85)';
ctx.strokeStyle='rgb(55,131,187)';
ctx.moveTo(624314940,739574075);
ctx.lineTo(624314940,715931427);
ctx.lineTo(801357600,715931427);
ctx.lineTo(801357600,739574075);
ctx.lineTo(624314940,739574075);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,222,97,0.85)';
ctx.strokeStyle='rgb(230,225,11)';
ctx.moveTo(340335481,516010710);
ctx.lineTo(340335481,439393034);
ctx.lineTo(548384649,439393034);
ctx.lineTo(548384649,516010710);
ctx.lineTo(340335481,516010710);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,42,133,0.85)';
ctx.strokeStyle='rgb(15,41,215)';
ctx.moveTo(479655470,659801659);
ctx.lineTo(479655470,63426680);
ctx.lineTo(678959260,63426680);
ctx.lineTo(678959260,659801659);
ctx.lineTo(479655470,659801659);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,188,244,0.85)';
ctx.strokeStyle='rgb(63,230,86)';
ctx.moveTo(734043734,122338656);
ctx.lineTo(734043734,411688);
ctx.lineTo(828735736,411688);
ctx.lineTo(828735736,122338656);
ctx.lineTo(734043734,122338656);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,211,241,0.85)';
ctx.strokeStyle='rgb(94,65,65)';
ctx.moveTo(398728905,274173442);
ctx.lineTo(398728905,182867723);
ctx.lineTo(835023258,182867723);
ctx.lineTo(835023258,274173442);
ctx.lineTo(398728905,274173442);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,212,40,0.85)';
ctx.strokeStyle='rgb(12,83,171)';
ctx.moveTo(497255866,703330158);
ctx.lineTo(497255866,662292980);
ctx.lineTo(901108201,662292980);
ctx.lineTo(901108201,703330158);
ctx.lineTo(497255866,703330158);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,170,204,0.85)';
ctx.strokeStyle='rgb(68,5,177)';
ctx.moveTo(52890209,597269286);
ctx.lineTo(52890209,528968256);
ctx.lineTo(207840789,528968256);
ctx.lineTo(207840789,597269286);
ctx.lineTo(52890209,597269286);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,185,103,0.85)';
ctx.strokeStyle='rgb(5,52,18)';
ctx.moveTo(313082164,682160488);
ctx.lineTo(313082164,361228550);
ctx.lineTo(806445998,361228550);
ctx.lineTo(806445998,682160488);
ctx.lineTo(313082164,682160488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,232,191,0.85)';
ctx.strokeStyle='rgb(80,222,73)';
ctx.moveTo(238535284,983274428);
ctx.lineTo(238535284,128216173);
ctx.lineTo(369841421,128216173);
ctx.lineTo(369841421,983274428);
ctx.lineTo(238535284,983274428);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,83,203,0.85)';
ctx.strokeStyle='rgb(200,168,13)';
ctx.moveTo(3913980,883603062);
ctx.lineTo(3913980,182116833);
ctx.lineTo(254762395,182116833);
ctx.lineTo(254762395,883603062);
ctx.lineTo(3913980,883603062);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,157,17,0.85)';
ctx.strokeStyle='rgb(200,162,184)';
ctx.moveTo(197893502,89748143);
ctx.lineTo(197893502,5235709);
ctx.lineTo(497258091,5235709);
ctx.lineTo(497258091,89748143);
ctx.lineTo(197893502,89748143);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,218,180,0.85)';
ctx.strokeStyle='rgb(77,24,174)';
ctx.moveTo(681366391,877321882);
ctx.lineTo(681366391,14158593);
ctx.lineTo(872736037,14158593);
ctx.lineTo(872736037,877321882);
ctx.lineTo(681366391,877321882);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,240,135,0.85)';
ctx.strokeStyle='rgb(111,70,30)';
ctx.moveTo(965650725,708579366);
ctx.lineTo(965650725,195666175);
ctx.lineTo(989519031,195666175);
ctx.lineTo(989519031,708579366);
ctx.lineTo(965650725,708579366);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,54,158,0.85)';
ctx.strokeStyle='rgb(33,73,233)';
ctx.moveTo(728888353,22937765);
ctx.lineTo(728888353,3376233);
ctx.lineTo(943910101,3376233);
ctx.lineTo(943910101,22937765);
ctx.lineTo(728888353,22937765);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,116,55,0.85)';
ctx.strokeStyle='rgb(117,82,31)';
ctx.moveTo(128852547,945266516);
ctx.lineTo(128852547,113298043);
ctx.lineTo(349503634,113298043);
ctx.lineTo(349503634,945266516);
ctx.lineTo(128852547,945266516);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,124,121,0.85)';
ctx.strokeStyle='rgb(52,58,147)';
ctx.moveTo(756748757,798794278);
ctx.lineTo(756748757,180091357);
ctx.lineTo(895320522,180091357);
ctx.lineTo(895320522,798794278);
ctx.lineTo(756748757,798794278);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,118,69,0.85)';
ctx.strokeStyle='rgb(228,239,203)';
ctx.moveTo(761578945,964784067);
ctx.lineTo(761578945,712253786);
ctx.lineTo(950776190,712253786);
ctx.lineTo(950776190,964784067);
ctx.lineTo(761578945,964784067);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,167,40,0.85)';
ctx.strokeStyle='rgb(47,251,58)';
ctx.moveTo(947616263,866634416);
ctx.lineTo(947616263,91438971);
ctx.lineTo(977668886,91438971);
ctx.lineTo(977668886,866634416);
ctx.lineTo(947616263,866634416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,220,66,0.85)';
ctx.strokeStyle='rgb(104,0,162)';
ctx.moveTo(867720905,952159308);
ctx.lineTo(867720905,148787831);
ctx.lineTo(870266784,148787831);
ctx.lineTo(870266784,952159308);
ctx.lineTo(867720905,952159308);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,150,30,0.85)';
ctx.strokeStyle='rgb(63,83,101)';
ctx.moveTo(963547944,918887944);
ctx.lineTo(963547944,539950846);
ctx.lineTo(989974994,539950846);
ctx.lineTo(989974994,918887944);
ctx.lineTo(963547944,918887944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,216,246,0.85)';
ctx.strokeStyle='rgb(188,138,155)';
ctx.moveTo(78690432,582879261);
ctx.lineTo(78690432,481333381);
ctx.lineTo(154731597,481333381);
ctx.lineTo(154731597,582879261);
ctx.lineTo(78690432,582879261);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,221,128,0.85)';
ctx.strokeStyle='rgb(221,109,49)';
ctx.moveTo(368281647,180893546);
ctx.lineTo(368281647,36870916);
ctx.lineTo(891848673,36870916);
ctx.lineTo(891848673,180893546);
ctx.lineTo(368281647,180893546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,173,132,0.85)';
ctx.strokeStyle='rgb(224,115,101)';
ctx.moveTo(408346137,856470591);
ctx.lineTo(408346137,396117632);
ctx.lineTo(963318572,396117632);
ctx.lineTo(963318572,856470591);
ctx.lineTo(408346137,856470591);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,185,115,0.85)';
ctx.strokeStyle='rgb(205,212,253)';
ctx.moveTo(184981321,984649113);
ctx.lineTo(184981321,526162955);
ctx.lineTo(585690097,526162955);
ctx.lineTo(585690097,984649113);
ctx.lineTo(184981321,984649113);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,209,76,0.85)';
ctx.strokeStyle='rgb(115,58,108)';
ctx.moveTo(124773196,434949037);
ctx.lineTo(124773196,27264584);
ctx.lineTo(258892408,27264584);
ctx.lineTo(258892408,434949037);
ctx.lineTo(124773196,434949037);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,141,102,0.85)';
ctx.strokeStyle='rgb(16,145,117)';
ctx.moveTo(848797480,439798021);
ctx.lineTo(848797480,262931039);
ctx.lineTo(881521597,262931039);
ctx.lineTo(881521597,439798021);
ctx.lineTo(848797480,439798021);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,140,165,0.85)';
ctx.strokeStyle='rgb(174,178,209)';
ctx.moveTo(810101597,652557456);
ctx.lineTo(810101597,429477345);
ctx.lineTo(857490874,429477345);
ctx.lineTo(857490874,652557456);
ctx.lineTo(810101597,652557456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,176,94,0.85)';
ctx.strokeStyle='rgb(151,156,55)';
ctx.moveTo(888223250,678749319);
ctx.lineTo(888223250,22534851);
ctx.lineTo(908849713,22534851);
ctx.lineTo(908849713,678749319);
ctx.lineTo(888223250,678749319);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,45,90,0.85)';
ctx.strokeStyle='rgb(45,55,189)';
ctx.moveTo(272802182,190307647);
ctx.lineTo(272802182,21779956);
ctx.lineTo(608886019,21779956);
ctx.lineTo(608886019,190307647);
ctx.lineTo(272802182,190307647);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,171,162,0.85)';
ctx.strokeStyle='rgb(84,136,17)';
ctx.moveTo(53349319,481769259);
ctx.lineTo(53349319,226801229);
ctx.lineTo(779363833,226801229);
ctx.lineTo(779363833,481769259);
ctx.lineTo(53349319,481769259);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,158,6,0.85)';
ctx.strokeStyle='rgb(248,188,155)';
ctx.moveTo(669871199,872175342);
ctx.lineTo(669871199,220333446);
ctx.lineTo(683549477,220333446);
ctx.lineTo(683549477,872175342);
ctx.lineTo(669871199,872175342);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,136,143,0.85)';
ctx.strokeStyle='rgb(19,44,223)';
ctx.moveTo(946627987,642670910);
ctx.lineTo(946627987,305633540);
ctx.lineTo(948740285,305633540);
ctx.lineTo(948740285,642670910);
ctx.lineTo(946627987,642670910);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,66,21,0.85)';
ctx.strokeStyle='rgb(248,86,179)';
ctx.moveTo(264963118,506519758);
ctx.lineTo(264963118,474279984);
ctx.lineTo(881289550,474279984);
ctx.lineTo(881289550,506519758);
ctx.lineTo(264963118,506519758);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,104,99,0.85)';
ctx.strokeStyle='rgb(220,186,233)';
ctx.moveTo(156072194,812557196);
ctx.lineTo(156072194,506043585);
ctx.lineTo(563453232,506043585);
ctx.lineTo(563453232,812557196);
ctx.lineTo(156072194,812557196);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,15,196,0.85)';
ctx.strokeStyle='rgb(197,175,6)';
ctx.moveTo(682972213,272706860);
ctx.lineTo(682972213,62651612);
ctx.lineTo(878831873,62651612);
ctx.lineTo(878831873,272706860);
ctx.lineTo(682972213,272706860);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,160,206,0.85)';
ctx.strokeStyle='rgb(196,85,53)';
ctx.moveTo(472526886,455347892);
ctx.lineTo(472526886,229249815);
ctx.lineTo(595693301,229249815);
ctx.lineTo(595693301,455347892);
ctx.lineTo(472526886,455347892);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,100,249,0.85)';
ctx.strokeStyle='rgb(77,147,83)';
ctx.moveTo(213166040,210287403);
ctx.lineTo(213166040,208574812);
ctx.lineTo(638739226,208574812);
ctx.lineTo(638739226,210287403);
ctx.lineTo(213166040,210287403);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,153,154,0.85)';
ctx.strokeStyle='rgb(160,232,10)';
ctx.moveTo(674564417,253621547);
ctx.lineTo(674564417,183870807);
ctx.lineTo(728471179,183870807);
ctx.lineTo(728471179,253621547);
ctx.lineTo(674564417,253621547);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,174,6,0.85)';
ctx.strokeStyle='rgb(240,107,212)';
ctx.moveTo(20509198,279489301);
ctx.lineTo(20509198,184486968);
ctx.lineTo(741172478,184486968);
ctx.lineTo(741172478,279489301);
ctx.lineTo(20509198,279489301);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,191,183,0.85)';
ctx.strokeStyle='rgb(250,233,50)';
ctx.moveTo(582053139,935450421);
ctx.lineTo(582053139,225565897);
ctx.lineTo(955410614,225565897);
ctx.lineTo(955410614,935450421);
ctx.lineTo(582053139,935450421);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,224,151,0.85)';
ctx.strokeStyle='rgb(140,190,81)';
ctx.moveTo(113028054,926790734);
ctx.lineTo(113028054,105662541);
ctx.lineTo(840039383,105662541);
ctx.lineTo(840039383,926790734);
ctx.lineTo(113028054,926790734);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,209,45,0.85)';
ctx.strokeStyle='rgb(230,35,183)';
ctx.moveTo(608037056,86567577);
ctx.lineTo(608037056,79435125);
ctx.lineTo(621409302,79435125);
ctx.lineTo(621409302,86567577);
ctx.lineTo(608037056,86567577);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,250,206,0.85)';
ctx.strokeStyle='rgb(77,131,57)';
ctx.moveTo(350972822,963667435);
ctx.lineTo(350972822,633324984);
ctx.lineTo(527169959,633324984);
ctx.lineTo(527169959,963667435);
ctx.lineTo(350972822,963667435);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,234,147,0.85)';
ctx.strokeStyle='rgb(111,24,147)';
ctx.moveTo(402154789,57564291);
ctx.lineTo(402154789,49424798);
ctx.lineTo(792884708,49424798);
ctx.lineTo(792884708,57564291);
ctx.lineTo(402154789,57564291);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,185,162,0.85)';
ctx.strokeStyle='rgb(131,30,209)';
ctx.moveTo(453590740,782924243);
ctx.lineTo(453590740,126427709);
ctx.lineTo(909264103,126427709);
ctx.lineTo(909264103,782924243);
ctx.lineTo(453590740,782924243);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,190,82,0.85)';
ctx.strokeStyle='rgb(10,138,71)';
ctx.moveTo(917902088,852097781);
ctx.lineTo(917902088,690081412);
ctx.lineTo(970049721,690081412);
ctx.lineTo(970049721,852097781);
ctx.lineTo(917902088,852097781);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,27,19,0.85)';
ctx.strokeStyle='rgb(56,91,116)';
ctx.moveTo(933607528,877457131);
ctx.lineTo(933607528,727975133);
ctx.lineTo(974944225,727975133);
ctx.lineTo(974944225,877457131);
ctx.lineTo(933607528,877457131);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,151,163,0.85)';
ctx.strokeStyle='rgb(2,47,119)';
ctx.moveTo(60001016,74560451);
ctx.lineTo(60001016,41018527);
ctx.lineTo(371632504,41018527);
ctx.lineTo(371632504,74560451);
ctx.lineTo(60001016,74560451);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,50,204,0.85)';
ctx.strokeStyle='rgb(96,76,43)';
ctx.moveTo(659506028,204500734);
ctx.lineTo(659506028,1978806);
ctx.lineTo(868707119,1978806);
ctx.lineTo(868707119,204500734);
ctx.lineTo(659506028,204500734);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,19,171,0.85)';
ctx.strokeStyle='rgb(228,22,108)';
ctx.moveTo(581533890,166369511);
ctx.lineTo(581533890,49057988);
ctx.lineTo(778828397,49057988);
ctx.lineTo(778828397,166369511);
ctx.lineTo(581533890,166369511);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,3,120,0.85)';
ctx.strokeStyle='rgb(66,90,181)';
ctx.moveTo(7839093,223988511);
ctx.lineTo(7839093,207410005);
ctx.lineTo(28411969,207410005);
ctx.lineTo(28411969,223988511);
ctx.lineTo(7839093,223988511);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,157,170,0.85)';
ctx.strokeStyle='rgb(202,133,230)';
ctx.moveTo(539973101,552126827);
ctx.lineTo(539973101,453393873);
ctx.lineTo(749029027,453393873);
ctx.lineTo(749029027,552126827);
ctx.lineTo(539973101,552126827);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,133,109,0.85)';
ctx.strokeStyle='rgb(34,157,234)';
ctx.moveTo(382424063,829782970);
ctx.lineTo(382424063,674772442);
ctx.lineTo(868749989,674772442);
ctx.lineTo(868749989,829782970);
ctx.lineTo(382424063,829782970);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,202,11,0.85)';
ctx.strokeStyle='rgb(243,239,228)';
ctx.moveTo(878100984,25815847);
ctx.lineTo(878100984,17004277);
ctx.lineTo(987602104,17004277);
ctx.lineTo(987602104,25815847);
ctx.lineTo(878100984,25815847);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,74,177,0.85)';
ctx.strokeStyle='rgb(214,50,173)';
ctx.moveTo(784536776,763103389);
ctx.lineTo(784536776,533992214);
ctx.lineTo(808073013,533992214);
ctx.lineTo(808073013,763103389);
ctx.lineTo(784536776,763103389);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,76,44,0.85)';
ctx.strokeStyle='rgb(11,22,123)';
ctx.moveTo(619051857,218757585);
ctx.lineTo(619051857,121764121);
ctx.lineTo(898123960,121764121);
ctx.lineTo(898123960,218757585);
ctx.lineTo(619051857,218757585);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,102,89,0.85)';
ctx.strokeStyle='rgb(138,112,173)';
ctx.moveTo(679962432,55991043);
ctx.lineTo(679962432,32048377);
ctx.lineTo(881465859,32048377);
ctx.lineTo(881465859,55991043);
ctx.lineTo(679962432,55991043);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,69,27,0.85)';
ctx.strokeStyle='rgb(162,48,235)';
ctx.moveTo(880421630,664304818);
ctx.lineTo(880421630,143816698);
ctx.lineTo(920309630,143816698);
ctx.lineTo(920309630,664304818);
ctx.lineTo(880421630,664304818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,34,141,0.85)';
ctx.strokeStyle='rgb(13,133,252)';
ctx.moveTo(203148389,423290615);
ctx.lineTo(203148389,145428050);
ctx.lineTo(466650404,145428050);
ctx.lineTo(466650404,423290615);
ctx.lineTo(203148389,423290615);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,103,84,0.85)';
ctx.strokeStyle='rgb(155,204,81)';
ctx.moveTo(754827397,514757596);
ctx.lineTo(754827397,63620756);
ctx.lineTo(882484994,63620756);
ctx.lineTo(882484994,514757596);
ctx.lineTo(754827397,514757596);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,47,0,0.85)';
ctx.strokeStyle='rgb(121,53,57)';
ctx.moveTo(661226625,146298397);
ctx.lineTo(661226625,47424934);
ctx.lineTo(964331005,47424934);
ctx.lineTo(964331005,146298397);
ctx.lineTo(661226625,146298397);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,118,53,0.85)';
ctx.strokeStyle='rgb(3,98,85)';
ctx.moveTo(477695648,931936430);
ctx.lineTo(477695648,326798666);
ctx.lineTo(901308085,326798666);
ctx.lineTo(901308085,931936430);
ctx.lineTo(477695648,931936430);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,211,239,0.85)';
ctx.strokeStyle='rgb(210,240,91)';
ctx.moveTo(751146616,473577180);
ctx.lineTo(751146616,100493750);
ctx.lineTo(978584752,100493750);
ctx.lineTo(978584752,473577180);
ctx.lineTo(751146616,473577180);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,158,56,0.85)';
ctx.strokeStyle='rgb(104,187,235)';
ctx.moveTo(246122464,626825355);
ctx.lineTo(246122464,438955844);
ctx.lineTo(362912202,438955844);
ctx.lineTo(362912202,626825355);
ctx.lineTo(246122464,626825355);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,86,182,0.85)';
ctx.strokeStyle='rgb(169,124,132)';
ctx.moveTo(843150483,148568844);
ctx.lineTo(843150483,96744983);
ctx.lineTo(966256762,96744983);
ctx.lineTo(966256762,148568844);
ctx.lineTo(843150483,148568844);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,183,226,0.85)';
ctx.strokeStyle='rgb(234,147,143)';
ctx.moveTo(405584085,249719729);
ctx.lineTo(405584085,42234269);
ctx.lineTo(563735983,42234269);
ctx.lineTo(563735983,249719729);
ctx.lineTo(405584085,249719729);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,115,43,0.85)';
ctx.strokeStyle='rgb(69,233,228)';
ctx.moveTo(530397059,435422045);
ctx.lineTo(530397059,429502605);
ctx.lineTo(760041109,429502605);
ctx.lineTo(760041109,435422045);
ctx.lineTo(530397059,435422045);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,45,3,0.85)';
ctx.strokeStyle='rgb(205,31,210)';
ctx.moveTo(968024449,325204656);
ctx.lineTo(968024449,320012877);
ctx.lineTo(979462107,320012877);
ctx.lineTo(979462107,325204656);
ctx.lineTo(968024449,325204656);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,39,170,0.85)';
ctx.strokeStyle='rgb(18,150,83)';
ctx.moveTo(688696714,628409551);
ctx.lineTo(688696714,590471931);
ctx.lineTo(712093370,590471931);
ctx.lineTo(712093370,628409551);
ctx.lineTo(688696714,628409551);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,107,207,0.85)';
ctx.strokeStyle='rgb(110,206,192)';
ctx.moveTo(104129078,683596484);
ctx.lineTo(104129078,444608478);
ctx.lineTo(507980518,444608478);
ctx.lineTo(507980518,683596484);
ctx.lineTo(104129078,683596484);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,59,111,0.85)';
ctx.strokeStyle='rgb(254,238,184)';
ctx.moveTo(701067724,77076829);
ctx.lineTo(701067724,5521118);
ctx.lineTo(739270823,5521118);
ctx.lineTo(739270823,77076829);
ctx.lineTo(701067724,77076829);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,145,217,0.85)';
ctx.strokeStyle='rgb(197,41,168)';
ctx.moveTo(674552642,451954638);
ctx.lineTo(674552642,61039885);
ctx.lineTo(991142579,61039885);
ctx.lineTo(991142579,451954638);
ctx.lineTo(674552642,451954638);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,148,104,0.85)';
ctx.strokeStyle='rgb(153,13,15)';
ctx.moveTo(748847820,263053608);
ctx.lineTo(748847820,248741444);
ctx.lineTo(891780392,248741444);
ctx.lineTo(891780392,263053608);
ctx.lineTo(748847820,263053608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,128,0,0.85)';
ctx.strokeStyle='rgb(182,38,195)';
ctx.moveTo(576240750,952233546);
ctx.lineTo(576240750,720842031);
ctx.lineTo(607773581,720842031);
ctx.lineTo(607773581,952233546);
ctx.lineTo(576240750,952233546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,171,236,0.85)';
ctx.strokeStyle='rgb(158,144,128)';
ctx.moveTo(95720477,321136189);
ctx.lineTo(95720477,106422388);
ctx.lineTo(518985754,106422388);
ctx.lineTo(518985754,321136189);
ctx.lineTo(95720477,321136189);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,130,153,0.85)';
ctx.strokeStyle='rgb(176,183,5)';
ctx.moveTo(181375320,281173018);
ctx.lineTo(181375320,97836944);
ctx.lineTo(781187399,97836944);
ctx.lineTo(781187399,281173018);
ctx.lineTo(181375320,281173018);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,83,24,0.85)';
ctx.strokeStyle='rgb(47,26,225)';
ctx.moveTo(571470533,615465625);
ctx.lineTo(571470533,595308673);
ctx.lineTo(794453953,595308673);
ctx.lineTo(794453953,615465625);
ctx.lineTo(571470533,615465625);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,166,254,0.85)';
ctx.strokeStyle='rgb(129,158,155)';
ctx.moveTo(772220186,454023804);
ctx.lineTo(772220186,6911353);
ctx.lineTo(969977405,6911353);
ctx.lineTo(969977405,454023804);
ctx.lineTo(772220186,454023804);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,93,134,0.85)';
ctx.strokeStyle='rgb(237,149,140)';
ctx.moveTo(151882171,880489792);
ctx.lineTo(151882171,645689898);
ctx.lineTo(331139562,645689898);
ctx.lineTo(331139562,880489792);
ctx.lineTo(151882171,880489792);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,213,108,0.85)';
ctx.strokeStyle='rgb(203,74,146)';
ctx.moveTo(150548452,154197521);
ctx.lineTo(150548452,59711306);
ctx.lineTo(164614748,59711306);
ctx.lineTo(164614748,154197521);
ctx.lineTo(150548452,154197521);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,162,251,0.85)';
ctx.strokeStyle='rgb(60,159,107)';
ctx.moveTo(616890351,509587538);
ctx.lineTo(616890351,439096898);
ctx.lineTo(778572218,439096898);
ctx.lineTo(778572218,509587538);
ctx.lineTo(616890351,509587538);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,118,55,0.85)';
ctx.strokeStyle='rgb(206,48,11)';
ctx.moveTo(245859080,393349763);
ctx.lineTo(245859080,231860215);
ctx.lineTo(944999321,231860215);
ctx.lineTo(944999321,393349763);
ctx.lineTo(245859080,393349763);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,172,51,0.85)';
ctx.strokeStyle='rgb(31,106,161)';
ctx.moveTo(870833848,988922252);
ctx.lineTo(870833848,915146652);
ctx.lineTo(993746097,915146652);
ctx.lineTo(993746097,988922252);
ctx.lineTo(870833848,988922252);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,242,216,0.85)';
ctx.strokeStyle='rgb(147,55,247)';
ctx.moveTo(474347234,340311297);
ctx.lineTo(474347234,122721971);
ctx.lineTo(517244984,122721971);
ctx.lineTo(517244984,340311297);
ctx.lineTo(474347234,340311297);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,152,186,0.85)';
ctx.strokeStyle='rgb(40,217,205)';
ctx.moveTo(347579295,327884757);
ctx.lineTo(347579295,278073295);
ctx.lineTo(735736049,278073295);
ctx.lineTo(735736049,327884757);
ctx.lineTo(347579295,327884757);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,227,6,0.85)';
ctx.strokeStyle='rgb(153,129,246)';
ctx.moveTo(9838525,40325996);
ctx.lineTo(9838525,12751634);
ctx.lineTo(977234367,12751634);
ctx.lineTo(977234367,40325996);
ctx.lineTo(9838525,40325996);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,96,179,0.85)';
ctx.strokeStyle='rgb(94,170,203)';
ctx.moveTo(339560380,277673307);
ctx.lineTo(339560380,116963314);
ctx.lineTo(401549265,116963314);
ctx.lineTo(401549265,277673307);
ctx.lineTo(339560380,277673307);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,224,50,0.85)';
ctx.strokeStyle='rgb(164,188,11)';
ctx.moveTo(25531228,467475868);
ctx.lineTo(25531228,358411614);
ctx.lineTo(445321585,358411614);
ctx.lineTo(445321585,467475868);
ctx.lineTo(25531228,467475868);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,235,13,0.85)';
ctx.strokeStyle='rgb(21,51,31)';
ctx.moveTo(75943708,668161662);
ctx.lineTo(75943708,179832120);
ctx.lineTo(896029665,179832120);
ctx.lineTo(896029665,668161662);
ctx.lineTo(75943708,668161662);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,243,33,0.85)';
ctx.strokeStyle='rgb(247,4,46)';
ctx.moveTo(722106995,910496333);
ctx.lineTo(722106995,283513746);
ctx.lineTo(960757789,283513746);
ctx.lineTo(960757789,910496333);
ctx.lineTo(722106995,910496333);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,145,7,0.85)';
ctx.strokeStyle='rgb(249,142,115)';
ctx.moveTo(380041895,702723562);
ctx.lineTo(380041895,541188655);
ctx.lineTo(809236391,541188655);
ctx.lineTo(809236391,702723562);
ctx.lineTo(380041895,702723562);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,148,3,0.85)';
ctx.strokeStyle='rgb(87,113,176)';
ctx.moveTo(113278449,959016193);
ctx.lineTo(113278449,751537172);
ctx.lineTo(211753584,751537172);
ctx.lineTo(211753584,959016193);
ctx.lineTo(113278449,959016193);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,66,252,0.85)';
ctx.strokeStyle='rgb(101,19,150)';
ctx.moveTo(758675209,656941933);
ctx.lineTo(758675209,316410440);
ctx.lineTo(775328771,316410440);
ctx.lineTo(775328771,656941933);
ctx.lineTo(758675209,656941933);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,64,79,0.85)';
ctx.strokeStyle='rgb(40,9,9)';
ctx.moveTo(902967624,171864770);
ctx.lineTo(902967624,29456193);
ctx.lineTo(941941050,29456193);
ctx.lineTo(941941050,171864770);
ctx.lineTo(902967624,171864770);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,19,105,0.85)';
ctx.strokeStyle='rgb(32,49,83)';
ctx.moveTo(79118818,255240624);
ctx.lineTo(79118818,234713669);
ctx.lineTo(890648427,234713669);
ctx.lineTo(890648427,255240624);
ctx.lineTo(79118818,255240624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,41,216,0.85)';
ctx.strokeStyle='rgb(173,46,36)';
ctx.moveTo(57530088,211040021);
ctx.lineTo(57530088,61436042);
ctx.lineTo(139804081,61436042);
ctx.lineTo(139804081,211040021);
ctx.lineTo(57530088,211040021);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,88,60,0.85)';
ctx.strokeStyle='rgb(94,116,133)';
ctx.moveTo(461888590,531184192);
ctx.lineTo(461888590,194921171);
ctx.lineTo(607754529,194921171);
ctx.lineTo(607754529,531184192);
ctx.lineTo(461888590,531184192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,25,207,0.85)';
ctx.strokeStyle='rgb(215,19,6)';
ctx.moveTo(80217117,220834660);
ctx.lineTo(80217117,195830341);
ctx.lineTo(182351721,195830341);
ctx.lineTo(182351721,220834660);
ctx.lineTo(80217117,220834660);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,66,73,0.85)';
ctx.strokeStyle='rgb(23,111,119)';
ctx.moveTo(390621327,161392336);
ctx.lineTo(390621327,139919089);
ctx.lineTo(435371180,139919089);
ctx.lineTo(435371180,161392336);
ctx.lineTo(390621327,161392336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,200,138,0.85)';
ctx.strokeStyle='rgb(60,172,15)';
ctx.moveTo(289784196,693328312);
ctx.lineTo(289784196,587687203);
ctx.lineTo(386218769,587687203);
ctx.lineTo(386218769,693328312);
ctx.lineTo(289784196,693328312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,110,83,0.85)';
ctx.strokeStyle='rgb(113,157,61)';
ctx.moveTo(144275211,513783651);
ctx.lineTo(144275211,112646313);
ctx.lineTo(229565981,112646313);
ctx.lineTo(229565981,513783651);
ctx.lineTo(144275211,513783651);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,74,23,0.85)';
ctx.strokeStyle='rgb(249,209,108)';
ctx.moveTo(81544928,779254174);
ctx.lineTo(81544928,154336339);
ctx.lineTo(167567077,154336339);
ctx.lineTo(167567077,779254174);
ctx.lineTo(81544928,779254174);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,215,104,0.85)';
ctx.strokeStyle='rgb(113,172,116)';
ctx.moveTo(513553000,866817725);
ctx.lineTo(513553000,239264174);
ctx.lineTo(725322772,239264174);
ctx.lineTo(725322772,866817725);
ctx.lineTo(513553000,866817725);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,192,0,0.85)';
ctx.strokeStyle='rgb(24,249,87)';
ctx.moveTo(664150626,275508536);
ctx.lineTo(664150626,234538602);
ctx.lineTo(791478002,234538602);
ctx.lineTo(791478002,275508536);
ctx.lineTo(664150626,275508536);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,83,76,0.85)';
ctx.strokeStyle='rgb(47,159,77)';
ctx.moveTo(844289003,707583914);
ctx.lineTo(844289003,204621268);
ctx.lineTo(954554791,204621268);
ctx.lineTo(954554791,707583914);
ctx.lineTo(844289003,707583914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,214,92,0.85)';
ctx.strokeStyle='rgb(7,162,175)';
ctx.moveTo(20446735,631614619);
ctx.lineTo(20446735,118604999);
ctx.lineTo(921718424,118604999);
ctx.lineTo(921718424,631614619);
ctx.lineTo(20446735,631614619);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,232,200,0.85)';
ctx.strokeStyle='rgb(198,147,216)';
ctx.moveTo(617368614,962660964);
ctx.lineTo(617368614,905765300);
ctx.lineTo(894060203,905765300);
ctx.lineTo(894060203,962660964);
ctx.lineTo(617368614,962660964);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,190,20,0.85)';
ctx.strokeStyle='rgb(225,92,115)';
ctx.moveTo(779079276,921155590);
ctx.lineTo(779079276,737723605);
ctx.lineTo(806219431,737723605);
ctx.lineTo(806219431,921155590);
ctx.lineTo(779079276,921155590);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,32,245,0.85)';
ctx.strokeStyle='rgb(159,216,71)';
ctx.moveTo(725723107,638888201);
ctx.lineTo(725723107,600461376);
ctx.lineTo(881516980,600461376);
ctx.lineTo(881516980,638888201);
ctx.lineTo(725723107,638888201);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,222,107,0.85)';
ctx.strokeStyle='rgb(136,9,79)';
ctx.moveTo(567646476,538876843);
ctx.lineTo(567646476,227781638);
ctx.lineTo(584317873,227781638);
ctx.lineTo(584317873,538876843);
ctx.lineTo(567646476,538876843);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,236,25,0.85)';
ctx.strokeStyle='rgb(60,102,35)';
ctx.moveTo(816286742,612009928);
ctx.lineTo(816286742,287164049);
ctx.lineTo(946403935,287164049);
ctx.lineTo(946403935,612009928);
ctx.lineTo(816286742,612009928);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,145,170,0.85)';
ctx.strokeStyle='rgb(233,221,144)';
ctx.moveTo(32278406,516343869);
ctx.lineTo(32278406,144507938);
ctx.lineTo(581738537,144507938);
ctx.lineTo(581738537,516343869);
ctx.lineTo(32278406,516343869);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,220,168,0.85)';
ctx.strokeStyle='rgb(217,44,64)';
ctx.moveTo(52356408,80388629);
ctx.lineTo(52356408,71840026);
ctx.lineTo(475903686,71840026);
ctx.lineTo(475903686,80388629);
ctx.lineTo(52356408,80388629);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,48,7,0.85)';
ctx.strokeStyle='rgb(182,228,36)';
ctx.moveTo(202580789,502377151);
ctx.lineTo(202580789,489867596);
ctx.lineTo(354136284,489867596);
ctx.lineTo(354136284,502377151);
ctx.lineTo(202580789,502377151);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,37,184,0.85)';
ctx.strokeStyle='rgb(42,104,252)';
ctx.moveTo(775077484,484507);
ctx.lineTo(775077484,250);
ctx.lineTo(843044004,250);
ctx.lineTo(843044004,484507);
ctx.lineTo(775077484,484507);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,146,229,0.85)';
ctx.strokeStyle='rgb(87,13,74)';
ctx.moveTo(373340988,53380115);
ctx.lineTo(373340988,9516102);
ctx.lineTo(425707034,9516102);
ctx.lineTo(425707034,53380115);
ctx.lineTo(373340988,53380115);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,157,225,0.85)';
ctx.strokeStyle='rgb(175,241,30)';
ctx.moveTo(775234842,475910415);
ctx.lineTo(775234842,54607291);
ctx.lineTo(801436313,54607291);
ctx.lineTo(801436313,475910415);
ctx.lineTo(775234842,475910415);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,82,247,0.85)';
ctx.strokeStyle='rgb(226,5,216)';
ctx.moveTo(176467290,560767124);
ctx.lineTo(176467290,150666502);
ctx.lineTo(527554461,150666502);
ctx.lineTo(527554461,560767124);
ctx.lineTo(176467290,560767124);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,176,111,0.85)';
ctx.strokeStyle='rgb(246,163,151)';
ctx.moveTo(294989227,488321352);
ctx.lineTo(294989227,146805331);
ctx.lineTo(386137232,146805331);
ctx.lineTo(386137232,488321352);
ctx.lineTo(294989227,488321352);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,176,245,0.85)';
ctx.strokeStyle='rgb(41,188,220)';
ctx.moveTo(924722511,497969691);
ctx.lineTo(924722511,461742047);
ctx.lineTo(936712577,461742047);
ctx.lineTo(936712577,497969691);
ctx.lineTo(924722511,497969691);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,26,246,0.85)';
ctx.strokeStyle='rgb(117,33,92)';
ctx.moveTo(554283240,568393564);
ctx.lineTo(554283240,536783948);
ctx.lineTo(594756283,536783948);
ctx.lineTo(594756283,568393564);
ctx.lineTo(554283240,568393564);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,233,53,0.85)';
ctx.strokeStyle='rgb(93,71,121)';
ctx.moveTo(672058359,149370188);
ctx.lineTo(672058359,68572195);
ctx.lineTo(877962229,68572195);
ctx.lineTo(877962229,149370188);
ctx.lineTo(672058359,149370188);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,97,29,0.85)';
ctx.strokeStyle='rgb(129,129,109)';
ctx.moveTo(537712065,448460232);
ctx.lineTo(537712065,8641388);
ctx.lineTo(933407802,8641388);
ctx.lineTo(933407802,448460232);
ctx.lineTo(537712065,448460232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,60,164,0.85)';
ctx.strokeStyle='rgb(180,209,114)';
ctx.moveTo(425361859,730805121);
ctx.lineTo(425361859,104129860);
ctx.lineTo(672912791,104129860);
ctx.lineTo(672912791,730805121);
ctx.lineTo(425361859,730805121);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,93,99,0.85)';
ctx.strokeStyle='rgb(238,85,207)';
ctx.moveTo(483534257,545778596);
ctx.lineTo(483534257,164239244);
ctx.lineTo(598498623,164239244);
ctx.lineTo(598498623,545778596);
ctx.lineTo(483534257,545778596);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,212,1,0.85)';
ctx.strokeStyle='rgb(250,28,119)';
ctx.moveTo(590179282,905945453);
ctx.lineTo(590179282,850271340);
ctx.lineTo(759674685,850271340);
ctx.lineTo(759674685,905945453);
ctx.lineTo(590179282,905945453);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,187,159,0.85)';
ctx.strokeStyle='rgb(10,65,152)';
ctx.moveTo(349085270,379970439);
ctx.lineTo(349085270,356196143);
ctx.lineTo(483275102,356196143);
ctx.lineTo(483275102,379970439);
ctx.lineTo(349085270,379970439);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,173,148,0.85)';
ctx.strokeStyle='rgb(27,154,78)';
ctx.moveTo(733177117,524681944);
ctx.lineTo(733177117,55911779);
ctx.lineTo(735006537,55911779);
ctx.lineTo(735006537,524681944);
ctx.lineTo(733177117,524681944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,198,95,0.85)';
ctx.strokeStyle='rgb(112,70,109)';
ctx.moveTo(975802715,887138376);
ctx.lineTo(975802715,382883834);
ctx.lineTo(990399819,382883834);
ctx.lineTo(990399819,887138376);
ctx.lineTo(975802715,887138376);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,35,231,0.85)';
ctx.strokeStyle='rgb(244,210,69)';
ctx.moveTo(443451149,977641332);
ctx.lineTo(443451149,128618864);
ctx.lineTo(994175462,128618864);
ctx.lineTo(994175462,977641332);
ctx.lineTo(443451149,977641332);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,250,119,0.85)';
ctx.strokeStyle='rgb(147,216,124)';
ctx.moveTo(570607069,633871079);
ctx.lineTo(570607069,402911226);
ctx.lineTo(802675297,402911226);
ctx.lineTo(802675297,633871079);
ctx.lineTo(570607069,633871079);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,80,38,0.85)';
ctx.strokeStyle='rgb(129,239,99)';
ctx.moveTo(940229651,860901180);
ctx.lineTo(940229651,439628160);
ctx.lineTo(940569279,439628160);
ctx.lineTo(940569279,860901180);
ctx.lineTo(940229651,860901180);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,76,254,0.85)';
ctx.strokeStyle='rgb(215,176,179)';
ctx.moveTo(993564902,102865243);
ctx.lineTo(993564902,30551739);
ctx.lineTo(995755832,30551739);
ctx.lineTo(995755832,102865243);
ctx.lineTo(993564902,102865243);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,19,135,0.85)';
ctx.strokeStyle='rgb(205,222,198)';
ctx.moveTo(288117333,232172822);
ctx.lineTo(288117333,175742361);
ctx.lineTo(348169651,175742361);
ctx.lineTo(348169651,232172822);
ctx.lineTo(288117333,232172822);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,68,241,0.85)';
ctx.strokeStyle='rgb(185,18,8)';
ctx.moveTo(546743197,488045587);
ctx.lineTo(546743197,433276967);
ctx.lineTo(659800745,433276967);
ctx.lineTo(659800745,488045587);
ctx.lineTo(546743197,488045587);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,138,27,0.85)';
ctx.strokeStyle='rgb(180,132,253)';
ctx.moveTo(841634782,940477025);
ctx.lineTo(841634782,923309364);
ctx.lineTo(876482126,923309364);
ctx.lineTo(876482126,940477025);
ctx.lineTo(841634782,940477025);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,2,86,0.85)';
ctx.strokeStyle='rgb(138,185,55)';
ctx.moveTo(789100852,44434979);
ctx.lineTo(789100852,18213400);
ctx.lineTo(844524693,18213400);
ctx.lineTo(844524693,44434979);
ctx.lineTo(789100852,44434979);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,225,33,0.85)';
ctx.strokeStyle='rgb(136,217,224)';
ctx.moveTo(926455773,852797832);
ctx.lineTo(926455773,263814465);
ctx.lineTo(963553130,263814465);
ctx.lineTo(963553130,852797832);
ctx.lineTo(926455773,852797832);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,209,184,0.85)';
ctx.strokeStyle='rgb(21,99,1)';
ctx.moveTo(28438477,62132803);
ctx.lineTo(28438477,13060771);
ctx.lineTo(528843982,13060771);
ctx.lineTo(528843982,62132803);
ctx.lineTo(28438477,62132803);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,181,191,0.85)';
ctx.strokeStyle='rgb(242,233,199)';
ctx.moveTo(406413486,187488603);
ctx.lineTo(406413486,116294254);
ctx.lineTo(768452902,116294254);
ctx.lineTo(768452902,187488603);
ctx.lineTo(406413486,187488603);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,74,186,0.85)';
ctx.strokeStyle='rgb(98,185,29)';
ctx.moveTo(314656842,15127671);
ctx.lineTo(314656842,2582313);
ctx.lineTo(525271953,2582313);
ctx.lineTo(525271953,15127671);
ctx.lineTo(314656842,15127671);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,39,160,0.85)';
ctx.strokeStyle='rgb(155,157,49)';
ctx.moveTo(767938891,986517863);
ctx.lineTo(767938891,961832773);
ctx.lineTo(819013357,961832773);
ctx.lineTo(819013357,986517863);
ctx.lineTo(767938891,986517863);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,63,101,0.85)';
ctx.strokeStyle='rgb(143,121,60)';
ctx.moveTo(667290033,936161494);
ctx.lineTo(667290033,423682986);
ctx.lineTo(682806304,423682986);
ctx.lineTo(682806304,936161494);
ctx.lineTo(667290033,936161494);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,35,118,0.85)';
ctx.strokeStyle='rgb(167,181,67)';
ctx.moveTo(327324354,905016256);
ctx.lineTo(327324354,6198853);
ctx.lineTo(988157932,6198853);
ctx.lineTo(988157932,905016256);
ctx.lineTo(327324354,905016256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,204,80,0.85)';
ctx.strokeStyle='rgb(57,134,236)';
ctx.moveTo(851804267,967289402);
ctx.lineTo(851804267,851836214);
ctx.lineTo(887113428,851836214);
ctx.lineTo(887113428,967289402);
ctx.lineTo(851804267,967289402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,213,174,0.85)';
ctx.strokeStyle='rgb(152,20,75)';
ctx.moveTo(36551841,845838199);
ctx.lineTo(36551841,635301346);
ctx.lineTo(38475211,635301346);
ctx.lineTo(38475211,845838199);
ctx.lineTo(36551841,845838199);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,230,41,0.85)';
ctx.strokeStyle='rgb(195,47,22)';
ctx.moveTo(726086124,644797498);
ctx.lineTo(726086124,640617619);
ctx.lineTo(819649373,640617619);
ctx.lineTo(819649373,644797498);
ctx.lineTo(726086124,644797498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,234,243,0.85)';
ctx.strokeStyle='rgb(0,189,233)';
ctx.moveTo(803270216,639748298);
ctx.lineTo(803270216,345673965);
ctx.lineTo(971815768,345673965);
ctx.lineTo(971815768,639748298);
ctx.lineTo(803270216,639748298);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,230,183,0.85)';
ctx.strokeStyle='rgb(86,153,170)';
ctx.moveTo(83068817,609377647);
ctx.lineTo(83068817,408668955);
ctx.lineTo(585283016,408668955);
ctx.lineTo(585283016,609377647);
ctx.lineTo(83068817,609377647);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,45,100,0.85)';
ctx.strokeStyle='rgb(14,22,183)';
ctx.moveTo(952190448,605293594);
ctx.lineTo(952190448,219908150);
ctx.lineTo(987149633,219908150);
ctx.lineTo(987149633,605293594);
ctx.lineTo(952190448,605293594);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,143,219,0.85)';
ctx.strokeStyle='rgb(127,162,124)';
ctx.moveTo(955302764,497415926);
ctx.lineTo(955302764,485968702);
ctx.lineTo(996243357,485968702);
ctx.lineTo(996243357,497415926);
ctx.lineTo(955302764,497415926);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,211,82,0.85)';
ctx.strokeStyle='rgb(231,89,105)';
ctx.moveTo(540252093,662383522);
ctx.lineTo(540252093,607279694);
ctx.lineTo(640824015,607279694);
ctx.lineTo(640824015,662383522);
ctx.lineTo(540252093,662383522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,65,15,0.85)';
ctx.strokeStyle='rgb(120,254,40)';
ctx.moveTo(988677840,255582661);
ctx.lineTo(988677840,80935636);
ctx.lineTo(994932678,80935636);
ctx.lineTo(994932678,255582661);
ctx.lineTo(988677840,255582661);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,25,246,0.85)';
ctx.strokeStyle='rgb(36,123,246)';
ctx.moveTo(611399594,251077636);
ctx.lineTo(611399594,145558223);
ctx.lineTo(802119121,145558223);
ctx.lineTo(802119121,251077636);
ctx.lineTo(611399594,251077636);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,165,86,0.85)';
ctx.strokeStyle='rgb(232,99,187)';
ctx.moveTo(521821100,14327523);
ctx.lineTo(521821100,1679900);
ctx.lineTo(941445248,1679900);
ctx.lineTo(941445248,14327523);
ctx.lineTo(521821100,14327523);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,169,92,0.85)';
ctx.strokeStyle='rgb(33,57,57)';
ctx.moveTo(59522976,265248465);
ctx.lineTo(59522976,221191074);
ctx.lineTo(518581098,221191074);
ctx.lineTo(518581098,265248465);
ctx.lineTo(59522976,265248465);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,24,161,0.85)';
ctx.strokeStyle='rgb(90,34,138)';
ctx.moveTo(306883114,36265128);
ctx.lineTo(306883114,19552187);
ctx.lineTo(370807722,19552187);
ctx.lineTo(370807722,36265128);
ctx.lineTo(306883114,36265128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,246,32,0.85)';
ctx.strokeStyle='rgb(97,176,64)';
ctx.moveTo(312647576,806397862);
ctx.lineTo(312647576,131735706);
ctx.lineTo(402072608,131735706);
ctx.lineTo(402072608,806397862);
ctx.lineTo(312647576,806397862);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,233,212,0.85)';
ctx.strokeStyle='rgb(26,151,249)';
ctx.moveTo(529607148,280716090);
ctx.lineTo(529607148,108592728);
ctx.lineTo(610016235,108592728);
ctx.lineTo(610016235,280716090);
ctx.lineTo(529607148,280716090);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,226,89,0.85)';
ctx.strokeStyle='rgb(229,63,78)';
ctx.moveTo(987548524,507163244);
ctx.lineTo(987548524,176078597);
ctx.lineTo(992791286,176078597);
ctx.lineTo(992791286,507163244);
ctx.lineTo(987548524,507163244);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,166,40,0.85)';
ctx.strokeStyle='rgb(130,234,7)';
ctx.moveTo(800840064,616448290);
ctx.lineTo(800840064,475042524);
ctx.lineTo(850386358,475042524);
ctx.lineTo(850386358,616448290);
ctx.lineTo(800840064,616448290);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,248,97,0.85)';
ctx.strokeStyle='rgb(20,81,120)';
ctx.moveTo(776825145,953379951);
ctx.lineTo(776825145,63568996);
ctx.lineTo(980478071,63568996);
ctx.lineTo(980478071,953379951);
ctx.lineTo(776825145,953379951);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,165,157,0.85)';
ctx.strokeStyle='rgb(24,62,24)';
ctx.moveTo(195912228,341774780);
ctx.lineTo(195912228,279257098);
ctx.lineTo(682671713,279257098);
ctx.lineTo(682671713,341774780);
ctx.lineTo(195912228,341774780);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,202,215,0.85)';
ctx.strokeStyle='rgb(127,105,81)';
ctx.moveTo(709331727,780099670);
ctx.lineTo(709331727,695480731);
ctx.lineTo(982805306,695480731);
ctx.lineTo(982805306,780099670);
ctx.lineTo(709331727,780099670);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,12,46,0.85)';
ctx.strokeStyle='rgb(156,201,81)';
ctx.moveTo(26485122,115447549);
ctx.lineTo(26485122,76683861);
ctx.lineTo(392878380,76683861);
ctx.lineTo(392878380,115447549);
ctx.lineTo(26485122,115447549);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,60,243,0.85)';
ctx.strokeStyle='rgb(59,34,177)';
ctx.moveTo(920994661,315548360);
ctx.lineTo(920994661,60573640);
ctx.lineTo(970503002,60573640);
ctx.lineTo(970503002,315548360);
ctx.lineTo(920994661,315548360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,99,222,0.85)';
ctx.strokeStyle='rgb(187,237,218)';
ctx.moveTo(602822609,533259786);
ctx.lineTo(602822609,20174540);
ctx.lineTo(851911181,20174540);
ctx.lineTo(851911181,533259786);
ctx.lineTo(602822609,533259786);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,95,169,0.85)';
ctx.strokeStyle='rgb(143,185,62)';
ctx.moveTo(380008906,494559302);
ctx.lineTo(380008906,265234144);
ctx.lineTo(679077139,265234144);
ctx.lineTo(679077139,494559302);
ctx.lineTo(380008906,494559302);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,126,136,0.85)';
ctx.strokeStyle='rgb(28,107,242)';
ctx.moveTo(193973049,721938731);
ctx.lineTo(193973049,425343861);
ctx.lineTo(416255624,425343861);
ctx.lineTo(416255624,721938731);
ctx.lineTo(193973049,721938731);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,55,71,0.85)';
ctx.strokeStyle='rgb(214,142,31)';
ctx.moveTo(147839918,831054024);
ctx.lineTo(147839918,523807497);
ctx.lineTo(431037523,523807497);
ctx.lineTo(431037523,831054024);
ctx.lineTo(147839918,831054024);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,204,142,0.85)';
ctx.strokeStyle='rgb(161,23,45)';
ctx.moveTo(473949962,225774882);
ctx.lineTo(473949962,9137104);
ctx.lineTo(629984890,9137104);
ctx.lineTo(629984890,225774882);
ctx.lineTo(473949962,225774882);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,171,231,0.85)';
ctx.strokeStyle='rgb(23,197,228)';
ctx.moveTo(844870337,457014198);
ctx.lineTo(844870337,101785586);
ctx.lineTo(996689819,101785586);
ctx.lineTo(996689819,457014198);
ctx.lineTo(844870337,457014198);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,11,226,0.85)';
ctx.strokeStyle='rgb(254,118,77)';
ctx.moveTo(63104131,902795559);
ctx.lineTo(63104131,443259838);
ctx.lineTo(797421992,443259838);
ctx.lineTo(797421992,902795559);
ctx.lineTo(63104131,902795559);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,26,30,0.85)';
ctx.strokeStyle='rgb(11,113,200)';
ctx.moveTo(601955290,913579735);
ctx.lineTo(601955290,592031655);
ctx.lineTo(898495032,592031655);
ctx.lineTo(898495032,913579735);
ctx.lineTo(601955290,913579735);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,10,172,0.85)';
ctx.strokeStyle='rgb(212,176,13)';
ctx.moveTo(781674405,677560992);
ctx.lineTo(781674405,233651607);
ctx.lineTo(932739785,233651607);
ctx.lineTo(932739785,677560992);
ctx.lineTo(781674405,677560992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,149,111,0.85)';
ctx.strokeStyle='rgb(1,235,206)';
ctx.moveTo(434955693,139121521);
ctx.lineTo(434955693,121279778);
ctx.lineTo(662223243,121279778);
ctx.lineTo(662223243,139121521);
ctx.lineTo(434955693,139121521);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,75,129,0.85)';
ctx.strokeStyle='rgb(138,93,152)';
ctx.moveTo(849885013,293492691);
ctx.lineTo(849885013,215525394);
ctx.lineTo(875610126,215525394);
ctx.lineTo(875610126,293492691);
ctx.lineTo(849885013,293492691);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,164,91,0.85)';
ctx.strokeStyle='rgb(161,183,133)';
ctx.moveTo(431998346,994592616);
ctx.lineTo(431998346,477567522);
ctx.lineTo(528007252,477567522);
ctx.lineTo(528007252,994592616);
ctx.lineTo(431998346,994592616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,180,217,0.85)';
ctx.strokeStyle='rgb(57,140,254)';
ctx.moveTo(843821551,382597020);
ctx.lineTo(843821551,249364677);
ctx.lineTo(992991619,249364677);
ctx.lineTo(992991619,382597020);
ctx.lineTo(843821551,382597020);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,111,13,0.85)';
ctx.strokeStyle='rgb(14,108,58)';
ctx.moveTo(504620599,721705156);
ctx.lineTo(504620599,675617148);
ctx.lineTo(912603951,675617148);
ctx.lineTo(912603951,721705156);
ctx.lineTo(504620599,721705156);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,201,28,0.85)';
ctx.strokeStyle='rgb(10,175,91)';
ctx.moveTo(756569267,618830056);
ctx.lineTo(756569267,138724387);
ctx.lineTo(807114245,138724387);
ctx.lineTo(807114245,618830056);
ctx.lineTo(756569267,618830056);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,221,27,0.85)';
ctx.strokeStyle='rgb(38,93,14)';
ctx.moveTo(577168026,584288766);
ctx.lineTo(577168026,281477796);
ctx.lineTo(761409930,281477796);
ctx.lineTo(761409930,584288766);
ctx.lineTo(577168026,584288766);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,26,146,0.85)';
ctx.strokeStyle='rgb(40,215,204)';
ctx.moveTo(783564421,785782590);
ctx.lineTo(783564421,632814819);
ctx.lineTo(793883965,632814819);
ctx.lineTo(793883965,785782590);
ctx.lineTo(783564421,785782590);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,239,235,0.85)';
ctx.strokeStyle='rgb(212,83,48)';
ctx.moveTo(817993991,421703494);
ctx.lineTo(817993991,302736887);
ctx.lineTo(902745879,302736887);
ctx.lineTo(902745879,421703494);
ctx.lineTo(817993991,421703494);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,147,114,0.85)';
ctx.strokeStyle='rgb(27,153,165)';
ctx.moveTo(727138908,341693109);
ctx.lineTo(727138908,222016678);
ctx.lineTo(885883653,222016678);
ctx.lineTo(885883653,341693109);
ctx.lineTo(727138908,341693109);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,179,209,0.85)';
ctx.strokeStyle='rgb(83,114,159)';
ctx.moveTo(482085442,497825968);
ctx.lineTo(482085442,277589135);
ctx.lineTo(524259361,277589135);
ctx.lineTo(524259361,497825968);
ctx.lineTo(482085442,497825968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,134,254,0.85)';
ctx.strokeStyle='rgb(68,103,216)';
ctx.moveTo(502535343,90701061);
ctx.lineTo(502535343,81144511);
ctx.lineTo(708955609,81144511);
ctx.lineTo(708955609,90701061);
ctx.lineTo(502535343,90701061);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,13,190,0.85)';
ctx.strokeStyle='rgb(6,152,121)';
ctx.moveTo(576037295,964270951);
ctx.lineTo(576037295,409086624);
ctx.lineTo(795512553,409086624);
ctx.lineTo(795512553,964270951);
ctx.lineTo(576037295,964270951);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,132,189,0.85)';
ctx.strokeStyle='rgb(55,66,106)';
ctx.moveTo(181858862,127535913);
ctx.lineTo(181858862,97646885);
ctx.lineTo(243161126,97646885);
ctx.lineTo(243161126,127535913);
ctx.lineTo(181858862,127535913);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,71,43,0.85)';
ctx.strokeStyle='rgb(149,6,78)';
ctx.moveTo(894676518,952490989);
ctx.lineTo(894676518,70268861);
ctx.lineTo(916535290,70268861);
ctx.lineTo(916535290,952490989);
ctx.lineTo(894676518,952490989);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,54,166,0.85)';
ctx.strokeStyle='rgb(61,99,54)';
ctx.moveTo(838852685,938762187);
ctx.lineTo(838852685,433649034);
ctx.lineTo(912960701,433649034);
ctx.lineTo(912960701,938762187);
ctx.lineTo(838852685,938762187);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,187,29,0.85)';
ctx.strokeStyle='rgb(200,200,194)';
ctx.moveTo(564642587,928097284);
ctx.lineTo(564642587,601020173);
ctx.lineTo(875184774,601020173);
ctx.lineTo(875184774,928097284);
ctx.lineTo(564642587,928097284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,50,201,0.85)';
ctx.strokeStyle='rgb(84,144,68)';
ctx.moveTo(837308510,377783545);
ctx.lineTo(837308510,136688472);
ctx.lineTo(933331489,136688472);
ctx.lineTo(933331489,377783545);
ctx.lineTo(837308510,377783545);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,2,120,0.85)';
ctx.strokeStyle='rgb(180,215,45)';
ctx.moveTo(711344885,453643248);
ctx.lineTo(711344885,145384751);
ctx.lineTo(750119303,145384751);
ctx.lineTo(750119303,453643248);
ctx.lineTo(711344885,453643248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,67,199,0.85)';
ctx.strokeStyle='rgb(26,133,44)';
ctx.moveTo(348055410,865719966);
ctx.lineTo(348055410,211766411);
ctx.lineTo(569492393,211766411);
ctx.lineTo(569492393,865719966);
ctx.lineTo(348055410,865719966);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,13,97,0.85)';
ctx.strokeStyle='rgb(201,166,175)';
ctx.moveTo(698627128,857854929);
ctx.lineTo(698627128,608327076);
ctx.lineTo(949810855,608327076);
ctx.lineTo(949810855,857854929);
ctx.lineTo(698627128,857854929);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,234,245,0.85)';
ctx.strokeStyle='rgb(5,80,69)';
ctx.moveTo(473876479,948347666);
ctx.lineTo(473876479,151884567);
ctx.lineTo(832570087,151884567);
ctx.lineTo(832570087,948347666);
ctx.lineTo(473876479,948347666);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,49,245,0.85)';
ctx.strokeStyle='rgb(99,159,143)';
ctx.moveTo(406949384,235249513);
ctx.lineTo(406949384,87668191);
ctx.lineTo(786270470,87668191);
ctx.lineTo(786270470,235249513);
ctx.lineTo(406949384,235249513);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,216,67,0.85)';
ctx.strokeStyle='rgb(136,93,61)';
ctx.moveTo(609733429,334272995);
ctx.lineTo(609733429,265451688);
ctx.lineTo(941199818,265451688);
ctx.lineTo(941199818,334272995);
ctx.lineTo(609733429,334272995);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,34,74,0.85)';
ctx.strokeStyle='rgb(116,109,224)';
ctx.moveTo(497605720,600782912);
ctx.lineTo(497605720,259582392);
ctx.lineTo(700145898,259582392);
ctx.lineTo(700145898,600782912);
ctx.lineTo(497605720,600782912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,160,166,0.85)';
ctx.strokeStyle='rgb(200,65,130)';
ctx.moveTo(178582546,621641726);
ctx.lineTo(178582546,169465499);
ctx.lineTo(887772091,169465499);
ctx.lineTo(887772091,621641726);
ctx.lineTo(178582546,621641726);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,185,155,0.85)';
ctx.strokeStyle='rgb(151,205,142)';
ctx.moveTo(456996490,764911188);
ctx.lineTo(456996490,117250146);
ctx.lineTo(872309518,117250146);
ctx.lineTo(872309518,764911188);
ctx.lineTo(456996490,764911188);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,88,2,0.85)';
ctx.strokeStyle='rgb(86,111,185)';
ctx.moveTo(724253233,878945802);
ctx.lineTo(724253233,677589037);
ctx.lineTo(960220483,677589037);
ctx.lineTo(960220483,878945802);
ctx.lineTo(724253233,878945802);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,220,247,0.85)';
ctx.strokeStyle='rgb(130,139,69)';
ctx.moveTo(490097271,317579052);
ctx.lineTo(490097271,313089467);
ctx.lineTo(748719966,313089467);
ctx.lineTo(748719966,317579052);
ctx.lineTo(490097271,317579052);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,197,3,0.85)';
ctx.strokeStyle='rgb(15,198,34)';
ctx.moveTo(630447072,126507146);
ctx.lineTo(630447072,53778257);
ctx.lineTo(647669371,53778257);
ctx.lineTo(647669371,126507146);
ctx.lineTo(630447072,126507146);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,111,175,0.85)';
ctx.strokeStyle='rgb(204,84,85)';
ctx.moveTo(904587125,153045960);
ctx.lineTo(904587125,141203676);
ctx.lineTo(972807058,141203676);
ctx.lineTo(972807058,153045960);
ctx.lineTo(904587125,153045960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,167,92,0.85)';
ctx.strokeStyle='rgb(205,188,170)';
ctx.moveTo(45347534,218968515);
ctx.lineTo(45347534,17392992);
ctx.lineTo(139790995,17392992);
ctx.lineTo(139790995,218968515);
ctx.lineTo(45347534,218968515);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,133,106,0.85)';
ctx.strokeStyle='rgb(156,38,184)';
ctx.moveTo(187123553,117114346);
ctx.lineTo(187123553,23790562);
ctx.lineTo(272515134,23790562);
ctx.lineTo(272515134,117114346);
ctx.lineTo(187123553,117114346);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,201,26,0.85)';
ctx.strokeStyle='rgb(215,164,3)';
ctx.moveTo(129520450,55847941);
ctx.lineTo(129520450,9824546);
ctx.lineTo(639698655,9824546);
ctx.lineTo(639698655,55847941);
ctx.lineTo(129520450,55847941);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,164,211,0.85)';
ctx.strokeStyle='rgb(192,135,142)';
ctx.moveTo(840192088,366577241);
ctx.lineTo(840192088,318406600);
ctx.lineTo(928281153,318406600);
ctx.lineTo(928281153,366577241);
ctx.lineTo(840192088,366577241);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,79,187,0.85)';
ctx.strokeStyle='rgb(86,239,16)';
ctx.moveTo(115227908,644313909);
ctx.lineTo(115227908,622369317);
ctx.lineTo(558222080,622369317);
ctx.lineTo(558222080,644313909);
ctx.lineTo(115227908,644313909);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,92,82,0.85)';
ctx.strokeStyle='rgb(102,16,0)';
ctx.moveTo(334732866,438999019);
ctx.lineTo(334732866,173166391);
ctx.lineTo(835618081,173166391);
ctx.lineTo(835618081,438999019);
ctx.lineTo(334732866,438999019);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,63,165,0.85)';
ctx.strokeStyle='rgb(5,45,152)';
ctx.moveTo(976010544,467460750);
ctx.lineTo(976010544,329925148);
ctx.lineTo(984117967,329925148);
ctx.lineTo(984117967,467460750);
ctx.lineTo(976010544,467460750);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,58,234,0.85)';
ctx.strokeStyle='rgb(6,17,253)';
ctx.moveTo(114010398,586369173);
ctx.lineTo(114010398,105587517);
ctx.lineTo(286127367,105587517);
ctx.lineTo(286127367,586369173);
ctx.lineTo(114010398,586369173);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,44,219,0.85)';
ctx.strokeStyle='rgb(37,32,35)';
ctx.moveTo(725689123,987497920);
ctx.lineTo(725689123,645902103);
ctx.lineTo(848829448,645902103);
ctx.lineTo(848829448,987497920);
ctx.lineTo(725689123,987497920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,72,83,0.85)';
ctx.strokeStyle='rgb(245,107,72)';
ctx.moveTo(678014881,677317871);
ctx.lineTo(678014881,289056871);
ctx.lineTo(990192755,289056871);
ctx.lineTo(990192755,677317871);
ctx.lineTo(678014881,677317871);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,86,138,0.85)';
ctx.strokeStyle='rgb(195,200,18)';
ctx.moveTo(421071661,630370236);
ctx.lineTo(421071661,134504254);
ctx.lineTo(974658701,134504254);
ctx.lineTo(974658701,630370236);
ctx.lineTo(421071661,630370236);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,152,121,0.85)';
ctx.strokeStyle='rgb(156,140,10)';
ctx.moveTo(748968349,303252129);
ctx.lineTo(748968349,249312752);
ctx.lineTo(992184685,249312752);
ctx.lineTo(992184685,303252129);
ctx.lineTo(748968349,303252129);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,73,49,0.85)';
ctx.strokeStyle='rgb(38,3,143)';
ctx.moveTo(342815392,204803307);
ctx.lineTo(342815392,1152177);
ctx.lineTo(950676594,1152177);
ctx.lineTo(950676594,204803307);
ctx.lineTo(342815392,204803307);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,250,97,0.85)';
ctx.strokeStyle='rgb(17,96,134)';
ctx.moveTo(878216197,407727357);
ctx.lineTo(878216197,222834054);
ctx.lineTo(939294384,222834054);
ctx.lineTo(939294384,407727357);
ctx.lineTo(878216197,407727357);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,18,92,0.85)';
ctx.strokeStyle='rgb(81,114,94)';
ctx.moveTo(629715660,981684100);
ctx.lineTo(629715660,141263710);
ctx.lineTo(718867312,141263710);
ctx.lineTo(718867312,981684100);
ctx.lineTo(629715660,981684100);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,86,72,0.85)';
ctx.strokeStyle='rgb(24,73,248)';
ctx.moveTo(918468906,502250016);
ctx.lineTo(918468906,346160181);
ctx.lineTo(928754961,346160181);
ctx.lineTo(928754961,502250016);
ctx.lineTo(918468906,502250016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,136,245,0.85)';
ctx.strokeStyle='rgb(114,6,147)';
ctx.moveTo(75284415,197843893);
ctx.lineTo(75284415,90245642);
ctx.lineTo(115161512,90245642);
ctx.lineTo(115161512,197843893);
ctx.lineTo(75284415,197843893);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,228,61,0.85)';
ctx.strokeStyle='rgb(154,228,76)';
ctx.moveTo(163242637,324690630);
ctx.lineTo(163242637,149148040);
ctx.lineTo(337675477,149148040);
ctx.lineTo(337675477,324690630);
ctx.lineTo(163242637,324690630);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,174,143,0.85)';
ctx.strokeStyle='rgb(133,138,92)';
ctx.moveTo(424066676,65757386);
ctx.lineTo(424066676,39672158);
ctx.lineTo(929082134,39672158);
ctx.lineTo(929082134,65757386);
ctx.lineTo(424066676,65757386);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,190,167,0.85)';
ctx.strokeStyle='rgb(113,198,93)';
ctx.moveTo(657227468,350271355);
ctx.lineTo(657227468,244479761);
ctx.lineTo(929769084,244479761);
ctx.lineTo(929769084,350271355);
ctx.lineTo(657227468,350271355);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,5,62,0.85)';
ctx.strokeStyle='rgb(15,194,247)';
ctx.moveTo(645588218,311061897);
ctx.lineTo(645588218,32113167);
ctx.lineTo(881812724,32113167);
ctx.lineTo(881812724,311061897);
ctx.lineTo(645588218,311061897);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,30,53,0.85)';
ctx.strokeStyle='rgb(173,61,55)';
ctx.moveTo(949577562,229535361);
ctx.lineTo(949577562,15792502);
ctx.lineTo(968559875,15792502);
ctx.lineTo(968559875,229535361);
ctx.lineTo(949577562,229535361);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,65,216,0.85)';
ctx.strokeStyle='rgb(199,108,5)';
ctx.moveTo(504701856,670409479);
ctx.lineTo(504701856,469473333);
ctx.lineTo(601036405,469473333);
ctx.lineTo(601036405,670409479);
ctx.lineTo(504701856,670409479);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,247,14,0.85)';
ctx.strokeStyle='rgb(93,32,190)';
ctx.moveTo(806604962,80056690);
ctx.lineTo(806604962,62787377);
ctx.lineTo(920645506,62787377);
ctx.lineTo(920645506,80056690);
ctx.lineTo(806604962,80056690);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,131,210,0.85)';
ctx.strokeStyle='rgb(130,207,219)';
ctx.moveTo(996430739,276485583);
ctx.lineTo(996430739,231730191);
ctx.lineTo(996837108,231730191);
ctx.lineTo(996837108,276485583);
ctx.lineTo(996430739,276485583);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,104,144,0.85)';
ctx.strokeStyle='rgb(51,132,119)';
ctx.moveTo(108186585,662417691);
ctx.lineTo(108186585,129084335);
ctx.lineTo(251508189,129084335);
ctx.lineTo(251508189,662417691);
ctx.lineTo(108186585,662417691);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,232,173,0.85)';
ctx.strokeStyle='rgb(27,189,61)';
ctx.moveTo(861822198,495697542);
ctx.lineTo(861822198,377819056);
ctx.lineTo(920578435,377819056);
ctx.lineTo(920578435,495697542);
ctx.lineTo(861822198,495697542);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,173,133,0.85)';
ctx.strokeStyle='rgb(55,19,72)';
ctx.moveTo(267892253,959892329);
ctx.lineTo(267892253,746768345);
ctx.lineTo(707650052,746768345);
ctx.lineTo(707650052,959892329);
ctx.lineTo(267892253,959892329);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,212,168,0.85)';
ctx.strokeStyle='rgb(106,219,97)';
ctx.moveTo(447687963,662354357);
ctx.lineTo(447687963,215790875);
ctx.lineTo(708531631,215790875);
ctx.lineTo(708531631,662354357);
ctx.lineTo(447687963,662354357);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,89,192,0.85)';
ctx.strokeStyle='rgb(224,186,14)';
ctx.moveTo(180351846,578682842);
ctx.lineTo(180351846,214407270);
ctx.lineTo(273527425,214407270);
ctx.lineTo(273527425,578682842);
ctx.lineTo(180351846,578682842);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,9,71,0.85)';
ctx.strokeStyle='rgb(77,224,38)';
ctx.moveTo(875726854,136726915);
ctx.lineTo(875726854,93988823);
ctx.lineTo(886414498,93988823);
ctx.lineTo(886414498,136726915);
ctx.lineTo(875726854,136726915);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,229,137,0.85)';
ctx.strokeStyle='rgb(147,103,92)';
ctx.moveTo(449261675,240861186);
ctx.lineTo(449261675,15810606);
ctx.lineTo(507618131,15810606);
ctx.lineTo(507618131,240861186);
ctx.lineTo(449261675,240861186);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,122,0,0.85)';
ctx.strokeStyle='rgb(10,240,2)';
ctx.moveTo(850947272,33205328);
ctx.lineTo(850947272,13444838);
ctx.lineTo(996176572,13444838);
ctx.lineTo(996176572,33205328);
ctx.lineTo(850947272,33205328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,141,81,0.85)';
ctx.strokeStyle='rgb(124,93,174)';
ctx.moveTo(939618695,541818852);
ctx.lineTo(939618695,515383416);
ctx.lineTo(942754600,515383416);
ctx.lineTo(942754600,541818852);
ctx.lineTo(939618695,541818852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,169,146,0.85)';
ctx.strokeStyle='rgb(230,195,38)';
ctx.moveTo(929388194,940944357);
ctx.lineTo(929388194,166666258);
ctx.lineTo(965237440,166666258);
ctx.lineTo(965237440,940944357);
ctx.lineTo(929388194,940944357);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,81,94,0.85)';
ctx.strokeStyle='rgb(156,159,18)';
ctx.moveTo(860144278,551206349);
ctx.lineTo(860144278,41833811);
ctx.lineTo(951269480,41833811);
ctx.lineTo(951269480,551206349);
ctx.lineTo(860144278,551206349);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,229,220,0.85)';
ctx.strokeStyle='rgb(124,83,209)';
ctx.moveTo(966068580,987338532);
ctx.lineTo(966068580,923401770);
ctx.lineTo(982798598,923401770);
ctx.lineTo(982798598,987338532);
ctx.lineTo(966068580,987338532);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,140,173,0.85)';
ctx.strokeStyle='rgb(225,217,137)';
ctx.moveTo(847412538,149879240);
ctx.lineTo(847412538,33030497);
ctx.lineTo(903465438,33030497);
ctx.lineTo(903465438,149879240);
ctx.lineTo(847412538,149879240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,199,214,0.85)';
ctx.strokeStyle='rgb(216,242,43)';
ctx.moveTo(179386148,596389822);
ctx.lineTo(179386148,168937722);
ctx.lineTo(652987725,168937722);
ctx.lineTo(652987725,596389822);
ctx.lineTo(179386148,596389822);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,140,119,0.85)';
ctx.strokeStyle='rgb(75,184,81)';
ctx.moveTo(609506767,156914879);
ctx.lineTo(609506767,56987145);
ctx.lineTo(807182141,56987145);
ctx.lineTo(807182141,156914879);
ctx.lineTo(609506767,156914879);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,208,50,0.85)';
ctx.strokeStyle='rgb(134,180,182)';
ctx.moveTo(36542677,178337316);
ctx.lineTo(36542677,106659937);
ctx.lineTo(818182402,106659937);
ctx.lineTo(818182402,178337316);
ctx.lineTo(36542677,178337316);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,216,85,0.85)';
ctx.strokeStyle='rgb(234,71,25)';
ctx.moveTo(604163671,539773675);
ctx.lineTo(604163671,523243957);
ctx.lineTo(961787463,523243957);
ctx.lineTo(961787463,539773675);
ctx.lineTo(604163671,539773675);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,1,16,0.85)';
ctx.strokeStyle='rgb(86,107,58)';
ctx.moveTo(519661964,499424337);
ctx.lineTo(519661964,256614195);
ctx.lineTo(874769417,256614195);
ctx.lineTo(874769417,499424337);
ctx.lineTo(519661964,499424337);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,196,78,0.85)';
ctx.strokeStyle='rgb(93,155,82)';
ctx.moveTo(147762759,296937469);
ctx.lineTo(147762759,205198536);
ctx.lineTo(944785969,205198536);
ctx.lineTo(944785969,296937469);
ctx.lineTo(147762759,296937469);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,72,72,0.85)';
ctx.strokeStyle='rgb(43,162,13)';
ctx.moveTo(411047212,415954972);
ctx.lineTo(411047212,139797276);
ctx.lineTo(526854075,139797276);
ctx.lineTo(526854075,415954972);
ctx.lineTo(411047212,415954972);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,74,151,0.85)';
ctx.strokeStyle='rgb(88,237,45)';
ctx.moveTo(805858596,37834911);
ctx.lineTo(805858596,27822975);
ctx.lineTo(973586927,27822975);
ctx.lineTo(973586927,37834911);
ctx.lineTo(805858596,37834911);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,21,102,0.85)';
ctx.strokeStyle='rgb(8,174,253)';
ctx.moveTo(887006780,993605173);
ctx.lineTo(887006780,390566437);
ctx.lineTo(919232009,390566437);
ctx.lineTo(919232009,993605173);
ctx.lineTo(887006780,993605173);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,87,236,0.85)';
ctx.strokeStyle='rgb(68,172,103)';
ctx.moveTo(450467291,842690735);
ctx.lineTo(450467291,70939292);
ctx.lineTo(856247498,70939292);
ctx.lineTo(856247498,842690735);
ctx.lineTo(450467291,842690735);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,111,89,0.85)';
ctx.strokeStyle='rgb(95,122,26)';
ctx.moveTo(739217626,440994776);
ctx.lineTo(739217626,395694995);
ctx.lineTo(808617188,395694995);
ctx.lineTo(808617188,440994776);
ctx.lineTo(739217626,440994776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,90,51,0.85)';
ctx.strokeStyle='rgb(15,5,13)';
ctx.moveTo(821317387,902910604);
ctx.lineTo(821317387,806906898);
ctx.lineTo(911704283,806906898);
ctx.lineTo(911704283,902910604);
ctx.lineTo(821317387,902910604);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,133,223,0.85)';
ctx.strokeStyle='rgb(186,54,139)';
ctx.moveTo(811146589,49217326);
ctx.lineTo(811146589,36267357);
ctx.lineTo(879825116,36267357);
ctx.lineTo(879825116,49217326);
ctx.lineTo(811146589,49217326);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,157,220,0.85)';
ctx.strokeStyle='rgb(228,96,197)';
ctx.moveTo(167770211,986263748);
ctx.lineTo(167770211,518878081);
ctx.lineTo(635137234,518878081);
ctx.lineTo(635137234,986263748);
ctx.lineTo(167770211,986263748);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,217,2,0.85)';
ctx.strokeStyle='rgb(109,87,63)';
ctx.moveTo(39467076,82895076);
ctx.lineTo(39467076,53501381);
ctx.lineTo(766990222,53501381);
ctx.lineTo(766990222,82895076);
ctx.lineTo(39467076,82895076);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,10,180,0.85)';
ctx.strokeStyle='rgb(249,114,221)';
ctx.moveTo(199999381,973508800);
ctx.lineTo(199999381,269356594);
ctx.lineTo(549764485,269356594);
ctx.lineTo(549764485,973508800);
ctx.lineTo(199999381,973508800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,153,134,0.85)';
ctx.strokeStyle='rgb(52,227,155)';
ctx.moveTo(633537710,926807490);
ctx.lineTo(633537710,563991414);
ctx.lineTo(700278279,563991414);
ctx.lineTo(700278279,926807490);
ctx.lineTo(633537710,926807490);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,86,139,0.85)';
ctx.strokeStyle='rgb(113,111,163)';
ctx.moveTo(175131668,736901225);
ctx.lineTo(175131668,303091021);
ctx.lineTo(927042877,303091021);
ctx.lineTo(927042877,736901225);
ctx.lineTo(175131668,736901225);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,171,252,0.85)';
ctx.strokeStyle='rgb(98,246,64)';
ctx.moveTo(261264003,467958844);
ctx.lineTo(261264003,458320087);
ctx.lineTo(465724063,458320087);
ctx.lineTo(465724063,467958844);
ctx.lineTo(261264003,467958844);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,58,116,0.85)';
ctx.strokeStyle='rgb(45,113,116)';
ctx.moveTo(111314645,410911976);
ctx.lineTo(111314645,36460983);
ctx.lineTo(182215610,36460983);
ctx.lineTo(182215610,410911976);
ctx.lineTo(111314645,410911976);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,249,198,0.85)';
ctx.strokeStyle='rgb(180,240,49)';
ctx.moveTo(107079740,64657804);
ctx.lineTo(107079740,47304564);
ctx.lineTo(782089283,47304564);
ctx.lineTo(782089283,64657804);
ctx.lineTo(107079740,64657804);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,138,196,0.85)';
ctx.strokeStyle='rgb(145,101,168)';
ctx.moveTo(391625445,87136003);
ctx.lineTo(391625445,1824504);
ctx.lineTo(565743557,1824504);
ctx.lineTo(565743557,87136003);
ctx.lineTo(391625445,87136003);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,40,1,0.85)';
ctx.strokeStyle='rgb(111,168,133)';
ctx.moveTo(512413445,568238470);
ctx.lineTo(512413445,148546504);
ctx.lineTo(784922839,148546504);
ctx.lineTo(784922839,568238470);
ctx.lineTo(512413445,568238470);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,60,177,0.85)';
ctx.strokeStyle='rgb(187,196,99)';
ctx.moveTo(978133780,61222660);
ctx.lineTo(978133780,54580733);
ctx.lineTo(978259502,54580733);
ctx.lineTo(978259502,61222660);
ctx.lineTo(978133780,61222660);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,26,92,0.85)';
ctx.strokeStyle='rgb(102,218,90)';
ctx.moveTo(678696278,235018447);
ctx.lineTo(678696278,216881036);
ctx.lineTo(933278161,216881036);
ctx.lineTo(933278161,235018447);
ctx.lineTo(678696278,235018447);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,17,233,0.85)';
ctx.strokeStyle='rgb(124,119,224)';
ctx.moveTo(369634824,103749192);
ctx.lineTo(369634824,9053168);
ctx.lineTo(665704669,9053168);
ctx.lineTo(665704669,103749192);
ctx.lineTo(369634824,103749192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,207,114,0.85)';
ctx.strokeStyle='rgb(8,60,158)';
ctx.moveTo(452305463,265710673);
ctx.lineTo(452305463,225253347);
ctx.lineTo(484624346,225253347);
ctx.lineTo(484624346,265710673);
ctx.lineTo(452305463,265710673);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,152,183,0.85)';
ctx.strokeStyle='rgb(70,87,150)';
ctx.moveTo(872303920,186484120);
ctx.lineTo(872303920,100406972);
ctx.lineTo(900728951,100406972);
ctx.lineTo(900728951,186484120);
ctx.lineTo(872303920,186484120);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,239,102,0.85)';
ctx.strokeStyle='rgb(185,23,163)';
ctx.moveTo(286615868,617880735);
ctx.lineTo(286615868,348391754);
ctx.lineTo(512316352,348391754);
ctx.lineTo(512316352,617880735);
ctx.lineTo(286615868,617880735);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,174,3,0.85)';
ctx.strokeStyle='rgb(251,224,211)';
ctx.moveTo(502482984,303146647);
ctx.lineTo(502482984,278774766);
ctx.lineTo(893131663,278774766);
ctx.lineTo(893131663,303146647);
ctx.lineTo(502482984,303146647);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,222,130,0.85)';
ctx.strokeStyle='rgb(30,232,109)';
ctx.moveTo(744664306,786314166);
ctx.lineTo(744664306,38786866);
ctx.lineTo(862088267,38786866);
ctx.lineTo(862088267,786314166);
ctx.lineTo(744664306,786314166);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,110,77,0.85)';
ctx.strokeStyle='rgb(55,179,77)';
ctx.moveTo(747650478,801549467);
ctx.lineTo(747650478,637232777);
ctx.lineTo(800480746,637232777);
ctx.lineTo(800480746,801549467);
ctx.lineTo(747650478,801549467);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,246,138,0.85)';
ctx.strokeStyle='rgb(180,214,154)';
ctx.moveTo(15074700,938429686);
ctx.lineTo(15074700,936592674);
ctx.lineTo(592009905,936592674);
ctx.lineTo(592009905,938429686);
ctx.lineTo(15074700,938429686);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,50,70,0.85)';
ctx.strokeStyle='rgb(185,132,77)';
ctx.moveTo(663419647,233717973);
ctx.lineTo(663419647,210463950);
ctx.lineTo(741031406,210463950);
ctx.lineTo(741031406,233717973);
ctx.lineTo(663419647,233717973);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,222,145,0.85)';
ctx.strokeStyle='rgb(29,192,220)';
ctx.moveTo(660318463,159121763);
ctx.lineTo(660318463,115704815);
ctx.lineTo(866673795,115704815);
ctx.lineTo(866673795,159121763);
ctx.lineTo(660318463,159121763);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,154,215,0.85)';
ctx.strokeStyle='rgb(26,1,111)';
ctx.moveTo(770489803,668662650);
ctx.lineTo(770489803,212904861);
ctx.lineTo(812631255,212904861);
ctx.lineTo(812631255,668662650);
ctx.lineTo(770489803,668662650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,43,201,0.85)';
ctx.strokeStyle='rgb(89,0,119)';
ctx.moveTo(589043947,777003480);
ctx.lineTo(589043947,192194566);
ctx.lineTo(692770474,192194566);
ctx.lineTo(692770474,777003480);
ctx.lineTo(589043947,777003480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,93,106,0.85)';
ctx.strokeStyle='rgb(71,212,136)';
ctx.moveTo(425193809,295832453);
ctx.lineTo(425193809,236912623);
ctx.lineTo(787323934,236912623);
ctx.lineTo(787323934,295832453);
ctx.lineTo(425193809,295832453);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,32,128,0.85)';
ctx.strokeStyle='rgb(95,136,175)';
ctx.moveTo(489542198,167570027);
ctx.lineTo(489542198,99560071);
ctx.lineTo(901290378,99560071);
ctx.lineTo(901290378,167570027);
ctx.lineTo(489542198,167570027);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,244,14,0.85)';
ctx.strokeStyle='rgb(100,105,28)';
ctx.moveTo(845808757,291767155);
ctx.lineTo(845808757,63370890);
ctx.lineTo(972080194,63370890);
ctx.lineTo(972080194,291767155);
ctx.lineTo(845808757,291767155);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,197,46,0.85)';
ctx.strokeStyle='rgb(113,216,5)';
ctx.moveTo(363581514,706964718);
ctx.lineTo(363581514,405095410);
ctx.lineTo(597396419,405095410);
ctx.lineTo(597396419,706964718);
ctx.lineTo(363581514,706964718);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,155,208,0.85)';
ctx.strokeStyle='rgb(133,205,28)';
ctx.moveTo(386041254,887705231);
ctx.lineTo(386041254,25429712);
ctx.lineTo(407132031,25429712);
ctx.lineTo(407132031,887705231);
ctx.lineTo(386041254,887705231);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,248,97,0.85)';
ctx.strokeStyle='rgb(195,184,225)';
ctx.moveTo(665004353,567391229);
ctx.lineTo(665004353,326144575);
ctx.lineTo(718413053,326144575);
ctx.lineTo(718413053,567391229);
ctx.lineTo(665004353,567391229);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,169,163,0.85)';
ctx.strokeStyle='rgb(165,57,172)';
ctx.moveTo(568909140,524141933);
ctx.lineTo(568909140,308859969);
ctx.lineTo(705786787,308859969);
ctx.lineTo(705786787,524141933);
ctx.lineTo(568909140,524141933);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,29,194,0.85)';
ctx.strokeStyle='rgb(108,127,216)';
ctx.moveTo(429401903,636451214);
ctx.lineTo(429401903,305474340);
ctx.lineTo(644996064,305474340);
ctx.lineTo(644996064,636451214);
ctx.lineTo(429401903,636451214);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,115,49,0.85)';
ctx.strokeStyle='rgb(159,253,170)';
ctx.moveTo(280931666,594322856);
ctx.lineTo(280931666,526401502);
ctx.lineTo(986026006,526401502);
ctx.lineTo(986026006,594322856);
ctx.lineTo(280931666,594322856);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,236,221,0.85)';
ctx.strokeStyle='rgb(158,70,132)';
ctx.moveTo(736707610,83222272);
ctx.lineTo(736707610,817412);
ctx.lineTo(899725630,817412);
ctx.lineTo(899725630,83222272);
ctx.lineTo(736707610,83222272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,208,150,0.85)';
ctx.strokeStyle='rgb(58,219,88)';
ctx.moveTo(444201512,483719977);
ctx.lineTo(444201512,396306713);
ctx.lineTo(616489623,396306713);
ctx.lineTo(616489623,483719977);
ctx.lineTo(444201512,483719977);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,254,11,0.85)';
ctx.strokeStyle='rgb(186,188,156)';
ctx.moveTo(420726677,130345464);
ctx.lineTo(420726677,28702666);
ctx.lineTo(498498489,28702666);
ctx.lineTo(498498489,130345464);
ctx.lineTo(420726677,130345464);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,216,168,0.85)';
ctx.strokeStyle='rgb(183,190,70)';
ctx.moveTo(296337260,15628111);
ctx.lineTo(296337260,10168832);
ctx.lineTo(451666732,10168832);
ctx.lineTo(451666732,15628111);
ctx.lineTo(296337260,15628111);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,253,58,0.85)';
ctx.strokeStyle='rgb(154,2,105)';
ctx.moveTo(969817942,492476100);
ctx.lineTo(969817942,439921642);
ctx.lineTo(991964088,439921642);
ctx.lineTo(991964088,492476100);
ctx.lineTo(969817942,492476100);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,167,118,0.85)';
ctx.strokeStyle='rgb(85,99,43)';
ctx.moveTo(709603882,908989557);
ctx.lineTo(709603882,259037803);
ctx.lineTo(933137882,259037803);
ctx.lineTo(933137882,908989557);
ctx.lineTo(709603882,908989557);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,216,203,0.85)';
ctx.strokeStyle='rgb(132,189,139)';
ctx.moveTo(287789212,519214946);
ctx.lineTo(287789212,208585094);
ctx.lineTo(649503080,208585094);
ctx.lineTo(649503080,519214946);
ctx.lineTo(287789212,519214946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,56,19,0.85)';
ctx.strokeStyle='rgb(195,125,96)';
ctx.moveTo(367811722,687000789);
ctx.lineTo(367811722,467354340);
ctx.lineTo(895915322,467354340);
ctx.lineTo(895915322,687000789);
ctx.lineTo(367811722,687000789);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,189,94,0.85)';
ctx.strokeStyle='rgb(74,90,31)';
ctx.moveTo(592216472,626669980);
ctx.lineTo(592216472,527102785);
ctx.lineTo(650218974,527102785);
ctx.lineTo(650218974,626669980);
ctx.lineTo(592216472,626669980);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,86,16,0.85)';
ctx.strokeStyle='rgb(185,151,74)';
ctx.moveTo(202244333,58039604);
ctx.lineTo(202244333,12368859);
ctx.lineTo(222734204,12368859);
ctx.lineTo(222734204,58039604);
ctx.lineTo(202244333,58039604);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,102,144,0.85)';
ctx.strokeStyle='rgb(231,92,31)';
ctx.moveTo(391746767,285383631);
ctx.lineTo(391746767,93652185);
ctx.lineTo(572263272,93652185);
ctx.lineTo(572263272,285383631);
ctx.lineTo(391746767,285383631);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,2,109,0.85)';
ctx.strokeStyle='rgb(38,201,50)';
ctx.moveTo(189230582,684332163);
ctx.lineTo(189230582,287768364);
ctx.lineTo(401047502,287768364);
ctx.lineTo(401047502,684332163);
ctx.lineTo(189230582,684332163);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,10,104,0.85)';
ctx.strokeStyle='rgb(38,71,238)';
ctx.moveTo(623640492,395511891);
ctx.lineTo(623640492,367903015);
ctx.lineTo(630600283,367903015);
ctx.lineTo(630600283,395511891);
ctx.lineTo(623640492,395511891);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,177,48,0.85)';
ctx.strokeStyle='rgb(241,130,228)';
ctx.moveTo(718436718,162380051);
ctx.lineTo(718436718,82086184);
ctx.lineTo(732339814,82086184);
ctx.lineTo(732339814,162380051);
ctx.lineTo(718436718,162380051);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,7,224,0.85)';
ctx.strokeStyle='rgb(188,22,112)';
ctx.moveTo(761415107,80194983);
ctx.lineTo(761415107,55194438);
ctx.lineTo(986374126,55194438);
ctx.lineTo(986374126,80194983);
ctx.lineTo(761415107,80194983);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,142,196,0.85)';
ctx.strokeStyle='rgb(110,38,244)';
ctx.moveTo(713152779,631107520);
ctx.lineTo(713152779,41281667);
ctx.lineTo(834689902,41281667);
ctx.lineTo(834689902,631107520);
ctx.lineTo(713152779,631107520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,188,229,0.85)';
ctx.strokeStyle='rgb(16,40,62)';
ctx.moveTo(268648781,854818634);
ctx.lineTo(268648781,604825065);
ctx.lineTo(945518853,604825065);
ctx.lineTo(945518853,854818634);
ctx.lineTo(268648781,854818634);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,100,173,0.85)';
ctx.strokeStyle='rgb(12,231,15)';
ctx.moveTo(300166682,97877114);
ctx.lineTo(300166682,7176259);
ctx.lineTo(460327887,7176259);
ctx.lineTo(460327887,97877114);
ctx.lineTo(300166682,97877114);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,185,194,0.85)';
ctx.strokeStyle='rgb(126,204,208)';
ctx.moveTo(99600362,936380471);
ctx.lineTo(99600362,59357182);
ctx.lineTo(478173686,59357182);
ctx.lineTo(478173686,936380471);
ctx.lineTo(99600362,936380471);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,37,201,0.85)';
ctx.strokeStyle='rgb(163,194,205)';
ctx.moveTo(172972636,485855379);
ctx.lineTo(172972636,169749486);
ctx.lineTo(703521998,169749486);
ctx.lineTo(703521998,485855379);
ctx.lineTo(172972636,485855379);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,232,5,0.85)';
ctx.strokeStyle='rgb(34,146,172)';
ctx.moveTo(852769058,124857402);
ctx.lineTo(852769058,41484918);
ctx.lineTo(895012661,41484918);
ctx.lineTo(895012661,124857402);
ctx.lineTo(852769058,124857402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,151,238,0.85)';
ctx.strokeStyle='rgb(69,144,129)';
ctx.moveTo(978762397,272826011);
ctx.lineTo(978762397,258377414);
ctx.lineTo(993766248,258377414);
ctx.lineTo(993766248,272826011);
ctx.lineTo(978762397,272826011);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,198,86,0.85)';
ctx.strokeStyle='rgb(239,4,6)';
ctx.moveTo(884821304,282108371);
ctx.lineTo(884821304,91409609);
ctx.lineTo(959700455,91409609);
ctx.lineTo(959700455,282108371);
ctx.lineTo(884821304,282108371);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,114,17,0.85)';
ctx.strokeStyle='rgb(244,105,60)';
ctx.moveTo(441490811,358945738);
ctx.lineTo(441490811,147168420);
ctx.lineTo(749230133,147168420);
ctx.lineTo(749230133,358945738);
ctx.lineTo(441490811,358945738);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,127,113,0.85)';
ctx.strokeStyle='rgb(118,47,49)';
ctx.moveTo(463868237,698032039);
ctx.lineTo(463868237,561621352);
ctx.lineTo(696234153,561621352);
ctx.lineTo(696234153,698032039);
ctx.lineTo(463868237,698032039);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,87,180,0.85)';
ctx.strokeStyle='rgb(77,154,240)';
ctx.moveTo(457546756,847085541);
ctx.lineTo(457546756,678478785);
ctx.lineTo(632464694,678478785);
ctx.lineTo(632464694,847085541);
ctx.lineTo(457546756,847085541);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,125,183,0.85)';
ctx.strokeStyle='rgb(81,37,174)';
ctx.moveTo(535628333,550347416);
ctx.lineTo(535628333,444293605);
ctx.lineTo(904505253,444293605);
ctx.lineTo(904505253,550347416);
ctx.lineTo(535628333,550347416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
};
function draw_gds_updown(ctx){
ctx.beginPath();
ctx.fillStyle='rgba(96,40,214,0.85)';
ctx.strokeStyle='rgb(72,76,97)';
ctx.moveTo(37900,19492);
ctx.lineTo(37900,19456);
ctx.lineTo(37936,19456);
ctx.lineTo(37936,19492);
ctx.lineTo(37900,19492);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,47,222,0.85)';
ctx.strokeStyle='rgb(148,88,78)';
ctx.moveTo(250,20140);
ctx.lineTo(250,20104);
ctx.lineTo(286,20104);
ctx.lineTo(286,20140);
ctx.lineTo(250,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,186,76,0.85)';
ctx.strokeStyle='rgb(84,138,96)';
ctx.moveTo(250,17872);
ctx.lineTo(250,17836);
ctx.lineTo(286,17836);
ctx.lineTo(286,17872);
ctx.lineTo(250,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,74,240,0.85)';
ctx.strokeStyle='rgb(250,228,250)';
ctx.moveTo(17500,17884);
ctx.lineTo(17500,17824);
ctx.lineTo(17560,17824);
ctx.lineTo(17560,17884);
ctx.lineTo(17500,17884);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,106,197,0.85)';
ctx.strokeStyle='rgb(103,219,219)';
ctx.moveTo(18256,18640);
ctx.lineTo(18256,18580);
ctx.lineTo(18316,18580);
ctx.lineTo(18316,18640);
ctx.lineTo(18256,18640);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,199,183,0.85)';
ctx.strokeStyle='rgb(2,95,138)';
ctx.moveTo(17176,18640);
ctx.lineTo(17176,18580);
ctx.lineTo(17236,18580);
ctx.lineTo(17236,18640);
ctx.lineTo(17176,18640);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,2,146,0.85)';
ctx.strokeStyle='rgb(199,100,206)';
ctx.moveTo(16852,20260);
ctx.lineTo(16852,20200);
ctx.lineTo(16912,20200);
ctx.lineTo(16912,20260);
ctx.lineTo(16852,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,180,83,0.85)';
ctx.strokeStyle='rgb(91,240,144)';
ctx.moveTo(18256,20692);
ctx.lineTo(18256,20632);
ctx.lineTo(18316,20632);
ctx.lineTo(18316,20692);
ctx.lineTo(18256,20692);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,93,9,0.85)';
ctx.strokeStyle='rgb(55,163,68)';
ctx.moveTo(18256,19828);
ctx.lineTo(18256,19768);
ctx.lineTo(18316,19768);
ctx.lineTo(18316,19828);
ctx.lineTo(18256,19828);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,230,11,0.85)';
ctx.strokeStyle='rgb(150,170,245)';
ctx.moveTo(18472,19828);
ctx.lineTo(18472,19768);
ctx.lineTo(18532,19768);
ctx.lineTo(18532,19828);
ctx.lineTo(18472,19828);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,27,77,0.85)';
ctx.strokeStyle='rgb(115,26,208)';
ctx.moveTo(18256,20692);
ctx.lineTo(18256,20632);
ctx.lineTo(18316,20632);
ctx.lineTo(18316,20692);
ctx.lineTo(18256,20692);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,120,110,0.85)';
ctx.strokeStyle='rgb(244,192,169)';
ctx.moveTo(18364,19612);
ctx.lineTo(18364,19552);
ctx.lineTo(18424,19552);
ctx.lineTo(18424,19612);
ctx.lineTo(18364,19612);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,48,82,0.85)';
ctx.strokeStyle='rgb(102,100,204)';
ctx.moveTo(17824,20152);
ctx.lineTo(17824,20092);
ctx.lineTo(17884,20092);
ctx.lineTo(17884,20152);
ctx.lineTo(17824,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,106,153,0.85)';
ctx.strokeStyle='rgb(61,90,101)';
ctx.moveTo(17716,20152);
ctx.lineTo(17716,20092);
ctx.lineTo(17776,20092);
ctx.lineTo(17776,20152);
ctx.lineTo(17716,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,71,124,0.85)';
ctx.strokeStyle='rgb(151,84,75)';
ctx.moveTo(17392,20152);
ctx.lineTo(17392,20092);
ctx.lineTo(17452,20092);
ctx.lineTo(17452,20152);
ctx.lineTo(17392,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,99,236,0.85)';
ctx.strokeStyle='rgb(103,11,93)';
ctx.moveTo(10588,20152);
ctx.lineTo(10588,20092);
ctx.lineTo(10648,20092);
ctx.lineTo(10648,20152);
ctx.lineTo(10588,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,158,218,0.85)';
ctx.strokeStyle='rgb(15,1,58)';
ctx.moveTo(13396,21124);
ctx.lineTo(13396,21064);
ctx.lineTo(13456,21064);
ctx.lineTo(13456,21124);
ctx.lineTo(13396,21124);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,43,15,0.85)';
ctx.strokeStyle='rgb(136,189,249)';
ctx.moveTo(13180,21124);
ctx.lineTo(13180,21064);
ctx.lineTo(13240,21064);
ctx.lineTo(13240,21124);
ctx.lineTo(13180,21124);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,177,1,0.85)';
ctx.strokeStyle='rgb(91,132,62)';
ctx.moveTo(13072,19612);
ctx.lineTo(13072,19552);
ctx.lineTo(13132,19552);
ctx.lineTo(13132,19612);
ctx.lineTo(13072,19612);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,182,105,0.85)';
ctx.strokeStyle='rgb(29,243,117)';
ctx.moveTo(13936,20152);
ctx.lineTo(13936,20092);
ctx.lineTo(13996,20092);
ctx.lineTo(13996,20152);
ctx.lineTo(13936,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,58,64,0.85)';
ctx.strokeStyle='rgb(9,232,78)';
ctx.moveTo(13504,23284);
ctx.lineTo(13504,23224);
ctx.lineTo(13564,23224);
ctx.lineTo(13564,23284);
ctx.lineTo(13504,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,120,99,0.85)';
ctx.strokeStyle='rgb(77,20,32)';
ctx.moveTo(13504,22204);
ctx.lineTo(13504,22144);
ctx.lineTo(13564,22144);
ctx.lineTo(13564,22204);
ctx.lineTo(13504,22204);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,23,179,0.85)';
ctx.strokeStyle='rgb(48,68,166)';
ctx.moveTo(13936,23068);
ctx.lineTo(13936,23008);
ctx.lineTo(13996,23008);
ctx.lineTo(13996,23068);
ctx.lineTo(13936,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,13,186,0.85)';
ctx.strokeStyle='rgb(99,162,28)';
ctx.moveTo(12316,22960);
ctx.lineTo(12316,22900);
ctx.lineTo(12376,22900);
ctx.lineTo(12376,22960);
ctx.lineTo(12316,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,38,183,0.85)';
ctx.strokeStyle='rgb(170,223,247)';
ctx.moveTo(13396,22960);
ctx.lineTo(13396,22900);
ctx.lineTo(13456,22900);
ctx.lineTo(13456,22960);
ctx.lineTo(13396,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,218,96,0.85)';
ctx.strokeStyle='rgb(196,56,253)';
ctx.moveTo(13396,22960);
ctx.lineTo(13396,22900);
ctx.lineTo(13456,22900);
ctx.lineTo(13456,22960);
ctx.lineTo(13396,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,165,90,0.85)';
ctx.strokeStyle='rgb(7,145,18)';
ctx.moveTo(13396,24688);
ctx.lineTo(13396,24628);
ctx.lineTo(13456,24628);
ctx.lineTo(13456,24688);
ctx.lineTo(13396,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,36,41,0.85)';
ctx.strokeStyle='rgb(188,14,191)';
ctx.moveTo(13396,24688);
ctx.lineTo(13396,24628);
ctx.lineTo(13456,24628);
ctx.lineTo(13456,24688);
ctx.lineTo(13396,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,20,93,0.85)';
ctx.strokeStyle='rgb(220,72,14)';
ctx.moveTo(13720,23176);
ctx.lineTo(13720,23116);
ctx.lineTo(13780,23116);
ctx.lineTo(13780,23176);
ctx.lineTo(13720,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,87,116,0.85)';
ctx.strokeStyle='rgb(184,61,165)';
ctx.moveTo(12964,23176);
ctx.lineTo(12964,23116);
ctx.lineTo(13024,23116);
ctx.lineTo(13024,23176);
ctx.lineTo(12964,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,202,138,0.85)';
ctx.strokeStyle='rgb(176,11,17)';
ctx.moveTo(13720,22960);
ctx.lineTo(13720,22900);
ctx.lineTo(13780,22900);
ctx.lineTo(13780,22960);
ctx.lineTo(13720,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,32,232,0.85)';
ctx.strokeStyle='rgb(11,36,254)';
ctx.moveTo(13504,22204);
ctx.lineTo(13504,22144);
ctx.lineTo(13564,22144);
ctx.lineTo(13564,22204);
ctx.lineTo(13504,22204);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,145,84,0.85)';
ctx.strokeStyle='rgb(232,202,150)';
ctx.moveTo(13504,23284);
ctx.lineTo(13504,23224);
ctx.lineTo(13564,23224);
ctx.lineTo(13564,23284);
ctx.lineTo(13504,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,63,123,0.85)';
ctx.strokeStyle='rgb(97,241,101)';
ctx.moveTo(18580,23716);
ctx.lineTo(18580,23656);
ctx.lineTo(18640,23656);
ctx.lineTo(18640,23716);
ctx.lineTo(18580,23716);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,103,28,0.85)';
ctx.strokeStyle='rgb(193,28,26)';
ctx.moveTo(18472,22636);
ctx.lineTo(18472,22576);
ctx.lineTo(18532,22576);
ctx.lineTo(18532,22636);
ctx.lineTo(18472,22636);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,202,159,0.85)';
ctx.strokeStyle='rgb(180,152,235)';
ctx.moveTo(18472,23716);
ctx.lineTo(18472,23656);
ctx.lineTo(18532,23656);
ctx.lineTo(18532,23716);
ctx.lineTo(18472,23716);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,39,187,0.85)';
ctx.strokeStyle='rgb(9,102,171)';
ctx.moveTo(17176,23176);
ctx.lineTo(17176,23116);
ctx.lineTo(17236,23116);
ctx.lineTo(17236,23176);
ctx.lineTo(17176,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,36,144,0.85)';
ctx.strokeStyle='rgb(251,109,134)';
ctx.moveTo(18364,23932);
ctx.lineTo(18364,23872);
ctx.lineTo(18424,23872);
ctx.lineTo(18424,23932);
ctx.lineTo(18364,23932);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,25,116,0.85)';
ctx.strokeStyle='rgb(245,108,161)';
ctx.moveTo(17068,23176);
ctx.lineTo(17068,23116);
ctx.lineTo(17128,23116);
ctx.lineTo(17128,23176);
ctx.lineTo(17068,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,171,221,0.85)';
ctx.strokeStyle='rgb(114,159,212)';
ctx.moveTo(17176,23932);
ctx.lineTo(17176,23872);
ctx.lineTo(17236,23872);
ctx.lineTo(17236,23932);
ctx.lineTo(17176,23932);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,145,236,0.85)';
ctx.strokeStyle='rgb(63,224,86)';
ctx.moveTo(17068,22960);
ctx.lineTo(17068,22900);
ctx.lineTo(17128,22900);
ctx.lineTo(17128,22960);
ctx.lineTo(17068,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,60,117,0.85)';
ctx.strokeStyle='rgb(198,240,173)';
ctx.moveTo(17824,23176);
ctx.lineTo(17824,23116);
ctx.lineTo(17884,23116);
ctx.lineTo(17884,23176);
ctx.lineTo(17824,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,129,107,0.85)';
ctx.strokeStyle='rgb(128,207,0)';
ctx.moveTo(17824,23176);
ctx.lineTo(17824,23116);
ctx.lineTo(17884,23116);
ctx.lineTo(17884,23176);
ctx.lineTo(17824,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,42,15,0.85)';
ctx.strokeStyle='rgb(125,45,93)';
ctx.moveTo(17824,23392);
ctx.lineTo(17824,23332);
ctx.lineTo(17884,23332);
ctx.lineTo(17884,23392);
ctx.lineTo(17824,23392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,196,233,0.85)';
ctx.strokeStyle='rgb(168,199,152)';
ctx.moveTo(17500,23068);
ctx.lineTo(17500,23008);
ctx.lineTo(17560,23008);
ctx.lineTo(17560,23068);
ctx.lineTo(17500,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,220,154,0.85)';
ctx.strokeStyle='rgb(95,201,4)';
ctx.moveTo(18796,22960);
ctx.lineTo(18796,22900);
ctx.lineTo(18856,22900);
ctx.lineTo(18856,22960);
ctx.lineTo(18796,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,248,17,0.85)';
ctx.strokeStyle='rgb(94,89,100)';
ctx.moveTo(18796,23824);
ctx.lineTo(18796,23764);
ctx.lineTo(18856,23764);
ctx.lineTo(18856,23824);
ctx.lineTo(18796,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,86,129,0.85)';
ctx.strokeStyle='rgb(247,77,23)';
ctx.moveTo(18796,22960);
ctx.lineTo(18796,22900);
ctx.lineTo(18856,22900);
ctx.lineTo(18856,22960);
ctx.lineTo(18796,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,8,224,0.85)';
ctx.strokeStyle='rgb(204,73,14)';
ctx.moveTo(18796,23824);
ctx.lineTo(18796,23764);
ctx.lineTo(18856,23764);
ctx.lineTo(18856,23824);
ctx.lineTo(18796,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,106,234,0.85)';
ctx.strokeStyle='rgb(1,15,114)';
ctx.moveTo(17284,23176);
ctx.lineTo(17284,23116);
ctx.lineTo(17344,23116);
ctx.lineTo(17344,23176);
ctx.lineTo(17284,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,139,34,0.85)';
ctx.strokeStyle='rgb(250,247,219)';
ctx.moveTo(17284,24688);
ctx.lineTo(17284,24628);
ctx.lineTo(17344,24628);
ctx.lineTo(17344,24688);
ctx.lineTo(17284,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,16,121,0.85)';
ctx.strokeStyle='rgb(15,115,19)';
ctx.moveTo(17284,23176);
ctx.lineTo(17284,23116);
ctx.lineTo(17344,23116);
ctx.lineTo(17344,23176);
ctx.lineTo(17284,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,116,102,0.85)';
ctx.strokeStyle='rgb(13,200,29)';
ctx.moveTo(17392,22852);
ctx.lineTo(17392,22792);
ctx.lineTo(17452,22792);
ctx.lineTo(17452,22852);
ctx.lineTo(17392,22852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,31,4,0.85)';
ctx.strokeStyle='rgb(59,95,248)';
ctx.moveTo(17176,22852);
ctx.lineTo(17176,22792);
ctx.lineTo(17236,22792);
ctx.lineTo(17236,22852);
ctx.lineTo(17176,22852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,95,21,0.85)';
ctx.strokeStyle='rgb(130,52,218)';
ctx.moveTo(18472,22636);
ctx.lineTo(18472,22576);
ctx.lineTo(18532,22576);
ctx.lineTo(18532,22636);
ctx.lineTo(18472,22636);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,240,211,0.85)';
ctx.strokeStyle='rgb(184,214,64)';
ctx.moveTo(14584,26632);
ctx.lineTo(14584,26572);
ctx.lineTo(14644,26572);
ctx.lineTo(14644,26632);
ctx.lineTo(14584,26632);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,80,1,0.85)';
ctx.strokeStyle='rgb(212,201,35)';
ctx.moveTo(13072,26632);
ctx.lineTo(13072,26572);
ctx.lineTo(13132,26572);
ctx.lineTo(13132,26632);
ctx.lineTo(13072,26632);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,251,176,0.85)';
ctx.strokeStyle='rgb(13,188,234)';
ctx.moveTo(14584,34084);
ctx.lineTo(14584,34024);
ctx.lineTo(14644,34024);
ctx.lineTo(14644,34084);
ctx.lineTo(14584,34084);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,246,151,0.85)';
ctx.strokeStyle='rgb(135,8,212)';
ctx.moveTo(16096,34084);
ctx.lineTo(16096,34024);
ctx.lineTo(16156,34024);
ctx.lineTo(16156,34084);
ctx.lineTo(16096,34084);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,125,95,0.85)';
ctx.strokeStyle='rgb(228,225,192)';
ctx.moveTo(21712,18640);
ctx.lineTo(21712,18580);
ctx.lineTo(21772,18580);
ctx.lineTo(21772,18640);
ctx.lineTo(21712,18640);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,213,223,0.85)';
ctx.strokeStyle='rgb(225,130,204)';
ctx.moveTo(20848,18640);
ctx.lineTo(20848,18580);
ctx.lineTo(20908,18580);
ctx.lineTo(20908,18640);
ctx.lineTo(20848,18640);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,72,106,0.85)';
ctx.strokeStyle='rgb(70,4,165)';
ctx.moveTo(20740,20692);
ctx.lineTo(20740,20632);
ctx.lineTo(20800,20632);
ctx.lineTo(20800,20692);
ctx.lineTo(20740,20692);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,49,168,0.85)';
ctx.strokeStyle='rgb(207,5,152)';
ctx.moveTo(20308,20260);
ctx.lineTo(20308,20200);
ctx.lineTo(20368,20200);
ctx.lineTo(20368,20260);
ctx.lineTo(20308,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,158,131,0.85)';
ctx.strokeStyle='rgb(28,191,176)';
ctx.moveTo(20848,20260);
ctx.lineTo(20848,20200);
ctx.lineTo(20908,20200);
ctx.lineTo(20908,20260);
ctx.lineTo(20848,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,65,14,0.85)';
ctx.strokeStyle='rgb(140,164,101)';
ctx.moveTo(20848,20260);
ctx.lineTo(20848,20200);
ctx.lineTo(20908,20200);
ctx.lineTo(20908,20260);
ctx.lineTo(20848,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,39,99,0.85)';
ctx.strokeStyle='rgb(134,151,151)';
ctx.moveTo(19552,19612);
ctx.lineTo(19552,19552);
ctx.lineTo(19612,19552);
ctx.lineTo(19612,19612);
ctx.lineTo(19552,19612);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,238,222,0.85)';
ctx.strokeStyle='rgb(217,131,56)';
ctx.moveTo(20524,20152);
ctx.lineTo(20524,20092);
ctx.lineTo(20584,20092);
ctx.lineTo(20584,20152);
ctx.lineTo(20524,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,214,144,0.85)';
ctx.strokeStyle='rgb(39,187,82)';
ctx.moveTo(19228,19936);
ctx.lineTo(19228,19876);
ctx.lineTo(19288,19876);
ctx.lineTo(19288,19936);
ctx.lineTo(19228,19936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,73,141,0.85)';
ctx.strokeStyle='rgb(163,18,187)';
ctx.moveTo(20956,19936);
ctx.lineTo(20956,19876);
ctx.lineTo(21016,19876);
ctx.lineTo(21016,19936);
ctx.lineTo(20956,19936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,120,205,0.85)';
ctx.strokeStyle='rgb(38,195,46)';
ctx.moveTo(19120,19936);
ctx.lineTo(19120,19876);
ctx.lineTo(19180,19876);
ctx.lineTo(19180,19936);
ctx.lineTo(19120,19936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,190,225,0.85)';
ctx.strokeStyle='rgb(149,22,208)';
ctx.moveTo(21820,20692);
ctx.lineTo(21820,20632);
ctx.lineTo(21880,20632);
ctx.lineTo(21880,20692);
ctx.lineTo(21820,20692);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,10,228,0.85)';
ctx.strokeStyle='rgb(79,3,9)';
ctx.moveTo(23008,19504);
ctx.lineTo(23008,19444);
ctx.lineTo(23068,19444);
ctx.lineTo(23068,19504);
ctx.lineTo(23008,19504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,54,57,0.85)';
ctx.strokeStyle='rgb(196,17,169)';
ctx.moveTo(21928,19504);
ctx.lineTo(21928,19444);
ctx.lineTo(21988,19444);
ctx.lineTo(21988,19504);
ctx.lineTo(21928,19504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,91,81,0.85)';
ctx.strokeStyle='rgb(102,75,69)';
ctx.moveTo(21712,19612);
ctx.lineTo(21712,19552);
ctx.lineTo(21772,19552);
ctx.lineTo(21772,19612);
ctx.lineTo(21712,19612);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,110,7,0.85)';
ctx.strokeStyle='rgb(211,156,231)';
ctx.moveTo(21712,19612);
ctx.lineTo(21712,19552);
ctx.lineTo(21772,19552);
ctx.lineTo(21772,19612);
ctx.lineTo(21712,19612);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,105,83,0.85)';
ctx.strokeStyle='rgb(233,238,73)';
ctx.moveTo(21064,23068);
ctx.lineTo(21064,23008);
ctx.lineTo(21124,23008);
ctx.lineTo(21124,23068);
ctx.lineTo(21064,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,249,120,0.85)';
ctx.strokeStyle='rgb(160,96,15)';
ctx.moveTo(21064,23284);
ctx.lineTo(21064,23224);
ctx.lineTo(21124,23224);
ctx.lineTo(21124,23284);
ctx.lineTo(21064,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,175,131,0.85)';
ctx.strokeStyle='rgb(218,252,153)';
ctx.moveTo(20632,23068);
ctx.lineTo(20632,23008);
ctx.lineTo(20692,23008);
ctx.lineTo(20692,23068);
ctx.lineTo(20632,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,129,125,0.85)';
ctx.strokeStyle='rgb(184,86,163)';
ctx.moveTo(19660,23932);
ctx.lineTo(19660,23872);
ctx.lineTo(19720,23872);
ctx.lineTo(19720,23932);
ctx.lineTo(19660,23932);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,15,174,0.85)';
ctx.strokeStyle='rgb(24,214,61)';
ctx.moveTo(19660,23392);
ctx.lineTo(19660,23332);
ctx.lineTo(19720,23332);
ctx.lineTo(19720,23392);
ctx.lineTo(19660,23392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,122,154,0.85)';
ctx.strokeStyle='rgb(30,221,218)';
ctx.moveTo(19660,24796);
ctx.lineTo(19660,24736);
ctx.lineTo(19720,24736);
ctx.lineTo(19720,24796);
ctx.lineTo(19660,24796);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,214,86,0.85)';
ctx.strokeStyle='rgb(197,140,13)';
ctx.moveTo(21712,21772);
ctx.lineTo(21712,21712);
ctx.lineTo(21772,21712);
ctx.lineTo(21772,21772);
ctx.lineTo(21712,21772);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,73,253,0.85)';
ctx.strokeStyle='rgb(210,82,191)';
ctx.moveTo(21712,21772);
ctx.lineTo(21712,21712);
ctx.lineTo(21772,21712);
ctx.lineTo(21772,21772);
ctx.lineTo(21712,21772);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,243,201,0.85)';
ctx.strokeStyle='rgb(53,134,223)';
ctx.moveTo(20956,24256);
ctx.lineTo(20956,24196);
ctx.lineTo(21016,24196);
ctx.lineTo(21016,24256);
ctx.lineTo(20956,24256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,226,54,0.85)';
ctx.strokeStyle='rgb(166,165,157)';
ctx.moveTo(19984,24256);
ctx.lineTo(19984,24196);
ctx.lineTo(20044,24196);
ctx.lineTo(20044,24256);
ctx.lineTo(19984,24256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,5,119,0.85)';
ctx.strokeStyle='rgb(156,121,192)';
ctx.moveTo(19660,24580);
ctx.lineTo(19660,24520);
ctx.lineTo(19720,24520);
ctx.lineTo(19720,24580);
ctx.lineTo(19660,24580);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,6,114,0.85)';
ctx.strokeStyle='rgb(119,24,8)';
ctx.moveTo(19444,24580);
ctx.lineTo(19444,24520);
ctx.lineTo(19504,24520);
ctx.lineTo(19504,24580);
ctx.lineTo(19444,24580);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,169,164,0.85)';
ctx.strokeStyle='rgb(152,132,216)';
ctx.moveTo(20200,24688);
ctx.lineTo(20200,24628);
ctx.lineTo(20260,24628);
ctx.lineTo(20260,24688);
ctx.lineTo(20200,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,60,111,0.85)';
ctx.strokeStyle='rgb(138,43,127)';
ctx.moveTo(19444,24688);
ctx.lineTo(19444,24628);
ctx.lineTo(19504,24628);
ctx.lineTo(19504,24688);
ctx.lineTo(19444,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,206,44,0.85)';
ctx.strokeStyle='rgb(119,226,189)';
ctx.moveTo(21388,23392);
ctx.lineTo(21388,23332);
ctx.lineTo(21448,23332);
ctx.lineTo(21448,23392);
ctx.lineTo(21388,23392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,217,198,0.85)';
ctx.strokeStyle='rgb(142,234,52)';
ctx.moveTo(19660,24796);
ctx.lineTo(19660,24736);
ctx.lineTo(19720,24736);
ctx.lineTo(19720,24796);
ctx.lineTo(19660,24796);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,67,149,0.85)';
ctx.strokeStyle='rgb(113,74,232)';
ctx.moveTo(21388,23176);
ctx.lineTo(21388,23116);
ctx.lineTo(21448,23116);
ctx.lineTo(21448,23176);
ctx.lineTo(21388,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,251,106,0.85)';
ctx.strokeStyle='rgb(181,115,102)';
ctx.moveTo(20200,23176);
ctx.lineTo(20200,23116);
ctx.lineTo(20260,23116);
ctx.lineTo(20260,23176);
ctx.lineTo(20200,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,115,46,0.85)';
ctx.strokeStyle='rgb(161,61,197)';
ctx.moveTo(21604,22852);
ctx.lineTo(21604,22792);
ctx.lineTo(21664,22792);
ctx.lineTo(21664,22852);
ctx.lineTo(21604,22852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,170,64,0.85)';
ctx.strokeStyle='rgb(68,156,203)';
ctx.moveTo(19228,22852);
ctx.lineTo(19228,22792);
ctx.lineTo(19288,22792);
ctx.lineTo(19288,22852);
ctx.lineTo(19228,22852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,90,133,0.85)';
ctx.strokeStyle='rgb(223,247,34)';
ctx.moveTo(19228,22852);
ctx.lineTo(19228,22792);
ctx.lineTo(19288,22792);
ctx.lineTo(19288,22852);
ctx.lineTo(19228,22852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,38,42,0.85)';
ctx.strokeStyle='rgb(248,221,229)';
ctx.moveTo(23224,23284);
ctx.lineTo(23224,23224);
ctx.lineTo(23284,23224);
ctx.lineTo(23284,23284);
ctx.lineTo(23224,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,101,151,0.85)';
ctx.strokeStyle='rgb(1,123,126)';
ctx.moveTo(20308,22960);
ctx.lineTo(20308,22900);
ctx.lineTo(20368,22900);
ctx.lineTo(20368,22960);
ctx.lineTo(20308,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,248,119,0.85)';
ctx.strokeStyle='rgb(137,203,250)';
ctx.moveTo(19876,22960);
ctx.lineTo(19876,22900);
ctx.lineTo(19936,22900);
ctx.lineTo(19936,22960);
ctx.lineTo(19876,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,2,214,0.85)';
ctx.strokeStyle='rgb(68,79,20)';
ctx.moveTo(2950,32650);
ctx.lineTo(2950,1546);
ctx.lineTo(4030,1546);
ctx.lineTo(4030,32650);
ctx.lineTo(2950,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,115,247,0.85)';
ctx.strokeStyle='rgb(3,224,106)';
ctx.moveTo(14140,32650);
ctx.lineTo(14140,1546);
ctx.lineTo(15220,1546);
ctx.lineTo(15220,32650);
ctx.lineTo(14140,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,67,27,0.85)';
ctx.strokeStyle='rgb(211,181,118)';
ctx.moveTo(24142,32650);
ctx.lineTo(24142,1546);
ctx.lineTo(25222,1546);
ctx.lineTo(25222,32650);
ctx.lineTo(24142,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,206,70,0.85)';
ctx.strokeStyle='rgb(0,89,46)';
ctx.moveTo(34162,32650);
ctx.lineTo(34162,1546);
ctx.lineTo(35242,1546);
ctx.lineTo(35242,32650);
ctx.lineTo(34162,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,207,198,0.85)';
ctx.strokeStyle='rgb(25,228,73)';
ctx.moveTo(1654,33946);
ctx.lineTo(1654,250);
ctx.lineTo(2734,250);
ctx.lineTo(2734,33946);
ctx.lineTo(1654,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,16,70,0.85)';
ctx.strokeStyle='rgb(211,43,0)';
ctx.moveTo(5434,33946);
ctx.lineTo(5434,250);
ctx.lineTo(6514,250);
ctx.lineTo(6514,33946);
ctx.lineTo(5434,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,8,167,0.85)';
ctx.strokeStyle='rgb(198,224,193)';
ctx.moveTo(15436,33946);
ctx.lineTo(15436,250);
ctx.lineTo(16516,250);
ctx.lineTo(16516,33946);
ctx.lineTo(15436,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,91,33,0.85)';
ctx.strokeStyle='rgb(174,82,87)';
ctx.moveTo(25438,33946);
ctx.lineTo(25438,250);
ctx.lineTo(26518,250);
ctx.lineTo(26518,33946);
ctx.lineTo(25438,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,46,44,0.85)';
ctx.strokeStyle='rgb(110,154,193)';
ctx.moveTo(35458,33946);
ctx.lineTo(35458,250);
ctx.lineTo(36538,250);
ctx.lineTo(36538,33946);
ctx.lineTo(35458,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,135,92,0.85)';
ctx.strokeStyle='rgb(186,20,179)';
ctx.moveTo(14140,17986);
ctx.lineTo(14140,17722);
ctx.lineTo(15220,17722);
ctx.lineTo(15220,17986);
ctx.lineTo(14140,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,28,97,0.85)';
ctx.strokeStyle='rgb(13,242,62)';
ctx.moveTo(2950,17986);
ctx.lineTo(2950,17722);
ctx.lineTo(4030,17722);
ctx.lineTo(4030,17986);
ctx.lineTo(2950,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,248,138,0.85)';
ctx.strokeStyle='rgb(213,126,223)';
ctx.moveTo(34162,17986);
ctx.lineTo(34162,17722);
ctx.lineTo(35242,17722);
ctx.lineTo(35242,17986);
ctx.lineTo(34162,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,189,222,0.85)';
ctx.strokeStyle='rgb(100,180,160)';
ctx.moveTo(24142,17986);
ctx.lineTo(24142,17722);
ctx.lineTo(25222,17722);
ctx.lineTo(25222,17986);
ctx.lineTo(24142,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,23,35,0.85)';
ctx.strokeStyle='rgb(239,81,72)';
ctx.moveTo(35458,4378);
ctx.lineTo(35458,4114);
ctx.lineTo(36538,4114);
ctx.lineTo(36538,4378);
ctx.lineTo(35458,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,5,159,0.85)';
ctx.strokeStyle='rgb(71,85,167)';
ctx.moveTo(35458,1330);
ctx.lineTo(35458,250);
ctx.lineTo(36538,250);
ctx.lineTo(36538,1330);
ctx.lineTo(35458,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,172,39,0.85)';
ctx.strokeStyle='rgb(122,29,73)';
ctx.moveTo(34162,5890);
ctx.lineTo(34162,5626);
ctx.lineTo(35242,5626);
ctx.lineTo(35242,5890);
ctx.lineTo(34162,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,216,183,0.85)';
ctx.strokeStyle='rgb(33,147,148)';
ctx.moveTo(35458,7402);
ctx.lineTo(35458,7138);
ctx.lineTo(36538,7138);
ctx.lineTo(36538,7402);
ctx.lineTo(35458,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,216,137,0.85)';
ctx.strokeStyle='rgb(110,115,218)';
ctx.moveTo(24142,2866);
ctx.lineTo(24142,2734);
ctx.lineTo(25222,2734);
ctx.lineTo(25222,2866);
ctx.lineTo(24142,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,43,26,0.85)';
ctx.strokeStyle='rgb(234,181,92)';
ctx.moveTo(24142,2626);
ctx.lineTo(24142,1546);
ctx.lineTo(25222,1546);
ctx.lineTo(25222,2626);
ctx.lineTo(24142,2626);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,177,55,0.85)';
ctx.strokeStyle='rgb(74,56,119)';
ctx.moveTo(25438,4378);
ctx.lineTo(25438,4114);
ctx.lineTo(26518,4114);
ctx.lineTo(26518,4378);
ctx.lineTo(25438,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,6,14,0.85)';
ctx.strokeStyle='rgb(97,58,238)';
ctx.moveTo(25438,1330);
ctx.lineTo(25438,250);
ctx.lineTo(26518,250);
ctx.lineTo(26518,1330);
ctx.lineTo(25438,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,250,24,0.85)';
ctx.strokeStyle='rgb(9,66,60)';
ctx.moveTo(24142,5890);
ctx.lineTo(24142,5626);
ctx.lineTo(25222,5626);
ctx.lineTo(25222,5890);
ctx.lineTo(24142,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,59,48,0.85)';
ctx.strokeStyle='rgb(106,193,142)';
ctx.moveTo(25438,7402);
ctx.lineTo(25438,7138);
ctx.lineTo(26518,7138);
ctx.lineTo(26518,7402);
ctx.lineTo(25438,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,155,158,0.85)';
ctx.strokeStyle='rgb(177,151,11)';
ctx.moveTo(25438,10426);
ctx.lineTo(25438,10162);
ctx.lineTo(26518,10162);
ctx.lineTo(26518,10426);
ctx.lineTo(25438,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,244,83,0.85)';
ctx.strokeStyle='rgb(250,235,213)';
ctx.moveTo(24142,11938);
ctx.lineTo(24142,11674);
ctx.lineTo(25222,11674);
ctx.lineTo(25222,11938);
ctx.lineTo(24142,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,46,136,0.85)';
ctx.strokeStyle='rgb(14,218,85)';
ctx.moveTo(24142,14962);
ctx.lineTo(24142,14698);
ctx.lineTo(25222,14698);
ctx.lineTo(25222,14962);
ctx.lineTo(24142,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,177,229,0.85)';
ctx.strokeStyle='rgb(71,147,211)';
ctx.moveTo(25438,16474);
ctx.lineTo(25438,16210);
ctx.lineTo(26518,16210);
ctx.lineTo(26518,16474);
ctx.lineTo(25438,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,142,128,0.85)';
ctx.strokeStyle='rgb(83,17,214)';
ctx.moveTo(25438,13450);
ctx.lineTo(25438,13186);
ctx.lineTo(26518,13186);
ctx.lineTo(26518,13450);
ctx.lineTo(25438,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,123,160,0.85)';
ctx.strokeStyle='rgb(131,253,60)';
ctx.moveTo(34162,11938);
ctx.lineTo(34162,11674);
ctx.lineTo(35242,11674);
ctx.lineTo(35242,11938);
ctx.lineTo(34162,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,180,118,0.85)';
ctx.strokeStyle='rgb(251,55,65)';
ctx.moveTo(35458,10426);
ctx.lineTo(35458,10162);
ctx.lineTo(36538,10162);
ctx.lineTo(36538,10426);
ctx.lineTo(35458,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,126,131,0.85)';
ctx.strokeStyle='rgb(167,109,197)';
ctx.moveTo(34162,14962);
ctx.lineTo(34162,14698);
ctx.lineTo(35242,14698);
ctx.lineTo(35242,14962);
ctx.lineTo(34162,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,150,135,0.85)';
ctx.strokeStyle='rgb(106,212,224)';
ctx.moveTo(35458,16474);
ctx.lineTo(35458,16210);
ctx.lineTo(36538,16210);
ctx.lineTo(36538,16474);
ctx.lineTo(35458,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,92,91,0.85)';
ctx.strokeStyle='rgb(118,29,198)';
ctx.moveTo(35458,13450);
ctx.lineTo(35458,13186);
ctx.lineTo(36538,13186);
ctx.lineTo(36538,13450);
ctx.lineTo(35458,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,106,233,0.85)';
ctx.strokeStyle='rgb(197,123,122)';
ctx.moveTo(24142,8914);
ctx.lineTo(24142,8650);
ctx.lineTo(25222,8650);
ctx.lineTo(25222,8914);
ctx.lineTo(24142,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,191,235,0.85)';
ctx.strokeStyle='rgb(62,142,199)';
ctx.moveTo(34162,8914);
ctx.lineTo(34162,8650);
ctx.lineTo(35242,8650);
ctx.lineTo(35242,8914);
ctx.lineTo(34162,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,214,60,0.85)';
ctx.strokeStyle='rgb(45,241,198)';
ctx.moveTo(34162,2866);
ctx.lineTo(34162,2734);
ctx.lineTo(35242,2734);
ctx.lineTo(35242,2866);
ctx.lineTo(34162,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,51,126,0.85)';
ctx.strokeStyle='rgb(9,194,241)';
ctx.moveTo(34162,2626);
ctx.lineTo(34162,1546);
ctx.lineTo(35242,1546);
ctx.lineTo(35242,2626);
ctx.lineTo(34162,2626);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,238,129,0.85)';
ctx.strokeStyle='rgb(87,188,13)';
ctx.moveTo(14140,2626);
ctx.lineTo(14140,1546);
ctx.lineTo(15220,1546);
ctx.lineTo(15220,2626);
ctx.lineTo(14140,2626);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,149,12,0.85)';
ctx.strokeStyle='rgb(65,178,202)';
ctx.moveTo(15436,4378);
ctx.lineTo(15436,4114);
ctx.lineTo(16516,4114);
ctx.lineTo(16516,4378);
ctx.lineTo(15436,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,26,97,0.85)';
ctx.strokeStyle='rgb(18,66,176)';
ctx.moveTo(15436,1330);
ctx.lineTo(15436,250);
ctx.lineTo(16516,250);
ctx.lineTo(16516,1330);
ctx.lineTo(15436,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,194,8,0.85)';
ctx.strokeStyle='rgb(217,23,90)';
ctx.moveTo(15436,7402);
ctx.lineTo(15436,7138);
ctx.lineTo(16516,7138);
ctx.lineTo(16516,7402);
ctx.lineTo(15436,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,0,182,0.85)';
ctx.strokeStyle='rgb(159,45,106)';
ctx.moveTo(5434,7402);
ctx.lineTo(5434,7138);
ctx.lineTo(6514,7138);
ctx.lineTo(6514,7402);
ctx.lineTo(5434,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,150,18,0.85)';
ctx.strokeStyle='rgb(157,159,187)';
ctx.moveTo(5434,4378);
ctx.lineTo(5434,4114);
ctx.lineTo(6514,4114);
ctx.lineTo(6514,4378);
ctx.lineTo(5434,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,145,204,0.85)';
ctx.strokeStyle='rgb(240,73,86)';
ctx.moveTo(5434,1330);
ctx.lineTo(5434,250);
ctx.lineTo(6514,250);
ctx.lineTo(6514,1330);
ctx.lineTo(5434,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,140,248,0.85)';
ctx.strokeStyle='rgb(18,5,129)';
ctx.moveTo(2950,2866);
ctx.lineTo(2950,2734);
ctx.lineTo(4030,2734);
ctx.lineTo(4030,2866);
ctx.lineTo(2950,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,238,76,0.85)';
ctx.strokeStyle='rgb(1,62,216)';
ctx.moveTo(2950,2626);
ctx.lineTo(2950,1546);
ctx.lineTo(4030,1546);
ctx.lineTo(4030,2626);
ctx.lineTo(2950,2626);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,94,242,0.85)';
ctx.strokeStyle='rgb(26,232,243)';
ctx.moveTo(1654,4378);
ctx.lineTo(1654,4114);
ctx.lineTo(2734,4114);
ctx.lineTo(2734,4378);
ctx.lineTo(1654,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,113,182,0.85)';
ctx.strokeStyle='rgb(14,143,137)';
ctx.moveTo(1654,1330);
ctx.lineTo(1654,250);
ctx.lineTo(2734,250);
ctx.lineTo(2734,1330);
ctx.lineTo(1654,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,185,247,0.85)';
ctx.strokeStyle='rgb(239,123,121)';
ctx.moveTo(2950,5890);
ctx.lineTo(2950,5626);
ctx.lineTo(4030,5626);
ctx.lineTo(4030,5890);
ctx.lineTo(2950,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,0,253,0.85)';
ctx.strokeStyle='rgb(172,116,18)';
ctx.moveTo(1654,7402);
ctx.lineTo(1654,7138);
ctx.lineTo(2734,7138);
ctx.lineTo(2734,7402);
ctx.lineTo(1654,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,186,126,0.85)';
ctx.strokeStyle='rgb(224,55,247)';
ctx.moveTo(5434,16474);
ctx.lineTo(5434,16210);
ctx.lineTo(6514,16210);
ctx.lineTo(6514,16474);
ctx.lineTo(5434,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,230,248,0.85)';
ctx.strokeStyle='rgb(178,154,88)';
ctx.moveTo(5434,13450);
ctx.lineTo(5434,13186);
ctx.lineTo(6514,13186);
ctx.lineTo(6514,13450);
ctx.lineTo(5434,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,186,59,0.85)';
ctx.strokeStyle='rgb(109,214,180)';
ctx.moveTo(5434,10426);
ctx.lineTo(5434,10162);
ctx.lineTo(6514,10162);
ctx.lineTo(6514,10426);
ctx.lineTo(5434,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,53,21,0.85)';
ctx.strokeStyle='rgb(43,149,125)';
ctx.moveTo(2950,11938);
ctx.lineTo(2950,11674);
ctx.lineTo(4030,11674);
ctx.lineTo(4030,11938);
ctx.lineTo(2950,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,30,21,0.85)';
ctx.strokeStyle='rgb(47,18,51)';
ctx.moveTo(1654,10426);
ctx.lineTo(1654,10162);
ctx.lineTo(2734,10162);
ctx.lineTo(2734,10426);
ctx.lineTo(1654,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,174,49,0.85)';
ctx.strokeStyle='rgb(219,38,83)';
ctx.moveTo(2950,14962);
ctx.lineTo(2950,14698);
ctx.lineTo(4030,14698);
ctx.lineTo(4030,14962);
ctx.lineTo(2950,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,214,3,0.85)';
ctx.strokeStyle='rgb(115,74,56)';
ctx.moveTo(1654,16474);
ctx.lineTo(1654,16210);
ctx.lineTo(2734,16210);
ctx.lineTo(2734,16474);
ctx.lineTo(1654,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,28,198,0.85)';
ctx.strokeStyle='rgb(75,197,58)';
ctx.moveTo(1654,13450);
ctx.lineTo(1654,13186);
ctx.lineTo(2734,13186);
ctx.lineTo(2734,13450);
ctx.lineTo(1654,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,3,123,0.85)';
ctx.strokeStyle='rgb(252,108,89)';
ctx.moveTo(14140,14962);
ctx.lineTo(14140,14698);
ctx.lineTo(15220,14698);
ctx.lineTo(15220,14962);
ctx.lineTo(14140,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,181,137,0.85)';
ctx.strokeStyle='rgb(229,208,147)';
ctx.moveTo(14140,11938);
ctx.lineTo(14140,11674);
ctx.lineTo(15220,11674);
ctx.lineTo(15220,11938);
ctx.lineTo(14140,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,77,78,0.85)';
ctx.strokeStyle='rgb(56,90,150)';
ctx.moveTo(15436,10426);
ctx.lineTo(15436,10162);
ctx.lineTo(16516,10162);
ctx.lineTo(16516,10426);
ctx.lineTo(15436,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,176,12,0.85)';
ctx.strokeStyle='rgb(55,30,163)';
ctx.moveTo(17392,17128);
ctx.lineTo(17392,17068);
ctx.lineTo(17452,17068);
ctx.lineTo(17452,17128);
ctx.lineTo(17392,17128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,235,55,0.85)';
ctx.strokeStyle='rgb(63,159,31)';
ctx.moveTo(18148,15616);
ctx.lineTo(18148,15556);
ctx.lineTo(18208,15556);
ctx.lineTo(18208,15616);
ctx.lineTo(18148,15616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,234,7,0.85)';
ctx.strokeStyle='rgb(165,74,43)';
ctx.moveTo(18256,16048);
ctx.lineTo(18256,15988);
ctx.lineTo(18316,15988);
ctx.lineTo(18316,16048);
ctx.lineTo(18256,16048);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,217,154,0.85)';
ctx.strokeStyle='rgb(102,154,247)';
ctx.moveTo(15436,16474);
ctx.lineTo(15436,16210);
ctx.lineTo(16516,16210);
ctx.lineTo(16516,16474);
ctx.lineTo(15436,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,217,224,0.85)';
ctx.strokeStyle='rgb(149,23,2)';
ctx.moveTo(15436,13450);
ctx.lineTo(15436,13186);
ctx.lineTo(16516,13186);
ctx.lineTo(16516,13450);
ctx.lineTo(15436,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,52,213,0.85)';
ctx.strokeStyle='rgb(252,132,147)';
ctx.moveTo(2950,8914);
ctx.lineTo(2950,8650);
ctx.lineTo(4030,8650);
ctx.lineTo(4030,8914);
ctx.lineTo(2950,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,24,72,0.85)';
ctx.strokeStyle='rgb(136,30,253)';
ctx.moveTo(17068,17452);
ctx.lineTo(17068,17392);
ctx.lineTo(17128,17392);
ctx.lineTo(17128,17452);
ctx.lineTo(17068,17452);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,163,105,0.85)';
ctx.strokeStyle='rgb(138,53,228)';
ctx.moveTo(17392,17236);
ctx.lineTo(17392,17176);
ctx.lineTo(17452,17176);
ctx.lineTo(17452,17236);
ctx.lineTo(17392,17236);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,25,221,0.85)';
ctx.strokeStyle='rgb(83,130,67)';
ctx.moveTo(14140,8914);
ctx.lineTo(14140,8650);
ctx.lineTo(15220,8650);
ctx.lineTo(15220,8914);
ctx.lineTo(14140,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,252,190,0.85)';
ctx.strokeStyle='rgb(78,216,39)';
ctx.moveTo(14140,5890);
ctx.lineTo(14140,5626);
ctx.lineTo(15220,5626);
ctx.lineTo(15220,5890);
ctx.lineTo(14140,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,14,133,0.85)';
ctx.strokeStyle='rgb(208,36,231)';
ctx.moveTo(14140,2866);
ctx.lineTo(14140,2734);
ctx.lineTo(15220,2734);
ctx.lineTo(15220,2866);
ctx.lineTo(14140,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,3,57,0.85)';
ctx.strokeStyle='rgb(5,19,203)';
ctx.moveTo(13072,26632);
ctx.lineTo(13072,26572);
ctx.lineTo(13132,26572);
ctx.lineTo(13132,26632);
ctx.lineTo(13072,26632);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,3,118,0.85)';
ctx.strokeStyle='rgb(137,56,196)';
ctx.moveTo(18364,18640);
ctx.lineTo(18364,18580);
ctx.lineTo(18424,18580);
ctx.lineTo(18424,18640);
ctx.lineTo(18364,18640);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,3,62,0.85)';
ctx.strokeStyle='rgb(94,74,27)';
ctx.moveTo(17500,17884);
ctx.lineTo(17500,17824);
ctx.lineTo(17560,17824);
ctx.lineTo(17560,17884);
ctx.lineTo(17500,17884);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,142,186,0.85)';
ctx.strokeStyle='rgb(159,34,189)';
ctx.moveTo(17500,18748);
ctx.lineTo(17500,18688);
ctx.lineTo(17560,18688);
ctx.lineTo(17560,18748);
ctx.lineTo(17500,18748);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,177,108,0.85)';
ctx.strokeStyle='rgb(56,7,50)';
ctx.moveTo(17284,18856);
ctx.lineTo(17284,18796);
ctx.lineTo(17344,18796);
ctx.lineTo(17344,18856);
ctx.lineTo(17284,18856);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,198,171,0.85)';
ctx.strokeStyle='rgb(92,17,147)';
ctx.moveTo(18148,18532);
ctx.lineTo(18148,18472);
ctx.lineTo(18208,18472);
ctx.lineTo(18208,18532);
ctx.lineTo(18148,18532);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,191,241,0.85)';
ctx.strokeStyle='rgb(58,178,47)';
ctx.moveTo(18256,18640);
ctx.lineTo(18256,18580);
ctx.lineTo(18316,18580);
ctx.lineTo(18316,18640);
ctx.lineTo(18256,18640);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,180,116,0.85)';
ctx.strokeStyle='rgb(109,59,221)';
ctx.moveTo(17176,18640);
ctx.lineTo(17176,18580);
ctx.lineTo(17236,18580);
ctx.lineTo(17236,18640);
ctx.lineTo(17176,18640);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,11,140,0.85)';
ctx.strokeStyle='rgb(136,124,27)';
ctx.moveTo(18472,19072);
ctx.lineTo(18472,19012);
ctx.lineTo(18532,19012);
ctx.lineTo(18532,19072);
ctx.lineTo(18472,19072);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,167,27,0.85)';
ctx.strokeStyle='rgb(92,180,14)';
ctx.moveTo(17392,18532);
ctx.lineTo(17392,18472);
ctx.lineTo(17452,18472);
ctx.lineTo(17452,18532);
ctx.lineTo(17392,18532);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,124,103,0.85)';
ctx.strokeStyle='rgb(107,81,125)';
ctx.moveTo(16852,20260);
ctx.lineTo(16852,20200);
ctx.lineTo(16912,20200);
ctx.lineTo(16912,20260);
ctx.lineTo(16852,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,235,135,0.85)';
ctx.strokeStyle='rgb(254,179,131)';
ctx.moveTo(16852,20260);
ctx.lineTo(16852,20200);
ctx.lineTo(16912,20200);
ctx.lineTo(16912,20260);
ctx.lineTo(16852,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,253,207,0.85)';
ctx.strokeStyle='rgb(74,52,211)';
ctx.moveTo(17176,20152);
ctx.lineTo(17176,20092);
ctx.lineTo(17236,20092);
ctx.lineTo(17236,20152);
ctx.lineTo(17176,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,211,189,0.85)';
ctx.strokeStyle='rgb(149,46,119)';
ctx.moveTo(18256,20692);
ctx.lineTo(18256,20632);
ctx.lineTo(18316,20632);
ctx.lineTo(18316,20692);
ctx.lineTo(18256,20692);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,75,250,0.85)';
ctx.strokeStyle='rgb(125,181,136)';
ctx.moveTo(18472,19828);
ctx.lineTo(18472,19768);
ctx.lineTo(18532,19768);
ctx.lineTo(18532,19828);
ctx.lineTo(18472,19828);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,119,79,0.85)';
ctx.strokeStyle='rgb(45,162,142)';
ctx.moveTo(17068,20368);
ctx.lineTo(17068,20308);
ctx.lineTo(17128,20308);
ctx.lineTo(17128,20368);
ctx.lineTo(17068,20368);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,85,123,0.85)';
ctx.strokeStyle='rgb(223,66,17)';
ctx.moveTo(18364,19612);
ctx.lineTo(18364,19552);
ctx.lineTo(18424,19552);
ctx.lineTo(18424,19612);
ctx.lineTo(18364,19612);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,20,50,0.85)';
ctx.strokeStyle='rgb(228,150,46)';
ctx.moveTo(17716,20152);
ctx.lineTo(17716,20092);
ctx.lineTo(17776,20092);
ctx.lineTo(17776,20152);
ctx.lineTo(17716,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,239,76,0.85)';
ctx.strokeStyle='rgb(73,95,231)';
ctx.moveTo(17716,20260);
ctx.lineTo(17716,20200);
ctx.lineTo(17776,20200);
ctx.lineTo(17776,20260);
ctx.lineTo(17716,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,79,199,0.85)';
ctx.strokeStyle='rgb(143,188,54)';
ctx.moveTo(17392,20152);
ctx.lineTo(17392,20092);
ctx.lineTo(17452,20092);
ctx.lineTo(17452,20152);
ctx.lineTo(17392,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,93,127,0.85)';
ctx.strokeStyle='rgb(79,252,229)';
ctx.moveTo(17392,20152);
ctx.lineTo(17392,20092);
ctx.lineTo(17452,20092);
ctx.lineTo(17452,20152);
ctx.lineTo(17392,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,201,73,0.85)';
ctx.strokeStyle='rgb(0,196,153)';
ctx.moveTo(12964,18532);
ctx.lineTo(12964,18472);
ctx.lineTo(13024,18472);
ctx.lineTo(13024,18532);
ctx.lineTo(12964,18532);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,128,3,0.85)';
ctx.strokeStyle='rgb(199,158,77)';
ctx.moveTo(10588,20152);
ctx.lineTo(10588,20092);
ctx.lineTo(10648,20092);
ctx.lineTo(10648,20152);
ctx.lineTo(10588,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,70,17,0.85)';
ctx.strokeStyle='rgb(132,66,195)';
ctx.moveTo(10588,20152);
ctx.lineTo(10588,20092);
ctx.lineTo(10648,20092);
ctx.lineTo(10648,20152);
ctx.lineTo(10588,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,1,178,0.85)';
ctx.strokeStyle='rgb(110,220,180)';
ctx.moveTo(13396,20260);
ctx.lineTo(13396,20200);
ctx.lineTo(13456,20200);
ctx.lineTo(13456,20260);
ctx.lineTo(13396,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,198,88,0.85)';
ctx.strokeStyle='rgb(187,101,195)';
ctx.moveTo(13396,21124);
ctx.lineTo(13396,21064);
ctx.lineTo(13456,21064);
ctx.lineTo(13456,21124);
ctx.lineTo(13396,21124);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,191,37,0.85)';
ctx.strokeStyle='rgb(15,189,96)';
ctx.moveTo(13180,21124);
ctx.lineTo(13180,21064);
ctx.lineTo(13240,21064);
ctx.lineTo(13240,21124);
ctx.lineTo(13180,21124);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,21,1,0.85)';
ctx.strokeStyle='rgb(136,39,204)';
ctx.moveTo(13072,20044);
ctx.lineTo(13072,19984);
ctx.lineTo(13132,19984);
ctx.lineTo(13132,20044);
ctx.lineTo(13072,20044);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,7,38,0.85)';
ctx.strokeStyle='rgb(117,234,23)';
ctx.moveTo(13072,19612);
ctx.lineTo(13072,19552);
ctx.lineTo(13132,19552);
ctx.lineTo(13132,19612);
ctx.lineTo(13072,19612);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,227,26,0.85)';
ctx.strokeStyle='rgb(227,52,100)';
ctx.moveTo(12964,19720);
ctx.lineTo(12964,19660);
ctx.lineTo(13024,19660);
ctx.lineTo(13024,19720);
ctx.lineTo(12964,19720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,61,106,0.85)';
ctx.strokeStyle='rgb(86,69,88)';
ctx.moveTo(13504,20368);
ctx.lineTo(13504,20308);
ctx.lineTo(13564,20308);
ctx.lineTo(13564,20368);
ctx.lineTo(13504,20368);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,216,19,0.85)';
ctx.strokeStyle='rgb(133,208,54)';
ctx.moveTo(13936,20152);
ctx.lineTo(13936,20092);
ctx.lineTo(13996,20092);
ctx.lineTo(13996,20152);
ctx.lineTo(13936,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,33,176,0.85)';
ctx.strokeStyle='rgb(199,84,8)';
ctx.moveTo(13936,20152);
ctx.lineTo(13936,20092);
ctx.lineTo(13996,20092);
ctx.lineTo(13996,20152);
ctx.lineTo(13936,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,16,70,0.85)';
ctx.strokeStyle='rgb(228,199,7)';
ctx.moveTo(13504,22204);
ctx.lineTo(13504,22144);
ctx.lineTo(13564,22144);
ctx.lineTo(13564,22204);
ctx.lineTo(13504,22204);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,40,167,0.85)';
ctx.strokeStyle='rgb(206,19,250)';
ctx.moveTo(13936,23068);
ctx.lineTo(13936,23008);
ctx.lineTo(13996,23008);
ctx.lineTo(13996,23068);
ctx.lineTo(13936,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,103,113,0.85)';
ctx.strokeStyle='rgb(248,87,87)';
ctx.moveTo(13936,23176);
ctx.lineTo(13936,23116);
ctx.lineTo(13996,23116);
ctx.lineTo(13996,23176);
ctx.lineTo(13936,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,162,171,0.85)';
ctx.strokeStyle='rgb(233,100,52)';
ctx.moveTo(13180,23284);
ctx.lineTo(13180,23224);
ctx.lineTo(13240,23224);
ctx.lineTo(13240,23284);
ctx.lineTo(13180,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,213,106,0.85)';
ctx.strokeStyle='rgb(196,191,158)';
ctx.moveTo(13396,22096);
ctx.lineTo(13396,22036);
ctx.lineTo(13456,22036);
ctx.lineTo(13456,22096);
ctx.lineTo(13396,22096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,184,1,0.85)';
ctx.strokeStyle='rgb(143,165,187)';
ctx.moveTo(12316,22960);
ctx.lineTo(12316,22900);
ctx.lineTo(12376,22900);
ctx.lineTo(12376,22960);
ctx.lineTo(12316,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,182,3,0.85)';
ctx.strokeStyle='rgb(157,5,41)';
ctx.moveTo(13396,22960);
ctx.lineTo(13396,22900);
ctx.lineTo(13456,22900);
ctx.lineTo(13456,22960);
ctx.lineTo(13396,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,70,124,0.85)';
ctx.strokeStyle='rgb(195,97,153)';
ctx.moveTo(12316,23068);
ctx.lineTo(12316,23008);
ctx.lineTo(12376,23008);
ctx.lineTo(12376,23068);
ctx.lineTo(12316,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,69,228,0.85)';
ctx.strokeStyle='rgb(152,132,90)';
ctx.moveTo(13396,24688);
ctx.lineTo(13396,24628);
ctx.lineTo(13456,24628);
ctx.lineTo(13456,24688);
ctx.lineTo(13396,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,41,168,0.85)';
ctx.strokeStyle='rgb(26,175,50)';
ctx.moveTo(13396,24688);
ctx.lineTo(13396,24628);
ctx.lineTo(13456,24628);
ctx.lineTo(13456,24688);
ctx.lineTo(13396,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,21,24,0.85)';
ctx.strokeStyle='rgb(191,189,149)';
ctx.moveTo(13720,23176);
ctx.lineTo(13720,23116);
ctx.lineTo(13780,23116);
ctx.lineTo(13780,23176);
ctx.lineTo(13720,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,143,44,0.85)';
ctx.strokeStyle='rgb(35,138,13)';
ctx.moveTo(12964,23176);
ctx.lineTo(12964,23116);
ctx.lineTo(13024,23116);
ctx.lineTo(13024,23176);
ctx.lineTo(12964,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,244,170,0.85)';
ctx.strokeStyle='rgb(163,233,62)';
ctx.moveTo(13720,23176);
ctx.lineTo(13720,23116);
ctx.lineTo(13780,23116);
ctx.lineTo(13780,23176);
ctx.lineTo(13720,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,210,155,0.85)';
ctx.strokeStyle='rgb(128,153,182)';
ctx.moveTo(12964,23176);
ctx.lineTo(12964,23116);
ctx.lineTo(13024,23116);
ctx.lineTo(13024,23176);
ctx.lineTo(12964,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,95,209,0.85)';
ctx.strokeStyle='rgb(84,165,108)';
ctx.moveTo(13720,22960);
ctx.lineTo(13720,22900);
ctx.lineTo(13780,22900);
ctx.lineTo(13780,22960);
ctx.lineTo(13720,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,173,129,0.85)';
ctx.strokeStyle='rgb(208,159,67)';
ctx.moveTo(13072,21664);
ctx.lineTo(13072,21604);
ctx.lineTo(13132,21604);
ctx.lineTo(13132,21664);
ctx.lineTo(13072,21664);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,19,176,0.85)';
ctx.strokeStyle='rgb(12,153,104)';
ctx.moveTo(13504,23284);
ctx.lineTo(13504,23224);
ctx.lineTo(13564,23224);
ctx.lineTo(13564,23284);
ctx.lineTo(13504,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,168,51,0.85)';
ctx.strokeStyle='rgb(28,70,26)';
ctx.moveTo(13504,23284);
ctx.lineTo(13504,23224);
ctx.lineTo(13564,23224);
ctx.lineTo(13564,23284);
ctx.lineTo(13504,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,111,84,0.85)';
ctx.strokeStyle='rgb(210,223,57)';
ctx.moveTo(18580,23716);
ctx.lineTo(18580,23656);
ctx.lineTo(18640,23656);
ctx.lineTo(18640,23716);
ctx.lineTo(18580,23716);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,247,244,0.85)';
ctx.strokeStyle='rgb(30,233,46)';
ctx.moveTo(18472,22636);
ctx.lineTo(18472,22576);
ctx.lineTo(18532,22576);
ctx.lineTo(18532,22636);
ctx.lineTo(18472,22636);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,36,0,0.85)';
ctx.strokeStyle='rgb(85,198,183)';
ctx.moveTo(18580,24256);
ctx.lineTo(18580,24196);
ctx.lineTo(18640,24196);
ctx.lineTo(18640,24256);
ctx.lineTo(18580,24256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,108,92,0.85)';
ctx.strokeStyle='rgb(234,183,164)';
ctx.moveTo(18364,24688);
ctx.lineTo(18364,24628);
ctx.lineTo(18424,24628);
ctx.lineTo(18424,24688);
ctx.lineTo(18364,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,181,241,0.85)';
ctx.strokeStyle='rgb(62,43,141)';
ctx.moveTo(18364,23932);
ctx.lineTo(18364,23872);
ctx.lineTo(18424,23872);
ctx.lineTo(18424,23932);
ctx.lineTo(18364,23932);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,154,146,0.85)';
ctx.strokeStyle='rgb(76,177,164)';
ctx.moveTo(17068,23176);
ctx.lineTo(17068,23116);
ctx.lineTo(17128,23116);
ctx.lineTo(17128,23176);
ctx.lineTo(17068,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,148,214,0.85)';
ctx.strokeStyle='rgb(22,44,108)';
ctx.moveTo(17068,22960);
ctx.lineTo(17068,22900);
ctx.lineTo(17128,22900);
ctx.lineTo(17128,22960);
ctx.lineTo(17068,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,190,130,0.85)';
ctx.strokeStyle='rgb(207,84,51)';
ctx.moveTo(17068,22960);
ctx.lineTo(17068,22900);
ctx.lineTo(17128,22900);
ctx.lineTo(17128,22960);
ctx.lineTo(17068,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,109,183,0.85)';
ctx.strokeStyle='rgb(2,173,61)';
ctx.moveTo(17824,23176);
ctx.lineTo(17824,23116);
ctx.lineTo(17884,23116);
ctx.lineTo(17884,23176);
ctx.lineTo(17824,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,178,74,0.85)';
ctx.strokeStyle='rgb(59,184,2)';
ctx.moveTo(17824,23284);
ctx.lineTo(17824,23224);
ctx.lineTo(17884,23224);
ctx.lineTo(17884,23284);
ctx.lineTo(17824,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,138,191,0.85)';
ctx.strokeStyle='rgb(110,147,38)';
ctx.moveTo(17824,23392);
ctx.lineTo(17824,23332);
ctx.lineTo(17884,23332);
ctx.lineTo(17884,23392);
ctx.lineTo(17824,23392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,50,201,0.85)';
ctx.strokeStyle='rgb(114,110,181)';
ctx.moveTo(17500,23068);
ctx.lineTo(17500,23008);
ctx.lineTo(17560,23008);
ctx.lineTo(17560,23068);
ctx.lineTo(17500,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,254,30,0.85)';
ctx.strokeStyle='rgb(0,89,13)';
ctx.moveTo(17500,23176);
ctx.lineTo(17500,23116);
ctx.lineTo(17560,23116);
ctx.lineTo(17560,23176);
ctx.lineTo(17500,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,198,119,0.85)';
ctx.strokeStyle='rgb(43,193,220)';
ctx.moveTo(15436,25546);
ctx.lineTo(15436,25282);
ctx.lineTo(16516,25282);
ctx.lineTo(16516,25546);
ctx.lineTo(15436,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,40,39,0.85)';
ctx.strokeStyle='rgb(239,94,30)';
ctx.moveTo(15436,22522);
ctx.lineTo(15436,22258);
ctx.lineTo(16516,22258);
ctx.lineTo(16516,22522);
ctx.lineTo(15436,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,36,173,0.85)';
ctx.strokeStyle='rgb(137,229,137)';
ctx.moveTo(18796,23824);
ctx.lineTo(18796,23764);
ctx.lineTo(18856,23764);
ctx.lineTo(18856,23824);
ctx.lineTo(18796,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,25,106,0.85)';
ctx.strokeStyle='rgb(219,199,182)';
ctx.moveTo(18796,22960);
ctx.lineTo(18796,22900);
ctx.lineTo(18856,22900);
ctx.lineTo(18856,22960);
ctx.lineTo(18796,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,104,225,0.85)';
ctx.strokeStyle='rgb(231,57,45)';
ctx.moveTo(17284,23176);
ctx.lineTo(17284,23116);
ctx.lineTo(17344,23116);
ctx.lineTo(17344,23176);
ctx.lineTo(17284,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,4,100,0.85)';
ctx.strokeStyle='rgb(223,170,89)';
ctx.moveTo(17392,22852);
ctx.lineTo(17392,22792);
ctx.lineTo(17452,22792);
ctx.lineTo(17452,22852);
ctx.lineTo(17392,22852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,187,96,0.85)';
ctx.strokeStyle='rgb(214,189,51)';
ctx.moveTo(17392,24580);
ctx.lineTo(17392,24520);
ctx.lineTo(17452,24520);
ctx.lineTo(17452,24580);
ctx.lineTo(17392,24580);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,0,1,0.85)';
ctx.strokeStyle='rgb(121,136,19)';
ctx.moveTo(17176,22852);
ctx.lineTo(17176,22792);
ctx.lineTo(17236,22792);
ctx.lineTo(17236,22852);
ctx.lineTo(17176,22852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,22,230,0.85)';
ctx.strokeStyle='rgb(182,93,180)';
ctx.moveTo(18256,21664);
ctx.lineTo(18256,21604);
ctx.lineTo(18316,21604);
ctx.lineTo(18316,21664);
ctx.lineTo(18256,21664);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,53,214,0.85)';
ctx.strokeStyle='rgb(93,1,119)';
ctx.moveTo(18472,21556);
ctx.lineTo(18472,21496);
ctx.lineTo(18532,21496);
ctx.lineTo(18532,21556);
ctx.lineTo(18472,21556);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,1,237,0.85)';
ctx.strokeStyle='rgb(253,86,39)';
ctx.moveTo(14140,24034);
ctx.lineTo(14140,23770);
ctx.lineTo(15220,23770);
ctx.lineTo(15220,24034);
ctx.lineTo(14140,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,68,186,0.85)';
ctx.strokeStyle='rgb(30,205,192)';
ctx.moveTo(18688,26200);
ctx.lineTo(18688,26140);
ctx.lineTo(18748,26140);
ctx.lineTo(18748,26200);
ctx.lineTo(18688,26200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,161,148,0.85)';
ctx.strokeStyle='rgb(53,47,232)';
ctx.moveTo(18796,25768);
ctx.lineTo(18796,25708);
ctx.lineTo(18856,25708);
ctx.lineTo(18856,25768);
ctx.lineTo(18796,25768);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,177,236,0.85)';
ctx.strokeStyle='rgb(219,193,207)';
ctx.moveTo(15436,19498);
ctx.lineTo(15436,19234);
ctx.lineTo(16516,19234);
ctx.lineTo(16516,19498);
ctx.lineTo(15436,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,124,66,0.85)';
ctx.strokeStyle='rgb(240,196,102)';
ctx.moveTo(14140,21010);
ctx.lineTo(14140,20746);
ctx.lineTo(15220,20746);
ctx.lineTo(15220,21010);
ctx.lineTo(14140,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,155,73,0.85)';
ctx.strokeStyle='rgb(37,10,88)';
ctx.moveTo(1654,19498);
ctx.lineTo(1654,19234);
ctx.lineTo(2734,19234);
ctx.lineTo(2734,19498);
ctx.lineTo(1654,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,131,218,0.85)';
ctx.strokeStyle='rgb(146,225,230)';
ctx.moveTo(1654,25546);
ctx.lineTo(1654,25282);
ctx.lineTo(2734,25282);
ctx.lineTo(2734,25546);
ctx.lineTo(1654,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,99,171,0.85)';
ctx.strokeStyle='rgb(8,204,23)';
ctx.moveTo(1654,22522);
ctx.lineTo(1654,22258);
ctx.lineTo(2734,22258);
ctx.lineTo(2734,22522);
ctx.lineTo(1654,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,243,87,0.85)';
ctx.strokeStyle='rgb(21,28,123)';
ctx.moveTo(2950,24034);
ctx.lineTo(2950,23770);
ctx.lineTo(4030,23770);
ctx.lineTo(4030,24034);
ctx.lineTo(2950,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,162,86,0.85)';
ctx.strokeStyle='rgb(202,98,57)';
ctx.moveTo(5434,22522);
ctx.lineTo(5434,22258);
ctx.lineTo(6514,22258);
ctx.lineTo(6514,22522);
ctx.lineTo(5434,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,143,96,0.85)';
ctx.strokeStyle='rgb(61,200,104)';
ctx.moveTo(5434,19498);
ctx.lineTo(5434,19234);
ctx.lineTo(6514,19234);
ctx.lineTo(6514,19498);
ctx.lineTo(5434,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,233,226,0.85)';
ctx.strokeStyle='rgb(155,70,137)';
ctx.moveTo(2950,21010);
ctx.lineTo(2950,20746);
ctx.lineTo(4030,20746);
ctx.lineTo(4030,21010);
ctx.lineTo(2950,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,93,221,0.85)';
ctx.strokeStyle='rgb(10,107,117)';
ctx.moveTo(5434,25546);
ctx.lineTo(5434,25282);
ctx.lineTo(6514,25282);
ctx.lineTo(6514,25546);
ctx.lineTo(5434,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,41,94,0.85)';
ctx.strokeStyle='rgb(145,108,34)';
ctx.moveTo(2950,27058);
ctx.lineTo(2950,26794);
ctx.lineTo(4030,26794);
ctx.lineTo(4030,27058);
ctx.lineTo(2950,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,231,80,0.85)';
ctx.strokeStyle='rgb(74,158,91)';
ctx.moveTo(1654,28570);
ctx.lineTo(1654,28306);
ctx.lineTo(2734,28306);
ctx.lineTo(2734,28570);
ctx.lineTo(1654,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,46,73,0.85)';
ctx.strokeStyle='rgb(96,195,126)';
ctx.moveTo(2950,32650);
ctx.lineTo(2950,31570);
ctx.lineTo(4030,31570);
ctx.lineTo(4030,32650);
ctx.lineTo(2950,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,166,151,0.85)';
ctx.strokeStyle='rgb(59,205,12)';
ctx.moveTo(1654,31462);
ctx.lineTo(1654,31330);
ctx.lineTo(2734,31330);
ctx.lineTo(2734,31462);
ctx.lineTo(1654,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,76,79,0.85)';
ctx.strokeStyle='rgb(186,155,185)';
ctx.moveTo(1654,33946);
ctx.lineTo(1654,32866);
ctx.lineTo(2734,32866);
ctx.lineTo(2734,33946);
ctx.lineTo(1654,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,173,206,0.85)';
ctx.strokeStyle='rgb(5,227,246)';
ctx.moveTo(2950,30082);
ctx.lineTo(2950,29818);
ctx.lineTo(4030,29818);
ctx.lineTo(4030,30082);
ctx.lineTo(2950,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,81,210,0.85)';
ctx.strokeStyle='rgb(222,210,45)';
ctx.moveTo(5434,31462);
ctx.lineTo(5434,31330);
ctx.lineTo(6514,31330);
ctx.lineTo(6514,31462);
ctx.lineTo(5434,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,50,222,0.85)';
ctx.strokeStyle='rgb(223,7,96)';
ctx.moveTo(5434,33946);
ctx.lineTo(5434,32866);
ctx.lineTo(6514,32866);
ctx.lineTo(6514,33946);
ctx.lineTo(5434,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,47,156,0.85)';
ctx.strokeStyle='rgb(242,15,111)';
ctx.moveTo(5434,28570);
ctx.lineTo(5434,28306);
ctx.lineTo(6514,28306);
ctx.lineTo(6514,28570);
ctx.lineTo(5434,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,201,60,0.85)';
ctx.strokeStyle='rgb(197,132,111)';
ctx.moveTo(14140,27058);
ctx.lineTo(14140,26794);
ctx.lineTo(15220,26794);
ctx.lineTo(15220,27058);
ctx.lineTo(14140,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,234,174,0.85)';
ctx.strokeStyle='rgb(134,133,147)';
ctx.moveTo(16108,35350);
ctx.lineTo(16108,35314);
ctx.lineTo(16144,35314);
ctx.lineTo(16144,35350);
ctx.lineTo(16108,35350);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,237,252,0.85)';
ctx.strokeStyle='rgb(232,45,188)';
ctx.moveTo(18700,35350);
ctx.lineTo(18700,35314);
ctx.lineTo(18736,35314);
ctx.lineTo(18736,35350);
ctx.lineTo(18700,35350);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,164,6,0.85)';
ctx.strokeStyle='rgb(168,38,98)';
ctx.moveTo(15436,28570);
ctx.lineTo(15436,28306);
ctx.lineTo(16516,28306);
ctx.lineTo(16516,28570);
ctx.lineTo(15436,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,95,151,0.85)';
ctx.strokeStyle='rgb(210,146,42)';
ctx.moveTo(14140,32650);
ctx.lineTo(14140,31570);
ctx.lineTo(15220,31570);
ctx.lineTo(15220,32650);
ctx.lineTo(14140,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,198,54,0.85)';
ctx.strokeStyle='rgb(98,9,171)';
ctx.moveTo(16096,34084);
ctx.lineTo(16096,34024);
ctx.lineTo(16156,34024);
ctx.lineTo(16156,34084);
ctx.lineTo(16096,34084);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,231,117,0.85)';
ctx.strokeStyle='rgb(11,126,75)';
ctx.moveTo(15436,31462);
ctx.lineTo(15436,31330);
ctx.lineTo(16516,31330);
ctx.lineTo(16516,31462);
ctx.lineTo(15436,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,177,12,0.85)';
ctx.strokeStyle='rgb(111,97,163)';
ctx.moveTo(15436,33946);
ctx.lineTo(15436,32866);
ctx.lineTo(16516,32866);
ctx.lineTo(16516,33946);
ctx.lineTo(15436,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,71,92,0.85)';
ctx.strokeStyle='rgb(54,213,185)';
ctx.moveTo(14140,30082);
ctx.lineTo(14140,29818);
ctx.lineTo(15220,29818);
ctx.lineTo(15220,30082);
ctx.lineTo(14140,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,126,227,0.85)';
ctx.strokeStyle='rgb(11,107,68)';
ctx.moveTo(18376,35350);
ctx.lineTo(18376,35314);
ctx.lineTo(18412,35314);
ctx.lineTo(18412,35350);
ctx.lineTo(18376,35350);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,135,52,0.85)';
ctx.strokeStyle='rgb(217,142,106)';
ctx.moveTo(34162,21010);
ctx.lineTo(34162,20746);
ctx.lineTo(35242,20746);
ctx.lineTo(35242,21010);
ctx.lineTo(34162,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,216,108,0.85)';
ctx.strokeStyle='rgb(136,169,115)';
ctx.moveTo(21616,35350);
ctx.lineTo(21616,35314);
ctx.lineTo(21652,35314);
ctx.lineTo(21652,35350);
ctx.lineTo(21616,35350);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,170,123,0.85)';
ctx.strokeStyle='rgb(38,202,14)';
ctx.moveTo(35458,19498);
ctx.lineTo(35458,19234);
ctx.lineTo(36538,19234);
ctx.lineTo(36538,19498);
ctx.lineTo(35458,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,61,6,0.85)';
ctx.strokeStyle='rgb(200,186,209)';
ctx.moveTo(34162,24034);
ctx.lineTo(34162,23770);
ctx.lineTo(35242,23770);
ctx.lineTo(35242,24034);
ctx.lineTo(34162,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,47,110,0.85)';
ctx.strokeStyle='rgb(215,28,109)';
ctx.moveTo(35458,25546);
ctx.lineTo(35458,25282);
ctx.lineTo(36538,25282);
ctx.lineTo(36538,25546);
ctx.lineTo(35458,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,45,150,0.85)';
ctx.strokeStyle='rgb(187,21,84)';
ctx.moveTo(35458,22522);
ctx.lineTo(35458,22258);
ctx.lineTo(36538,22258);
ctx.lineTo(36538,22522);
ctx.lineTo(35458,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,246,32,0.85)';
ctx.strokeStyle='rgb(37,195,179)';
ctx.moveTo(25438,19498);
ctx.lineTo(25438,19234);
ctx.lineTo(26518,19234);
ctx.lineTo(26518,19498);
ctx.lineTo(25438,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,145,99,0.85)';
ctx.strokeStyle='rgb(45,163,29)';
ctx.moveTo(19672,35350);
ctx.lineTo(19672,35314);
ctx.lineTo(19708,35314);
ctx.lineTo(19708,35350);
ctx.lineTo(19672,35350);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,28,69,0.85)';
ctx.strokeStyle='rgb(26,162,206)';
ctx.moveTo(24142,21010);
ctx.lineTo(24142,20746);
ctx.lineTo(25222,20746);
ctx.lineTo(25222,21010);
ctx.lineTo(24142,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,104,137,0.85)';
ctx.strokeStyle='rgb(116,203,39)';
ctx.moveTo(21712,19072);
ctx.lineTo(21712,19012);
ctx.lineTo(21772,19012);
ctx.lineTo(21772,19072);
ctx.lineTo(21712,19072);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,209,13,0.85)';
ctx.strokeStyle='rgb(19,249,118)';
ctx.moveTo(21712,18640);
ctx.lineTo(21712,18580);
ctx.lineTo(21772,18580);
ctx.lineTo(21772,18640);
ctx.lineTo(21712,18640);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,75,43,0.85)';
ctx.strokeStyle='rgb(164,19,86)';
ctx.moveTo(20740,20692);
ctx.lineTo(20740,20632);
ctx.lineTo(20800,20632);
ctx.lineTo(20800,20692);
ctx.lineTo(20740,20692);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,160,191,0.85)';
ctx.strokeStyle='rgb(183,84,13)';
ctx.moveTo(20308,20260);
ctx.lineTo(20308,20200);
ctx.lineTo(20368,20200);
ctx.lineTo(20368,20260);
ctx.lineTo(20308,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,150,92,0.85)';
ctx.strokeStyle='rgb(182,130,128)';
ctx.moveTo(20740,20044);
ctx.lineTo(20740,19984);
ctx.lineTo(20800,19984);
ctx.lineTo(20800,20044);
ctx.lineTo(20740,20044);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,114,249,0.85)';
ctx.strokeStyle='rgb(60,197,187)';
ctx.moveTo(20848,20260);
ctx.lineTo(20848,20200);
ctx.lineTo(20908,20200);
ctx.lineTo(20908,20260);
ctx.lineTo(20848,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,191,239,0.85)';
ctx.strokeStyle='rgb(15,246,222)';
ctx.moveTo(19552,19612);
ctx.lineTo(19552,19552);
ctx.lineTo(19612,19552);
ctx.lineTo(19612,19612);
ctx.lineTo(19552,19612);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,64,77,0.85)';
ctx.strokeStyle='rgb(10,71,199)';
ctx.moveTo(19552,19720);
ctx.lineTo(19552,19660);
ctx.lineTo(19612,19660);
ctx.lineTo(19612,19720);
ctx.lineTo(19552,19720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,132,211,0.85)';
ctx.strokeStyle='rgb(116,238,154)';
ctx.moveTo(20524,20152);
ctx.lineTo(20524,20092);
ctx.lineTo(20584,20092);
ctx.lineTo(20584,20152);
ctx.lineTo(20524,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,74,35,0.85)';
ctx.strokeStyle='rgb(39,205,237)';
ctx.moveTo(20524,20260);
ctx.lineTo(20524,20200);
ctx.lineTo(20584,20200);
ctx.lineTo(20584,20260);
ctx.lineTo(20524,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,7,141,0.85)';
ctx.strokeStyle='rgb(159,126,1)';
ctx.moveTo(20956,19936);
ctx.lineTo(20956,19876);
ctx.lineTo(21016,19876);
ctx.lineTo(21016,19936);
ctx.lineTo(20956,19936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,166,27,0.85)';
ctx.strokeStyle='rgb(138,73,58)';
ctx.moveTo(19120,19936);
ctx.lineTo(19120,19876);
ctx.lineTo(19180,19876);
ctx.lineTo(19180,19936);
ctx.lineTo(19120,19936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,20,71,0.85)';
ctx.strokeStyle='rgb(25,147,219)';
ctx.moveTo(20308,20260);
ctx.lineTo(20308,20200);
ctx.lineTo(20368,20200);
ctx.lineTo(20368,20260);
ctx.lineTo(20308,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,239,46,0.85)';
ctx.strokeStyle='rgb(28,39,106)';
ctx.moveTo(21820,20692);
ctx.lineTo(21820,20632);
ctx.lineTo(21880,20632);
ctx.lineTo(21880,20692);
ctx.lineTo(21820,20692);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,118,242,0.85)';
ctx.strokeStyle='rgb(205,175,177)';
ctx.moveTo(23008,19504);
ctx.lineTo(23008,19444);
ctx.lineTo(23068,19444);
ctx.lineTo(23068,19504);
ctx.lineTo(23008,19504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,27,102,0.85)';
ctx.strokeStyle='rgb(49,107,17)';
ctx.moveTo(23008,19720);
ctx.lineTo(23008,19660);
ctx.lineTo(23068,19660);
ctx.lineTo(23068,19720);
ctx.lineTo(23008,19720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,67,169,0.85)';
ctx.strokeStyle='rgb(165,67,227)';
ctx.moveTo(21928,19504);
ctx.lineTo(21928,19444);
ctx.lineTo(21988,19444);
ctx.lineTo(21988,19504);
ctx.lineTo(21928,19504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,177,4,0.85)';
ctx.strokeStyle='rgb(89,183,122)';
ctx.moveTo(21712,19612);
ctx.lineTo(21712,19552);
ctx.lineTo(21772,19552);
ctx.lineTo(21772,19612);
ctx.lineTo(21712,19612);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,45,125,0.85)';
ctx.strokeStyle='rgb(254,122,97)';
ctx.moveTo(21820,21232);
ctx.lineTo(21820,21172);
ctx.lineTo(21880,21172);
ctx.lineTo(21880,21232);
ctx.lineTo(21820,21232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,155,3,0.85)';
ctx.strokeStyle='rgb(244,78,147)';
ctx.moveTo(21064,24688);
ctx.lineTo(21064,24628);
ctx.lineTo(21124,24628);
ctx.lineTo(21124,24688);
ctx.lineTo(21064,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,75,237,0.85)';
ctx.strokeStyle='rgb(1,133,184)';
ctx.moveTo(21064,23068);
ctx.lineTo(21064,23008);
ctx.lineTo(21124,23008);
ctx.lineTo(21124,23068);
ctx.lineTo(21064,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,86,117,0.85)';
ctx.strokeStyle='rgb(17,185,100)';
ctx.moveTo(21064,23284);
ctx.lineTo(21064,23224);
ctx.lineTo(21124,23224);
ctx.lineTo(21124,23284);
ctx.lineTo(21064,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,249,81,0.85)';
ctx.strokeStyle='rgb(112,178,117)';
ctx.moveTo(23224,23284);
ctx.lineTo(23224,23224);
ctx.lineTo(23284,23224);
ctx.lineTo(23284,23284);
ctx.lineTo(23224,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,32,163,0.85)';
ctx.strokeStyle='rgb(201,183,97)';
ctx.moveTo(20632,23068);
ctx.lineTo(20632,23008);
ctx.lineTo(20692,23008);
ctx.lineTo(20692,23068);
ctx.lineTo(20632,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,32,206,0.85)';
ctx.strokeStyle='rgb(132,252,247)';
ctx.moveTo(19660,23608);
ctx.lineTo(19660,23548);
ctx.lineTo(19720,23548);
ctx.lineTo(19720,23608);
ctx.lineTo(19660,23608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,157,210,0.85)';
ctx.strokeStyle='rgb(77,66,151)';
ctx.moveTo(19876,23284);
ctx.lineTo(19876,23224);
ctx.lineTo(19936,23224);
ctx.lineTo(19936,23284);
ctx.lineTo(19876,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,65,218,0.85)';
ctx.strokeStyle='rgb(94,182,87)';
ctx.moveTo(19660,23932);
ctx.lineTo(19660,23872);
ctx.lineTo(19720,23872);
ctx.lineTo(19720,23932);
ctx.lineTo(19660,23932);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,8,200,0.85)';
ctx.strokeStyle='rgb(220,23,157)';
ctx.moveTo(19660,24796);
ctx.lineTo(19660,24736);
ctx.lineTo(19720,24736);
ctx.lineTo(19720,24796);
ctx.lineTo(19660,24796);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,40,103,0.85)';
ctx.strokeStyle='rgb(44,113,240)';
ctx.moveTo(21712,21772);
ctx.lineTo(21712,21712);
ctx.lineTo(21772,21712);
ctx.lineTo(21772,21772);
ctx.lineTo(21712,21772);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,86,23,0.85)';
ctx.strokeStyle='rgb(41,214,9)';
ctx.moveTo(21172,21664);
ctx.lineTo(21172,21604);
ctx.lineTo(21232,21604);
ctx.lineTo(21232,21664);
ctx.lineTo(21172,21664);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,91,65,0.85)';
ctx.strokeStyle='rgb(208,84,62)';
ctx.moveTo(21172,22744);
ctx.lineTo(21172,22684);
ctx.lineTo(21232,22684);
ctx.lineTo(21232,22744);
ctx.lineTo(21172,22744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,90,224,0.85)';
ctx.strokeStyle='rgb(231,250,170)';
ctx.moveTo(20956,23176);
ctx.lineTo(20956,23116);
ctx.lineTo(21016,23116);
ctx.lineTo(21016,23176);
ctx.lineTo(20956,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,197,1,0.85)';
ctx.strokeStyle='rgb(72,43,178)';
ctx.moveTo(20956,24256);
ctx.lineTo(20956,24196);
ctx.lineTo(21016,24196);
ctx.lineTo(21016,24256);
ctx.lineTo(20956,24256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,159,133,0.85)';
ctx.strokeStyle='rgb(243,254,7)';
ctx.moveTo(19984,24256);
ctx.lineTo(19984,24196);
ctx.lineTo(20044,24196);
ctx.lineTo(20044,24256);
ctx.lineTo(19984,24256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,201,38,0.85)';
ctx.strokeStyle='rgb(149,154,84)';
ctx.moveTo(19984,24256);
ctx.lineTo(19984,24196);
ctx.lineTo(20044,24196);
ctx.lineTo(20044,24256);
ctx.lineTo(19984,24256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,64,75,0.85)';
ctx.strokeStyle='rgb(248,60,191)';
ctx.moveTo(21172,23284);
ctx.lineTo(21172,23224);
ctx.lineTo(21232,23224);
ctx.lineTo(21232,23284);
ctx.lineTo(21172,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,150,220,0.85)';
ctx.strokeStyle='rgb(129,252,225)';
ctx.moveTo(21172,24256);
ctx.lineTo(21172,24196);
ctx.lineTo(21232,24196);
ctx.lineTo(21232,24256);
ctx.lineTo(21172,24256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,19,208,0.85)';
ctx.strokeStyle='rgb(214,196,139)';
ctx.moveTo(19660,24472);
ctx.lineTo(19660,24412);
ctx.lineTo(19720,24412);
ctx.lineTo(19720,24472);
ctx.lineTo(19660,24472);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,124,229,0.85)';
ctx.strokeStyle='rgb(220,127,129)';
ctx.moveTo(19660,24580);
ctx.lineTo(19660,24520);
ctx.lineTo(19720,24520);
ctx.lineTo(19720,24580);
ctx.lineTo(19660,24580);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,238,182,0.85)';
ctx.strokeStyle='rgb(228,1,30)';
ctx.moveTo(19444,24580);
ctx.lineTo(19444,24520);
ctx.lineTo(19504,24520);
ctx.lineTo(19504,24580);
ctx.lineTo(19444,24580);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,226,232,0.85)';
ctx.strokeStyle='rgb(195,136,241)';
ctx.moveTo(19444,24580);
ctx.lineTo(19444,24520);
ctx.lineTo(19504,24520);
ctx.lineTo(19504,24580);
ctx.lineTo(19444,24580);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,40,64,0.85)';
ctx.strokeStyle='rgb(78,30,228)';
ctx.moveTo(19444,24688);
ctx.lineTo(19444,24628);
ctx.lineTo(19504,24628);
ctx.lineTo(19504,24688);
ctx.lineTo(19444,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,176,0,0.85)';
ctx.strokeStyle='rgb(9,5,250)';
ctx.moveTo(20200,24688);
ctx.lineTo(20200,24628);
ctx.lineTo(20260,24628);
ctx.lineTo(20260,24688);
ctx.lineTo(20200,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,199,88,0.85)';
ctx.strokeStyle='rgb(121,181,112)';
ctx.moveTo(19444,24688);
ctx.lineTo(19444,24628);
ctx.lineTo(19504,24628);
ctx.lineTo(19504,24688);
ctx.lineTo(19444,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,234,103,0.85)';
ctx.strokeStyle='rgb(124,19,240)';
ctx.moveTo(21388,23392);
ctx.lineTo(21388,23332);
ctx.lineTo(21448,23332);
ctx.lineTo(21448,23392);
ctx.lineTo(21388,23392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,1,212,0.85)';
ctx.strokeStyle='rgb(59,122,177)';
ctx.moveTo(21388,23284);
ctx.lineTo(21388,23224);
ctx.lineTo(21448,23224);
ctx.lineTo(21448,23284);
ctx.lineTo(21388,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,118,163,0.85)';
ctx.strokeStyle='rgb(146,144,204)';
ctx.moveTo(20200,24688);
ctx.lineTo(20200,24628);
ctx.lineTo(20260,24628);
ctx.lineTo(20260,24688);
ctx.lineTo(20200,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,68,30,0.85)';
ctx.strokeStyle='rgb(82,121,103)';
ctx.moveTo(19984,22096);
ctx.lineTo(19984,22036);
ctx.lineTo(20044,22036);
ctx.lineTo(20044,22096);
ctx.lineTo(19984,22096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,138,182,0.85)';
ctx.strokeStyle='rgb(168,150,162)';
ctx.moveTo(19984,23068);
ctx.lineTo(19984,23008);
ctx.lineTo(20044,23008);
ctx.lineTo(20044,23068);
ctx.lineTo(19984,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,136,196,0.85)';
ctx.strokeStyle='rgb(175,241,253)';
ctx.moveTo(20416,21772);
ctx.lineTo(20416,21712);
ctx.lineTo(20476,21712);
ctx.lineTo(20476,21772);
ctx.lineTo(20416,21772);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,170,141,0.85)';
ctx.strokeStyle='rgb(69,78,160)';
ctx.moveTo(20416,22744);
ctx.lineTo(20416,22684);
ctx.lineTo(20476,22684);
ctx.lineTo(20476,22744);
ctx.lineTo(20416,22744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,177,35,0.85)';
ctx.strokeStyle='rgb(48,23,147)';
ctx.moveTo(21388,23176);
ctx.lineTo(21388,23116);
ctx.lineTo(21448,23116);
ctx.lineTo(21448,23176);
ctx.lineTo(21388,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,149,169,0.85)';
ctx.strokeStyle='rgb(125,40,82)';
ctx.moveTo(20200,23176);
ctx.lineTo(20200,23116);
ctx.lineTo(20260,23116);
ctx.lineTo(20260,23176);
ctx.lineTo(20200,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,65,182,0.85)';
ctx.strokeStyle='rgb(127,43,249)';
ctx.moveTo(21388,23176);
ctx.lineTo(21388,23116);
ctx.lineTo(21448,23116);
ctx.lineTo(21448,23176);
ctx.lineTo(21388,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,7,1,0.85)';
ctx.strokeStyle='rgb(163,204,164)';
ctx.moveTo(20200,23176);
ctx.lineTo(20200,23116);
ctx.lineTo(20260,23116);
ctx.lineTo(20260,23176);
ctx.lineTo(20200,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,228,13,0.85)';
ctx.strokeStyle='rgb(233,15,18)';
ctx.moveTo(21604,22852);
ctx.lineTo(21604,22792);
ctx.lineTo(21664,22792);
ctx.lineTo(21664,22852);
ctx.lineTo(21604,22852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,144,151,0.85)';
ctx.strokeStyle='rgb(220,142,105)';
ctx.moveTo(19228,22852);
ctx.lineTo(19228,22792);
ctx.lineTo(19288,22792);
ctx.lineTo(19288,22852);
ctx.lineTo(19228,22852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,38,227,0.85)';
ctx.strokeStyle='rgb(133,158,68)';
ctx.moveTo(23224,23284);
ctx.lineTo(23224,23224);
ctx.lineTo(23284,23224);
ctx.lineTo(23284,23284);
ctx.lineTo(23224,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,57,51,0.85)';
ctx.strokeStyle='rgb(78,61,28)';
ctx.moveTo(20308,22960);
ctx.lineTo(20308,22900);
ctx.lineTo(20368,22900);
ctx.lineTo(20368,22960);
ctx.lineTo(20308,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,2,47,0.85)';
ctx.strokeStyle='rgb(226,9,26)';
ctx.moveTo(19876,22960);
ctx.lineTo(19876,22900);
ctx.lineTo(19936,22900);
ctx.lineTo(19936,22960);
ctx.lineTo(19876,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,54,192,0.85)';
ctx.strokeStyle='rgb(137,28,35)';
ctx.moveTo(24142,24034);
ctx.lineTo(24142,23770);
ctx.lineTo(25222,23770);
ctx.lineTo(25222,24034);
ctx.lineTo(24142,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,155,0,0.85)';
ctx.strokeStyle='rgb(137,17,102)';
ctx.moveTo(25438,25546);
ctx.lineTo(25438,25282);
ctx.lineTo(26518,25282);
ctx.lineTo(26518,25546);
ctx.lineTo(25438,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,21,186,0.85)';
ctx.strokeStyle='rgb(240,236,171)';
ctx.moveTo(25438,22522);
ctx.lineTo(25438,22258);
ctx.lineTo(26518,22258);
ctx.lineTo(26518,22522);
ctx.lineTo(25438,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,249,116,0.85)';
ctx.strokeStyle='rgb(204,156,97)';
ctx.moveTo(24142,30082);
ctx.lineTo(24142,29818);
ctx.lineTo(25222,29818);
ctx.lineTo(25222,30082);
ctx.lineTo(24142,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,75,124,0.85)';
ctx.strokeStyle='rgb(107,81,110)';
ctx.moveTo(24142,27058);
ctx.lineTo(24142,26794);
ctx.lineTo(25222,26794);
ctx.lineTo(25222,27058);
ctx.lineTo(24142,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,65,235,0.85)';
ctx.strokeStyle='rgb(14,233,82)';
ctx.moveTo(25438,28570);
ctx.lineTo(25438,28306);
ctx.lineTo(26518,28306);
ctx.lineTo(26518,28570);
ctx.lineTo(25438,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,1,15,0.85)';
ctx.strokeStyle='rgb(150,27,200)';
ctx.moveTo(21604,26632);
ctx.lineTo(21604,26572);
ctx.lineTo(21664,26572);
ctx.lineTo(21664,26632);
ctx.lineTo(21604,26632);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,164,169,0.85)';
ctx.strokeStyle='rgb(119,123,18)';
ctx.moveTo(21064,26632);
ctx.lineTo(21064,26572);
ctx.lineTo(21124,26572);
ctx.lineTo(21124,26632);
ctx.lineTo(21064,26632);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,151,98,0.85)';
ctx.strokeStyle='rgb(199,77,179)';
ctx.moveTo(25438,31462);
ctx.lineTo(25438,31330);
ctx.lineTo(26518,31330);
ctx.lineTo(26518,31462);
ctx.lineTo(25438,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,151,252,0.85)';
ctx.strokeStyle='rgb(130,115,97)';
ctx.moveTo(25438,33946);
ctx.lineTo(25438,32866);
ctx.lineTo(26518,32866);
ctx.lineTo(26518,33946);
ctx.lineTo(25438,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,107,249,0.85)';
ctx.strokeStyle='rgb(17,237,2)';
ctx.moveTo(24142,32650);
ctx.lineTo(24142,31570);
ctx.lineTo(25222,31570);
ctx.lineTo(25222,32650);
ctx.lineTo(24142,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,66,207,0.85)';
ctx.strokeStyle='rgb(254,252,181)';
ctx.moveTo(34162,30082);
ctx.lineTo(34162,29818);
ctx.lineTo(35242,29818);
ctx.lineTo(35242,30082);
ctx.lineTo(34162,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,248,12,0.85)';
ctx.strokeStyle='rgb(94,150,173)';
ctx.moveTo(34162,27058);
ctx.lineTo(34162,26794);
ctx.lineTo(35242,26794);
ctx.lineTo(35242,27058);
ctx.lineTo(34162,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,95,205,0.85)';
ctx.strokeStyle='rgb(55,23,113)';
ctx.moveTo(35458,28570);
ctx.lineTo(35458,28306);
ctx.lineTo(36538,28306);
ctx.lineTo(36538,28570);
ctx.lineTo(35458,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,240,72,0.85)';
ctx.strokeStyle='rgb(99,116,167)';
ctx.moveTo(34162,32650);
ctx.lineTo(34162,31570);
ctx.lineTo(35242,31570);
ctx.lineTo(35242,32650);
ctx.lineTo(34162,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,143,67,0.85)';
ctx.strokeStyle='rgb(42,248,29)';
ctx.moveTo(35458,31462);
ctx.lineTo(35458,31330);
ctx.lineTo(36538,31330);
ctx.lineTo(36538,31462);
ctx.lineTo(35458,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,54,101,0.85)';
ctx.strokeStyle='rgb(75,85,209)';
ctx.moveTo(35458,33946);
ctx.lineTo(35458,32866);
ctx.lineTo(36538,32866);
ctx.lineTo(36538,33946);
ctx.lineTo(35458,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,44,193,0.85)';
ctx.strokeStyle='rgb(120,66,68)';
ctx.moveTo(2950,32650);
ctx.lineTo(2950,31570);
ctx.lineTo(35242,31570);
ctx.lineTo(35242,32650);
ctx.lineTo(2950,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,209,218,0.85)';
ctx.strokeStyle='rgb(62,238,248)';
ctx.moveTo(4138,30082);
ctx.lineTo(4138,29818);
ctx.lineTo(34054,29818);
ctx.lineTo(34054,30082);
ctx.lineTo(4138,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,54,227,0.85)';
ctx.strokeStyle='rgb(55,105,116)';
ctx.moveTo(4138,27058);
ctx.lineTo(4138,26794);
ctx.lineTo(34054,26794);
ctx.lineTo(34054,27058);
ctx.lineTo(4138,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,24,207,0.85)';
ctx.strokeStyle='rgb(240,162,189)';
ctx.moveTo(4138,24034);
ctx.lineTo(4138,23770);
ctx.lineTo(34054,23770);
ctx.lineTo(34054,24034);
ctx.lineTo(4138,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,179,45,0.85)';
ctx.strokeStyle='rgb(176,71,74)';
ctx.moveTo(4138,21010);
ctx.lineTo(4138,20746);
ctx.lineTo(34054,20746);
ctx.lineTo(34054,21010);
ctx.lineTo(4138,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,81,55,0.85)';
ctx.strokeStyle='rgb(72,203,8)';
ctx.moveTo(4138,17986);
ctx.lineTo(4138,17722);
ctx.lineTo(34054,17722);
ctx.lineTo(34054,17986);
ctx.lineTo(4138,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,190,19,0.85)';
ctx.strokeStyle='rgb(174,188,131)';
ctx.moveTo(4138,14962);
ctx.lineTo(4138,14698);
ctx.lineTo(34054,14698);
ctx.lineTo(34054,14962);
ctx.lineTo(4138,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,81,138,0.85)';
ctx.strokeStyle='rgb(112,90,123)';
ctx.moveTo(2950,2626);
ctx.lineTo(2950,1546);
ctx.lineTo(35242,1546);
ctx.lineTo(35242,2626);
ctx.lineTo(2950,2626);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,11,96,0.85)';
ctx.strokeStyle='rgb(67,206,210)';
ctx.moveTo(4138,11938);
ctx.lineTo(4138,11674);
ctx.lineTo(34054,11674);
ctx.lineTo(34054,11938);
ctx.lineTo(4138,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,14,152,0.85)';
ctx.strokeStyle='rgb(20,114,47)';
ctx.moveTo(4138,8914);
ctx.lineTo(4138,8650);
ctx.lineTo(34054,8650);
ctx.lineTo(34054,8914);
ctx.lineTo(4138,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,1,62,0.85)';
ctx.strokeStyle='rgb(107,61,185)';
ctx.moveTo(4138,5890);
ctx.lineTo(4138,5626);
ctx.lineTo(34054,5626);
ctx.lineTo(34054,5890);
ctx.lineTo(4138,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,90,196,0.85)';
ctx.strokeStyle='rgb(3,50,212)';
ctx.moveTo(4138,2866);
ctx.lineTo(4138,2734);
ctx.lineTo(34054,2734);
ctx.lineTo(34054,2866);
ctx.lineTo(4138,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,152,159,0.85)';
ctx.strokeStyle='rgb(42,207,56)';
ctx.moveTo(1654,33946);
ctx.lineTo(1654,32866);
ctx.lineTo(36538,32866);
ctx.lineTo(36538,33946);
ctx.lineTo(1654,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,25,183,0.85)';
ctx.strokeStyle='rgb(253,149,244)';
ctx.moveTo(4138,31462);
ctx.lineTo(4138,31330);
ctx.lineTo(34054,31330);
ctx.lineTo(34054,31462);
ctx.lineTo(4138,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,177,100,0.85)';
ctx.strokeStyle='rgb(191,67,107)';
ctx.moveTo(4138,28570);
ctx.lineTo(4138,28306);
ctx.lineTo(34054,28306);
ctx.lineTo(34054,28570);
ctx.lineTo(4138,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,11,4,0.85)';
ctx.strokeStyle='rgb(25,197,181)';
ctx.moveTo(4138,25546);
ctx.lineTo(4138,25282);
ctx.lineTo(34054,25282);
ctx.lineTo(34054,25546);
ctx.lineTo(4138,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,68,209,0.85)';
ctx.strokeStyle='rgb(58,7,32)';
ctx.moveTo(4138,22522);
ctx.lineTo(4138,22258);
ctx.lineTo(34054,22258);
ctx.lineTo(34054,22522);
ctx.lineTo(4138,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,106,164,0.85)';
ctx.strokeStyle='rgb(193,52,2)';
ctx.moveTo(4138,19498);
ctx.lineTo(4138,19234);
ctx.lineTo(34054,19234);
ctx.lineTo(34054,19498);
ctx.lineTo(4138,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,229,91,0.85)';
ctx.strokeStyle='rgb(208,78,43)';
ctx.moveTo(4138,13450);
ctx.lineTo(4138,13186);
ctx.lineTo(34054,13186);
ctx.lineTo(34054,13450);
ctx.lineTo(4138,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,124,172,0.85)';
ctx.strokeStyle='rgb(214,103,42)';
ctx.moveTo(4138,16474);
ctx.lineTo(4138,16210);
ctx.lineTo(34054,16210);
ctx.lineTo(34054,16474);
ctx.lineTo(4138,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,195,109,0.85)';
ctx.strokeStyle='rgb(17,239,96)';
ctx.moveTo(1654,1330);
ctx.lineTo(1654,250);
ctx.lineTo(36538,250);
ctx.lineTo(36538,1330);
ctx.lineTo(1654,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,147,106,0.85)';
ctx.strokeStyle='rgb(0,233,53)';
ctx.moveTo(4138,10426);
ctx.lineTo(4138,10162);
ctx.lineTo(34054,10162);
ctx.lineTo(34054,10426);
ctx.lineTo(4138,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,160,77,0.85)';
ctx.strokeStyle='rgb(147,144,33)';
ctx.moveTo(4138,7402);
ctx.lineTo(4138,7138);
ctx.lineTo(34054,7138);
ctx.lineTo(34054,7402);
ctx.lineTo(4138,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,110,172,0.85)';
ctx.strokeStyle='rgb(135,88,63)';
ctx.moveTo(4138,4378);
ctx.lineTo(4138,4114);
ctx.lineTo(34054,4114);
ctx.lineTo(34054,4378);
ctx.lineTo(4138,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,87,1,0.85)';
ctx.strokeStyle='rgb(235,12,64)';
ctx.moveTo(17392,17128);
ctx.lineTo(17392,17068);
ctx.lineTo(17452,17068);
ctx.lineTo(17452,17128);
ctx.lineTo(17392,17128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,190,245,0.85)';
ctx.strokeStyle='rgb(121,221,13)';
ctx.moveTo(34054,5890);
ctx.lineTo(34054,5626);
ctx.lineTo(35242,5626);
ctx.lineTo(35242,5890);
ctx.lineTo(34054,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,69,151,0.85)';
ctx.strokeStyle='rgb(37,9,115)';
ctx.moveTo(34054,2866);
ctx.lineTo(34054,2734);
ctx.lineTo(35242,2734);
ctx.lineTo(35242,2866);
ctx.lineTo(34054,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,200,51,0.85)';
ctx.strokeStyle='rgb(121,1,55)';
ctx.moveTo(34054,14962);
ctx.lineTo(34054,14698);
ctx.lineTo(35242,14698);
ctx.lineTo(35242,14962);
ctx.lineTo(34054,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,136,71,0.85)';
ctx.strokeStyle='rgb(47,176,220)';
ctx.moveTo(34054,11938);
ctx.lineTo(34054,11674);
ctx.lineTo(35242,11674);
ctx.lineTo(35242,11938);
ctx.lineTo(34054,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,224,132,0.85)';
ctx.strokeStyle='rgb(253,81,46)';
ctx.moveTo(34054,16474);
ctx.lineTo(34054,16210);
ctx.lineTo(36538,16210);
ctx.lineTo(36538,16474);
ctx.lineTo(34054,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,39,14,0.85)';
ctx.strokeStyle='rgb(131,46,2)';
ctx.moveTo(34054,13450);
ctx.lineTo(34054,13186);
ctx.lineTo(36538,13186);
ctx.lineTo(36538,13450);
ctx.lineTo(34054,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,39,8,0.85)';
ctx.strokeStyle='rgb(240,119,70)';
ctx.moveTo(34054,10426);
ctx.lineTo(34054,10162);
ctx.lineTo(36538,10162);
ctx.lineTo(36538,10426);
ctx.lineTo(34054,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,132,142,0.85)';
ctx.strokeStyle='rgb(248,254,20)';
ctx.moveTo(34054,7402);
ctx.lineTo(34054,7138);
ctx.lineTo(36538,7138);
ctx.lineTo(36538,7402);
ctx.lineTo(34054,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,70,193,0.85)';
ctx.strokeStyle='rgb(39,85,12)';
ctx.moveTo(34054,4378);
ctx.lineTo(34054,4114);
ctx.lineTo(36538,4114);
ctx.lineTo(36538,4378);
ctx.lineTo(34054,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,79,18,0.85)';
ctx.strokeStyle='rgb(93,64,183)';
ctx.moveTo(24142,8914);
ctx.lineTo(24142,8650);
ctx.lineTo(25222,8650);
ctx.lineTo(25222,8914);
ctx.lineTo(24142,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,102,156,0.85)';
ctx.strokeStyle='rgb(114,179,55)';
ctx.moveTo(34162,8914);
ctx.lineTo(34162,8650);
ctx.lineTo(35242,8650);
ctx.lineTo(35242,8914);
ctx.lineTo(34162,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,236,26,0.85)';
ctx.strokeStyle='rgb(151,27,43)';
ctx.moveTo(34162,2866);
ctx.lineTo(34162,2734);
ctx.lineTo(35242,2734);
ctx.lineTo(35242,2866);
ctx.lineTo(34162,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,191,163,0.85)';
ctx.strokeStyle='rgb(34,170,178)';
ctx.moveTo(34162,2626);
ctx.lineTo(34162,1546);
ctx.lineTo(35242,1546);
ctx.lineTo(35242,2626);
ctx.lineTo(34162,2626);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,27,36,0.85)';
ctx.strokeStyle='rgb(30,19,73)';
ctx.moveTo(35458,4378);
ctx.lineTo(35458,4114);
ctx.lineTo(36538,4114);
ctx.lineTo(36538,4378);
ctx.lineTo(35458,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,75,36,0.85)';
ctx.strokeStyle='rgb(160,130,163)';
ctx.moveTo(35458,1330);
ctx.lineTo(35458,250);
ctx.lineTo(36538,250);
ctx.lineTo(36538,1330);
ctx.lineTo(35458,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,248,159,0.85)';
ctx.strokeStyle='rgb(90,85,11)';
ctx.moveTo(34162,5890);
ctx.lineTo(34162,5626);
ctx.lineTo(35242,5626);
ctx.lineTo(35242,5890);
ctx.lineTo(34162,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,79,30,0.85)';
ctx.strokeStyle='rgb(149,98,246)';
ctx.moveTo(35458,7402);
ctx.lineTo(35458,7138);
ctx.lineTo(36538,7138);
ctx.lineTo(36538,7402);
ctx.lineTo(35458,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,26,113,0.85)';
ctx.strokeStyle='rgb(20,34,161)';
ctx.moveTo(24142,2866);
ctx.lineTo(24142,2734);
ctx.lineTo(25222,2734);
ctx.lineTo(25222,2866);
ctx.lineTo(24142,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,222,69,0.85)';
ctx.strokeStyle='rgb(185,214,119)';
ctx.moveTo(24142,2626);
ctx.lineTo(24142,1546);
ctx.lineTo(25222,1546);
ctx.lineTo(25222,2626);
ctx.lineTo(24142,2626);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,95,43,0.85)';
ctx.strokeStyle='rgb(155,195,127)';
ctx.moveTo(25438,4378);
ctx.lineTo(25438,4114);
ctx.lineTo(26518,4114);
ctx.lineTo(26518,4378);
ctx.lineTo(25438,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,24,165,0.85)';
ctx.strokeStyle='rgb(91,36,107)';
ctx.moveTo(25438,1330);
ctx.lineTo(25438,250);
ctx.lineTo(26518,250);
ctx.lineTo(26518,1330);
ctx.lineTo(25438,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,5,15,0.85)';
ctx.strokeStyle='rgb(99,90,106)';
ctx.moveTo(24142,5890);
ctx.lineTo(24142,5626);
ctx.lineTo(25222,5626);
ctx.lineTo(25222,5890);
ctx.lineTo(24142,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,161,189,0.85)';
ctx.strokeStyle='rgb(48,126,147)';
ctx.moveTo(25438,7402);
ctx.lineTo(25438,7138);
ctx.lineTo(26518,7138);
ctx.lineTo(26518,7402);
ctx.lineTo(25438,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,200,231,0.85)';
ctx.strokeStyle='rgb(32,95,248)';
ctx.moveTo(25438,10426);
ctx.lineTo(25438,10162);
ctx.lineTo(26518,10162);
ctx.lineTo(26518,10426);
ctx.lineTo(25438,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,222,151,0.85)';
ctx.strokeStyle='rgb(111,198,11)';
ctx.moveTo(24142,11938);
ctx.lineTo(24142,11674);
ctx.lineTo(25222,11674);
ctx.lineTo(25222,11938);
ctx.lineTo(24142,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,63,112,0.85)';
ctx.strokeStyle='rgb(33,242,70)';
ctx.moveTo(24142,14962);
ctx.lineTo(24142,14698);
ctx.lineTo(25222,14698);
ctx.lineTo(25222,14962);
ctx.lineTo(24142,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,45,44,0.85)';
ctx.strokeStyle='rgb(149,138,38)';
ctx.moveTo(25438,16474);
ctx.lineTo(25438,16210);
ctx.lineTo(26518,16210);
ctx.lineTo(26518,16474);
ctx.lineTo(25438,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,176,189,0.85)';
ctx.strokeStyle='rgb(5,30,138)';
ctx.moveTo(25438,13450);
ctx.lineTo(25438,13186);
ctx.lineTo(26518,13186);
ctx.lineTo(26518,13450);
ctx.lineTo(25438,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,72,91,0.85)';
ctx.strokeStyle='rgb(12,240,37)';
ctx.moveTo(34162,11938);
ctx.lineTo(34162,11674);
ctx.lineTo(35242,11674);
ctx.lineTo(35242,11938);
ctx.lineTo(34162,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,62,43,0.85)';
ctx.strokeStyle='rgb(37,151,204)';
ctx.moveTo(35458,10426);
ctx.lineTo(35458,10162);
ctx.lineTo(36538,10162);
ctx.lineTo(36538,10426);
ctx.lineTo(35458,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,48,125,0.85)';
ctx.strokeStyle='rgb(158,215,63)';
ctx.moveTo(34162,14962);
ctx.lineTo(34162,14698);
ctx.lineTo(35242,14698);
ctx.lineTo(35242,14962);
ctx.lineTo(34162,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,254,58,0.85)';
ctx.strokeStyle='rgb(187,10,253)';
ctx.moveTo(35458,16474);
ctx.lineTo(35458,16210);
ctx.lineTo(36538,16210);
ctx.lineTo(36538,16474);
ctx.lineTo(35458,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,137,146,0.85)';
ctx.strokeStyle='rgb(74,159,148)';
ctx.moveTo(35458,13450);
ctx.lineTo(35458,13186);
ctx.lineTo(36538,13186);
ctx.lineTo(36538,13450);
ctx.lineTo(35458,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,230,239,0.85)';
ctx.strokeStyle='rgb(200,5,140)';
ctx.moveTo(34054,8914);
ctx.lineTo(34054,8650);
ctx.lineTo(35242,8650);
ctx.lineTo(35242,8914);
ctx.lineTo(34054,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,61,142,0.85)';
ctx.strokeStyle='rgb(65,72,242)';
ctx.moveTo(1654,13450);
ctx.lineTo(1654,13186);
ctx.lineTo(4138,13186);
ctx.lineTo(4138,13450);
ctx.lineTo(1654,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,242,51,0.85)';
ctx.strokeStyle='rgb(105,112,218)';
ctx.moveTo(1654,10426);
ctx.lineTo(1654,10162);
ctx.lineTo(4138,10162);
ctx.lineTo(4138,10426);
ctx.lineTo(1654,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,103,26,0.85)';
ctx.strokeStyle='rgb(20,187,154)';
ctx.moveTo(1654,7402);
ctx.lineTo(1654,7138);
ctx.lineTo(4138,7138);
ctx.lineTo(4138,7402);
ctx.lineTo(1654,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,133,149,0.85)';
ctx.strokeStyle='rgb(143,32,51)';
ctx.moveTo(1654,4378);
ctx.lineTo(1654,4114);
ctx.lineTo(4138,4114);
ctx.lineTo(4138,4378);
ctx.lineTo(1654,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,93,163,0.85)';
ctx.strokeStyle='rgb(0,169,149)';
ctx.moveTo(2950,5890);
ctx.lineTo(2950,5626);
ctx.lineTo(4138,5626);
ctx.lineTo(4138,5890);
ctx.lineTo(2950,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,58,27,0.85)';
ctx.strokeStyle='rgb(201,86,199)';
ctx.moveTo(2950,2866);
ctx.lineTo(2950,2734);
ctx.lineTo(4138,2734);
ctx.lineTo(4138,2866);
ctx.lineTo(2950,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,32,170,0.85)';
ctx.strokeStyle='rgb(100,135,2)';
ctx.moveTo(2950,14962);
ctx.lineTo(2950,14698);
ctx.lineTo(4138,14698);
ctx.lineTo(4138,14962);
ctx.lineTo(2950,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,158,220,0.85)';
ctx.strokeStyle='rgb(102,19,71)';
ctx.moveTo(2950,11938);
ctx.lineTo(2950,11674);
ctx.lineTo(4138,11674);
ctx.lineTo(4138,11938);
ctx.lineTo(2950,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,227,223,0.85)';
ctx.strokeStyle='rgb(224,230,83)';
ctx.moveTo(2950,8914);
ctx.lineTo(2950,8650);
ctx.lineTo(4138,8650);
ctx.lineTo(4138,8914);
ctx.lineTo(2950,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,24,26,0.85)';
ctx.strokeStyle='rgb(118,81,27)';
ctx.moveTo(2950,8914);
ctx.lineTo(2950,8650);
ctx.lineTo(4030,8650);
ctx.lineTo(4030,8914);
ctx.lineTo(2950,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,35,16,0.85)';
ctx.strokeStyle='rgb(39,57,126)';
ctx.moveTo(14140,8914);
ctx.lineTo(14140,8650);
ctx.lineTo(15220,8650);
ctx.lineTo(15220,8914);
ctx.lineTo(14140,8914);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,100,95,0.85)';
ctx.strokeStyle='rgb(24,28,98)';
ctx.moveTo(14140,5890);
ctx.lineTo(14140,5626);
ctx.lineTo(15220,5626);
ctx.lineTo(15220,5890);
ctx.lineTo(14140,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,241,59,0.85)';
ctx.strokeStyle='rgb(159,113,85)';
ctx.moveTo(14140,2866);
ctx.lineTo(14140,2734);
ctx.lineTo(15220,2734);
ctx.lineTo(15220,2866);
ctx.lineTo(14140,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,244,9,0.85)';
ctx.strokeStyle='rgb(176,178,109)';
ctx.moveTo(14140,2626);
ctx.lineTo(14140,1546);
ctx.lineTo(15220,1546);
ctx.lineTo(15220,2626);
ctx.lineTo(14140,2626);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,174,115,0.85)';
ctx.strokeStyle='rgb(120,93,240)';
ctx.moveTo(15436,4378);
ctx.lineTo(15436,4114);
ctx.lineTo(16516,4114);
ctx.lineTo(16516,4378);
ctx.lineTo(15436,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,221,45,0.85)';
ctx.strokeStyle='rgb(253,146,217)';
ctx.moveTo(15436,1330);
ctx.lineTo(15436,250);
ctx.lineTo(16516,250);
ctx.lineTo(16516,1330);
ctx.lineTo(15436,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,82,198,0.85)';
ctx.strokeStyle='rgb(165,84,69)';
ctx.moveTo(15436,7402);
ctx.lineTo(15436,7138);
ctx.lineTo(16516,7138);
ctx.lineTo(16516,7402);
ctx.lineTo(15436,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,142,48,0.85)';
ctx.strokeStyle='rgb(20,246,59)';
ctx.moveTo(5434,7402);
ctx.lineTo(5434,7138);
ctx.lineTo(6514,7138);
ctx.lineTo(6514,7402);
ctx.lineTo(5434,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,126,58,0.85)';
ctx.strokeStyle='rgb(11,0,48)';
ctx.moveTo(5434,4378);
ctx.lineTo(5434,4114);
ctx.lineTo(6514,4114);
ctx.lineTo(6514,4378);
ctx.lineTo(5434,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,166,76,0.85)';
ctx.strokeStyle='rgb(79,156,136)';
ctx.moveTo(5434,1330);
ctx.lineTo(5434,250);
ctx.lineTo(6514,250);
ctx.lineTo(6514,1330);
ctx.lineTo(5434,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,91,92,0.85)';
ctx.strokeStyle='rgb(244,54,3)';
ctx.moveTo(2950,2866);
ctx.lineTo(2950,2734);
ctx.lineTo(4030,2734);
ctx.lineTo(4030,2866);
ctx.lineTo(2950,2866);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,28,150,0.85)';
ctx.strokeStyle='rgb(171,69,188)';
ctx.moveTo(2950,2626);
ctx.lineTo(2950,1546);
ctx.lineTo(4030,1546);
ctx.lineTo(4030,2626);
ctx.lineTo(2950,2626);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,143,52,0.85)';
ctx.strokeStyle='rgb(157,86,183)';
ctx.moveTo(1654,4378);
ctx.lineTo(1654,4114);
ctx.lineTo(2734,4114);
ctx.lineTo(2734,4378);
ctx.lineTo(1654,4378);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,162,167,0.85)';
ctx.strokeStyle='rgb(33,229,174)';
ctx.moveTo(1654,1330);
ctx.lineTo(1654,250);
ctx.lineTo(2734,250);
ctx.lineTo(2734,1330);
ctx.lineTo(1654,1330);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,150,139,0.85)';
ctx.strokeStyle='rgb(144,242,90)';
ctx.moveTo(2950,5890);
ctx.lineTo(2950,5626);
ctx.lineTo(4030,5626);
ctx.lineTo(4030,5890);
ctx.lineTo(2950,5890);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,181,150,0.85)';
ctx.strokeStyle='rgb(78,138,251)';
ctx.moveTo(1654,7402);
ctx.lineTo(1654,7138);
ctx.lineTo(2734,7138);
ctx.lineTo(2734,7402);
ctx.lineTo(1654,7402);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,128,74,0.85)';
ctx.strokeStyle='rgb(72,191,155)';
ctx.moveTo(5434,16474);
ctx.lineTo(5434,16210);
ctx.lineTo(6514,16210);
ctx.lineTo(6514,16474);
ctx.lineTo(5434,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,34,235,0.85)';
ctx.strokeStyle='rgb(87,242,200)';
ctx.moveTo(5434,13450);
ctx.lineTo(5434,13186);
ctx.lineTo(6514,13186);
ctx.lineTo(6514,13450);
ctx.lineTo(5434,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,221,70,0.85)';
ctx.strokeStyle='rgb(74,71,47)';
ctx.moveTo(5434,10426);
ctx.lineTo(5434,10162);
ctx.lineTo(6514,10162);
ctx.lineTo(6514,10426);
ctx.lineTo(5434,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,169,133,0.85)';
ctx.strokeStyle='rgb(43,21,174)';
ctx.moveTo(2950,11938);
ctx.lineTo(2950,11674);
ctx.lineTo(4030,11674);
ctx.lineTo(4030,11938);
ctx.lineTo(2950,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,168,136,0.85)';
ctx.strokeStyle='rgb(2,248,157)';
ctx.moveTo(1654,10426);
ctx.lineTo(1654,10162);
ctx.lineTo(2734,10162);
ctx.lineTo(2734,10426);
ctx.lineTo(1654,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,0,121,0.85)';
ctx.strokeStyle='rgb(23,172,32)';
ctx.moveTo(2950,14962);
ctx.lineTo(2950,14698);
ctx.lineTo(4030,14698);
ctx.lineTo(4030,14962);
ctx.lineTo(2950,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,242,213,0.85)';
ctx.strokeStyle='rgb(86,89,128)';
ctx.moveTo(1654,16474);
ctx.lineTo(1654,16210);
ctx.lineTo(2734,16210);
ctx.lineTo(2734,16474);
ctx.lineTo(1654,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,54,4,0.85)';
ctx.strokeStyle='rgb(82,140,201)';
ctx.moveTo(1654,13450);
ctx.lineTo(1654,13186);
ctx.lineTo(2734,13186);
ctx.lineTo(2734,13450);
ctx.lineTo(1654,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,0,45,0.85)';
ctx.strokeStyle='rgb(225,157,137)';
ctx.moveTo(14140,14962);
ctx.lineTo(14140,14698);
ctx.lineTo(15220,14698);
ctx.lineTo(15220,14962);
ctx.lineTo(14140,14962);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,96,20,0.85)';
ctx.strokeStyle='rgb(28,254,123)';
ctx.moveTo(14140,11938);
ctx.lineTo(14140,11674);
ctx.lineTo(15220,11674);
ctx.lineTo(15220,11938);
ctx.lineTo(14140,11938);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,81,156,0.85)';
ctx.strokeStyle='rgb(233,23,190)';
ctx.moveTo(15436,10426);
ctx.lineTo(15436,10162);
ctx.lineTo(16516,10162);
ctx.lineTo(16516,10426);
ctx.lineTo(15436,10426);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,184,121,0.85)';
ctx.strokeStyle='rgb(159,242,7)';
ctx.moveTo(1654,16474);
ctx.lineTo(1654,16210);
ctx.lineTo(4138,16210);
ctx.lineTo(4138,16474);
ctx.lineTo(1654,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,99,140,0.85)';
ctx.strokeStyle='rgb(174,151,223)';
ctx.moveTo(18148,15616);
ctx.lineTo(18148,15556);
ctx.lineTo(18208,15556);
ctx.lineTo(18208,15616);
ctx.lineTo(18148,15616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,153,150,0.85)';
ctx.strokeStyle='rgb(10,206,5)';
ctx.moveTo(18256,16048);
ctx.lineTo(18256,15988);
ctx.lineTo(18316,15988);
ctx.lineTo(18316,16048);
ctx.lineTo(18256,16048);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,149,25,0.85)';
ctx.strokeStyle='rgb(98,55,236)';
ctx.moveTo(15436,16474);
ctx.lineTo(15436,16210);
ctx.lineTo(16516,16210);
ctx.lineTo(16516,16474);
ctx.lineTo(15436,16474);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,183,156,0.85)';
ctx.strokeStyle='rgb(20,51,186)';
ctx.moveTo(15436,13450);
ctx.lineTo(15436,13186);
ctx.lineTo(16516,13186);
ctx.lineTo(16516,13450);
ctx.lineTo(15436,13450);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,39,71,0.85)';
ctx.strokeStyle='rgb(213,147,18)';
ctx.moveTo(1654,22522);
ctx.lineTo(1654,22258);
ctx.lineTo(4138,22258);
ctx.lineTo(4138,22522);
ctx.lineTo(1654,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,158,122,0.85)';
ctx.strokeStyle='rgb(254,177,118)';
ctx.moveTo(2950,21010);
ctx.lineTo(2950,20746);
ctx.lineTo(4138,20746);
ctx.lineTo(4138,21010);
ctx.lineTo(2950,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,69,16,0.85)';
ctx.strokeStyle='rgb(194,183,251)';
ctx.moveTo(2950,30082);
ctx.lineTo(2950,29818);
ctx.lineTo(4138,29818);
ctx.lineTo(4138,30082);
ctx.lineTo(2950,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,232,250,0.85)';
ctx.strokeStyle='rgb(148,6,200)';
ctx.moveTo(2950,17986);
ctx.lineTo(2950,17722);
ctx.lineTo(4138,17722);
ctx.lineTo(4138,17986);
ctx.lineTo(2950,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,223,190,0.85)';
ctx.strokeStyle='rgb(54,57,166)';
ctx.moveTo(2950,27058);
ctx.lineTo(2950,26794);
ctx.lineTo(4138,26794);
ctx.lineTo(4138,27058);
ctx.lineTo(2950,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,104,91,0.85)';
ctx.strokeStyle='rgb(222,46,237)';
ctx.moveTo(2950,24034);
ctx.lineTo(2950,23770);
ctx.lineTo(4138,23770);
ctx.lineTo(4138,24034);
ctx.lineTo(2950,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,247,104,0.85)';
ctx.strokeStyle='rgb(12,184,243)';
ctx.moveTo(1654,31462);
ctx.lineTo(1654,31330);
ctx.lineTo(4138,31330);
ctx.lineTo(4138,31462);
ctx.lineTo(1654,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,33,79,0.85)';
ctx.strokeStyle='rgb(210,84,219)';
ctx.moveTo(1654,28570);
ctx.lineTo(1654,28306);
ctx.lineTo(4138,28306);
ctx.lineTo(4138,28570);
ctx.lineTo(1654,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,230,235,0.85)';
ctx.strokeStyle='rgb(142,131,130)';
ctx.moveTo(1654,25546);
ctx.lineTo(1654,25282);
ctx.lineTo(4138,25282);
ctx.lineTo(4138,25546);
ctx.lineTo(1654,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,153,225,0.85)';
ctx.strokeStyle='rgb(35,17,196)';
ctx.moveTo(1654,19498);
ctx.lineTo(1654,19234);
ctx.lineTo(4138,19234);
ctx.lineTo(4138,19498);
ctx.lineTo(1654,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,13,93,0.85)';
ctx.strokeStyle='rgb(67,39,136)';
ctx.moveTo(14140,24034);
ctx.lineTo(14140,23770);
ctx.lineTo(15220,23770);
ctx.lineTo(15220,24034);
ctx.lineTo(14140,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,205,241,0.85)';
ctx.strokeStyle='rgb(56,164,79)';
ctx.moveTo(14140,21010);
ctx.lineTo(14140,20746);
ctx.lineTo(15220,20746);
ctx.lineTo(15220,21010);
ctx.lineTo(14140,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,101,58,0.85)';
ctx.strokeStyle='rgb(106,158,190)';
ctx.moveTo(14140,17986);
ctx.lineTo(14140,17722);
ctx.lineTo(15220,17722);
ctx.lineTo(15220,17986);
ctx.lineTo(14140,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,137,114,0.85)';
ctx.strokeStyle='rgb(35,79,5)';
ctx.moveTo(15436,19498);
ctx.lineTo(15436,19234);
ctx.lineTo(16516,19234);
ctx.lineTo(16516,19498);
ctx.lineTo(15436,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,48,115,0.85)';
ctx.strokeStyle='rgb(40,140,237)';
ctx.moveTo(18364,18640);
ctx.lineTo(18364,18580);
ctx.lineTo(18424,18580);
ctx.lineTo(18424,18640);
ctx.lineTo(18364,18640);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,197,175,0.85)';
ctx.strokeStyle='rgb(169,134,246)';
ctx.moveTo(17500,18748);
ctx.lineTo(17500,18688);
ctx.lineTo(17560,18688);
ctx.lineTo(17560,18748);
ctx.lineTo(17500,18748);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,203,85,0.85)';
ctx.strokeStyle='rgb(206,57,182)';
ctx.moveTo(17284,18856);
ctx.lineTo(17284,18796);
ctx.lineTo(17344,18796);
ctx.lineTo(17344,18856);
ctx.lineTo(17284,18856);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,202,46,0.85)';
ctx.strokeStyle='rgb(0,79,122)';
ctx.moveTo(18148,18532);
ctx.lineTo(18148,18472);
ctx.lineTo(18208,18472);
ctx.lineTo(18208,18532);
ctx.lineTo(18148,18532);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,83,134,0.85)';
ctx.strokeStyle='rgb(106,15,166)';
ctx.moveTo(18472,19072);
ctx.lineTo(18472,19012);
ctx.lineTo(18532,19012);
ctx.lineTo(18532,19072);
ctx.lineTo(18472,19072);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,179,149,0.85)';
ctx.strokeStyle='rgb(15,239,56)';
ctx.moveTo(17068,17452);
ctx.lineTo(17068,17392);
ctx.lineTo(17128,17392);
ctx.lineTo(17128,17452);
ctx.lineTo(17068,17452);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,75,254,0.85)';
ctx.strokeStyle='rgb(198,151,34)';
ctx.moveTo(17392,18532);
ctx.lineTo(17392,18472);
ctx.lineTo(17452,18472);
ctx.lineTo(17452,18532);
ctx.lineTo(17392,18532);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,219,113,0.85)';
ctx.strokeStyle='rgb(71,63,106)';
ctx.moveTo(17392,17236);
ctx.lineTo(17392,17176);
ctx.lineTo(17452,17176);
ctx.lineTo(17452,17236);
ctx.lineTo(17392,17236);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,152,148,0.85)';
ctx.strokeStyle='rgb(34,80,211)';
ctx.moveTo(16852,20260);
ctx.lineTo(16852,20200);
ctx.lineTo(16912,20200);
ctx.lineTo(16912,20260);
ctx.lineTo(16852,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,219,111,0.85)';
ctx.strokeStyle='rgb(100,63,112)';
ctx.moveTo(17176,20152);
ctx.lineTo(17176,20092);
ctx.lineTo(17236,20092);
ctx.lineTo(17236,20152);
ctx.lineTo(17176,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,182,15,0.85)';
ctx.strokeStyle='rgb(252,195,71)';
ctx.moveTo(17068,20368);
ctx.lineTo(17068,20308);
ctx.lineTo(17128,20308);
ctx.lineTo(17128,20368);
ctx.lineTo(17068,20368);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,156,245,0.85)';
ctx.strokeStyle='rgb(204,47,176)';
ctx.moveTo(17716,20260);
ctx.lineTo(17716,20200);
ctx.lineTo(17776,20200);
ctx.lineTo(17776,20260);
ctx.lineTo(17716,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,116,192,0.85)';
ctx.strokeStyle='rgb(142,49,201)';
ctx.moveTo(17392,20152);
ctx.lineTo(17392,20092);
ctx.lineTo(17452,20092);
ctx.lineTo(17452,20152);
ctx.lineTo(17392,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,156,26,0.85)';
ctx.strokeStyle='rgb(38,30,221)';
ctx.moveTo(12964,18532);
ctx.lineTo(12964,18472);
ctx.lineTo(13024,18472);
ctx.lineTo(13024,18532);
ctx.lineTo(12964,18532);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,121,61,0.85)';
ctx.strokeStyle='rgb(241,114,62)';
ctx.moveTo(10588,20152);
ctx.lineTo(10588,20092);
ctx.lineTo(10648,20092);
ctx.lineTo(10648,20152);
ctx.lineTo(10588,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,78,4,0.85)';
ctx.strokeStyle='rgb(193,8,25)';
ctx.moveTo(13396,20260);
ctx.lineTo(13396,20200);
ctx.lineTo(13456,20200);
ctx.lineTo(13456,20260);
ctx.lineTo(13396,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,212,69,0.85)';
ctx.strokeStyle='rgb(172,130,90)';
ctx.moveTo(13072,20044);
ctx.lineTo(13072,19984);
ctx.lineTo(13132,19984);
ctx.lineTo(13132,20044);
ctx.lineTo(13072,20044);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,166,181,0.85)';
ctx.strokeStyle='rgb(165,187,108)';
ctx.moveTo(12964,19720);
ctx.lineTo(12964,19660);
ctx.lineTo(13024,19660);
ctx.lineTo(13024,19720);
ctx.lineTo(12964,19720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,123,127,0.85)';
ctx.strokeStyle='rgb(87,51,88)';
ctx.moveTo(13504,20368);
ctx.lineTo(13504,20308);
ctx.lineTo(13564,20308);
ctx.lineTo(13564,20368);
ctx.lineTo(13504,20368);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,165,219,0.85)';
ctx.strokeStyle='rgb(8,27,93)';
ctx.moveTo(13936,20152);
ctx.lineTo(13936,20092);
ctx.lineTo(13996,20092);
ctx.lineTo(13996,20152);
ctx.lineTo(13936,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,93,181,0.85)';
ctx.strokeStyle='rgb(141,19,123)';
ctx.moveTo(13936,23176);
ctx.lineTo(13936,23116);
ctx.lineTo(13996,23116);
ctx.lineTo(13996,23176);
ctx.lineTo(13936,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,249,131,0.85)';
ctx.strokeStyle='rgb(14,229,161)';
ctx.moveTo(13180,23284);
ctx.lineTo(13180,23224);
ctx.lineTo(13240,23224);
ctx.lineTo(13240,23284);
ctx.lineTo(13180,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,251,102,0.85)';
ctx.strokeStyle='rgb(185,200,114)';
ctx.moveTo(13396,22096);
ctx.lineTo(13396,22036);
ctx.lineTo(13456,22036);
ctx.lineTo(13456,22096);
ctx.lineTo(13396,22096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,33,37,0.85)';
ctx.strokeStyle='rgb(87,16,116)';
ctx.moveTo(12316,23068);
ctx.lineTo(12316,23008);
ctx.lineTo(12376,23008);
ctx.lineTo(12376,23068);
ctx.lineTo(12316,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,131,228,0.85)';
ctx.strokeStyle='rgb(206,26,53)';
ctx.moveTo(13396,24688);
ctx.lineTo(13396,24628);
ctx.lineTo(13456,24628);
ctx.lineTo(13456,24688);
ctx.lineTo(13396,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,55,239,0.85)';
ctx.strokeStyle='rgb(97,66,178)';
ctx.moveTo(12964,23176);
ctx.lineTo(12964,23116);
ctx.lineTo(13024,23116);
ctx.lineTo(13024,23176);
ctx.lineTo(12964,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,202,60,0.85)';
ctx.strokeStyle='rgb(132,210,204)';
ctx.moveTo(13720,23176);
ctx.lineTo(13720,23116);
ctx.lineTo(13780,23116);
ctx.lineTo(13780,23176);
ctx.lineTo(13720,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,13,141,0.85)';
ctx.strokeStyle='rgb(217,214,207)';
ctx.moveTo(13072,21664);
ctx.lineTo(13072,21604);
ctx.lineTo(13132,21604);
ctx.lineTo(13132,21664);
ctx.lineTo(13072,21664);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,127,124,0.85)';
ctx.strokeStyle='rgb(24,218,121)';
ctx.moveTo(13504,23284);
ctx.lineTo(13504,23224);
ctx.lineTo(13564,23224);
ctx.lineTo(13564,23284);
ctx.lineTo(13504,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,91,69,0.85)';
ctx.strokeStyle='rgb(65,104,77)';
ctx.moveTo(18580,24256);
ctx.lineTo(18580,24196);
ctx.lineTo(18640,24196);
ctx.lineTo(18640,24256);
ctx.lineTo(18580,24256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,162,170,0.85)';
ctx.strokeStyle='rgb(243,209,185)';
ctx.moveTo(18364,24688);
ctx.lineTo(18364,24628);
ctx.lineTo(18424,24628);
ctx.lineTo(18424,24688);
ctx.lineTo(18364,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,208,117,0.85)';
ctx.strokeStyle='rgb(253,29,181)';
ctx.moveTo(17068,22960);
ctx.lineTo(17068,22900);
ctx.lineTo(17128,22900);
ctx.lineTo(17128,22960);
ctx.lineTo(17068,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,125,59,0.85)';
ctx.strokeStyle='rgb(229,233,36)';
ctx.moveTo(17824,23284);
ctx.lineTo(17824,23224);
ctx.lineTo(17884,23224);
ctx.lineTo(17884,23284);
ctx.lineTo(17824,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,122,179,0.85)';
ctx.strokeStyle='rgb(52,165,35)';
ctx.moveTo(17500,23176);
ctx.lineTo(17500,23116);
ctx.lineTo(17560,23116);
ctx.lineTo(17560,23176);
ctx.lineTo(17500,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,238,236,0.85)';
ctx.strokeStyle='rgb(33,185,46)';
ctx.moveTo(15436,25546);
ctx.lineTo(15436,25282);
ctx.lineTo(16516,25282);
ctx.lineTo(16516,25546);
ctx.lineTo(15436,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,75,108,0.85)';
ctx.strokeStyle='rgb(123,94,156)';
ctx.moveTo(15436,22522);
ctx.lineTo(15436,22258);
ctx.lineTo(16516,22258);
ctx.lineTo(16516,22522);
ctx.lineTo(15436,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,21,181,0.85)';
ctx.strokeStyle='rgb(87,45,40)';
ctx.moveTo(17392,24580);
ctx.lineTo(17392,24520);
ctx.lineTo(17452,24520);
ctx.lineTo(17452,24580);
ctx.lineTo(17392,24580);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,207,153,0.85)';
ctx.strokeStyle='rgb(78,125,186)';
ctx.moveTo(18256,21664);
ctx.lineTo(18256,21604);
ctx.lineTo(18316,21604);
ctx.lineTo(18316,21664);
ctx.lineTo(18256,21664);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,79,190,0.85)';
ctx.strokeStyle='rgb(211,207,120)';
ctx.moveTo(18472,21556);
ctx.lineTo(18472,21496);
ctx.lineTo(18532,21496);
ctx.lineTo(18532,21556);
ctx.lineTo(18472,21556);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,42,205,0.85)';
ctx.strokeStyle='rgb(60,65,229)';
ctx.moveTo(5434,25546);
ctx.lineTo(5434,25282);
ctx.lineTo(6514,25282);
ctx.lineTo(6514,25546);
ctx.lineTo(5434,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,28,53,0.85)';
ctx.strokeStyle='rgb(161,74,100)';
ctx.moveTo(5434,22522);
ctx.lineTo(5434,22258);
ctx.lineTo(6514,22258);
ctx.lineTo(6514,22522);
ctx.lineTo(5434,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,209,193,0.85)';
ctx.strokeStyle='rgb(139,47,71)';
ctx.moveTo(5434,19498);
ctx.lineTo(5434,19234);
ctx.lineTo(6514,19234);
ctx.lineTo(6514,19498);
ctx.lineTo(5434,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,122,22,0.85)';
ctx.strokeStyle='rgb(115,105,179)';
ctx.moveTo(2950,21010);
ctx.lineTo(2950,20746);
ctx.lineTo(4030,20746);
ctx.lineTo(4030,21010);
ctx.lineTo(2950,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,179,103,0.85)';
ctx.strokeStyle='rgb(141,42,212)';
ctx.moveTo(2950,17986);
ctx.lineTo(2950,17722);
ctx.lineTo(4030,17722);
ctx.lineTo(4030,17986);
ctx.lineTo(2950,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,209,238,0.85)';
ctx.strokeStyle='rgb(56,136,232)';
ctx.moveTo(1654,19498);
ctx.lineTo(1654,19234);
ctx.lineTo(2734,19234);
ctx.lineTo(2734,19498);
ctx.lineTo(1654,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,109,202,0.85)';
ctx.strokeStyle='rgb(48,254,217)';
ctx.moveTo(1654,25546);
ctx.lineTo(1654,25282);
ctx.lineTo(2734,25282);
ctx.lineTo(2734,25546);
ctx.lineTo(1654,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,168,120,0.85)';
ctx.strokeStyle='rgb(207,208,130)';
ctx.moveTo(1654,22522);
ctx.lineTo(1654,22258);
ctx.lineTo(2734,22258);
ctx.lineTo(2734,22522);
ctx.lineTo(1654,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,169,5,0.85)';
ctx.strokeStyle='rgb(9,52,203)';
ctx.moveTo(2950,24034);
ctx.lineTo(2950,23770);
ctx.lineTo(4030,23770);
ctx.lineTo(4030,24034);
ctx.lineTo(2950,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,177,248,0.85)';
ctx.strokeStyle='rgb(251,0,139)';
ctx.moveTo(2950,30082);
ctx.lineTo(2950,29818);
ctx.lineTo(4030,29818);
ctx.lineTo(4030,30082);
ctx.lineTo(2950,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,55,84,0.85)';
ctx.strokeStyle='rgb(228,106,198)';
ctx.moveTo(5434,31462);
ctx.lineTo(5434,31330);
ctx.lineTo(6514,31330);
ctx.lineTo(6514,31462);
ctx.lineTo(5434,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,156,229,0.85)';
ctx.strokeStyle='rgb(224,149,148)';
ctx.moveTo(5434,33946);
ctx.lineTo(5434,32866);
ctx.lineTo(6514,32866);
ctx.lineTo(6514,33946);
ctx.lineTo(5434,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,189,149,0.85)';
ctx.strokeStyle='rgb(240,218,99)';
ctx.moveTo(5434,28570);
ctx.lineTo(5434,28306);
ctx.lineTo(6514,28306);
ctx.lineTo(6514,28570);
ctx.lineTo(5434,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,229,204,0.85)';
ctx.strokeStyle='rgb(249,1,157)';
ctx.moveTo(2950,27058);
ctx.lineTo(2950,26794);
ctx.lineTo(4030,26794);
ctx.lineTo(4030,27058);
ctx.lineTo(2950,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,153,211,0.85)';
ctx.strokeStyle='rgb(226,189,142)';
ctx.moveTo(1654,28570);
ctx.lineTo(1654,28306);
ctx.lineTo(2734,28306);
ctx.lineTo(2734,28570);
ctx.lineTo(1654,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,134,32,0.85)';
ctx.strokeStyle='rgb(199,161,120)';
ctx.moveTo(2950,32650);
ctx.lineTo(2950,31570);
ctx.lineTo(4030,31570);
ctx.lineTo(4030,32650);
ctx.lineTo(2950,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,237,216,0.85)';
ctx.strokeStyle='rgb(144,91,102)';
ctx.moveTo(1654,31462);
ctx.lineTo(1654,31330);
ctx.lineTo(2734,31330);
ctx.lineTo(2734,31462);
ctx.lineTo(1654,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,19,47,0.85)';
ctx.strokeStyle='rgb(23,204,185)';
ctx.moveTo(1654,33946);
ctx.lineTo(1654,32866);
ctx.lineTo(2734,32866);
ctx.lineTo(2734,33946);
ctx.lineTo(1654,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,222,193,0.85)';
ctx.strokeStyle='rgb(157,196,214)';
ctx.moveTo(14140,32650);
ctx.lineTo(14140,31570);
ctx.lineTo(15220,31570);
ctx.lineTo(15220,32650);
ctx.lineTo(14140,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,59,202,0.85)';
ctx.strokeStyle='rgb(207,188,166)';
ctx.moveTo(14140,30082);
ctx.lineTo(14140,29818);
ctx.lineTo(15220,29818);
ctx.lineTo(15220,30082);
ctx.lineTo(14140,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,43,181,0.85)';
ctx.strokeStyle='rgb(159,24,17)';
ctx.moveTo(14140,27058);
ctx.lineTo(14140,26794);
ctx.lineTo(15220,26794);
ctx.lineTo(15220,27058);
ctx.lineTo(14140,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,51,62,0.85)';
ctx.strokeStyle='rgb(182,160,157)';
ctx.moveTo(18688,26200);
ctx.lineTo(18688,26140);
ctx.lineTo(18748,26140);
ctx.lineTo(18748,26200);
ctx.lineTo(18688,26200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,234,155,0.85)';
ctx.strokeStyle='rgb(222,203,25)';
ctx.moveTo(18796,25768);
ctx.lineTo(18796,25708);
ctx.lineTo(18856,25708);
ctx.lineTo(18856,25768);
ctx.lineTo(18796,25768);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,206,221,0.85)';
ctx.strokeStyle='rgb(9,105,199)';
ctx.moveTo(15436,28570);
ctx.lineTo(15436,28306);
ctx.lineTo(16516,28306);
ctx.lineTo(16516,28570);
ctx.lineTo(15436,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,180,12,0.85)';
ctx.strokeStyle='rgb(3,171,52)';
ctx.moveTo(15436,31462);
ctx.lineTo(15436,31330);
ctx.lineTo(16516,31330);
ctx.lineTo(16516,31462);
ctx.lineTo(15436,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,28,56,0.85)';
ctx.strokeStyle='rgb(211,254,42)';
ctx.moveTo(15436,33946);
ctx.lineTo(15436,32866);
ctx.lineTo(16516,32866);
ctx.lineTo(16516,33946);
ctx.lineTo(15436,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,26,244,0.85)';
ctx.strokeStyle='rgb(178,140,69)';
ctx.moveTo(34054,30082);
ctx.lineTo(34054,29818);
ctx.lineTo(35242,29818);
ctx.lineTo(35242,30082);
ctx.lineTo(34054,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,36,163,0.85)';
ctx.strokeStyle='rgb(163,25,47)';
ctx.moveTo(34054,17986);
ctx.lineTo(34054,17722);
ctx.lineTo(35242,17722);
ctx.lineTo(35242,17986);
ctx.lineTo(34054,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,13,247,0.85)';
ctx.strokeStyle='rgb(141,236,107)';
ctx.moveTo(34054,27058);
ctx.lineTo(34054,26794);
ctx.lineTo(35242,26794);
ctx.lineTo(35242,27058);
ctx.lineTo(34054,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,43,179,0.85)';
ctx.strokeStyle='rgb(170,39,6)';
ctx.moveTo(34054,31462);
ctx.lineTo(34054,31330);
ctx.lineTo(36538,31330);
ctx.lineTo(36538,31462);
ctx.lineTo(34054,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,61,38,0.85)';
ctx.strokeStyle='rgb(224,184,129)';
ctx.moveTo(34054,28570);
ctx.lineTo(34054,28306);
ctx.lineTo(36538,28306);
ctx.lineTo(36538,28570);
ctx.lineTo(34054,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,226,15,0.85)';
ctx.strokeStyle='rgb(108,142,33)';
ctx.moveTo(34054,25546);
ctx.lineTo(34054,25282);
ctx.lineTo(36538,25282);
ctx.lineTo(36538,25546);
ctx.lineTo(34054,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,88,133,0.85)';
ctx.strokeStyle='rgb(178,183,73)';
ctx.moveTo(34054,22522);
ctx.lineTo(34054,22258);
ctx.lineTo(36538,22258);
ctx.lineTo(36538,22522);
ctx.lineTo(34054,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,138,11,0.85)';
ctx.strokeStyle='rgb(182,200,201)';
ctx.moveTo(34054,19498);
ctx.lineTo(34054,19234);
ctx.lineTo(36538,19234);
ctx.lineTo(36538,19498);
ctx.lineTo(34054,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,71,5,0.85)';
ctx.strokeStyle='rgb(74,64,6)';
ctx.moveTo(34054,24034);
ctx.lineTo(34054,23770);
ctx.lineTo(35242,23770);
ctx.lineTo(35242,24034);
ctx.lineTo(34054,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,4,78,0.85)';
ctx.strokeStyle='rgb(164,106,162)';
ctx.moveTo(34054,21010);
ctx.lineTo(34054,20746);
ctx.lineTo(35242,20746);
ctx.lineTo(35242,21010);
ctx.lineTo(34054,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,60,187,0.85)';
ctx.strokeStyle='rgb(66,43,45)';
ctx.moveTo(34162,21010);
ctx.lineTo(34162,20746);
ctx.lineTo(35242,20746);
ctx.lineTo(35242,21010);
ctx.lineTo(34162,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,36,150,0.85)';
ctx.strokeStyle='rgb(125,57,193)';
ctx.moveTo(34162,17986);
ctx.lineTo(34162,17722);
ctx.lineTo(35242,17722);
ctx.lineTo(35242,17986);
ctx.lineTo(34162,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,110,115,0.85)';
ctx.strokeStyle='rgb(250,79,73)';
ctx.moveTo(35458,19498);
ctx.lineTo(35458,19234);
ctx.lineTo(36538,19234);
ctx.lineTo(36538,19498);
ctx.lineTo(35458,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,158,91,0.85)';
ctx.strokeStyle='rgb(12,112,139)';
ctx.moveTo(34162,24034);
ctx.lineTo(34162,23770);
ctx.lineTo(35242,23770);
ctx.lineTo(35242,24034);
ctx.lineTo(34162,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,216,113,0.85)';
ctx.strokeStyle='rgb(185,65,175)';
ctx.moveTo(35458,25546);
ctx.lineTo(35458,25282);
ctx.lineTo(36538,25282);
ctx.lineTo(36538,25546);
ctx.lineTo(35458,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,63,182,0.85)';
ctx.strokeStyle='rgb(195,205,59)';
ctx.moveTo(35458,22522);
ctx.lineTo(35458,22258);
ctx.lineTo(36538,22258);
ctx.lineTo(36538,22522);
ctx.lineTo(35458,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,230,185,0.85)';
ctx.strokeStyle='rgb(103,54,155)';
ctx.moveTo(25438,19498);
ctx.lineTo(25438,19234);
ctx.lineTo(26518,19234);
ctx.lineTo(26518,19498);
ctx.lineTo(25438,19498);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,85,239,0.85)';
ctx.strokeStyle='rgb(204,94,99)';
ctx.moveTo(24142,17986);
ctx.lineTo(24142,17722);
ctx.lineTo(25222,17722);
ctx.lineTo(25222,17986);
ctx.lineTo(24142,17986);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,216,14,0.85)';
ctx.strokeStyle='rgb(80,214,19)';
ctx.moveTo(24142,21010);
ctx.lineTo(24142,20746);
ctx.lineTo(25222,20746);
ctx.lineTo(25222,21010);
ctx.lineTo(24142,21010);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,38,209,0.85)';
ctx.strokeStyle='rgb(162,202,5)';
ctx.moveTo(21712,19072);
ctx.lineTo(21712,19012);
ctx.lineTo(21772,19012);
ctx.lineTo(21772,19072);
ctx.lineTo(21712,19072);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,206,84,0.85)';
ctx.strokeStyle='rgb(123,225,228)';
ctx.moveTo(20740,20044);
ctx.lineTo(20740,19984);
ctx.lineTo(20800,19984);
ctx.lineTo(20800,20044);
ctx.lineTo(20740,20044);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,228,148,0.85)';
ctx.strokeStyle='rgb(244,48,54)';
ctx.moveTo(19552,19720);
ctx.lineTo(19552,19660);
ctx.lineTo(19612,19660);
ctx.lineTo(19612,19720);
ctx.lineTo(19552,19720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,174,24,0.85)';
ctx.strokeStyle='rgb(15,195,44)';
ctx.moveTo(20524,20260);
ctx.lineTo(20524,20200);
ctx.lineTo(20584,20200);
ctx.lineTo(20584,20260);
ctx.lineTo(20524,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,106,133,0.85)';
ctx.strokeStyle='rgb(48,46,173)';
ctx.moveTo(20308,20260);
ctx.lineTo(20308,20200);
ctx.lineTo(20368,20200);
ctx.lineTo(20368,20260);
ctx.lineTo(20308,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,42,96,0.85)';
ctx.strokeStyle='rgb(66,213,46)';
ctx.moveTo(23008,19720);
ctx.lineTo(23008,19660);
ctx.lineTo(23068,19660);
ctx.lineTo(23068,19720);
ctx.lineTo(23008,19720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,163,235,0.85)';
ctx.strokeStyle='rgb(197,157,233)';
ctx.moveTo(21820,21232);
ctx.lineTo(21820,21172);
ctx.lineTo(21880,21172);
ctx.lineTo(21880,21232);
ctx.lineTo(21820,21232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,217,90,0.85)';
ctx.strokeStyle='rgb(213,194,5)';
ctx.moveTo(21064,24688);
ctx.lineTo(21064,24628);
ctx.lineTo(21124,24628);
ctx.lineTo(21124,24688);
ctx.lineTo(21064,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,112,116,0.85)';
ctx.strokeStyle='rgb(189,63,189)';
ctx.moveTo(23224,23284);
ctx.lineTo(23224,23224);
ctx.lineTo(23284,23224);
ctx.lineTo(23284,23284);
ctx.lineTo(23224,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,242,77,0.85)';
ctx.strokeStyle='rgb(202,214,134)';
ctx.moveTo(19660,23608);
ctx.lineTo(19660,23548);
ctx.lineTo(19720,23548);
ctx.lineTo(19720,23608);
ctx.lineTo(19660,23608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,101,158,0.85)';
ctx.strokeStyle='rgb(182,151,63)';
ctx.moveTo(19876,23284);
ctx.lineTo(19876,23224);
ctx.lineTo(19936,23224);
ctx.lineTo(19936,23284);
ctx.lineTo(19876,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,216,127,0.85)';
ctx.strokeStyle='rgb(31,12,217)';
ctx.moveTo(21172,21664);
ctx.lineTo(21172,21604);
ctx.lineTo(21232,21604);
ctx.lineTo(21232,21664);
ctx.lineTo(21172,21664);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,54,20,0.85)';
ctx.strokeStyle='rgb(114,208,161)';
ctx.moveTo(21172,22744);
ctx.lineTo(21172,22684);
ctx.lineTo(21232,22684);
ctx.lineTo(21232,22744);
ctx.lineTo(21172,22744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,48,50,0.85)';
ctx.strokeStyle='rgb(194,9,25)';
ctx.moveTo(20956,23176);
ctx.lineTo(20956,23116);
ctx.lineTo(21016,23116);
ctx.lineTo(21016,23176);
ctx.lineTo(20956,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,118,61,0.85)';
ctx.strokeStyle='rgb(4,134,55)';
ctx.moveTo(19984,24256);
ctx.lineTo(19984,24196);
ctx.lineTo(20044,24196);
ctx.lineTo(20044,24256);
ctx.lineTo(19984,24256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,36,196,0.85)';
ctx.strokeStyle='rgb(157,68,103)';
ctx.moveTo(21172,23284);
ctx.lineTo(21172,23224);
ctx.lineTo(21232,23224);
ctx.lineTo(21232,23284);
ctx.lineTo(21172,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,52,210,0.85)';
ctx.strokeStyle='rgb(136,81,157)';
ctx.moveTo(21172,24256);
ctx.lineTo(21172,24196);
ctx.lineTo(21232,24196);
ctx.lineTo(21232,24256);
ctx.lineTo(21172,24256);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,170,27,0.85)';
ctx.strokeStyle='rgb(53,155,26)';
ctx.moveTo(19660,24472);
ctx.lineTo(19660,24412);
ctx.lineTo(19720,24412);
ctx.lineTo(19720,24472);
ctx.lineTo(19660,24472);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,144,105,0.85)';
ctx.strokeStyle='rgb(212,125,152)';
ctx.moveTo(19444,24580);
ctx.lineTo(19444,24520);
ctx.lineTo(19504,24520);
ctx.lineTo(19504,24580);
ctx.lineTo(19444,24580);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,135,93,0.85)';
ctx.strokeStyle='rgb(79,86,32)';
ctx.moveTo(19444,24688);
ctx.lineTo(19444,24628);
ctx.lineTo(19504,24628);
ctx.lineTo(19504,24688);
ctx.lineTo(19444,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,237,90,0.85)';
ctx.strokeStyle='rgb(205,10,69)';
ctx.moveTo(21388,23284);
ctx.lineTo(21388,23224);
ctx.lineTo(21448,23224);
ctx.lineTo(21448,23284);
ctx.lineTo(21388,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,114,10,0.85)';
ctx.strokeStyle='rgb(159,5,123)';
ctx.moveTo(20200,24688);
ctx.lineTo(20200,24628);
ctx.lineTo(20260,24628);
ctx.lineTo(20260,24688);
ctx.lineTo(20200,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,192,157,0.85)';
ctx.strokeStyle='rgb(29,47,119)';
ctx.moveTo(19984,22096);
ctx.lineTo(19984,22036);
ctx.lineTo(20044,22036);
ctx.lineTo(20044,22096);
ctx.lineTo(19984,22096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,27,186,0.85)';
ctx.strokeStyle='rgb(76,78,147)';
ctx.moveTo(19984,23068);
ctx.lineTo(19984,23008);
ctx.lineTo(20044,23008);
ctx.lineTo(20044,23068);
ctx.lineTo(19984,23068);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,70,10,0.85)';
ctx.strokeStyle='rgb(13,165,125)';
ctx.moveTo(20416,21772);
ctx.lineTo(20416,21712);
ctx.lineTo(20476,21712);
ctx.lineTo(20476,21772);
ctx.lineTo(20416,21772);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,65,240,0.85)';
ctx.strokeStyle='rgb(203,43,22)';
ctx.moveTo(20416,22744);
ctx.lineTo(20416,22684);
ctx.lineTo(20476,22684);
ctx.lineTo(20476,22744);
ctx.lineTo(20416,22744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,87,204,0.85)';
ctx.strokeStyle='rgb(101,31,24)';
ctx.moveTo(20200,23176);
ctx.lineTo(20200,23116);
ctx.lineTo(20260,23116);
ctx.lineTo(20260,23176);
ctx.lineTo(20200,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,55,194,0.85)';
ctx.strokeStyle='rgb(254,23,13)';
ctx.moveTo(21388,23176);
ctx.lineTo(21388,23116);
ctx.lineTo(21448,23116);
ctx.lineTo(21448,23176);
ctx.lineTo(21388,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,150,17,0.85)';
ctx.strokeStyle='rgb(108,82,231)';
ctx.moveTo(24142,24034);
ctx.lineTo(24142,23770);
ctx.lineTo(25222,23770);
ctx.lineTo(25222,24034);
ctx.lineTo(24142,24034);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,98,143,0.85)';
ctx.strokeStyle='rgb(105,21,95)';
ctx.moveTo(25438,25546);
ctx.lineTo(25438,25282);
ctx.lineTo(26518,25282);
ctx.lineTo(26518,25546);
ctx.lineTo(25438,25546);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,148,58,0.85)';
ctx.strokeStyle='rgb(93,226,163)';
ctx.moveTo(25438,22522);
ctx.lineTo(25438,22258);
ctx.lineTo(26518,22258);
ctx.lineTo(26518,22522);
ctx.lineTo(25438,22522);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,29,45,0.85)';
ctx.strokeStyle='rgb(136,131,175)';
ctx.moveTo(24142,30082);
ctx.lineTo(24142,29818);
ctx.lineTo(25222,29818);
ctx.lineTo(25222,30082);
ctx.lineTo(24142,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,252,123,0.85)';
ctx.strokeStyle='rgb(214,23,134)';
ctx.moveTo(24142,27058);
ctx.lineTo(24142,26794);
ctx.lineTo(25222,26794);
ctx.lineTo(25222,27058);
ctx.lineTo(24142,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,221,125,0.85)';
ctx.strokeStyle='rgb(166,128,105)';
ctx.moveTo(25438,28570);
ctx.lineTo(25438,28306);
ctx.lineTo(26518,28306);
ctx.lineTo(26518,28570);
ctx.lineTo(25438,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,98,26,0.85)';
ctx.strokeStyle='rgb(221,53,112)';
ctx.moveTo(21604,26632);
ctx.lineTo(21604,26572);
ctx.lineTo(21664,26572);
ctx.lineTo(21664,26632);
ctx.lineTo(21604,26632);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,149,53,0.85)';
ctx.strokeStyle='rgb(223,2,192)';
ctx.moveTo(21064,26632);
ctx.lineTo(21064,26572);
ctx.lineTo(21124,26572);
ctx.lineTo(21124,26632);
ctx.lineTo(21064,26632);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,21,110,0.85)';
ctx.strokeStyle='rgb(40,93,118)';
ctx.moveTo(25438,31462);
ctx.lineTo(25438,31330);
ctx.lineTo(26518,31330);
ctx.lineTo(26518,31462);
ctx.lineTo(25438,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,95,199,0.85)';
ctx.strokeStyle='rgb(153,142,172)';
ctx.moveTo(25438,33946);
ctx.lineTo(25438,32866);
ctx.lineTo(26518,32866);
ctx.lineTo(26518,33946);
ctx.lineTo(25438,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,90,105,0.85)';
ctx.strokeStyle='rgb(131,22,33)';
ctx.moveTo(24142,32650);
ctx.lineTo(24142,31570);
ctx.lineTo(25222,31570);
ctx.lineTo(25222,32650);
ctx.lineTo(24142,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,141,154,0.85)';
ctx.strokeStyle='rgb(5,145,242)';
ctx.moveTo(34162,30082);
ctx.lineTo(34162,29818);
ctx.lineTo(35242,29818);
ctx.lineTo(35242,30082);
ctx.lineTo(34162,30082);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,182,186,0.85)';
ctx.strokeStyle='rgb(80,184,108)';
ctx.moveTo(34162,27058);
ctx.lineTo(34162,26794);
ctx.lineTo(35242,26794);
ctx.lineTo(35242,27058);
ctx.lineTo(34162,27058);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,185,196,0.85)';
ctx.strokeStyle='rgb(97,181,249)';
ctx.moveTo(35458,28570);
ctx.lineTo(35458,28306);
ctx.lineTo(36538,28306);
ctx.lineTo(36538,28570);
ctx.lineTo(35458,28570);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,100,163,0.85)';
ctx.strokeStyle='rgb(113,158,127)';
ctx.moveTo(34162,32650);
ctx.lineTo(34162,31570);
ctx.lineTo(35242,31570);
ctx.lineTo(35242,32650);
ctx.lineTo(34162,32650);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,43,141,0.85)';
ctx.strokeStyle='rgb(128,47,200)';
ctx.moveTo(35458,31462);
ctx.lineTo(35458,31330);
ctx.lineTo(36538,31330);
ctx.lineTo(36538,31462);
ctx.lineTo(35458,31462);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,102,222,0.85)';
ctx.strokeStyle='rgb(24,176,142)';
ctx.moveTo(35458,33946);
ctx.lineTo(35458,32866);
ctx.lineTo(36538,32866);
ctx.lineTo(36538,33946);
ctx.lineTo(35458,33946);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,254,126,0.85)';
ctx.strokeStyle='rgb(48,47,243)';
ctx.moveTo(18256,19828);
ctx.lineTo(18256,19768);
ctx.lineTo(18316,19768);
ctx.lineTo(18316,19828);
ctx.lineTo(18256,19828);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,247,45,0.85)';
ctx.strokeStyle='rgb(223,75,184)';
ctx.moveTo(18256,20692);
ctx.lineTo(18256,20632);
ctx.lineTo(18316,20632);
ctx.lineTo(18316,20692);
ctx.lineTo(18256,20692);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,70,194,0.85)';
ctx.strokeStyle='rgb(219,24,147)';
ctx.moveTo(17824,20152);
ctx.lineTo(17824,20092);
ctx.lineTo(17884,20092);
ctx.lineTo(17884,20152);
ctx.lineTo(17824,20152);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,240,98,0.85)';
ctx.strokeStyle='rgb(105,49,71)';
ctx.moveTo(13504,23284);
ctx.lineTo(13504,23224);
ctx.lineTo(13564,23224);
ctx.lineTo(13564,23284);
ctx.lineTo(13504,23284);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,42,145,0.85)';
ctx.strokeStyle='rgb(209,182,136)';
ctx.moveTo(13396,22960);
ctx.lineTo(13396,22900);
ctx.lineTo(13456,22900);
ctx.lineTo(13456,22960);
ctx.lineTo(13396,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,114,110,0.85)';
ctx.strokeStyle='rgb(49,118,141)';
ctx.moveTo(13396,24688);
ctx.lineTo(13396,24628);
ctx.lineTo(13456,24628);
ctx.lineTo(13456,24688);
ctx.lineTo(13396,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,206,250,0.85)';
ctx.strokeStyle='rgb(32,73,121)';
ctx.moveTo(13504,22204);
ctx.lineTo(13504,22144);
ctx.lineTo(13564,22144);
ctx.lineTo(13564,22204);
ctx.lineTo(13504,22204);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,23,154,0.85)';
ctx.strokeStyle='rgb(76,132,44)';
ctx.moveTo(18472,23716);
ctx.lineTo(18472,23656);
ctx.lineTo(18532,23656);
ctx.lineTo(18532,23716);
ctx.lineTo(18472,23716);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,115,178,0.85)';
ctx.strokeStyle='rgb(9,113,209)';
ctx.moveTo(17176,23176);
ctx.lineTo(17176,23116);
ctx.lineTo(17236,23116);
ctx.lineTo(17236,23176);
ctx.lineTo(17176,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,212,92,0.85)';
ctx.strokeStyle='rgb(85,73,130)';
ctx.moveTo(17176,23932);
ctx.lineTo(17176,23872);
ctx.lineTo(17236,23872);
ctx.lineTo(17236,23932);
ctx.lineTo(17176,23932);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,144,235,0.85)';
ctx.strokeStyle='rgb(177,227,162)';
ctx.moveTo(17824,23176);
ctx.lineTo(17824,23116);
ctx.lineTo(17884,23116);
ctx.lineTo(17884,23176);
ctx.lineTo(17824,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,113,205,0.85)';
ctx.strokeStyle='rgb(32,197,127)';
ctx.moveTo(18796,22960);
ctx.lineTo(18796,22900);
ctx.lineTo(18856,22900);
ctx.lineTo(18856,22960);
ctx.lineTo(18796,22960);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,242,0,0.85)';
ctx.strokeStyle='rgb(72,108,22)';
ctx.moveTo(18796,23824);
ctx.lineTo(18796,23764);
ctx.lineTo(18856,23764);
ctx.lineTo(18856,23824);
ctx.lineTo(18796,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,137,175,0.85)';
ctx.strokeStyle='rgb(59,31,59)';
ctx.moveTo(17284,23176);
ctx.lineTo(17284,23116);
ctx.lineTo(17344,23116);
ctx.lineTo(17344,23176);
ctx.lineTo(17284,23176);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,45,44,0.85)';
ctx.strokeStyle='rgb(136,43,66)';
ctx.moveTo(17284,24688);
ctx.lineTo(17284,24628);
ctx.lineTo(17344,24628);
ctx.lineTo(17344,24688);
ctx.lineTo(17284,24688);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,6,94,0.85)';
ctx.strokeStyle='rgb(155,79,120)';
ctx.moveTo(18472,22636);
ctx.lineTo(18472,22576);
ctx.lineTo(18532,22576);
ctx.lineTo(18532,22636);
ctx.lineTo(18472,22636);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,27,164,0.85)';
ctx.strokeStyle='rgb(129,90,165)';
ctx.moveTo(14584,26632);
ctx.lineTo(14584,26572);
ctx.lineTo(14644,26572);
ctx.lineTo(14644,26632);
ctx.lineTo(14584,26632);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,82,65,0.85)';
ctx.strokeStyle='rgb(40,164,166)';
ctx.moveTo(14584,34084);
ctx.lineTo(14584,34024);
ctx.lineTo(14644,34024);
ctx.lineTo(14644,34084);
ctx.lineTo(14584,34084);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,3,225,0.85)';
ctx.strokeStyle='rgb(172,160,101)';
ctx.moveTo(20848,18640);
ctx.lineTo(20848,18580);
ctx.lineTo(20908,18580);
ctx.lineTo(20908,18640);
ctx.lineTo(20848,18640);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,185,134,0.85)';
ctx.strokeStyle='rgb(203,83,52)';
ctx.moveTo(20848,20260);
ctx.lineTo(20848,20200);
ctx.lineTo(20908,20200);
ctx.lineTo(20908,20260);
ctx.lineTo(20848,20260);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,94,101,0.85)';
ctx.strokeStyle='rgb(153,9,8)';
ctx.moveTo(19228,19936);
ctx.lineTo(19228,19876);
ctx.lineTo(19288,19876);
ctx.lineTo(19288,19936);
ctx.lineTo(19228,19936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,245,219,0.85)';
ctx.strokeStyle='rgb(24,254,136)';
ctx.moveTo(21712,19612);
ctx.lineTo(21712,19552);
ctx.lineTo(21772,19552);
ctx.lineTo(21772,19612);
ctx.lineTo(21712,19612);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,26,117,0.85)';
ctx.strokeStyle='rgb(72,105,72)';
ctx.moveTo(19660,23392);
ctx.lineTo(19660,23332);
ctx.lineTo(19720,23332);
ctx.lineTo(19720,23392);
ctx.lineTo(19660,23392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,70,251,0.85)';
ctx.strokeStyle='rgb(150,157,174)';
ctx.moveTo(21712,21772);
ctx.lineTo(21712,21712);
ctx.lineTo(21772,21712);
ctx.lineTo(21772,21772);
ctx.lineTo(21712,21772);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,163,47,0.85)';
ctx.strokeStyle='rgb(32,247,130)';
ctx.moveTo(19660,24796);
ctx.lineTo(19660,24736);
ctx.lineTo(19720,24736);
ctx.lineTo(19720,24796);
ctx.lineTo(19660,24796);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,138,187,0.85)';
ctx.strokeStyle='rgb(10,165,90)';
ctx.moveTo(19228,22852);
ctx.lineTo(19228,22792);
ctx.lineTo(19288,22792);
ctx.lineTo(19288,22852);
ctx.lineTo(19228,22852);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,22,161,0.85)';
ctx.strokeStyle='rgb(111,133,76)';
ctx.moveTo(17512,17872);
ctx.lineTo(17512,17836);
ctx.lineTo(17548,17836);
ctx.lineTo(17548,17872);
ctx.lineTo(17512,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,121,246,0.85)';
ctx.strokeStyle='rgb(128,148,87)';
ctx.moveTo(18268,18628);
ctx.lineTo(18268,18592);
ctx.lineTo(18304,18592);
ctx.lineTo(18304,18628);
ctx.lineTo(18268,18628);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,247,162,0.85)';
ctx.strokeStyle='rgb(101,69,48)';
ctx.moveTo(17188,18628);
ctx.lineTo(17188,18592);
ctx.lineTo(17224,18592);
ctx.lineTo(17224,18628);
ctx.lineTo(17188,18628);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,61,64,0.85)';
ctx.strokeStyle='rgb(127,21,148)';
ctx.moveTo(16864,20248);
ctx.lineTo(16864,20212);
ctx.lineTo(16900,20212);
ctx.lineTo(16900,20248);
ctx.lineTo(16864,20248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,133,172,0.85)';
ctx.strokeStyle='rgb(87,46,116)';
ctx.moveTo(18268,20680);
ctx.lineTo(18268,20644);
ctx.lineTo(18304,20644);
ctx.lineTo(18304,20680);
ctx.lineTo(18268,20680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,152,233,0.85)';
ctx.strokeStyle='rgb(23,86,31)';
ctx.moveTo(18484,19816);
ctx.lineTo(18484,19780);
ctx.lineTo(18520,19780);
ctx.lineTo(18520,19816);
ctx.lineTo(18484,19816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,56,7,0.85)';
ctx.strokeStyle='rgb(196,12,100)';
ctx.moveTo(18376,19600);
ctx.lineTo(18376,19564);
ctx.lineTo(18412,19564);
ctx.lineTo(18412,19600);
ctx.lineTo(18376,19600);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,120,2,0.85)';
ctx.strokeStyle='rgb(82,71,6)';
ctx.moveTo(17728,20140);
ctx.lineTo(17728,20104);
ctx.lineTo(17764,20104);
ctx.lineTo(17764,20140);
ctx.lineTo(17728,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,4,208,0.85)';
ctx.strokeStyle='rgb(160,188,63)';
ctx.moveTo(17404,20140);
ctx.lineTo(17404,20104);
ctx.lineTo(17440,20104);
ctx.lineTo(17440,20140);
ctx.lineTo(17404,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,226,68,0.85)';
ctx.strokeStyle='rgb(174,153,78)';
ctx.moveTo(10600,20140);
ctx.lineTo(10600,20104);
ctx.lineTo(10636,20104);
ctx.lineTo(10636,20140);
ctx.lineTo(10600,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,178,26,0.85)';
ctx.strokeStyle='rgb(127,190,70)';
ctx.moveTo(13408,21112);
ctx.lineTo(13408,21076);
ctx.lineTo(13444,21076);
ctx.lineTo(13444,21112);
ctx.lineTo(13408,21112);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,197,93,0.85)';
ctx.strokeStyle='rgb(240,232,250)';
ctx.moveTo(13192,21112);
ctx.lineTo(13192,21076);
ctx.lineTo(13228,21076);
ctx.lineTo(13228,21112);
ctx.lineTo(13192,21112);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,250,64,0.85)';
ctx.strokeStyle='rgb(226,3,217)';
ctx.moveTo(13084,19600);
ctx.lineTo(13084,19564);
ctx.lineTo(13120,19564);
ctx.lineTo(13120,19600);
ctx.lineTo(13084,19600);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,227,96,0.85)';
ctx.strokeStyle='rgb(213,18,28)';
ctx.moveTo(13948,20140);
ctx.lineTo(13948,20104);
ctx.lineTo(13984,20104);
ctx.lineTo(13984,20140);
ctx.lineTo(13948,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,165,190,0.85)';
ctx.strokeStyle='rgb(232,169,79)';
ctx.moveTo(13516,22192);
ctx.lineTo(13516,22156);
ctx.lineTo(13552,22156);
ctx.lineTo(13552,22192);
ctx.lineTo(13516,22192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,227,209,0.85)';
ctx.strokeStyle='rgb(57,152,146)';
ctx.moveTo(13948,23056);
ctx.lineTo(13948,23020);
ctx.lineTo(13984,23020);
ctx.lineTo(13984,23056);
ctx.lineTo(13948,23056);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,253,74,0.85)';
ctx.strokeStyle='rgb(175,238,90)';
ctx.moveTo(12328,22948);
ctx.lineTo(12328,22912);
ctx.lineTo(12364,22912);
ctx.lineTo(12364,22948);
ctx.lineTo(12328,22948);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,59,189,0.85)';
ctx.strokeStyle='rgb(171,73,109)';
ctx.moveTo(13408,22948);
ctx.lineTo(13408,22912);
ctx.lineTo(13444,22912);
ctx.lineTo(13444,22948);
ctx.lineTo(13408,22948);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,58,66,0.85)';
ctx.strokeStyle='rgb(173,245,115)';
ctx.moveTo(13408,24676);
ctx.lineTo(13408,24640);
ctx.lineTo(13444,24640);
ctx.lineTo(13444,24676);
ctx.lineTo(13408,24676);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,221,146,0.85)';
ctx.strokeStyle='rgb(4,137,105)';
ctx.moveTo(13732,23164);
ctx.lineTo(13732,23128);
ctx.lineTo(13768,23128);
ctx.lineTo(13768,23164);
ctx.lineTo(13732,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,0,44,0.85)';
ctx.strokeStyle='rgb(221,56,65)';
ctx.moveTo(12976,23164);
ctx.lineTo(12976,23128);
ctx.lineTo(13012,23128);
ctx.lineTo(13012,23164);
ctx.lineTo(12976,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,74,134,0.85)';
ctx.strokeStyle='rgb(208,241,112)';
ctx.moveTo(13732,22948);
ctx.lineTo(13732,22912);
ctx.lineTo(13768,22912);
ctx.lineTo(13768,22948);
ctx.lineTo(13732,22948);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,31,23,0.85)';
ctx.strokeStyle='rgb(90,115,190)';
ctx.moveTo(13516,23272);
ctx.lineTo(13516,23236);
ctx.lineTo(13552,23236);
ctx.lineTo(13552,23272);
ctx.lineTo(13516,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,112,72,0.85)';
ctx.strokeStyle='rgb(150,7,236)';
ctx.moveTo(18592,23704);
ctx.lineTo(18592,23668);
ctx.lineTo(18628,23668);
ctx.lineTo(18628,23704);
ctx.lineTo(18592,23704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,92,168,0.85)';
ctx.strokeStyle='rgb(61,150,44)';
ctx.moveTo(18484,22624);
ctx.lineTo(18484,22588);
ctx.lineTo(18520,22588);
ctx.lineTo(18520,22624);
ctx.lineTo(18484,22624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,60,79,0.85)';
ctx.strokeStyle='rgb(215,120,239)';
ctx.moveTo(18376,23920);
ctx.lineTo(18376,23884);
ctx.lineTo(18412,23884);
ctx.lineTo(18412,23920);
ctx.lineTo(18376,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,42,143,0.85)';
ctx.strokeStyle='rgb(36,16,165)';
ctx.moveTo(17080,23164);
ctx.lineTo(17080,23128);
ctx.lineTo(17116,23128);
ctx.lineTo(17116,23164);
ctx.lineTo(17080,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,139,225,0.85)';
ctx.strokeStyle='rgb(133,168,175)';
ctx.moveTo(17080,22948);
ctx.lineTo(17080,22912);
ctx.lineTo(17116,22912);
ctx.lineTo(17116,22948);
ctx.lineTo(17080,22948);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,137,39,0.85)';
ctx.strokeStyle='rgb(99,90,116)';
ctx.moveTo(17836,23164);
ctx.lineTo(17836,23128);
ctx.lineTo(17872,23128);
ctx.lineTo(17872,23164);
ctx.lineTo(17836,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,0,126,0.85)';
ctx.strokeStyle='rgb(46,202,247)';
ctx.moveTo(17836,23380);
ctx.lineTo(17836,23344);
ctx.lineTo(17872,23344);
ctx.lineTo(17872,23380);
ctx.lineTo(17836,23380);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,85,207,0.85)';
ctx.strokeStyle='rgb(217,22,27)';
ctx.moveTo(17512,23056);
ctx.lineTo(17512,23020);
ctx.lineTo(17548,23020);
ctx.lineTo(17548,23056);
ctx.lineTo(17512,23056);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,107,174,0.85)';
ctx.strokeStyle='rgb(58,241,82)';
ctx.moveTo(18808,23812);
ctx.lineTo(18808,23776);
ctx.lineTo(18844,23776);
ctx.lineTo(18844,23812);
ctx.lineTo(18808,23812);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,112,90,0.85)';
ctx.strokeStyle='rgb(147,238,208)';
ctx.moveTo(18808,22948);
ctx.lineTo(18808,22912);
ctx.lineTo(18844,22912);
ctx.lineTo(18844,22948);
ctx.lineTo(18808,22948);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,95,119,0.85)';
ctx.strokeStyle='rgb(106,114,187)';
ctx.moveTo(17296,23164);
ctx.lineTo(17296,23128);
ctx.lineTo(17332,23128);
ctx.lineTo(17332,23164);
ctx.lineTo(17296,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,146,29,0.85)';
ctx.strokeStyle='rgb(148,129,8)';
ctx.moveTo(17404,22840);
ctx.lineTo(17404,22804);
ctx.lineTo(17440,22804);
ctx.lineTo(17440,22840);
ctx.lineTo(17404,22840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,134,30,0.85)';
ctx.strokeStyle='rgb(11,5,78)';
ctx.moveTo(17188,22840);
ctx.lineTo(17188,22804);
ctx.lineTo(17224,22804);
ctx.lineTo(17224,22840);
ctx.lineTo(17188,22840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,154,20,0.85)';
ctx.strokeStyle='rgb(151,168,63)';
ctx.moveTo(13084,26620);
ctx.lineTo(13084,26584);
ctx.lineTo(13120,26584);
ctx.lineTo(13120,26620);
ctx.lineTo(13084,26620);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,26,12,0.85)';
ctx.strokeStyle='rgb(43,106,204)';
ctx.moveTo(16108,34072);
ctx.lineTo(16108,34036);
ctx.lineTo(16144,34036);
ctx.lineTo(16144,34072);
ctx.lineTo(16108,34072);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,207,157,0.85)';
ctx.strokeStyle='rgb(248,94,94)';
ctx.moveTo(21724,18628);
ctx.lineTo(21724,18592);
ctx.lineTo(21760,18592);
ctx.lineTo(21760,18628);
ctx.lineTo(21724,18628);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,45,249,0.85)';
ctx.strokeStyle='rgb(110,90,184)';
ctx.moveTo(20752,20680);
ctx.lineTo(20752,20644);
ctx.lineTo(20788,20644);
ctx.lineTo(20788,20680);
ctx.lineTo(20752,20680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,181,62,0.85)';
ctx.strokeStyle='rgb(7,227,100)';
ctx.moveTo(20320,20248);
ctx.lineTo(20320,20212);
ctx.lineTo(20356,20212);
ctx.lineTo(20356,20248);
ctx.lineTo(20320,20248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,143,149,0.85)';
ctx.strokeStyle='rgb(164,81,160)';
ctx.moveTo(20860,20248);
ctx.lineTo(20860,20212);
ctx.lineTo(20896,20212);
ctx.lineTo(20896,20248);
ctx.lineTo(20860,20248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,177,110,0.85)';
ctx.strokeStyle='rgb(134,132,95)';
ctx.moveTo(19564,19600);
ctx.lineTo(19564,19564);
ctx.lineTo(19600,19564);
ctx.lineTo(19600,19600);
ctx.lineTo(19564,19600);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,165,228,0.85)';
ctx.strokeStyle='rgb(248,24,188)';
ctx.moveTo(20536,20140);
ctx.lineTo(20536,20104);
ctx.lineTo(20572,20104);
ctx.lineTo(20572,20140);
ctx.lineTo(20536,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,26,97,0.85)';
ctx.strokeStyle='rgb(114,202,194)';
ctx.moveTo(20968,19924);
ctx.lineTo(20968,19888);
ctx.lineTo(21004,19888);
ctx.lineTo(21004,19924);
ctx.lineTo(20968,19924);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,186,194,0.85)';
ctx.strokeStyle='rgb(249,98,222)';
ctx.moveTo(19132,19924);
ctx.lineTo(19132,19888);
ctx.lineTo(19168,19888);
ctx.lineTo(19168,19924);
ctx.lineTo(19132,19924);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,224,211,0.85)';
ctx.strokeStyle='rgb(93,253,82)';
ctx.moveTo(21832,20680);
ctx.lineTo(21832,20644);
ctx.lineTo(21868,20644);
ctx.lineTo(21868,20680);
ctx.lineTo(21832,20680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,84,156,0.85)';
ctx.strokeStyle='rgb(199,12,78)';
ctx.moveTo(23020,19492);
ctx.lineTo(23020,19456);
ctx.lineTo(23056,19456);
ctx.lineTo(23056,19492);
ctx.lineTo(23020,19492);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,252,37,0.85)';
ctx.strokeStyle='rgb(7,251,85)';
ctx.moveTo(21940,19492);
ctx.lineTo(21940,19456);
ctx.lineTo(21976,19456);
ctx.lineTo(21976,19492);
ctx.lineTo(21940,19492);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,211,168,0.85)';
ctx.strokeStyle='rgb(228,36,153)';
ctx.moveTo(21724,19600);
ctx.lineTo(21724,19564);
ctx.lineTo(21760,19564);
ctx.lineTo(21760,19600);
ctx.lineTo(21724,19600);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,239,2,0.85)';
ctx.strokeStyle='rgb(49,178,20)';
ctx.moveTo(21076,23056);
ctx.lineTo(21076,23020);
ctx.lineTo(21112,23020);
ctx.lineTo(21112,23056);
ctx.lineTo(21076,23056);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,245,125,0.85)';
ctx.strokeStyle='rgb(82,6,205)';
ctx.moveTo(21076,23272);
ctx.lineTo(21076,23236);
ctx.lineTo(21112,23236);
ctx.lineTo(21112,23272);
ctx.lineTo(21076,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,88,135,0.85)';
ctx.strokeStyle='rgb(52,114,223)';
ctx.moveTo(20644,23056);
ctx.lineTo(20644,23020);
ctx.lineTo(20680,23020);
ctx.lineTo(20680,23056);
ctx.lineTo(20644,23056);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,236,210,0.85)';
ctx.strokeStyle='rgb(145,156,148)';
ctx.moveTo(19672,23920);
ctx.lineTo(19672,23884);
ctx.lineTo(19708,23884);
ctx.lineTo(19708,23920);
ctx.lineTo(19672,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,145,152,0.85)';
ctx.strokeStyle='rgb(18,75,242)';
ctx.moveTo(19672,24784);
ctx.lineTo(19672,24748);
ctx.lineTo(19708,24748);
ctx.lineTo(19708,24784);
ctx.lineTo(19672,24784);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,19,83,0.85)';
ctx.strokeStyle='rgb(208,252,136)';
ctx.moveTo(21724,21760);
ctx.lineTo(21724,21724);
ctx.lineTo(21760,21724);
ctx.lineTo(21760,21760);
ctx.lineTo(21724,21760);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,157,157,0.85)';
ctx.strokeStyle='rgb(205,119,54)';
ctx.moveTo(20968,24244);
ctx.lineTo(20968,24208);
ctx.lineTo(21004,24208);
ctx.lineTo(21004,24244);
ctx.lineTo(20968,24244);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,121,78,0.85)';
ctx.strokeStyle='rgb(200,21,19)';
ctx.moveTo(19996,24244);
ctx.lineTo(19996,24208);
ctx.lineTo(20032,24208);
ctx.lineTo(20032,24244);
ctx.lineTo(19996,24244);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,214,100,0.85)';
ctx.strokeStyle='rgb(52,174,78)';
ctx.moveTo(19672,24568);
ctx.lineTo(19672,24532);
ctx.lineTo(19708,24532);
ctx.lineTo(19708,24568);
ctx.lineTo(19672,24568);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,19,56,0.85)';
ctx.strokeStyle='rgb(19,33,3)';
ctx.moveTo(19456,24568);
ctx.lineTo(19456,24532);
ctx.lineTo(19492,24532);
ctx.lineTo(19492,24568);
ctx.lineTo(19456,24568);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,175,53,0.85)';
ctx.strokeStyle='rgb(22,129,223)';
ctx.moveTo(20212,24676);
ctx.lineTo(20212,24640);
ctx.lineTo(20248,24640);
ctx.lineTo(20248,24676);
ctx.lineTo(20212,24676);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,165,166,0.85)';
ctx.strokeStyle='rgb(251,123,89)';
ctx.moveTo(19456,24676);
ctx.lineTo(19456,24640);
ctx.lineTo(19492,24640);
ctx.lineTo(19492,24676);
ctx.lineTo(19456,24676);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,11,200,0.85)';
ctx.strokeStyle='rgb(80,94,67)';
ctx.moveTo(21400,23380);
ctx.lineTo(21400,23344);
ctx.lineTo(21436,23344);
ctx.lineTo(21436,23380);
ctx.lineTo(21400,23380);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,211,230,0.85)';
ctx.strokeStyle='rgb(122,103,63)';
ctx.moveTo(21400,23164);
ctx.lineTo(21400,23128);
ctx.lineTo(21436,23128);
ctx.lineTo(21436,23164);
ctx.lineTo(21400,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,47,238,0.85)';
ctx.strokeStyle='rgb(111,237,106)';
ctx.moveTo(20212,23164);
ctx.lineTo(20212,23128);
ctx.lineTo(20248,23128);
ctx.lineTo(20248,23164);
ctx.lineTo(20212,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,22,165,0.85)';
ctx.strokeStyle='rgb(44,170,7)';
ctx.moveTo(21616,22840);
ctx.lineTo(21616,22804);
ctx.lineTo(21652,22804);
ctx.lineTo(21652,22840);
ctx.lineTo(21616,22840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,117,117,0.85)';
ctx.strokeStyle='rgb(45,197,97)';
ctx.moveTo(19240,22840);
ctx.lineTo(19240,22804);
ctx.lineTo(19276,22804);
ctx.lineTo(19276,22840);
ctx.lineTo(19240,22840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,60,154,0.85)';
ctx.strokeStyle='rgb(219,140,126)';
ctx.moveTo(23236,23272);
ctx.lineTo(23236,23236);
ctx.lineTo(23272,23236);
ctx.lineTo(23272,23272);
ctx.lineTo(23236,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,192,66,0.85)';
ctx.strokeStyle='rgb(152,126,223)';
ctx.moveTo(20320,22948);
ctx.lineTo(20320,22912);
ctx.lineTo(20356,22912);
ctx.lineTo(20356,22948);
ctx.lineTo(20320,22948);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,206,41,0.85)';
ctx.strokeStyle='rgb(116,160,78)';
ctx.moveTo(19888,22948);
ctx.lineTo(19888,22912);
ctx.lineTo(19924,22912);
ctx.lineTo(19924,22948);
ctx.lineTo(19888,22948);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,99,194,0.85)';
ctx.strokeStyle='rgb(101,163,94)';
ctx.moveTo(17404,17116);
ctx.lineTo(17404,17080);
ctx.lineTo(17440,17080);
ctx.lineTo(17440,17116);
ctx.lineTo(17404,17116);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,11,33,0.85)';
ctx.strokeStyle='rgb(14,78,142)';
ctx.moveTo(24184,8704);
ctx.lineTo(24184,8668);
ctx.lineTo(24220,8668);
ctx.lineTo(24220,8704);
ctx.lineTo(24184,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,84,215,0.85)';
ctx.strokeStyle='rgb(115,48,39)';
ctx.moveTo(24280,8704);
ctx.lineTo(24280,8668);
ctx.lineTo(24316,8668);
ctx.lineTo(24316,8704);
ctx.lineTo(24280,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,87,236,0.85)';
ctx.strokeStyle='rgb(130,56,11)';
ctx.moveTo(24376,8704);
ctx.lineTo(24376,8668);
ctx.lineTo(24412,8668);
ctx.lineTo(24412,8704);
ctx.lineTo(24376,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,36,9,0.85)';
ctx.strokeStyle='rgb(223,112,84)';
ctx.moveTo(24472,8704);
ctx.lineTo(24472,8668);
ctx.lineTo(24508,8668);
ctx.lineTo(24508,8704);
ctx.lineTo(24472,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,142,24,0.85)';
ctx.strokeStyle='rgb(141,47,202)';
ctx.moveTo(24568,8704);
ctx.lineTo(24568,8668);
ctx.lineTo(24604,8668);
ctx.lineTo(24604,8704);
ctx.lineTo(24568,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,149,180,0.85)';
ctx.strokeStyle='rgb(203,7,228)';
ctx.moveTo(24664,8704);
ctx.lineTo(24664,8668);
ctx.lineTo(24700,8668);
ctx.lineTo(24700,8704);
ctx.lineTo(24664,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,177,87,0.85)';
ctx.strokeStyle='rgb(108,68,56)';
ctx.moveTo(24760,8704);
ctx.lineTo(24760,8668);
ctx.lineTo(24796,8668);
ctx.lineTo(24796,8704);
ctx.lineTo(24760,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,51,48,0.85)';
ctx.strokeStyle='rgb(2,12,160)';
ctx.moveTo(24856,8704);
ctx.lineTo(24856,8668);
ctx.lineTo(24892,8668);
ctx.lineTo(24892,8704);
ctx.lineTo(24856,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,170,147,0.85)';
ctx.strokeStyle='rgb(228,55,0)';
ctx.moveTo(24952,8704);
ctx.lineTo(24952,8668);
ctx.lineTo(24988,8668);
ctx.lineTo(24988,8704);
ctx.lineTo(24952,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,194,199,0.85)';
ctx.strokeStyle='rgb(109,70,72)';
ctx.moveTo(25048,8704);
ctx.lineTo(25048,8668);
ctx.lineTo(25084,8668);
ctx.lineTo(25084,8704);
ctx.lineTo(25048,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,133,48,0.85)';
ctx.strokeStyle='rgb(109,47,240)';
ctx.moveTo(25144,8704);
ctx.lineTo(25144,8668);
ctx.lineTo(25180,8668);
ctx.lineTo(25180,8704);
ctx.lineTo(25144,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,72,4,0.85)';
ctx.strokeStyle='rgb(70,75,246)';
ctx.moveTo(34204,8704);
ctx.lineTo(34204,8668);
ctx.lineTo(34240,8668);
ctx.lineTo(34240,8704);
ctx.lineTo(34204,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,16,205,0.85)';
ctx.strokeStyle='rgb(253,69,225)';
ctx.moveTo(34300,8704);
ctx.lineTo(34300,8668);
ctx.lineTo(34336,8668);
ctx.lineTo(34336,8704);
ctx.lineTo(34300,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,180,233,0.85)';
ctx.strokeStyle='rgb(190,178,95)';
ctx.moveTo(34396,8704);
ctx.lineTo(34396,8668);
ctx.lineTo(34432,8668);
ctx.lineTo(34432,8704);
ctx.lineTo(34396,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,145,81,0.85)';
ctx.strokeStyle='rgb(103,240,119)';
ctx.moveTo(34492,8704);
ctx.lineTo(34492,8668);
ctx.lineTo(34528,8668);
ctx.lineTo(34528,8704);
ctx.lineTo(34492,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,68,148,0.85)';
ctx.strokeStyle='rgb(220,39,53)';
ctx.moveTo(34588,8704);
ctx.lineTo(34588,8668);
ctx.lineTo(34624,8668);
ctx.lineTo(34624,8704);
ctx.lineTo(34588,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,82,133,0.85)';
ctx.strokeStyle='rgb(26,36,243)';
ctx.moveTo(34684,8704);
ctx.lineTo(34684,8668);
ctx.lineTo(34720,8668);
ctx.lineTo(34720,8704);
ctx.lineTo(34684,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,246,235,0.85)';
ctx.strokeStyle='rgb(214,126,119)';
ctx.moveTo(34780,8704);
ctx.lineTo(34780,8668);
ctx.lineTo(34816,8668);
ctx.lineTo(34816,8704);
ctx.lineTo(34780,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,3,140,0.85)';
ctx.strokeStyle='rgb(182,134,107)';
ctx.moveTo(34876,8704);
ctx.lineTo(34876,8668);
ctx.lineTo(34912,8668);
ctx.lineTo(34912,8704);
ctx.lineTo(34876,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,2,29,0.85)';
ctx.strokeStyle='rgb(15,247,130)';
ctx.moveTo(34972,8704);
ctx.lineTo(34972,8668);
ctx.lineTo(35008,8668);
ctx.lineTo(35008,8704);
ctx.lineTo(34972,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,199,31,0.85)';
ctx.strokeStyle='rgb(126,121,164)';
ctx.moveTo(35068,8704);
ctx.lineTo(35068,8668);
ctx.lineTo(35104,8668);
ctx.lineTo(35104,8704);
ctx.lineTo(35068,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,90,131,0.85)';
ctx.strokeStyle='rgb(28,113,211)';
ctx.moveTo(35164,8704);
ctx.lineTo(35164,8668);
ctx.lineTo(35200,8668);
ctx.lineTo(35200,8704);
ctx.lineTo(35164,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,93,206,0.85)';
ctx.strokeStyle='rgb(231,179,94)';
ctx.moveTo(34300,2818);
ctx.lineTo(34300,2782);
ctx.lineTo(34336,2782);
ctx.lineTo(34336,2818);
ctx.lineTo(34300,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,161,42,0.85)';
ctx.strokeStyle='rgb(36,92,108)';
ctx.moveTo(34300,2104);
ctx.lineTo(34300,2068);
ctx.lineTo(34336,2068);
ctx.lineTo(34336,2104);
ctx.lineTo(34300,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,119,39,0.85)';
ctx.strokeStyle='rgb(87,61,159)';
ctx.moveTo(34300,2008);
ctx.lineTo(34300,1972);
ctx.lineTo(34336,1972);
ctx.lineTo(34336,2008);
ctx.lineTo(34300,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,31,69,0.85)';
ctx.strokeStyle='rgb(144,34,24)';
ctx.moveTo(34300,1912);
ctx.lineTo(34300,1876);
ctx.lineTo(34336,1876);
ctx.lineTo(34336,1912);
ctx.lineTo(34300,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,205,250,0.85)';
ctx.strokeStyle='rgb(157,249,88)';
ctx.moveTo(34300,1816);
ctx.lineTo(34300,1780);
ctx.lineTo(34336,1780);
ctx.lineTo(34336,1816);
ctx.lineTo(34300,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,165,19,0.85)';
ctx.strokeStyle='rgb(193,130,169)';
ctx.moveTo(34300,1720);
ctx.lineTo(34300,1684);
ctx.lineTo(34336,1684);
ctx.lineTo(34336,1720);
ctx.lineTo(34300,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,210,33,0.85)';
ctx.strokeStyle='rgb(132,70,72)';
ctx.moveTo(34300,1624);
ctx.lineTo(34300,1588);
ctx.lineTo(34336,1588);
ctx.lineTo(34336,1624);
ctx.lineTo(34300,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,81,98,0.85)';
ctx.strokeStyle='rgb(100,239,185)';
ctx.moveTo(34300,2488);
ctx.lineTo(34300,2452);
ctx.lineTo(34336,2452);
ctx.lineTo(34336,2488);
ctx.lineTo(34300,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,56,32,0.85)';
ctx.strokeStyle='rgb(84,236,5)';
ctx.moveTo(34300,2392);
ctx.lineTo(34300,2356);
ctx.lineTo(34336,2356);
ctx.lineTo(34336,2392);
ctx.lineTo(34300,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,46,48,0.85)';
ctx.strokeStyle='rgb(30,165,96)';
ctx.moveTo(34300,2296);
ctx.lineTo(34300,2260);
ctx.lineTo(34336,2260);
ctx.lineTo(34336,2296);
ctx.lineTo(34300,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,249,73,0.85)';
ctx.strokeStyle='rgb(116,1,196)';
ctx.moveTo(34300,2200);
ctx.lineTo(34300,2164);
ctx.lineTo(34336,2164);
ctx.lineTo(34336,2200);
ctx.lineTo(34300,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,133,233,0.85)';
ctx.strokeStyle='rgb(97,229,69)';
ctx.moveTo(34300,2584);
ctx.lineTo(34300,2548);
ctx.lineTo(34336,2548);
ctx.lineTo(34336,2584);
ctx.lineTo(34300,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,130,28,0.85)';
ctx.strokeStyle='rgb(87,199,136)';
ctx.moveTo(35980,808);
ctx.lineTo(35980,772);
ctx.lineTo(36016,772);
ctx.lineTo(36016,808);
ctx.lineTo(35980,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,234,177,0.85)';
ctx.strokeStyle='rgb(51,75,202)';
ctx.moveTo(35980,712);
ctx.lineTo(35980,676);
ctx.lineTo(36016,676);
ctx.lineTo(36016,712);
ctx.lineTo(35980,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,50,132,0.85)';
ctx.strokeStyle='rgb(219,65,80)';
ctx.moveTo(35980,616);
ctx.lineTo(35980,580);
ctx.lineTo(36016,580);
ctx.lineTo(36016,616);
ctx.lineTo(35980,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,226,30,0.85)';
ctx.strokeStyle='rgb(227,168,41)';
ctx.moveTo(35980,520);
ctx.lineTo(35980,484);
ctx.lineTo(36016,484);
ctx.lineTo(36016,520);
ctx.lineTo(35980,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,88,212,0.85)';
ctx.strokeStyle='rgb(174,78,62)';
ctx.moveTo(35980,424);
ctx.lineTo(35980,388);
ctx.lineTo(36016,388);
ctx.lineTo(36016,424);
ctx.lineTo(35980,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,218,179,0.85)';
ctx.strokeStyle='rgb(195,106,150)';
ctx.moveTo(35980,328);
ctx.lineTo(35980,292);
ctx.lineTo(36016,292);
ctx.lineTo(36016,328);
ctx.lineTo(35980,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,240,114,0.85)';
ctx.strokeStyle='rgb(51,166,190)';
ctx.moveTo(36076,808);
ctx.lineTo(36076,772);
ctx.lineTo(36112,772);
ctx.lineTo(36112,808);
ctx.lineTo(36076,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,24,155,0.85)';
ctx.strokeStyle='rgb(221,71,47)';
ctx.moveTo(36172,808);
ctx.lineTo(36172,772);
ctx.lineTo(36208,772);
ctx.lineTo(36208,808);
ctx.lineTo(36172,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,12,180,0.85)';
ctx.strokeStyle='rgb(195,53,117)';
ctx.moveTo(36268,808);
ctx.lineTo(36268,772);
ctx.lineTo(36304,772);
ctx.lineTo(36304,808);
ctx.lineTo(36268,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,230,10,0.85)';
ctx.strokeStyle='rgb(219,87,124)';
ctx.moveTo(36364,808);
ctx.lineTo(36364,772);
ctx.lineTo(36400,772);
ctx.lineTo(36400,808);
ctx.lineTo(36364,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,90,181,0.85)';
ctx.strokeStyle='rgb(10,130,241)';
ctx.moveTo(36460,808);
ctx.lineTo(36460,772);
ctx.lineTo(36496,772);
ctx.lineTo(36496,808);
ctx.lineTo(36460,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,39,194,0.85)';
ctx.strokeStyle='rgb(63,94,232)';
ctx.moveTo(36076,328);
ctx.lineTo(36076,292);
ctx.lineTo(36112,292);
ctx.lineTo(36112,328);
ctx.lineTo(36076,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,73,135,0.85)';
ctx.strokeStyle='rgb(106,88,229)';
ctx.moveTo(36076,712);
ctx.lineTo(36076,676);
ctx.lineTo(36112,676);
ctx.lineTo(36112,712);
ctx.lineTo(36076,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,227,4,0.85)';
ctx.strokeStyle='rgb(30,176,180)';
ctx.moveTo(36172,712);
ctx.lineTo(36172,676);
ctx.lineTo(36208,676);
ctx.lineTo(36208,712);
ctx.lineTo(36172,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,193,86,0.85)';
ctx.strokeStyle='rgb(18,101,203)';
ctx.moveTo(36172,616);
ctx.lineTo(36172,580);
ctx.lineTo(36208,580);
ctx.lineTo(36208,616);
ctx.lineTo(36172,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,29,213,0.85)';
ctx.strokeStyle='rgb(97,193,31)';
ctx.moveTo(36172,520);
ctx.lineTo(36172,484);
ctx.lineTo(36208,484);
ctx.lineTo(36208,520);
ctx.lineTo(36172,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,37,222,0.85)';
ctx.strokeStyle='rgb(132,14,201)';
ctx.moveTo(36172,424);
ctx.lineTo(36172,388);
ctx.lineTo(36208,388);
ctx.lineTo(36208,424);
ctx.lineTo(36172,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,223,251,0.85)';
ctx.strokeStyle='rgb(93,5,141)';
ctx.moveTo(36172,328);
ctx.lineTo(36172,292);
ctx.lineTo(36208,292);
ctx.lineTo(36208,328);
ctx.lineTo(36172,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,73,246,0.85)';
ctx.strokeStyle='rgb(156,150,60)';
ctx.moveTo(36076,616);
ctx.lineTo(36076,580);
ctx.lineTo(36112,580);
ctx.lineTo(36112,616);
ctx.lineTo(36076,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,75,0,0.85)';
ctx.strokeStyle='rgb(5,21,52)';
ctx.moveTo(36268,712);
ctx.lineTo(36268,676);
ctx.lineTo(36304,676);
ctx.lineTo(36304,712);
ctx.lineTo(36268,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,0,254,0.85)';
ctx.strokeStyle='rgb(26,106,41)';
ctx.moveTo(36268,616);
ctx.lineTo(36268,580);
ctx.lineTo(36304,580);
ctx.lineTo(36304,616);
ctx.lineTo(36268,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,228,149,0.85)';
ctx.strokeStyle='rgb(109,157,219)';
ctx.moveTo(36268,520);
ctx.lineTo(36268,484);
ctx.lineTo(36304,484);
ctx.lineTo(36304,520);
ctx.lineTo(36268,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,226,127,0.85)';
ctx.strokeStyle='rgb(77,219,233)';
ctx.moveTo(36268,424);
ctx.lineTo(36268,388);
ctx.lineTo(36304,388);
ctx.lineTo(36304,424);
ctx.lineTo(36268,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,222,78,0.85)';
ctx.strokeStyle='rgb(179,246,157)';
ctx.moveTo(36268,328);
ctx.lineTo(36268,292);
ctx.lineTo(36304,292);
ctx.lineTo(36304,328);
ctx.lineTo(36268,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,22,6,0.85)';
ctx.strokeStyle='rgb(128,189,108)';
ctx.moveTo(36076,520);
ctx.lineTo(36076,484);
ctx.lineTo(36112,484);
ctx.lineTo(36112,520);
ctx.lineTo(36076,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,91,68,0.85)';
ctx.strokeStyle='rgb(154,165,42)';
ctx.moveTo(36364,712);
ctx.lineTo(36364,676);
ctx.lineTo(36400,676);
ctx.lineTo(36400,712);
ctx.lineTo(36364,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,135,6,0.85)';
ctx.strokeStyle='rgb(48,228,48)';
ctx.moveTo(36364,616);
ctx.lineTo(36364,580);
ctx.lineTo(36400,580);
ctx.lineTo(36400,616);
ctx.lineTo(36364,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,162,213,0.85)';
ctx.strokeStyle='rgb(87,112,107)';
ctx.moveTo(36364,520);
ctx.lineTo(36364,484);
ctx.lineTo(36400,484);
ctx.lineTo(36400,520);
ctx.lineTo(36364,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,212,76,0.85)';
ctx.strokeStyle='rgb(122,61,179)';
ctx.moveTo(36364,424);
ctx.lineTo(36364,388);
ctx.lineTo(36400,388);
ctx.lineTo(36400,424);
ctx.lineTo(36364,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,186,207,0.85)';
ctx.strokeStyle='rgb(136,110,30)';
ctx.moveTo(36364,328);
ctx.lineTo(36364,292);
ctx.lineTo(36400,292);
ctx.lineTo(36400,328);
ctx.lineTo(36364,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,74,107,0.85)';
ctx.strokeStyle='rgb(2,65,110)';
ctx.moveTo(36076,424);
ctx.lineTo(36076,388);
ctx.lineTo(36112,388);
ctx.lineTo(36112,424);
ctx.lineTo(36076,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,148,67,0.85)';
ctx.strokeStyle='rgb(178,61,188)';
ctx.moveTo(36460,712);
ctx.lineTo(36460,676);
ctx.lineTo(36496,676);
ctx.lineTo(36496,712);
ctx.lineTo(36460,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,65,81,0.85)';
ctx.strokeStyle='rgb(133,78,122)';
ctx.moveTo(36460,616);
ctx.lineTo(36460,580);
ctx.lineTo(36496,580);
ctx.lineTo(36496,616);
ctx.lineTo(36460,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,17,20,0.85)';
ctx.strokeStyle='rgb(164,33,28)';
ctx.moveTo(36460,520);
ctx.lineTo(36460,484);
ctx.lineTo(36496,484);
ctx.lineTo(36496,520);
ctx.lineTo(36460,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,143,81,0.85)';
ctx.strokeStyle='rgb(213,125,136)';
ctx.moveTo(36460,424);
ctx.lineTo(36460,388);
ctx.lineTo(36496,388);
ctx.lineTo(36496,424);
ctx.lineTo(36460,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,87,18,0.85)';
ctx.strokeStyle='rgb(198,239,143)';
ctx.moveTo(36460,328);
ctx.lineTo(36460,292);
ctx.lineTo(36496,292);
ctx.lineTo(36496,328);
ctx.lineTo(36460,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,40,208,0.85)';
ctx.strokeStyle='rgb(81,241,222)';
ctx.moveTo(35596,808);
ctx.lineTo(35596,772);
ctx.lineTo(35632,772);
ctx.lineTo(35632,808);
ctx.lineTo(35596,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,239,51,0.85)';
ctx.strokeStyle='rgb(164,252,118)';
ctx.moveTo(35692,808);
ctx.lineTo(35692,772);
ctx.lineTo(35728,772);
ctx.lineTo(35728,808);
ctx.lineTo(35692,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,16,113,0.85)';
ctx.strokeStyle='rgb(147,90,59)';
ctx.moveTo(35788,808);
ctx.lineTo(35788,772);
ctx.lineTo(35824,772);
ctx.lineTo(35824,808);
ctx.lineTo(35788,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,224,142,0.85)';
ctx.strokeStyle='rgb(97,204,96)';
ctx.moveTo(35884,808);
ctx.lineTo(35884,772);
ctx.lineTo(35920,772);
ctx.lineTo(35920,808);
ctx.lineTo(35884,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,65,95,0.85)';
ctx.strokeStyle='rgb(176,85,165)';
ctx.moveTo(35500,808);
ctx.lineTo(35500,772);
ctx.lineTo(35536,772);
ctx.lineTo(35536,808);
ctx.lineTo(35500,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,99,245,0.85)';
ctx.strokeStyle='rgb(180,41,23)';
ctx.moveTo(35788,520);
ctx.lineTo(35788,484);
ctx.lineTo(35824,484);
ctx.lineTo(35824,520);
ctx.lineTo(35788,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,37,136,0.85)';
ctx.strokeStyle='rgb(140,202,37)';
ctx.moveTo(35788,424);
ctx.lineTo(35788,388);
ctx.lineTo(35824,388);
ctx.lineTo(35824,424);
ctx.lineTo(35788,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,3,105,0.85)';
ctx.strokeStyle='rgb(26,146,244)';
ctx.moveTo(35788,328);
ctx.lineTo(35788,292);
ctx.lineTo(35824,292);
ctx.lineTo(35824,328);
ctx.lineTo(35788,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,1,190,0.85)';
ctx.strokeStyle='rgb(182,129,209)';
ctx.moveTo(35500,424);
ctx.lineTo(35500,388);
ctx.lineTo(35536,388);
ctx.lineTo(35536,424);
ctx.lineTo(35500,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,206,42,0.85)';
ctx.strokeStyle='rgb(170,179,218)';
ctx.moveTo(35884,712);
ctx.lineTo(35884,676);
ctx.lineTo(35920,676);
ctx.lineTo(35920,712);
ctx.lineTo(35884,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,123,71,0.85)';
ctx.strokeStyle='rgb(141,55,87)';
ctx.moveTo(35884,616);
ctx.lineTo(35884,580);
ctx.lineTo(35920,580);
ctx.lineTo(35920,616);
ctx.lineTo(35884,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,152,128,0.85)';
ctx.strokeStyle='rgb(41,219,244)';
ctx.moveTo(35884,520);
ctx.lineTo(35884,484);
ctx.lineTo(35920,484);
ctx.lineTo(35920,520);
ctx.lineTo(35884,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,209,16,0.85)';
ctx.strokeStyle='rgb(169,188,53)';
ctx.moveTo(35884,424);
ctx.lineTo(35884,388);
ctx.lineTo(35920,388);
ctx.lineTo(35920,424);
ctx.lineTo(35884,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,220,165,0.85)';
ctx.strokeStyle='rgb(219,197,249)';
ctx.moveTo(35884,328);
ctx.lineTo(35884,292);
ctx.lineTo(35920,292);
ctx.lineTo(35920,328);
ctx.lineTo(35884,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,242,79,0.85)';
ctx.strokeStyle='rgb(28,236,148)';
ctx.moveTo(35500,328);
ctx.lineTo(35500,292);
ctx.lineTo(35536,292);
ctx.lineTo(35536,328);
ctx.lineTo(35500,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,207,154,0.85)';
ctx.strokeStyle='rgb(164,127,160)';
ctx.moveTo(35500,712);
ctx.lineTo(35500,676);
ctx.lineTo(35536,676);
ctx.lineTo(35536,712);
ctx.lineTo(35500,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,51,213,0.85)';
ctx.strokeStyle='rgb(53,171,33)';
ctx.moveTo(35596,712);
ctx.lineTo(35596,676);
ctx.lineTo(35632,676);
ctx.lineTo(35632,712);
ctx.lineTo(35596,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,218,195,0.85)';
ctx.strokeStyle='rgb(86,244,9)';
ctx.moveTo(35596,616);
ctx.lineTo(35596,580);
ctx.lineTo(35632,580);
ctx.lineTo(35632,616);
ctx.lineTo(35596,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,21,71,0.85)';
ctx.strokeStyle='rgb(125,32,151)';
ctx.moveTo(35596,520);
ctx.lineTo(35596,484);
ctx.lineTo(35632,484);
ctx.lineTo(35632,520);
ctx.lineTo(35596,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,140,152,0.85)';
ctx.strokeStyle='rgb(111,192,81)';
ctx.moveTo(35596,424);
ctx.lineTo(35596,388);
ctx.lineTo(35632,388);
ctx.lineTo(35632,424);
ctx.lineTo(35596,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,123,222,0.85)';
ctx.strokeStyle='rgb(62,22,188)';
ctx.moveTo(35596,328);
ctx.lineTo(35596,292);
ctx.lineTo(35632,292);
ctx.lineTo(35632,328);
ctx.lineTo(35596,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,208,247,0.85)';
ctx.strokeStyle='rgb(155,184,138)';
ctx.moveTo(35500,616);
ctx.lineTo(35500,580);
ctx.lineTo(35536,580);
ctx.lineTo(35536,616);
ctx.lineTo(35500,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,26,145,0.85)';
ctx.strokeStyle='rgb(146,238,28)';
ctx.moveTo(35692,712);
ctx.lineTo(35692,676);
ctx.lineTo(35728,676);
ctx.lineTo(35728,712);
ctx.lineTo(35692,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,120,165,0.85)';
ctx.strokeStyle='rgb(24,221,160)';
ctx.moveTo(35692,616);
ctx.lineTo(35692,580);
ctx.lineTo(35728,580);
ctx.lineTo(35728,616);
ctx.lineTo(35692,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,121,61,0.85)';
ctx.strokeStyle='rgb(122,250,128)';
ctx.moveTo(35692,520);
ctx.lineTo(35692,484);
ctx.lineTo(35728,484);
ctx.lineTo(35728,520);
ctx.lineTo(35692,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,135,217,0.85)';
ctx.strokeStyle='rgb(217,124,235)';
ctx.moveTo(35692,424);
ctx.lineTo(35692,388);
ctx.lineTo(35728,388);
ctx.lineTo(35728,424);
ctx.lineTo(35692,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,246,101,0.85)';
ctx.strokeStyle='rgb(35,0,14)';
ctx.moveTo(35692,328);
ctx.lineTo(35692,292);
ctx.lineTo(35728,292);
ctx.lineTo(35728,328);
ctx.lineTo(35692,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,4,197,0.85)';
ctx.strokeStyle='rgb(165,109,26)';
ctx.moveTo(35500,520);
ctx.lineTo(35500,484);
ctx.lineTo(35536,484);
ctx.lineTo(35536,520);
ctx.lineTo(35500,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,169,182,0.85)';
ctx.strokeStyle='rgb(108,157,232)';
ctx.moveTo(35788,712);
ctx.lineTo(35788,676);
ctx.lineTo(35824,676);
ctx.lineTo(35824,712);
ctx.lineTo(35788,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,35,83,0.85)';
ctx.strokeStyle='rgb(245,217,249)';
ctx.moveTo(35788,616);
ctx.lineTo(35788,580);
ctx.lineTo(35824,580);
ctx.lineTo(35824,616);
ctx.lineTo(35788,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,85,49,0.85)';
ctx.strokeStyle='rgb(102,10,42)';
ctx.moveTo(35884,1096);
ctx.lineTo(35884,1060);
ctx.lineTo(35920,1060);
ctx.lineTo(35920,1096);
ctx.lineTo(35884,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,125,173,0.85)';
ctx.strokeStyle='rgb(124,215,94)';
ctx.moveTo(35884,1000);
ctx.lineTo(35884,964);
ctx.lineTo(35920,964);
ctx.lineTo(35920,1000);
ctx.lineTo(35884,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,144,154,0.85)';
ctx.strokeStyle='rgb(245,51,230)';
ctx.moveTo(35884,904);
ctx.lineTo(35884,868);
ctx.lineTo(35920,868);
ctx.lineTo(35920,904);
ctx.lineTo(35884,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,22,178,0.85)';
ctx.strokeStyle='rgb(213,114,213)';
ctx.moveTo(35692,1096);
ctx.lineTo(35692,1060);
ctx.lineTo(35728,1060);
ctx.lineTo(35728,1096);
ctx.lineTo(35692,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,29,77,0.85)';
ctx.strokeStyle='rgb(216,42,238)';
ctx.moveTo(35692,1000);
ctx.lineTo(35692,964);
ctx.lineTo(35728,964);
ctx.lineTo(35728,1000);
ctx.lineTo(35692,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,111,176,0.85)';
ctx.strokeStyle='rgb(51,11,84)';
ctx.moveTo(35692,904);
ctx.lineTo(35692,868);
ctx.lineTo(35728,868);
ctx.lineTo(35728,904);
ctx.lineTo(35692,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,29,130,0.85)';
ctx.strokeStyle='rgb(72,123,77)';
ctx.moveTo(35596,1192);
ctx.lineTo(35596,1156);
ctx.lineTo(35632,1156);
ctx.lineTo(35632,1192);
ctx.lineTo(35596,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,229,237,0.85)';
ctx.strokeStyle='rgb(4,176,210)';
ctx.moveTo(35596,1096);
ctx.lineTo(35596,1060);
ctx.lineTo(35632,1060);
ctx.lineTo(35632,1096);
ctx.lineTo(35596,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,61,191,0.85)';
ctx.strokeStyle='rgb(33,72,242)';
ctx.moveTo(35596,1000);
ctx.lineTo(35596,964);
ctx.lineTo(35632,964);
ctx.lineTo(35632,1000);
ctx.lineTo(35596,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,131,146,0.85)';
ctx.strokeStyle='rgb(196,162,187)';
ctx.moveTo(35596,904);
ctx.lineTo(35596,868);
ctx.lineTo(35632,868);
ctx.lineTo(35632,904);
ctx.lineTo(35596,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,104,117,0.85)';
ctx.strokeStyle='rgb(154,116,85)';
ctx.moveTo(35500,1192);
ctx.lineTo(35500,1156);
ctx.lineTo(35536,1156);
ctx.lineTo(35536,1192);
ctx.lineTo(35500,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,194,83,0.85)';
ctx.strokeStyle='rgb(113,41,153)';
ctx.moveTo(35500,1096);
ctx.lineTo(35500,1060);
ctx.lineTo(35536,1060);
ctx.lineTo(35536,1096);
ctx.lineTo(35500,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,85,205,0.85)';
ctx.strokeStyle='rgb(68,166,71)';
ctx.moveTo(35788,1288);
ctx.lineTo(35788,1252);
ctx.lineTo(35824,1252);
ctx.lineTo(35824,1288);
ctx.lineTo(35788,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,161,160,0.85)';
ctx.strokeStyle='rgb(11,238,142)';
ctx.moveTo(35788,1192);
ctx.lineTo(35788,1156);
ctx.lineTo(35824,1156);
ctx.lineTo(35824,1192);
ctx.lineTo(35788,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,74,194,0.85)';
ctx.strokeStyle='rgb(186,58,253)';
ctx.moveTo(35788,1096);
ctx.lineTo(35788,1060);
ctx.lineTo(35824,1060);
ctx.lineTo(35824,1096);
ctx.lineTo(35788,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,249,99,0.85)';
ctx.strokeStyle='rgb(88,98,176)';
ctx.moveTo(35788,1000);
ctx.lineTo(35788,964);
ctx.lineTo(35824,964);
ctx.lineTo(35824,1000);
ctx.lineTo(35788,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,118,221,0.85)';
ctx.strokeStyle='rgb(170,68,214)';
ctx.moveTo(35788,904);
ctx.lineTo(35788,868);
ctx.lineTo(35824,868);
ctx.lineTo(35824,904);
ctx.lineTo(35788,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,179,69,0.85)';
ctx.strokeStyle='rgb(10,144,84)';
ctx.moveTo(35500,1000);
ctx.lineTo(35500,964);
ctx.lineTo(35536,964);
ctx.lineTo(35536,1000);
ctx.lineTo(35500,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,73,215,0.85)';
ctx.strokeStyle='rgb(57,225,175)';
ctx.moveTo(35500,904);
ctx.lineTo(35500,868);
ctx.lineTo(35536,868);
ctx.lineTo(35536,904);
ctx.lineTo(35500,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,64,46,0.85)';
ctx.strokeStyle='rgb(20,41,143)';
ctx.moveTo(35500,1288);
ctx.lineTo(35500,1252);
ctx.lineTo(35536,1252);
ctx.lineTo(35536,1288);
ctx.lineTo(35500,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,44,110,0.85)';
ctx.strokeStyle='rgb(251,144,147)';
ctx.moveTo(35596,1288);
ctx.lineTo(35596,1252);
ctx.lineTo(35632,1252);
ctx.lineTo(35632,1288);
ctx.lineTo(35596,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,52,225,0.85)';
ctx.strokeStyle='rgb(73,8,155)';
ctx.moveTo(35692,1288);
ctx.lineTo(35692,1252);
ctx.lineTo(35728,1252);
ctx.lineTo(35728,1288);
ctx.lineTo(35692,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,198,139,0.85)';
ctx.strokeStyle='rgb(102,154,119)';
ctx.moveTo(35692,1192);
ctx.lineTo(35692,1156);
ctx.lineTo(35728,1156);
ctx.lineTo(35728,1192);
ctx.lineTo(35692,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,189,219,0.85)';
ctx.strokeStyle='rgb(98,122,62)';
ctx.moveTo(35884,1288);
ctx.lineTo(35884,1252);
ctx.lineTo(35920,1252);
ctx.lineTo(35920,1288);
ctx.lineTo(35884,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,209,67,0.85)';
ctx.strokeStyle='rgb(19,226,146)';
ctx.moveTo(35884,1192);
ctx.lineTo(35884,1156);
ctx.lineTo(35920,1156);
ctx.lineTo(35920,1192);
ctx.lineTo(35884,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,45,84,0.85)';
ctx.strokeStyle='rgb(241,150,143)';
ctx.moveTo(35980,1192);
ctx.lineTo(35980,1156);
ctx.lineTo(36016,1156);
ctx.lineTo(36016,1192);
ctx.lineTo(35980,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,104,44,0.85)';
ctx.strokeStyle='rgb(37,2,28)';
ctx.moveTo(35980,1096);
ctx.lineTo(35980,1060);
ctx.lineTo(36016,1060);
ctx.lineTo(36016,1096);
ctx.lineTo(35980,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,205,232,0.85)';
ctx.strokeStyle='rgb(159,161,153)';
ctx.moveTo(35980,1000);
ctx.lineTo(35980,964);
ctx.lineTo(36016,964);
ctx.lineTo(36016,1000);
ctx.lineTo(35980,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,172,172,0.85)';
ctx.strokeStyle='rgb(21,205,74)';
ctx.moveTo(35980,904);
ctx.lineTo(35980,868);
ctx.lineTo(36016,868);
ctx.lineTo(36016,904);
ctx.lineTo(35980,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,89,245,0.85)';
ctx.strokeStyle='rgb(137,54,210)';
ctx.moveTo(35980,1288);
ctx.lineTo(35980,1252);
ctx.lineTo(36016,1252);
ctx.lineTo(36016,1288);
ctx.lineTo(35980,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,3,89,0.85)';
ctx.strokeStyle='rgb(243,249,77)';
ctx.moveTo(36172,904);
ctx.lineTo(36172,868);
ctx.lineTo(36208,868);
ctx.lineTo(36208,904);
ctx.lineTo(36172,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,53,4,0.85)';
ctx.strokeStyle='rgb(76,46,98)';
ctx.moveTo(36076,1192);
ctx.lineTo(36076,1156);
ctx.lineTo(36112,1156);
ctx.lineTo(36112,1192);
ctx.lineTo(36076,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,243,68,0.85)';
ctx.strokeStyle='rgb(109,200,132)';
ctx.moveTo(36076,1096);
ctx.lineTo(36076,1060);
ctx.lineTo(36112,1060);
ctx.lineTo(36112,1096);
ctx.lineTo(36076,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,167,18,0.85)';
ctx.strokeStyle='rgb(93,204,115)';
ctx.moveTo(36364,1288);
ctx.lineTo(36364,1252);
ctx.lineTo(36400,1252);
ctx.lineTo(36400,1288);
ctx.lineTo(36364,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,171,174,0.85)';
ctx.strokeStyle='rgb(165,149,177)';
ctx.moveTo(36364,1192);
ctx.lineTo(36364,1156);
ctx.lineTo(36400,1156);
ctx.lineTo(36400,1192);
ctx.lineTo(36364,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,231,86,0.85)';
ctx.strokeStyle='rgb(190,43,237)';
ctx.moveTo(36364,1096);
ctx.lineTo(36364,1060);
ctx.lineTo(36400,1060);
ctx.lineTo(36400,1096);
ctx.lineTo(36364,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,9,153,0.85)';
ctx.strokeStyle='rgb(239,110,27)';
ctx.moveTo(36364,1000);
ctx.lineTo(36364,964);
ctx.lineTo(36400,964);
ctx.lineTo(36400,1000);
ctx.lineTo(36364,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,141,86,0.85)';
ctx.strokeStyle='rgb(198,111,58)';
ctx.moveTo(36364,904);
ctx.lineTo(36364,868);
ctx.lineTo(36400,868);
ctx.lineTo(36400,904);
ctx.lineTo(36364,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,55,31,0.85)';
ctx.strokeStyle='rgb(239,71,97)';
ctx.moveTo(36076,1000);
ctx.lineTo(36076,964);
ctx.lineTo(36112,964);
ctx.lineTo(36112,1000);
ctx.lineTo(36076,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,219,4,0.85)';
ctx.strokeStyle='rgb(171,95,115)';
ctx.moveTo(36076,904);
ctx.lineTo(36076,868);
ctx.lineTo(36112,868);
ctx.lineTo(36112,904);
ctx.lineTo(36076,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,128,242,0.85)';
ctx.strokeStyle='rgb(67,157,189)';
ctx.moveTo(36076,1288);
ctx.lineTo(36076,1252);
ctx.lineTo(36112,1252);
ctx.lineTo(36112,1288);
ctx.lineTo(36076,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,2,184,0.85)';
ctx.strokeStyle='rgb(232,123,242)';
ctx.moveTo(36172,1288);
ctx.lineTo(36172,1252);
ctx.lineTo(36208,1252);
ctx.lineTo(36208,1288);
ctx.lineTo(36172,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,131,133,0.85)';
ctx.strokeStyle='rgb(164,217,221)';
ctx.moveTo(36268,1288);
ctx.lineTo(36268,1252);
ctx.lineTo(36304,1252);
ctx.lineTo(36304,1288);
ctx.lineTo(36268,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,140,103,0.85)';
ctx.strokeStyle='rgb(206,58,139)';
ctx.moveTo(36268,1192);
ctx.lineTo(36268,1156);
ctx.lineTo(36304,1156);
ctx.lineTo(36304,1192);
ctx.lineTo(36268,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,181,76,0.85)';
ctx.strokeStyle='rgb(50,151,242)';
ctx.moveTo(36460,1288);
ctx.lineTo(36460,1252);
ctx.lineTo(36496,1252);
ctx.lineTo(36496,1288);
ctx.lineTo(36460,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,73,120,0.85)';
ctx.strokeStyle='rgb(129,215,69)';
ctx.moveTo(36460,1192);
ctx.lineTo(36460,1156);
ctx.lineTo(36496,1156);
ctx.lineTo(36496,1192);
ctx.lineTo(36460,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,132,87,0.85)';
ctx.strokeStyle='rgb(177,33,92)';
ctx.moveTo(36460,1096);
ctx.lineTo(36460,1060);
ctx.lineTo(36496,1060);
ctx.lineTo(36496,1096);
ctx.lineTo(36460,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,204,250,0.85)';
ctx.strokeStyle='rgb(75,101,134)';
ctx.moveTo(36460,1000);
ctx.lineTo(36460,964);
ctx.lineTo(36496,964);
ctx.lineTo(36496,1000);
ctx.lineTo(36460,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,5,219,0.85)';
ctx.strokeStyle='rgb(77,230,202)';
ctx.moveTo(36460,904);
ctx.lineTo(36460,868);
ctx.lineTo(36496,868);
ctx.lineTo(36496,904);
ctx.lineTo(36460,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,247,221,0.85)';
ctx.strokeStyle='rgb(7,228,238)';
ctx.moveTo(36268,1096);
ctx.lineTo(36268,1060);
ctx.lineTo(36304,1060);
ctx.lineTo(36304,1096);
ctx.lineTo(36268,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,48,236,0.85)';
ctx.strokeStyle='rgb(221,46,72)';
ctx.moveTo(36268,1000);
ctx.lineTo(36268,964);
ctx.lineTo(36304,964);
ctx.lineTo(36304,1000);
ctx.lineTo(36268,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,10,81,0.85)';
ctx.strokeStyle='rgb(48,254,155)';
ctx.moveTo(36268,904);
ctx.lineTo(36268,868);
ctx.lineTo(36304,868);
ctx.lineTo(36304,904);
ctx.lineTo(36268,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,151,129,0.85)';
ctx.strokeStyle='rgb(8,213,125)';
ctx.moveTo(36172,1192);
ctx.lineTo(36172,1156);
ctx.lineTo(36208,1156);
ctx.lineTo(36208,1192);
ctx.lineTo(36172,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,8,17,0.85)';
ctx.strokeStyle='rgb(81,226,22)';
ctx.moveTo(36172,1096);
ctx.lineTo(36172,1060);
ctx.lineTo(36208,1060);
ctx.lineTo(36208,1096);
ctx.lineTo(36172,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,56,50,0.85)';
ctx.strokeStyle='rgb(248,248,232)';
ctx.moveTo(36172,1000);
ctx.lineTo(36172,964);
ctx.lineTo(36208,964);
ctx.lineTo(36208,1000);
ctx.lineTo(36172,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,183,32,0.85)';
ctx.strokeStyle='rgb(132,132,199)';
ctx.moveTo(34396,2104);
ctx.lineTo(34396,2068);
ctx.lineTo(34432,2068);
ctx.lineTo(34432,2104);
ctx.lineTo(34396,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,67,53,0.85)';
ctx.strokeStyle='rgb(152,29,205)';
ctx.moveTo(34492,2104);
ctx.lineTo(34492,2068);
ctx.lineTo(34528,2068);
ctx.lineTo(34528,2104);
ctx.lineTo(34492,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,120,204,0.85)';
ctx.strokeStyle='rgb(205,77,122)';
ctx.moveTo(34588,2104);
ctx.lineTo(34588,2068);
ctx.lineTo(34624,2068);
ctx.lineTo(34624,2104);
ctx.lineTo(34588,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,50,70,0.85)';
ctx.strokeStyle='rgb(106,124,20)';
ctx.moveTo(34684,2392);
ctx.lineTo(34684,2356);
ctx.lineTo(34720,2356);
ctx.lineTo(34720,2392);
ctx.lineTo(34684,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,103,139,0.85)';
ctx.strokeStyle='rgb(56,111,52)';
ctx.moveTo(34684,2296);
ctx.lineTo(34684,2260);
ctx.lineTo(34720,2260);
ctx.lineTo(34720,2296);
ctx.lineTo(34684,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,197,129,0.85)';
ctx.strokeStyle='rgb(88,195,176)';
ctx.moveTo(34396,2008);
ctx.lineTo(34396,1972);
ctx.lineTo(34432,1972);
ctx.lineTo(34432,2008);
ctx.lineTo(34396,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,62,135,0.85)';
ctx.strokeStyle='rgb(184,89,163)';
ctx.moveTo(34396,1912);
ctx.lineTo(34396,1876);
ctx.lineTo(34432,1876);
ctx.lineTo(34432,1912);
ctx.lineTo(34396,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,96,212,0.85)';
ctx.strokeStyle='rgb(155,140,87)';
ctx.moveTo(34396,1816);
ctx.lineTo(34396,1780);
ctx.lineTo(34432,1780);
ctx.lineTo(34432,1816);
ctx.lineTo(34396,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,157,50,0.85)';
ctx.strokeStyle='rgb(157,250,14)';
ctx.moveTo(34396,1720);
ctx.lineTo(34396,1684);
ctx.lineTo(34432,1684);
ctx.lineTo(34432,1720);
ctx.lineTo(34396,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,81,8,0.85)';
ctx.strokeStyle='rgb(7,183,56)';
ctx.moveTo(34396,1624);
ctx.lineTo(34396,1588);
ctx.lineTo(34432,1588);
ctx.lineTo(34432,1624);
ctx.lineTo(34396,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,113,133,0.85)';
ctx.strokeStyle='rgb(203,245,164)';
ctx.moveTo(34492,2008);
ctx.lineTo(34492,1972);
ctx.lineTo(34528,1972);
ctx.lineTo(34528,2008);
ctx.lineTo(34492,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,83,87,0.85)';
ctx.strokeStyle='rgb(130,63,251)';
ctx.moveTo(34492,1912);
ctx.lineTo(34492,1876);
ctx.lineTo(34528,1876);
ctx.lineTo(34528,1912);
ctx.lineTo(34492,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,58,70,0.85)';
ctx.strokeStyle='rgb(9,210,64)';
ctx.moveTo(34588,2392);
ctx.lineTo(34588,2356);
ctx.lineTo(34624,2356);
ctx.lineTo(34624,2392);
ctx.lineTo(34588,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,238,153,0.85)';
ctx.strokeStyle='rgb(66,196,141)';
ctx.moveTo(34588,2296);
ctx.lineTo(34588,2260);
ctx.lineTo(34624,2260);
ctx.lineTo(34624,2296);
ctx.lineTo(34588,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,64,47,0.85)';
ctx.strokeStyle='rgb(129,50,137)';
ctx.moveTo(34588,2200);
ctx.lineTo(34588,2164);
ctx.lineTo(34624,2164);
ctx.lineTo(34624,2200);
ctx.lineTo(34588,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,13,155,0.85)';
ctx.strokeStyle='rgb(107,82,89)';
ctx.moveTo(34396,2392);
ctx.lineTo(34396,2356);
ctx.lineTo(34432,2356);
ctx.lineTo(34432,2392);
ctx.lineTo(34396,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,201,162,0.85)';
ctx.strokeStyle='rgb(202,15,73)';
ctx.moveTo(34396,2296);
ctx.lineTo(34396,2260);
ctx.lineTo(34432,2260);
ctx.lineTo(34432,2296);
ctx.lineTo(34396,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,63,57,0.85)';
ctx.strokeStyle='rgb(161,177,206)';
ctx.moveTo(34396,2200);
ctx.lineTo(34396,2164);
ctx.lineTo(34432,2164);
ctx.lineTo(34432,2200);
ctx.lineTo(34396,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,105,249,0.85)';
ctx.strokeStyle='rgb(60,155,219)';
ctx.moveTo(34684,2200);
ctx.lineTo(34684,2164);
ctx.lineTo(34720,2164);
ctx.lineTo(34720,2200);
ctx.lineTo(34684,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,202,87,0.85)';
ctx.strokeStyle='rgb(207,219,154)';
ctx.moveTo(34684,2104);
ctx.lineTo(34684,2068);
ctx.lineTo(34720,2068);
ctx.lineTo(34720,2104);
ctx.lineTo(34684,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,222,196,0.85)';
ctx.strokeStyle='rgb(47,77,66)';
ctx.moveTo(34684,2008);
ctx.lineTo(34684,1972);
ctx.lineTo(34720,1972);
ctx.lineTo(34720,2008);
ctx.lineTo(34684,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,113,25,0.85)';
ctx.strokeStyle='rgb(159,31,112)';
ctx.moveTo(34684,1912);
ctx.lineTo(34684,1876);
ctx.lineTo(34720,1876);
ctx.lineTo(34720,1912);
ctx.lineTo(34684,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,116,241,0.85)';
ctx.strokeStyle='rgb(204,207,31)';
ctx.moveTo(34492,2392);
ctx.lineTo(34492,2356);
ctx.lineTo(34528,2356);
ctx.lineTo(34528,2392);
ctx.lineTo(34492,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,200,122,0.85)';
ctx.strokeStyle='rgb(81,101,43)';
ctx.moveTo(34492,2296);
ctx.lineTo(34492,2260);
ctx.lineTo(34528,2260);
ctx.lineTo(34528,2296);
ctx.lineTo(34492,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,2,70,0.85)';
ctx.strokeStyle='rgb(242,197,68)';
ctx.moveTo(34492,2200);
ctx.lineTo(34492,2164);
ctx.lineTo(34528,2164);
ctx.lineTo(34528,2200);
ctx.lineTo(34492,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,46,46,0.85)';
ctx.strokeStyle='rgb(36,138,116)';
ctx.moveTo(34684,1816);
ctx.lineTo(34684,1780);
ctx.lineTo(34720,1780);
ctx.lineTo(34720,1816);
ctx.lineTo(34684,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,169,220,0.85)';
ctx.strokeStyle='rgb(115,165,191)';
ctx.moveTo(34876,2200);
ctx.lineTo(34876,2164);
ctx.lineTo(34912,2164);
ctx.lineTo(34912,2200);
ctx.lineTo(34876,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,109,11,0.85)';
ctx.strokeStyle='rgb(210,155,144)';
ctx.moveTo(34780,2392);
ctx.lineTo(34780,2356);
ctx.lineTo(34816,2356);
ctx.lineTo(34816,2392);
ctx.lineTo(34780,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,212,139,0.85)';
ctx.strokeStyle='rgb(16,246,150)';
ctx.moveTo(35068,2392);
ctx.lineTo(35068,2356);
ctx.lineTo(35104,2356);
ctx.lineTo(35104,2392);
ctx.lineTo(35068,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,86,202,0.85)';
ctx.strokeStyle='rgb(180,227,7)';
ctx.moveTo(35068,2296);
ctx.lineTo(35068,2260);
ctx.lineTo(35104,2260);
ctx.lineTo(35104,2296);
ctx.lineTo(35068,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,98,6,0.85)';
ctx.strokeStyle='rgb(144,31,104)';
ctx.moveTo(35068,2200);
ctx.lineTo(35068,2164);
ctx.lineTo(35104,2164);
ctx.lineTo(35104,2200);
ctx.lineTo(35068,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,198,251,0.85)';
ctx.strokeStyle='rgb(197,252,105)';
ctx.moveTo(34780,2296);
ctx.lineTo(34780,2260);
ctx.lineTo(34816,2260);
ctx.lineTo(34816,2296);
ctx.lineTo(34780,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,207,68,0.85)';
ctx.strokeStyle='rgb(164,221,125)';
ctx.moveTo(34780,2200);
ctx.lineTo(34780,2164);
ctx.lineTo(34816,2164);
ctx.lineTo(34816,2200);
ctx.lineTo(34780,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,201,189,0.85)';
ctx.strokeStyle='rgb(243,194,187)';
ctx.moveTo(35164,2392);
ctx.lineTo(35164,2356);
ctx.lineTo(35200,2356);
ctx.lineTo(35200,2392);
ctx.lineTo(35164,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,245,232,0.85)';
ctx.strokeStyle='rgb(98,15,7)';
ctx.moveTo(35164,2296);
ctx.lineTo(35164,2260);
ctx.lineTo(35200,2260);
ctx.lineTo(35200,2296);
ctx.lineTo(35164,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,163,192,0.85)';
ctx.strokeStyle='rgb(66,4,108)';
ctx.moveTo(35164,2200);
ctx.lineTo(35164,2164);
ctx.lineTo(35200,2164);
ctx.lineTo(35200,2200);
ctx.lineTo(35164,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,99,120,0.85)';
ctx.strokeStyle='rgb(213,99,10)';
ctx.moveTo(34972,2392);
ctx.lineTo(34972,2356);
ctx.lineTo(35008,2356);
ctx.lineTo(35008,2392);
ctx.lineTo(34972,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,129,216,0.85)';
ctx.strokeStyle='rgb(41,37,119)';
ctx.moveTo(34972,2296);
ctx.lineTo(34972,2260);
ctx.lineTo(35008,2260);
ctx.lineTo(35008,2296);
ctx.lineTo(34972,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,157,73,0.85)';
ctx.strokeStyle='rgb(15,153,110)';
ctx.moveTo(34972,2200);
ctx.lineTo(34972,2164);
ctx.lineTo(35008,2164);
ctx.lineTo(35008,2200);
ctx.lineTo(34972,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,213,201,0.85)';
ctx.strokeStyle='rgb(229,250,219)';
ctx.moveTo(34876,2392);
ctx.lineTo(34876,2356);
ctx.lineTo(34912,2356);
ctx.lineTo(34912,2392);
ctx.lineTo(34876,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,127,243,0.85)';
ctx.strokeStyle='rgb(234,196,103)';
ctx.moveTo(34876,2296);
ctx.lineTo(34876,2260);
ctx.lineTo(34912,2260);
ctx.lineTo(34912,2296);
ctx.lineTo(34876,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,63,56,0.85)';
ctx.strokeStyle='rgb(119,138,245)';
ctx.moveTo(34684,1720);
ctx.lineTo(34684,1684);
ctx.lineTo(34720,1684);
ctx.lineTo(34720,1720);
ctx.lineTo(34684,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,151,31,0.85)';
ctx.strokeStyle='rgb(130,2,198)';
ctx.moveTo(34684,1624);
ctx.lineTo(34684,1588);
ctx.lineTo(34720,1588);
ctx.lineTo(34720,1624);
ctx.lineTo(34684,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,19,135,0.85)';
ctx.strokeStyle='rgb(67,201,67)';
ctx.moveTo(34780,2104);
ctx.lineTo(34780,2068);
ctx.lineTo(34816,2068);
ctx.lineTo(34816,2104);
ctx.lineTo(34780,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,147,125,0.85)';
ctx.strokeStyle='rgb(40,32,117)';
ctx.moveTo(34876,2104);
ctx.lineTo(34876,2068);
ctx.lineTo(34912,2068);
ctx.lineTo(34912,2104);
ctx.lineTo(34876,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,173,103,0.85)';
ctx.strokeStyle='rgb(89,87,138)';
ctx.moveTo(34972,2104);
ctx.lineTo(34972,2068);
ctx.lineTo(35008,2068);
ctx.lineTo(35008,2104);
ctx.lineTo(34972,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,22,54,0.85)';
ctx.strokeStyle='rgb(139,10,145)';
ctx.moveTo(35068,2104);
ctx.lineTo(35068,2068);
ctx.lineTo(35104,2068);
ctx.lineTo(35104,2104);
ctx.lineTo(35068,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,57,129,0.85)';
ctx.strokeStyle='rgb(81,235,101)';
ctx.moveTo(35164,2104);
ctx.lineTo(35164,2068);
ctx.lineTo(35200,2068);
ctx.lineTo(35200,2104);
ctx.lineTo(35164,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,52,221,0.85)';
ctx.strokeStyle='rgb(251,124,242)';
ctx.moveTo(34780,1624);
ctx.lineTo(34780,1588);
ctx.lineTo(34816,1588);
ctx.lineTo(34816,1624);
ctx.lineTo(34780,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,109,233,0.85)';
ctx.strokeStyle='rgb(4,156,205)';
ctx.moveTo(34780,2008);
ctx.lineTo(34780,1972);
ctx.lineTo(34816,1972);
ctx.lineTo(34816,2008);
ctx.lineTo(34780,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,52,181,0.85)';
ctx.strokeStyle='rgb(157,163,31)';
ctx.moveTo(34876,2008);
ctx.lineTo(34876,1972);
ctx.lineTo(34912,1972);
ctx.lineTo(34912,2008);
ctx.lineTo(34876,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,19,156,0.85)';
ctx.strokeStyle='rgb(216,205,146)';
ctx.moveTo(34876,1912);
ctx.lineTo(34876,1876);
ctx.lineTo(34912,1876);
ctx.lineTo(34912,1912);
ctx.lineTo(34876,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,135,131,0.85)';
ctx.strokeStyle='rgb(161,90,221)';
ctx.moveTo(34876,1816);
ctx.lineTo(34876,1780);
ctx.lineTo(34912,1780);
ctx.lineTo(34912,1816);
ctx.lineTo(34876,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,41,219,0.85)';
ctx.strokeStyle='rgb(142,34,27)';
ctx.moveTo(34876,1720);
ctx.lineTo(34876,1684);
ctx.lineTo(34912,1684);
ctx.lineTo(34912,1720);
ctx.lineTo(34876,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,94,50,0.85)';
ctx.strokeStyle='rgb(60,179,133)';
ctx.moveTo(34876,1624);
ctx.lineTo(34876,1588);
ctx.lineTo(34912,1588);
ctx.lineTo(34912,1624);
ctx.lineTo(34876,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,12,38,0.85)';
ctx.strokeStyle='rgb(99,249,159)';
ctx.moveTo(34780,1912);
ctx.lineTo(34780,1876);
ctx.lineTo(34816,1876);
ctx.lineTo(34816,1912);
ctx.lineTo(34780,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,173,236,0.85)';
ctx.strokeStyle='rgb(221,137,101)';
ctx.moveTo(34972,2008);
ctx.lineTo(34972,1972);
ctx.lineTo(35008,1972);
ctx.lineTo(35008,2008);
ctx.lineTo(34972,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,31,48,0.85)';
ctx.strokeStyle='rgb(170,226,44)';
ctx.moveTo(34972,1912);
ctx.lineTo(34972,1876);
ctx.lineTo(35008,1876);
ctx.lineTo(35008,1912);
ctx.lineTo(34972,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,200,100,0.85)';
ctx.strokeStyle='rgb(205,18,152)';
ctx.moveTo(34972,1816);
ctx.lineTo(34972,1780);
ctx.lineTo(35008,1780);
ctx.lineTo(35008,1816);
ctx.lineTo(34972,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,11,142,0.85)';
ctx.strokeStyle='rgb(29,218,1)';
ctx.moveTo(34972,1720);
ctx.lineTo(34972,1684);
ctx.lineTo(35008,1684);
ctx.lineTo(35008,1720);
ctx.lineTo(34972,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,44,144,0.85)';
ctx.strokeStyle='rgb(179,207,186)';
ctx.moveTo(34972,1624);
ctx.lineTo(34972,1588);
ctx.lineTo(35008,1588);
ctx.lineTo(35008,1624);
ctx.lineTo(34972,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,20,117,0.85)';
ctx.strokeStyle='rgb(157,177,7)';
ctx.moveTo(34780,1816);
ctx.lineTo(34780,1780);
ctx.lineTo(34816,1780);
ctx.lineTo(34816,1816);
ctx.lineTo(34780,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,231,163,0.85)';
ctx.strokeStyle='rgb(80,101,71)';
ctx.moveTo(35068,2008);
ctx.lineTo(35068,1972);
ctx.lineTo(35104,1972);
ctx.lineTo(35104,2008);
ctx.lineTo(35068,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,118,206,0.85)';
ctx.strokeStyle='rgb(67,43,229)';
ctx.moveTo(35068,1912);
ctx.lineTo(35068,1876);
ctx.lineTo(35104,1876);
ctx.lineTo(35104,1912);
ctx.lineTo(35068,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,77,65,0.85)';
ctx.strokeStyle='rgb(221,92,25)';
ctx.moveTo(35068,1816);
ctx.lineTo(35068,1780);
ctx.lineTo(35104,1780);
ctx.lineTo(35104,1816);
ctx.lineTo(35068,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,151,16,0.85)';
ctx.strokeStyle='rgb(136,174,220)';
ctx.moveTo(35068,1720);
ctx.lineTo(35068,1684);
ctx.lineTo(35104,1684);
ctx.lineTo(35104,1720);
ctx.lineTo(35068,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,125,176,0.85)';
ctx.strokeStyle='rgb(39,117,84)';
ctx.moveTo(35068,1624);
ctx.lineTo(35068,1588);
ctx.lineTo(35104,1588);
ctx.lineTo(35104,1624);
ctx.lineTo(35068,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,97,233,0.85)';
ctx.strokeStyle='rgb(220,162,29)';
ctx.moveTo(34780,1720);
ctx.lineTo(34780,1684);
ctx.lineTo(34816,1684);
ctx.lineTo(34816,1720);
ctx.lineTo(34780,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,155,109,0.85)';
ctx.strokeStyle='rgb(0,61,248)';
ctx.moveTo(35164,2008);
ctx.lineTo(35164,1972);
ctx.lineTo(35200,1972);
ctx.lineTo(35200,2008);
ctx.lineTo(35164,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,30,50,0.85)';
ctx.strokeStyle='rgb(116,199,91)';
ctx.moveTo(35164,1912);
ctx.lineTo(35164,1876);
ctx.lineTo(35200,1876);
ctx.lineTo(35200,1912);
ctx.lineTo(35164,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,206,68,0.85)';
ctx.strokeStyle='rgb(75,150,42)';
ctx.moveTo(35164,1816);
ctx.lineTo(35164,1780);
ctx.lineTo(35200,1780);
ctx.lineTo(35200,1816);
ctx.lineTo(35164,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,241,95,0.85)';
ctx.strokeStyle='rgb(44,87,168)';
ctx.moveTo(35164,1720);
ctx.lineTo(35164,1684);
ctx.lineTo(35200,1684);
ctx.lineTo(35200,1720);
ctx.lineTo(35164,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,133,75,0.85)';
ctx.strokeStyle='rgb(146,44,115)';
ctx.moveTo(35164,1624);
ctx.lineTo(35164,1588);
ctx.lineTo(35200,1588);
ctx.lineTo(35200,1624);
ctx.lineTo(35164,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,3,169,0.85)';
ctx.strokeStyle='rgb(92,104,146)';
ctx.moveTo(34492,1816);
ctx.lineTo(34492,1780);
ctx.lineTo(34528,1780);
ctx.lineTo(34528,1816);
ctx.lineTo(34492,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,223,58,0.85)';
ctx.strokeStyle='rgb(134,162,34)';
ctx.moveTo(34492,1720);
ctx.lineTo(34492,1684);
ctx.lineTo(34528,1684);
ctx.lineTo(34528,1720);
ctx.lineTo(34492,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,39,194,0.85)';
ctx.strokeStyle='rgb(54,134,121)';
ctx.moveTo(34492,1624);
ctx.lineTo(34492,1588);
ctx.lineTo(34528,1588);
ctx.lineTo(34528,1624);
ctx.lineTo(34492,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,234,93,0.85)';
ctx.strokeStyle='rgb(167,219,238)';
ctx.moveTo(34588,2008);
ctx.lineTo(34588,1972);
ctx.lineTo(34624,1972);
ctx.lineTo(34624,2008);
ctx.lineTo(34588,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,195,13,0.85)';
ctx.strokeStyle='rgb(110,69,89)';
ctx.moveTo(34588,1912);
ctx.lineTo(34588,1876);
ctx.lineTo(34624,1876);
ctx.lineTo(34624,1912);
ctx.lineTo(34588,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,73,22,0.85)';
ctx.strokeStyle='rgb(169,201,55)';
ctx.moveTo(34588,1816);
ctx.lineTo(34588,1780);
ctx.lineTo(34624,1780);
ctx.lineTo(34624,1816);
ctx.lineTo(34588,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,25,213,0.85)';
ctx.strokeStyle='rgb(150,180,36)';
ctx.moveTo(34588,1720);
ctx.lineTo(34588,1684);
ctx.lineTo(34624,1684);
ctx.lineTo(34624,1720);
ctx.lineTo(34588,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,254,25,0.85)';
ctx.strokeStyle='rgb(97,86,99)';
ctx.moveTo(34588,1624);
ctx.lineTo(34588,1588);
ctx.lineTo(34624,1588);
ctx.lineTo(34624,1624);
ctx.lineTo(34588,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,175,110,0.85)';
ctx.strokeStyle='rgb(143,79,139)';
ctx.moveTo(34204,1816);
ctx.lineTo(34204,1780);
ctx.lineTo(34240,1780);
ctx.lineTo(34240,1816);
ctx.lineTo(34204,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,97,249,0.85)';
ctx.strokeStyle='rgb(173,52,224)';
ctx.moveTo(34204,2392);
ctx.lineTo(34204,2356);
ctx.lineTo(34240,2356);
ctx.lineTo(34240,2392);
ctx.lineTo(34204,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,212,66,0.85)';
ctx.strokeStyle='rgb(36,33,64)';
ctx.moveTo(34204,2104);
ctx.lineTo(34204,2068);
ctx.lineTo(34240,2068);
ctx.lineTo(34240,2104);
ctx.lineTo(34204,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,244,244,0.85)';
ctx.strokeStyle='rgb(115,82,46)';
ctx.moveTo(34204,1624);
ctx.lineTo(34204,1588);
ctx.lineTo(34240,1588);
ctx.lineTo(34240,1624);
ctx.lineTo(34204,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,171,235,0.85)';
ctx.strokeStyle='rgb(140,65,113)';
ctx.moveTo(34204,2008);
ctx.lineTo(34204,1972);
ctx.lineTo(34240,1972);
ctx.lineTo(34240,2008);
ctx.lineTo(34204,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,95,116,0.85)';
ctx.strokeStyle='rgb(48,153,143)';
ctx.moveTo(34204,2296);
ctx.lineTo(34204,2260);
ctx.lineTo(34240,2260);
ctx.lineTo(34240,2296);
ctx.lineTo(34204,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,178,11,0.85)';
ctx.strokeStyle='rgb(216,175,175)';
ctx.moveTo(34204,2200);
ctx.lineTo(34204,2164);
ctx.lineTo(34240,2164);
ctx.lineTo(34240,2200);
ctx.lineTo(34204,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,187,240,0.85)';
ctx.strokeStyle='rgb(161,234,122)';
ctx.moveTo(34204,1720);
ctx.lineTo(34204,1684);
ctx.lineTo(34240,1684);
ctx.lineTo(34240,1720);
ctx.lineTo(34204,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,140,163,0.85)';
ctx.strokeStyle='rgb(83,104,115)';
ctx.moveTo(34204,1912);
ctx.lineTo(34204,1876);
ctx.lineTo(34240,1876);
ctx.lineTo(34240,1912);
ctx.lineTo(34204,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,191,190,0.85)';
ctx.strokeStyle='rgb(165,26,44)';
ctx.moveTo(34204,2584);
ctx.lineTo(34204,2548);
ctx.lineTo(34240,2548);
ctx.lineTo(34240,2584);
ctx.lineTo(34204,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,64,221,0.85)';
ctx.strokeStyle='rgb(65,78,105)';
ctx.moveTo(34204,2818);
ctx.lineTo(34204,2782);
ctx.lineTo(34240,2782);
ctx.lineTo(34240,2818);
ctx.lineTo(34204,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,147,153,0.85)';
ctx.strokeStyle='rgb(81,190,22)';
ctx.moveTo(34204,2488);
ctx.lineTo(34204,2452);
ctx.lineTo(34240,2452);
ctx.lineTo(34240,2488);
ctx.lineTo(34204,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,34,153,0.85)';
ctx.strokeStyle='rgb(168,237,84)';
ctx.moveTo(34588,2488);
ctx.lineTo(34588,2452);
ctx.lineTo(34624,2452);
ctx.lineTo(34624,2488);
ctx.lineTo(34588,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,78,176,0.85)';
ctx.strokeStyle='rgb(148,54,51)';
ctx.moveTo(34588,2818);
ctx.lineTo(34588,2782);
ctx.lineTo(34624,2782);
ctx.lineTo(34624,2818);
ctx.lineTo(34588,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,239,229,0.85)';
ctx.strokeStyle='rgb(111,229,23)';
ctx.moveTo(34780,2488);
ctx.lineTo(34780,2452);
ctx.lineTo(34816,2452);
ctx.lineTo(34816,2488);
ctx.lineTo(34780,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,223,13,0.85)';
ctx.strokeStyle='rgb(136,35,94)';
ctx.moveTo(34684,2818);
ctx.lineTo(34684,2782);
ctx.lineTo(34720,2782);
ctx.lineTo(34720,2818);
ctx.lineTo(34684,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,95,200,0.85)';
ctx.strokeStyle='rgb(47,244,63)';
ctx.moveTo(35068,2584);
ctx.lineTo(35068,2548);
ctx.lineTo(35104,2548);
ctx.lineTo(35104,2584);
ctx.lineTo(35068,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,73,106,0.85)';
ctx.strokeStyle='rgb(179,4,174)';
ctx.moveTo(35068,2488);
ctx.lineTo(35068,2452);
ctx.lineTo(35104,2452);
ctx.lineTo(35104,2488);
ctx.lineTo(35068,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,127,192,0.85)';
ctx.strokeStyle='rgb(199,224,215)';
ctx.moveTo(34780,2818);
ctx.lineTo(34780,2782);
ctx.lineTo(34816,2782);
ctx.lineTo(34816,2818);
ctx.lineTo(34780,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,125,77,0.85)';
ctx.strokeStyle='rgb(212,196,183)';
ctx.moveTo(34684,2584);
ctx.lineTo(34684,2548);
ctx.lineTo(34720,2548);
ctx.lineTo(34720,2584);
ctx.lineTo(34684,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,32,100,0.85)';
ctx.strokeStyle='rgb(174,64,121)';
ctx.moveTo(34492,2584);
ctx.lineTo(34492,2548);
ctx.lineTo(34528,2548);
ctx.lineTo(34528,2584);
ctx.lineTo(34492,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,171,87,0.85)';
ctx.strokeStyle='rgb(67,117,228)';
ctx.moveTo(34492,2488);
ctx.lineTo(34492,2452);
ctx.lineTo(34528,2452);
ctx.lineTo(34528,2488);
ctx.lineTo(34492,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,221,130,0.85)';
ctx.strokeStyle='rgb(48,250,180)';
ctx.moveTo(34684,2488);
ctx.lineTo(34684,2452);
ctx.lineTo(34720,2452);
ctx.lineTo(34720,2488);
ctx.lineTo(34684,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,161,195,0.85)';
ctx.strokeStyle='rgb(216,27,59)';
ctx.moveTo(34780,2584);
ctx.lineTo(34780,2548);
ctx.lineTo(34816,2548);
ctx.lineTo(34816,2584);
ctx.lineTo(34780,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,195,119,0.85)';
ctx.strokeStyle='rgb(214,233,162)';
ctx.moveTo(34876,2584);
ctx.lineTo(34876,2548);
ctx.lineTo(34912,2548);
ctx.lineTo(34912,2584);
ctx.lineTo(34876,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,194,56,0.85)';
ctx.strokeStyle='rgb(40,247,144)';
ctx.moveTo(34972,2584);
ctx.lineTo(34972,2548);
ctx.lineTo(35008,2548);
ctx.lineTo(35008,2584);
ctx.lineTo(34972,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,110,215,0.85)';
ctx.strokeStyle='rgb(24,24,254)';
ctx.moveTo(34972,2488);
ctx.lineTo(34972,2452);
ctx.lineTo(35008,2452);
ctx.lineTo(35008,2488);
ctx.lineTo(34972,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,58,242,0.85)';
ctx.strokeStyle='rgb(238,171,81)';
ctx.moveTo(35164,2584);
ctx.lineTo(35164,2548);
ctx.lineTo(35200,2548);
ctx.lineTo(35200,2584);
ctx.lineTo(35164,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,141,45,0.85)';
ctx.strokeStyle='rgb(148,96,191)';
ctx.moveTo(35164,2488);
ctx.lineTo(35164,2452);
ctx.lineTo(35200,2452);
ctx.lineTo(35200,2488);
ctx.lineTo(35164,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,59,20,0.85)';
ctx.strokeStyle='rgb(129,186,104)';
ctx.moveTo(34876,2818);
ctx.lineTo(34876,2782);
ctx.lineTo(34912,2782);
ctx.lineTo(34912,2818);
ctx.lineTo(34876,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,24,170,0.85)';
ctx.strokeStyle='rgb(57,163,98)';
ctx.moveTo(34972,2818);
ctx.lineTo(34972,2782);
ctx.lineTo(35008,2782);
ctx.lineTo(35008,2818);
ctx.lineTo(34972,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,55,56,0.85)';
ctx.strokeStyle='rgb(4,188,13)';
ctx.moveTo(35068,2818);
ctx.lineTo(35068,2782);
ctx.lineTo(35104,2782);
ctx.lineTo(35104,2818);
ctx.lineTo(35068,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,230,3,0.85)';
ctx.strokeStyle='rgb(146,25,127)';
ctx.moveTo(35164,2818);
ctx.lineTo(35164,2782);
ctx.lineTo(35200,2782);
ctx.lineTo(35200,2818);
ctx.lineTo(35164,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,35,148,0.85)';
ctx.strokeStyle='rgb(182,145,16)';
ctx.moveTo(34396,2818);
ctx.lineTo(34396,2782);
ctx.lineTo(34432,2782);
ctx.lineTo(34432,2818);
ctx.lineTo(34396,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,196,159,0.85)';
ctx.strokeStyle='rgb(216,85,49)';
ctx.moveTo(34492,2818);
ctx.lineTo(34492,2782);
ctx.lineTo(34528,2782);
ctx.lineTo(34528,2818);
ctx.lineTo(34492,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,89,186,0.85)';
ctx.strokeStyle='rgb(90,140,219)';
ctx.moveTo(34876,2488);
ctx.lineTo(34876,2452);
ctx.lineTo(34912,2452);
ctx.lineTo(34912,2488);
ctx.lineTo(34876,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,171,42,0.85)';
ctx.strokeStyle='rgb(228,1,149)';
ctx.moveTo(34396,2584);
ctx.lineTo(34396,2548);
ctx.lineTo(34432,2548);
ctx.lineTo(34432,2584);
ctx.lineTo(34396,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,251,31,0.85)';
ctx.strokeStyle='rgb(204,132,240)';
ctx.moveTo(34396,2488);
ctx.lineTo(34396,2452);
ctx.lineTo(34432,2452);
ctx.lineTo(34432,2488);
ctx.lineTo(34396,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,6,50,0.85)';
ctx.strokeStyle='rgb(125,121,185)';
ctx.moveTo(35500,4360);
ctx.lineTo(35500,4324);
ctx.lineTo(35536,4324);
ctx.lineTo(35536,4360);
ctx.lineTo(35500,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,133,205,0.85)';
ctx.strokeStyle='rgb(163,124,180)';
ctx.moveTo(35500,4264);
ctx.lineTo(35500,4228);
ctx.lineTo(35536,4228);
ctx.lineTo(35536,4264);
ctx.lineTo(35500,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,19,247,0.85)';
ctx.strokeStyle='rgb(52,0,51)';
ctx.moveTo(35500,4168);
ctx.lineTo(35500,4132);
ctx.lineTo(35536,4132);
ctx.lineTo(35536,4168);
ctx.lineTo(35500,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,134,62,0.85)';
ctx.strokeStyle='rgb(43,169,4)';
ctx.moveTo(35596,4360);
ctx.lineTo(35596,4324);
ctx.lineTo(35632,4324);
ctx.lineTo(35632,4360);
ctx.lineTo(35596,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,178,59,0.85)';
ctx.strokeStyle='rgb(3,251,38)';
ctx.moveTo(35596,4264);
ctx.lineTo(35596,4228);
ctx.lineTo(35632,4228);
ctx.lineTo(35632,4264);
ctx.lineTo(35596,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,60,11,0.85)';
ctx.strokeStyle='rgb(174,186,22)';
ctx.moveTo(35596,4168);
ctx.lineTo(35596,4132);
ctx.lineTo(35632,4132);
ctx.lineTo(35632,4168);
ctx.lineTo(35596,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,247,224,0.85)';
ctx.strokeStyle='rgb(82,79,51)';
ctx.moveTo(35692,4360);
ctx.lineTo(35692,4324);
ctx.lineTo(35728,4324);
ctx.lineTo(35728,4360);
ctx.lineTo(35692,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,206,93,0.85)';
ctx.strokeStyle='rgb(95,55,242)';
ctx.moveTo(35692,4264);
ctx.lineTo(35692,4228);
ctx.lineTo(35728,4228);
ctx.lineTo(35728,4264);
ctx.lineTo(35692,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,7,49,0.85)';
ctx.strokeStyle='rgb(173,143,214)';
ctx.moveTo(35692,4168);
ctx.lineTo(35692,4132);
ctx.lineTo(35728,4132);
ctx.lineTo(35728,4168);
ctx.lineTo(35692,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,45,205,0.85)';
ctx.strokeStyle='rgb(97,76,198)';
ctx.moveTo(35788,4360);
ctx.lineTo(35788,4324);
ctx.lineTo(35824,4324);
ctx.lineTo(35824,4360);
ctx.lineTo(35788,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,215,245,0.85)';
ctx.strokeStyle='rgb(35,69,14)';
ctx.moveTo(35788,4264);
ctx.lineTo(35788,4228);
ctx.lineTo(35824,4228);
ctx.lineTo(35824,4264);
ctx.lineTo(35788,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,205,78,0.85)';
ctx.strokeStyle='rgb(130,167,202)';
ctx.moveTo(35788,4168);
ctx.lineTo(35788,4132);
ctx.lineTo(35824,4132);
ctx.lineTo(35824,4168);
ctx.lineTo(35788,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,193,196,0.85)';
ctx.strokeStyle='rgb(57,77,35)';
ctx.moveTo(35884,4360);
ctx.lineTo(35884,4324);
ctx.lineTo(35920,4324);
ctx.lineTo(35920,4360);
ctx.lineTo(35884,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,218,224,0.85)';
ctx.strokeStyle='rgb(212,46,194)';
ctx.moveTo(35884,4264);
ctx.lineTo(35884,4228);
ctx.lineTo(35920,4228);
ctx.lineTo(35920,4264);
ctx.lineTo(35884,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,237,115,0.85)';
ctx.strokeStyle='rgb(16,214,78)';
ctx.moveTo(35884,4168);
ctx.lineTo(35884,4132);
ctx.lineTo(35920,4132);
ctx.lineTo(35920,4168);
ctx.lineTo(35884,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,44,45,0.85)';
ctx.strokeStyle='rgb(113,200,57)';
ctx.moveTo(35980,4360);
ctx.lineTo(35980,4324);
ctx.lineTo(36016,4324);
ctx.lineTo(36016,4360);
ctx.lineTo(35980,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,216,104,0.85)';
ctx.strokeStyle='rgb(74,155,87)';
ctx.moveTo(35980,4264);
ctx.lineTo(35980,4228);
ctx.lineTo(36016,4228);
ctx.lineTo(36016,4264);
ctx.lineTo(35980,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,69,121,0.85)';
ctx.strokeStyle='rgb(209,214,193)';
ctx.moveTo(35980,4168);
ctx.lineTo(35980,4132);
ctx.lineTo(36016,4132);
ctx.lineTo(36016,4168);
ctx.lineTo(35980,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,65,251,0.85)';
ctx.strokeStyle='rgb(42,38,247)';
ctx.moveTo(36076,4360);
ctx.lineTo(36076,4324);
ctx.lineTo(36112,4324);
ctx.lineTo(36112,4360);
ctx.lineTo(36076,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,112,135,0.85)';
ctx.strokeStyle='rgb(196,80,36)';
ctx.moveTo(36076,4264);
ctx.lineTo(36076,4228);
ctx.lineTo(36112,4228);
ctx.lineTo(36112,4264);
ctx.lineTo(36076,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,5,202,0.85)';
ctx.strokeStyle='rgb(174,236,68)';
ctx.moveTo(36076,4168);
ctx.lineTo(36076,4132);
ctx.lineTo(36112,4132);
ctx.lineTo(36112,4168);
ctx.lineTo(36076,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,175,209,0.85)';
ctx.strokeStyle='rgb(226,251,141)';
ctx.moveTo(36172,4360);
ctx.lineTo(36172,4324);
ctx.lineTo(36208,4324);
ctx.lineTo(36208,4360);
ctx.lineTo(36172,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,83,112,0.85)';
ctx.strokeStyle='rgb(138,13,253)';
ctx.moveTo(36172,4264);
ctx.lineTo(36172,4228);
ctx.lineTo(36208,4228);
ctx.lineTo(36208,4264);
ctx.lineTo(36172,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,213,112,0.85)';
ctx.strokeStyle='rgb(143,116,177)';
ctx.moveTo(36172,4168);
ctx.lineTo(36172,4132);
ctx.lineTo(36208,4132);
ctx.lineTo(36208,4168);
ctx.lineTo(36172,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,182,20,0.85)';
ctx.strokeStyle='rgb(99,68,93)';
ctx.moveTo(36268,4360);
ctx.lineTo(36268,4324);
ctx.lineTo(36304,4324);
ctx.lineTo(36304,4360);
ctx.lineTo(36268,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,207,242,0.85)';
ctx.strokeStyle='rgb(214,60,104)';
ctx.moveTo(36268,4264);
ctx.lineTo(36268,4228);
ctx.lineTo(36304,4228);
ctx.lineTo(36304,4264);
ctx.lineTo(36268,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,173,12,0.85)';
ctx.strokeStyle='rgb(78,150,60)';
ctx.moveTo(36268,4168);
ctx.lineTo(36268,4132);
ctx.lineTo(36304,4132);
ctx.lineTo(36304,4168);
ctx.lineTo(36268,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,212,229,0.85)';
ctx.strokeStyle='rgb(196,243,111)';
ctx.moveTo(36364,4360);
ctx.lineTo(36364,4324);
ctx.lineTo(36400,4324);
ctx.lineTo(36400,4360);
ctx.lineTo(36364,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,140,249,0.85)';
ctx.strokeStyle='rgb(146,70,107)';
ctx.moveTo(36364,4264);
ctx.lineTo(36364,4228);
ctx.lineTo(36400,4228);
ctx.lineTo(36400,4264);
ctx.lineTo(36364,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,43,189,0.85)';
ctx.strokeStyle='rgb(197,5,196)';
ctx.moveTo(36364,4168);
ctx.lineTo(36364,4132);
ctx.lineTo(36400,4132);
ctx.lineTo(36400,4168);
ctx.lineTo(36364,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,245,225,0.85)';
ctx.strokeStyle='rgb(128,1,74)';
ctx.moveTo(36460,4360);
ctx.lineTo(36460,4324);
ctx.lineTo(36496,4324);
ctx.lineTo(36496,4360);
ctx.lineTo(36460,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,190,4,0.85)';
ctx.strokeStyle='rgb(201,174,0)';
ctx.moveTo(36460,4264);
ctx.lineTo(36460,4228);
ctx.lineTo(36496,4228);
ctx.lineTo(36496,4264);
ctx.lineTo(36460,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,4,245,0.85)';
ctx.strokeStyle='rgb(46,230,117)';
ctx.moveTo(36460,4168);
ctx.lineTo(36460,4132);
ctx.lineTo(36496,4132);
ctx.lineTo(36496,4168);
ctx.lineTo(36460,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,49,178,0.85)';
ctx.strokeStyle='rgb(209,1,163)';
ctx.moveTo(34588,2584);
ctx.lineTo(34588,2548);
ctx.lineTo(34624,2548);
ctx.lineTo(34624,2584);
ctx.lineTo(34588,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,249,213,0.85)';
ctx.strokeStyle='rgb(176,222,233)';
ctx.moveTo(34204,5872);
ctx.lineTo(34204,5836);
ctx.lineTo(34240,5836);
ctx.lineTo(34240,5872);
ctx.lineTo(34204,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,251,156,0.85)';
ctx.strokeStyle='rgb(146,180,37)';
ctx.moveTo(34204,5776);
ctx.lineTo(34204,5740);
ctx.lineTo(34240,5740);
ctx.lineTo(34240,5776);
ctx.lineTo(34204,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,59,70,0.85)';
ctx.strokeStyle='rgb(247,131,6)';
ctx.moveTo(34204,5680);
ctx.lineTo(34204,5644);
ctx.lineTo(34240,5644);
ctx.lineTo(34240,5680);
ctx.lineTo(34204,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,123,202,0.85)';
ctx.strokeStyle='rgb(34,169,1)';
ctx.moveTo(34300,5872);
ctx.lineTo(34300,5836);
ctx.lineTo(34336,5836);
ctx.lineTo(34336,5872);
ctx.lineTo(34300,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,239,105,0.85)';
ctx.strokeStyle='rgb(70,48,52)';
ctx.moveTo(34300,5776);
ctx.lineTo(34300,5740);
ctx.lineTo(34336,5740);
ctx.lineTo(34336,5776);
ctx.lineTo(34300,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,72,173,0.85)';
ctx.strokeStyle='rgb(47,217,167)';
ctx.moveTo(34300,5680);
ctx.lineTo(34300,5644);
ctx.lineTo(34336,5644);
ctx.lineTo(34336,5680);
ctx.lineTo(34300,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,74,15,0.85)';
ctx.strokeStyle='rgb(175,244,234)';
ctx.moveTo(34396,5872);
ctx.lineTo(34396,5836);
ctx.lineTo(34432,5836);
ctx.lineTo(34432,5872);
ctx.lineTo(34396,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,46,27,0.85)';
ctx.strokeStyle='rgb(246,141,244)';
ctx.moveTo(34396,5776);
ctx.lineTo(34396,5740);
ctx.lineTo(34432,5740);
ctx.lineTo(34432,5776);
ctx.lineTo(34396,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,178,196,0.85)';
ctx.strokeStyle='rgb(184,235,171)';
ctx.moveTo(34396,5680);
ctx.lineTo(34396,5644);
ctx.lineTo(34432,5644);
ctx.lineTo(34432,5680);
ctx.lineTo(34396,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,203,27,0.85)';
ctx.strokeStyle='rgb(160,157,161)';
ctx.moveTo(34492,5872);
ctx.lineTo(34492,5836);
ctx.lineTo(34528,5836);
ctx.lineTo(34528,5872);
ctx.lineTo(34492,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,46,65,0.85)';
ctx.strokeStyle='rgb(26,190,84)';
ctx.moveTo(34492,5776);
ctx.lineTo(34492,5740);
ctx.lineTo(34528,5740);
ctx.lineTo(34528,5776);
ctx.lineTo(34492,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,148,132,0.85)';
ctx.strokeStyle='rgb(24,2,200)';
ctx.moveTo(34492,5680);
ctx.lineTo(34492,5644);
ctx.lineTo(34528,5644);
ctx.lineTo(34528,5680);
ctx.lineTo(34492,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,152,185,0.85)';
ctx.strokeStyle='rgb(170,172,23)';
ctx.moveTo(34588,5872);
ctx.lineTo(34588,5836);
ctx.lineTo(34624,5836);
ctx.lineTo(34624,5872);
ctx.lineTo(34588,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,81,85,0.85)';
ctx.strokeStyle='rgb(200,247,51)';
ctx.moveTo(34588,5776);
ctx.lineTo(34588,5740);
ctx.lineTo(34624,5740);
ctx.lineTo(34624,5776);
ctx.lineTo(34588,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,146,182,0.85)';
ctx.strokeStyle='rgb(43,171,167)';
ctx.moveTo(34588,5680);
ctx.lineTo(34588,5644);
ctx.lineTo(34624,5644);
ctx.lineTo(34624,5680);
ctx.lineTo(34588,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,16,141,0.85)';
ctx.strokeStyle='rgb(5,105,227)';
ctx.moveTo(34684,5872);
ctx.lineTo(34684,5836);
ctx.lineTo(34720,5836);
ctx.lineTo(34720,5872);
ctx.lineTo(34684,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,230,38,0.85)';
ctx.strokeStyle='rgb(235,6,149)';
ctx.moveTo(34684,5776);
ctx.lineTo(34684,5740);
ctx.lineTo(34720,5740);
ctx.lineTo(34720,5776);
ctx.lineTo(34684,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,111,99,0.85)';
ctx.strokeStyle='rgb(82,29,233)';
ctx.moveTo(34684,5680);
ctx.lineTo(34684,5644);
ctx.lineTo(34720,5644);
ctx.lineTo(34720,5680);
ctx.lineTo(34684,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,62,140,0.85)';
ctx.strokeStyle='rgb(27,149,72)';
ctx.moveTo(34780,5872);
ctx.lineTo(34780,5836);
ctx.lineTo(34816,5836);
ctx.lineTo(34816,5872);
ctx.lineTo(34780,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,254,78,0.85)';
ctx.strokeStyle='rgb(251,161,166)';
ctx.moveTo(34780,5776);
ctx.lineTo(34780,5740);
ctx.lineTo(34816,5740);
ctx.lineTo(34816,5776);
ctx.lineTo(34780,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,35,243,0.85)';
ctx.strokeStyle='rgb(113,148,195)';
ctx.moveTo(34780,5680);
ctx.lineTo(34780,5644);
ctx.lineTo(34816,5644);
ctx.lineTo(34816,5680);
ctx.lineTo(34780,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,219,199,0.85)';
ctx.strokeStyle='rgb(85,99,0)';
ctx.moveTo(34876,5872);
ctx.lineTo(34876,5836);
ctx.lineTo(34912,5836);
ctx.lineTo(34912,5872);
ctx.lineTo(34876,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,74,219,0.85)';
ctx.strokeStyle='rgb(30,128,172)';
ctx.moveTo(34876,5776);
ctx.lineTo(34876,5740);
ctx.lineTo(34912,5740);
ctx.lineTo(34912,5776);
ctx.lineTo(34876,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,43,114,0.85)';
ctx.strokeStyle='rgb(104,243,45)';
ctx.moveTo(34876,5680);
ctx.lineTo(34876,5644);
ctx.lineTo(34912,5644);
ctx.lineTo(34912,5680);
ctx.lineTo(34876,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,252,141,0.85)';
ctx.strokeStyle='rgb(98,144,119)';
ctx.moveTo(34972,5872);
ctx.lineTo(34972,5836);
ctx.lineTo(35008,5836);
ctx.lineTo(35008,5872);
ctx.lineTo(34972,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,6,170,0.85)';
ctx.strokeStyle='rgb(173,39,79)';
ctx.moveTo(34972,5776);
ctx.lineTo(34972,5740);
ctx.lineTo(35008,5740);
ctx.lineTo(35008,5776);
ctx.lineTo(34972,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,131,108,0.85)';
ctx.strokeStyle='rgb(43,175,171)';
ctx.moveTo(34972,5680);
ctx.lineTo(34972,5644);
ctx.lineTo(35008,5644);
ctx.lineTo(35008,5680);
ctx.lineTo(34972,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,197,136,0.85)';
ctx.strokeStyle='rgb(36,87,218)';
ctx.moveTo(35068,5872);
ctx.lineTo(35068,5836);
ctx.lineTo(35104,5836);
ctx.lineTo(35104,5872);
ctx.lineTo(35068,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,19,111,0.85)';
ctx.strokeStyle='rgb(41,210,12)';
ctx.moveTo(35068,5776);
ctx.lineTo(35068,5740);
ctx.lineTo(35104,5740);
ctx.lineTo(35104,5776);
ctx.lineTo(35068,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,117,110,0.85)';
ctx.strokeStyle='rgb(171,66,18)';
ctx.moveTo(35068,5680);
ctx.lineTo(35068,5644);
ctx.lineTo(35104,5644);
ctx.lineTo(35104,5680);
ctx.lineTo(35068,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,110,123,0.85)';
ctx.strokeStyle='rgb(155,46,231)';
ctx.moveTo(35164,5872);
ctx.lineTo(35164,5836);
ctx.lineTo(35200,5836);
ctx.lineTo(35200,5872);
ctx.lineTo(35164,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,226,122,0.85)';
ctx.strokeStyle='rgb(83,122,195)';
ctx.moveTo(35164,5776);
ctx.lineTo(35164,5740);
ctx.lineTo(35200,5740);
ctx.lineTo(35200,5776);
ctx.lineTo(35164,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,41,205,0.85)';
ctx.strokeStyle='rgb(171,228,226)';
ctx.moveTo(35164,5680);
ctx.lineTo(35164,5644);
ctx.lineTo(35200,5644);
ctx.lineTo(35200,5680);
ctx.lineTo(35164,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,39,60,0.85)';
ctx.strokeStyle='rgb(224,9,198)';
ctx.moveTo(35500,7384);
ctx.lineTo(35500,7348);
ctx.lineTo(35536,7348);
ctx.lineTo(35536,7384);
ctx.lineTo(35500,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,252,141,0.85)';
ctx.strokeStyle='rgb(71,28,171)';
ctx.moveTo(35500,7288);
ctx.lineTo(35500,7252);
ctx.lineTo(35536,7252);
ctx.lineTo(35536,7288);
ctx.lineTo(35500,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,31,121,0.85)';
ctx.strokeStyle='rgb(26,157,238)';
ctx.moveTo(35500,7192);
ctx.lineTo(35500,7156);
ctx.lineTo(35536,7156);
ctx.lineTo(35536,7192);
ctx.lineTo(35500,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,133,14,0.85)';
ctx.strokeStyle='rgb(71,123,124)';
ctx.moveTo(35596,7384);
ctx.lineTo(35596,7348);
ctx.lineTo(35632,7348);
ctx.lineTo(35632,7384);
ctx.lineTo(35596,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,56,96,0.85)';
ctx.strokeStyle='rgb(172,151,186)';
ctx.moveTo(35596,7288);
ctx.lineTo(35596,7252);
ctx.lineTo(35632,7252);
ctx.lineTo(35632,7288);
ctx.lineTo(35596,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,78,182,0.85)';
ctx.strokeStyle='rgb(186,21,146)';
ctx.moveTo(35596,7192);
ctx.lineTo(35596,7156);
ctx.lineTo(35632,7156);
ctx.lineTo(35632,7192);
ctx.lineTo(35596,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,150,236,0.85)';
ctx.strokeStyle='rgb(110,128,200)';
ctx.moveTo(35692,7384);
ctx.lineTo(35692,7348);
ctx.lineTo(35728,7348);
ctx.lineTo(35728,7384);
ctx.lineTo(35692,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,186,193,0.85)';
ctx.strokeStyle='rgb(114,5,43)';
ctx.moveTo(35692,7288);
ctx.lineTo(35692,7252);
ctx.lineTo(35728,7252);
ctx.lineTo(35728,7288);
ctx.lineTo(35692,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,41,96,0.85)';
ctx.strokeStyle='rgb(203,210,209)';
ctx.moveTo(35692,7192);
ctx.lineTo(35692,7156);
ctx.lineTo(35728,7156);
ctx.lineTo(35728,7192);
ctx.lineTo(35692,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,246,57,0.85)';
ctx.strokeStyle='rgb(177,212,133)';
ctx.moveTo(35788,7384);
ctx.lineTo(35788,7348);
ctx.lineTo(35824,7348);
ctx.lineTo(35824,7384);
ctx.lineTo(35788,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,229,124,0.85)';
ctx.strokeStyle='rgb(92,137,75)';
ctx.moveTo(35788,7288);
ctx.lineTo(35788,7252);
ctx.lineTo(35824,7252);
ctx.lineTo(35824,7288);
ctx.lineTo(35788,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,66,82,0.85)';
ctx.strokeStyle='rgb(51,237,174)';
ctx.moveTo(35788,7192);
ctx.lineTo(35788,7156);
ctx.lineTo(35824,7156);
ctx.lineTo(35824,7192);
ctx.lineTo(35788,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,5,215,0.85)';
ctx.strokeStyle='rgb(231,112,206)';
ctx.moveTo(35884,7384);
ctx.lineTo(35884,7348);
ctx.lineTo(35920,7348);
ctx.lineTo(35920,7384);
ctx.lineTo(35884,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,89,114,0.85)';
ctx.strokeStyle='rgb(211,101,10)';
ctx.moveTo(35884,7288);
ctx.lineTo(35884,7252);
ctx.lineTo(35920,7252);
ctx.lineTo(35920,7288);
ctx.lineTo(35884,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,119,245,0.85)';
ctx.strokeStyle='rgb(253,7,156)';
ctx.moveTo(35884,7192);
ctx.lineTo(35884,7156);
ctx.lineTo(35920,7156);
ctx.lineTo(35920,7192);
ctx.lineTo(35884,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,87,150,0.85)';
ctx.strokeStyle='rgb(197,32,145)';
ctx.moveTo(35980,7384);
ctx.lineTo(35980,7348);
ctx.lineTo(36016,7348);
ctx.lineTo(36016,7384);
ctx.lineTo(35980,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,70,115,0.85)';
ctx.strokeStyle='rgb(253,121,206)';
ctx.moveTo(35980,7288);
ctx.lineTo(35980,7252);
ctx.lineTo(36016,7252);
ctx.lineTo(36016,7288);
ctx.lineTo(35980,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,98,143,0.85)';
ctx.strokeStyle='rgb(68,106,157)';
ctx.moveTo(35980,7192);
ctx.lineTo(35980,7156);
ctx.lineTo(36016,7156);
ctx.lineTo(36016,7192);
ctx.lineTo(35980,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,206,8,0.85)';
ctx.strokeStyle='rgb(250,47,226)';
ctx.moveTo(36076,7384);
ctx.lineTo(36076,7348);
ctx.lineTo(36112,7348);
ctx.lineTo(36112,7384);
ctx.lineTo(36076,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,80,130,0.85)';
ctx.strokeStyle='rgb(54,170,36)';
ctx.moveTo(36076,7288);
ctx.lineTo(36076,7252);
ctx.lineTo(36112,7252);
ctx.lineTo(36112,7288);
ctx.lineTo(36076,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,41,87,0.85)';
ctx.strokeStyle='rgb(249,164,30)';
ctx.moveTo(36076,7192);
ctx.lineTo(36076,7156);
ctx.lineTo(36112,7156);
ctx.lineTo(36112,7192);
ctx.lineTo(36076,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,90,249,0.85)';
ctx.strokeStyle='rgb(70,57,204)';
ctx.moveTo(36172,7384);
ctx.lineTo(36172,7348);
ctx.lineTo(36208,7348);
ctx.lineTo(36208,7384);
ctx.lineTo(36172,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,6,53,0.85)';
ctx.strokeStyle='rgb(165,57,216)';
ctx.moveTo(36172,7288);
ctx.lineTo(36172,7252);
ctx.lineTo(36208,7252);
ctx.lineTo(36208,7288);
ctx.lineTo(36172,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,229,52,0.85)';
ctx.strokeStyle='rgb(92,44,141)';
ctx.moveTo(36172,7192);
ctx.lineTo(36172,7156);
ctx.lineTo(36208,7156);
ctx.lineTo(36208,7192);
ctx.lineTo(36172,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,135,109,0.85)';
ctx.strokeStyle='rgb(75,209,219)';
ctx.moveTo(36268,7384);
ctx.lineTo(36268,7348);
ctx.lineTo(36304,7348);
ctx.lineTo(36304,7384);
ctx.lineTo(36268,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,132,118,0.85)';
ctx.strokeStyle='rgb(41,245,24)';
ctx.moveTo(36268,7288);
ctx.lineTo(36268,7252);
ctx.lineTo(36304,7252);
ctx.lineTo(36304,7288);
ctx.lineTo(36268,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,145,210,0.85)';
ctx.strokeStyle='rgb(176,12,7)';
ctx.moveTo(36268,7192);
ctx.lineTo(36268,7156);
ctx.lineTo(36304,7156);
ctx.lineTo(36304,7192);
ctx.lineTo(36268,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,171,161,0.85)';
ctx.strokeStyle='rgb(107,109,118)';
ctx.moveTo(36364,7384);
ctx.lineTo(36364,7348);
ctx.lineTo(36400,7348);
ctx.lineTo(36400,7384);
ctx.lineTo(36364,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,2,116,0.85)';
ctx.strokeStyle='rgb(166,178,173)';
ctx.moveTo(36364,7288);
ctx.lineTo(36364,7252);
ctx.lineTo(36400,7252);
ctx.lineTo(36400,7288);
ctx.lineTo(36364,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,243,152,0.85)';
ctx.strokeStyle='rgb(195,108,99)';
ctx.moveTo(36364,7192);
ctx.lineTo(36364,7156);
ctx.lineTo(36400,7156);
ctx.lineTo(36400,7192);
ctx.lineTo(36364,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,56,47,0.85)';
ctx.strokeStyle='rgb(238,73,93)';
ctx.moveTo(36460,7384);
ctx.lineTo(36460,7348);
ctx.lineTo(36496,7348);
ctx.lineTo(36496,7384);
ctx.lineTo(36460,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,54,1,0.85)';
ctx.strokeStyle='rgb(139,142,143)';
ctx.moveTo(36460,7288);
ctx.lineTo(36460,7252);
ctx.lineTo(36496,7252);
ctx.lineTo(36496,7288);
ctx.lineTo(36460,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,152,33,0.85)';
ctx.strokeStyle='rgb(252,192,44)';
ctx.moveTo(36460,7192);
ctx.lineTo(36460,7156);
ctx.lineTo(36496,7156);
ctx.lineTo(36496,7192);
ctx.lineTo(36460,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,29,70,0.85)';
ctx.strokeStyle='rgb(142,29,47)';
ctx.moveTo(25672,808);
ctx.lineTo(25672,772);
ctx.lineTo(25708,772);
ctx.lineTo(25708,808);
ctx.lineTo(25672,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,141,183,0.85)';
ctx.strokeStyle='rgb(244,115,209)';
ctx.moveTo(25768,808);
ctx.lineTo(25768,772);
ctx.lineTo(25804,772);
ctx.lineTo(25804,808);
ctx.lineTo(25768,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,252,209,0.85)';
ctx.strokeStyle='rgb(140,92,184)';
ctx.moveTo(25864,808);
ctx.lineTo(25864,772);
ctx.lineTo(25900,772);
ctx.lineTo(25900,808);
ctx.lineTo(25864,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,135,130,0.85)';
ctx.strokeStyle='rgb(31,41,93)';
ctx.moveTo(25960,1288);
ctx.lineTo(25960,1252);
ctx.lineTo(25996,1252);
ctx.lineTo(25996,1288);
ctx.lineTo(25960,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,1,107,0.85)';
ctx.strokeStyle='rgb(206,157,149)';
ctx.moveTo(25960,1192);
ctx.lineTo(25960,1156);
ctx.lineTo(25996,1156);
ctx.lineTo(25996,1192);
ctx.lineTo(25960,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,85,31,0.85)';
ctx.strokeStyle='rgb(187,1,151)';
ctx.moveTo(25960,1096);
ctx.lineTo(25960,1060);
ctx.lineTo(25996,1060);
ctx.lineTo(25996,1096);
ctx.lineTo(25960,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,145,212,0.85)';
ctx.strokeStyle='rgb(147,234,172)';
ctx.moveTo(25960,1000);
ctx.lineTo(25960,964);
ctx.lineTo(25996,964);
ctx.lineTo(25996,1000);
ctx.lineTo(25960,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,18,190,0.85)';
ctx.strokeStyle='rgb(94,105,116)';
ctx.moveTo(25960,904);
ctx.lineTo(25960,868);
ctx.lineTo(25996,868);
ctx.lineTo(25996,904);
ctx.lineTo(25960,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,6,102,0.85)';
ctx.strokeStyle='rgb(223,0,25)';
ctx.moveTo(25960,808);
ctx.lineTo(25960,772);
ctx.lineTo(25996,772);
ctx.lineTo(25996,808);
ctx.lineTo(25960,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,163,25,0.85)';
ctx.strokeStyle='rgb(50,59,252)';
ctx.moveTo(25960,712);
ctx.lineTo(25960,676);
ctx.lineTo(25996,676);
ctx.lineTo(25996,712);
ctx.lineTo(25960,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,161,172,0.85)';
ctx.strokeStyle='rgb(13,16,30)';
ctx.moveTo(25960,616);
ctx.lineTo(25960,580);
ctx.lineTo(25996,580);
ctx.lineTo(25996,616);
ctx.lineTo(25960,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,213,242,0.85)';
ctx.strokeStyle='rgb(62,146,13)';
ctx.moveTo(25960,520);
ctx.lineTo(25960,484);
ctx.lineTo(25996,484);
ctx.lineTo(25996,520);
ctx.lineTo(25960,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,75,95,0.85)';
ctx.strokeStyle='rgb(253,179,128)';
ctx.moveTo(25960,424);
ctx.lineTo(25960,388);
ctx.lineTo(25996,388);
ctx.lineTo(25996,424);
ctx.lineTo(25960,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,66,226,0.85)';
ctx.strokeStyle='rgb(143,240,84)';
ctx.moveTo(25960,328);
ctx.lineTo(25960,292);
ctx.lineTo(25996,292);
ctx.lineTo(25996,328);
ctx.lineTo(25960,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,109,102,0.85)';
ctx.strokeStyle='rgb(184,66,101)';
ctx.moveTo(26056,808);
ctx.lineTo(26056,772);
ctx.lineTo(26092,772);
ctx.lineTo(26092,808);
ctx.lineTo(26056,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,73,228,0.85)';
ctx.strokeStyle='rgb(87,74,109)';
ctx.moveTo(26152,808);
ctx.lineTo(26152,772);
ctx.lineTo(26188,772);
ctx.lineTo(26188,808);
ctx.lineTo(26152,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,120,231,0.85)';
ctx.strokeStyle='rgb(211,4,173)';
ctx.moveTo(26248,808);
ctx.lineTo(26248,772);
ctx.lineTo(26284,772);
ctx.lineTo(26284,808);
ctx.lineTo(26248,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,211,175,0.85)';
ctx.strokeStyle='rgb(46,13,152)';
ctx.moveTo(26344,808);
ctx.lineTo(26344,772);
ctx.lineTo(26380,772);
ctx.lineTo(26380,808);
ctx.lineTo(26344,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,10,42,0.85)';
ctx.strokeStyle='rgb(206,39,190)';
ctx.moveTo(26440,808);
ctx.lineTo(26440,772);
ctx.lineTo(26476,772);
ctx.lineTo(26476,808);
ctx.lineTo(26440,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,9,4,0.85)';
ctx.strokeStyle='rgb(111,15,200)';
ctx.moveTo(26056,328);
ctx.lineTo(26056,292);
ctx.lineTo(26092,292);
ctx.lineTo(26092,328);
ctx.lineTo(26056,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,174,49,0.85)';
ctx.strokeStyle='rgb(136,65,230)';
ctx.moveTo(26056,712);
ctx.lineTo(26056,676);
ctx.lineTo(26092,676);
ctx.lineTo(26092,712);
ctx.lineTo(26056,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,166,35,0.85)';
ctx.strokeStyle='rgb(73,152,254)';
ctx.moveTo(26152,712);
ctx.lineTo(26152,676);
ctx.lineTo(26188,676);
ctx.lineTo(26188,712);
ctx.lineTo(26152,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,248,78,0.85)';
ctx.strokeStyle='rgb(62,158,233)';
ctx.moveTo(26152,616);
ctx.lineTo(26152,580);
ctx.lineTo(26188,580);
ctx.lineTo(26188,616);
ctx.lineTo(26152,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,5,15,0.85)';
ctx.strokeStyle='rgb(163,15,96)';
ctx.moveTo(26152,520);
ctx.lineTo(26152,484);
ctx.lineTo(26188,484);
ctx.lineTo(26188,520);
ctx.lineTo(26152,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,220,65,0.85)';
ctx.strokeStyle='rgb(203,87,227)';
ctx.moveTo(26152,424);
ctx.lineTo(26152,388);
ctx.lineTo(26188,388);
ctx.lineTo(26188,424);
ctx.lineTo(26152,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,83,217,0.85)';
ctx.strokeStyle='rgb(49,115,4)';
ctx.moveTo(26152,328);
ctx.lineTo(26152,292);
ctx.lineTo(26188,292);
ctx.lineTo(26188,328);
ctx.lineTo(26152,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,235,107,0.85)';
ctx.strokeStyle='rgb(151,32,133)';
ctx.moveTo(26056,616);
ctx.lineTo(26056,580);
ctx.lineTo(26092,580);
ctx.lineTo(26092,616);
ctx.lineTo(26056,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,170,6,0.85)';
ctx.strokeStyle='rgb(139,78,100)';
ctx.moveTo(26248,712);
ctx.lineTo(26248,676);
ctx.lineTo(26284,676);
ctx.lineTo(26284,712);
ctx.lineTo(26248,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,197,224,0.85)';
ctx.strokeStyle='rgb(95,29,216)';
ctx.moveTo(26248,616);
ctx.lineTo(26248,580);
ctx.lineTo(26284,580);
ctx.lineTo(26284,616);
ctx.lineTo(26248,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,149,31,0.85)';
ctx.strokeStyle='rgb(75,181,53)';
ctx.moveTo(26248,520);
ctx.lineTo(26248,484);
ctx.lineTo(26284,484);
ctx.lineTo(26284,520);
ctx.lineTo(26248,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,67,248,0.85)';
ctx.strokeStyle='rgb(97,31,139)';
ctx.moveTo(26248,424);
ctx.lineTo(26248,388);
ctx.lineTo(26284,388);
ctx.lineTo(26284,424);
ctx.lineTo(26248,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,209,16,0.85)';
ctx.strokeStyle='rgb(81,60,85)';
ctx.moveTo(26248,328);
ctx.lineTo(26248,292);
ctx.lineTo(26284,292);
ctx.lineTo(26284,328);
ctx.lineTo(26248,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,203,39,0.85)';
ctx.strokeStyle='rgb(54,11,52)';
ctx.moveTo(26056,520);
ctx.lineTo(26056,484);
ctx.lineTo(26092,484);
ctx.lineTo(26092,520);
ctx.lineTo(26056,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,128,87,0.85)';
ctx.strokeStyle='rgb(222,193,71)';
ctx.moveTo(26344,712);
ctx.lineTo(26344,676);
ctx.lineTo(26380,676);
ctx.lineTo(26380,712);
ctx.lineTo(26344,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,114,112,0.85)';
ctx.strokeStyle='rgb(216,236,65)';
ctx.moveTo(26344,616);
ctx.lineTo(26344,580);
ctx.lineTo(26380,580);
ctx.lineTo(26380,616);
ctx.lineTo(26344,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,164,24,0.85)';
ctx.strokeStyle='rgb(118,118,217)';
ctx.moveTo(26344,520);
ctx.lineTo(26344,484);
ctx.lineTo(26380,484);
ctx.lineTo(26380,520);
ctx.lineTo(26344,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,164,210,0.85)';
ctx.strokeStyle='rgb(116,135,63)';
ctx.moveTo(26344,424);
ctx.lineTo(26344,388);
ctx.lineTo(26380,388);
ctx.lineTo(26380,424);
ctx.lineTo(26344,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,253,92,0.85)';
ctx.strokeStyle='rgb(239,189,35)';
ctx.moveTo(26344,328);
ctx.lineTo(26344,292);
ctx.lineTo(26380,292);
ctx.lineTo(26380,328);
ctx.lineTo(26344,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,31,3,0.85)';
ctx.strokeStyle='rgb(136,152,238)';
ctx.moveTo(26056,424);
ctx.lineTo(26056,388);
ctx.lineTo(26092,388);
ctx.lineTo(26092,424);
ctx.lineTo(26056,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,162,68,0.85)';
ctx.strokeStyle='rgb(165,49,201)';
ctx.moveTo(26440,712);
ctx.lineTo(26440,676);
ctx.lineTo(26476,676);
ctx.lineTo(26476,712);
ctx.lineTo(26440,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,194,241,0.85)';
ctx.strokeStyle='rgb(140,195,7)';
ctx.moveTo(26440,616);
ctx.lineTo(26440,580);
ctx.lineTo(26476,580);
ctx.lineTo(26476,616);
ctx.lineTo(26440,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,64,109,0.85)';
ctx.strokeStyle='rgb(154,137,115)';
ctx.moveTo(26440,520);
ctx.lineTo(26440,484);
ctx.lineTo(26476,484);
ctx.lineTo(26476,520);
ctx.lineTo(26440,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,98,209,0.85)';
ctx.strokeStyle='rgb(194,185,183)';
ctx.moveTo(26440,424);
ctx.lineTo(26440,388);
ctx.lineTo(26476,388);
ctx.lineTo(26476,424);
ctx.lineTo(26440,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,56,7,0.85)';
ctx.strokeStyle='rgb(75,250,224)';
ctx.moveTo(26440,328);
ctx.lineTo(26440,292);
ctx.lineTo(26476,292);
ctx.lineTo(26476,328);
ctx.lineTo(26440,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,37,63,0.85)';
ctx.strokeStyle='rgb(67,113,91)';
ctx.moveTo(25768,520);
ctx.lineTo(25768,484);
ctx.lineTo(25804,484);
ctx.lineTo(25804,520);
ctx.lineTo(25768,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,61,184,0.85)';
ctx.strokeStyle='rgb(60,52,32)';
ctx.moveTo(25768,424);
ctx.lineTo(25768,388);
ctx.lineTo(25804,388);
ctx.lineTo(25804,424);
ctx.lineTo(25768,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,108,20,0.85)';
ctx.strokeStyle='rgb(205,79,243)';
ctx.moveTo(25768,328);
ctx.lineTo(25768,292);
ctx.lineTo(25804,292);
ctx.lineTo(25804,328);
ctx.lineTo(25768,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,83,8,0.85)';
ctx.strokeStyle='rgb(137,29,185)';
ctx.moveTo(25864,712);
ctx.lineTo(25864,676);
ctx.lineTo(25900,676);
ctx.lineTo(25900,712);
ctx.lineTo(25864,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,160,7,0.85)';
ctx.strokeStyle='rgb(120,97,218)';
ctx.moveTo(25864,616);
ctx.lineTo(25864,580);
ctx.lineTo(25900,580);
ctx.lineTo(25900,616);
ctx.lineTo(25864,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,58,28,0.85)';
ctx.strokeStyle='rgb(196,75,10)';
ctx.moveTo(25864,520);
ctx.lineTo(25864,484);
ctx.lineTo(25900,484);
ctx.lineTo(25900,520);
ctx.lineTo(25864,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,137,215,0.85)';
ctx.strokeStyle='rgb(113,30,134)';
ctx.moveTo(25864,424);
ctx.lineTo(25864,388);
ctx.lineTo(25900,388);
ctx.lineTo(25900,424);
ctx.lineTo(25864,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,217,145,0.85)';
ctx.strokeStyle='rgb(161,244,8)';
ctx.moveTo(25864,328);
ctx.lineTo(25864,292);
ctx.lineTo(25900,292);
ctx.lineTo(25900,328);
ctx.lineTo(25864,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,72,24,0.85)';
ctx.strokeStyle='rgb(176,64,201)';
ctx.moveTo(25672,712);
ctx.lineTo(25672,676);
ctx.lineTo(25708,676);
ctx.lineTo(25708,712);
ctx.lineTo(25672,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,116,139,0.85)';
ctx.strokeStyle='rgb(253,203,232)';
ctx.moveTo(25672,616);
ctx.lineTo(25672,580);
ctx.lineTo(25708,580);
ctx.lineTo(25708,616);
ctx.lineTo(25672,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,231,230,0.85)';
ctx.strokeStyle='rgb(166,137,129)';
ctx.moveTo(25672,520);
ctx.lineTo(25672,484);
ctx.lineTo(25708,484);
ctx.lineTo(25708,520);
ctx.lineTo(25672,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,128,206,0.85)';
ctx.strokeStyle='rgb(100,129,75)';
ctx.moveTo(25672,424);
ctx.lineTo(25672,388);
ctx.lineTo(25708,388);
ctx.lineTo(25708,424);
ctx.lineTo(25672,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,234,219,0.85)';
ctx.strokeStyle='rgb(198,209,146)';
ctx.moveTo(25672,328);
ctx.lineTo(25672,292);
ctx.lineTo(25708,292);
ctx.lineTo(25708,328);
ctx.lineTo(25672,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,217,205,0.85)';
ctx.strokeStyle='rgb(50,228,168)';
ctx.moveTo(25768,712);
ctx.lineTo(25768,676);
ctx.lineTo(25804,676);
ctx.lineTo(25804,712);
ctx.lineTo(25768,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,130,38,0.85)';
ctx.strokeStyle='rgb(239,44,219)';
ctx.moveTo(25768,616);
ctx.lineTo(25768,580);
ctx.lineTo(25804,580);
ctx.lineTo(25804,616);
ctx.lineTo(25768,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,48,61,0.85)';
ctx.strokeStyle='rgb(3,42,6)';
ctx.moveTo(25864,1096);
ctx.lineTo(25864,1060);
ctx.lineTo(25900,1060);
ctx.lineTo(25900,1096);
ctx.lineTo(25864,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,97,119,0.85)';
ctx.strokeStyle='rgb(157,78,204)';
ctx.moveTo(25864,1000);
ctx.lineTo(25864,964);
ctx.lineTo(25900,964);
ctx.lineTo(25900,1000);
ctx.lineTo(25864,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,234,144,0.85)';
ctx.strokeStyle='rgb(80,173,204)';
ctx.moveTo(25864,904);
ctx.lineTo(25864,868);
ctx.lineTo(25900,868);
ctx.lineTo(25900,904);
ctx.lineTo(25864,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,229,159,0.85)';
ctx.strokeStyle='rgb(169,53,48)';
ctx.moveTo(25672,1096);
ctx.lineTo(25672,1060);
ctx.lineTo(25708,1060);
ctx.lineTo(25708,1096);
ctx.lineTo(25672,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,130,117,0.85)';
ctx.strokeStyle='rgb(23,62,103)';
ctx.moveTo(25672,1000);
ctx.lineTo(25672,964);
ctx.lineTo(25708,964);
ctx.lineTo(25708,1000);
ctx.lineTo(25672,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,39,251,0.85)';
ctx.strokeStyle='rgb(250,220,5)';
ctx.moveTo(25672,904);
ctx.lineTo(25672,868);
ctx.lineTo(25708,868);
ctx.lineTo(25708,904);
ctx.lineTo(25672,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,138,114,0.85)';
ctx.strokeStyle='rgb(209,40,240)';
ctx.moveTo(25768,1288);
ctx.lineTo(25768,1252);
ctx.lineTo(25804,1252);
ctx.lineTo(25804,1288);
ctx.lineTo(25768,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,217,36,0.85)';
ctx.strokeStyle='rgb(148,79,206)';
ctx.moveTo(25768,1192);
ctx.lineTo(25768,1156);
ctx.lineTo(25804,1156);
ctx.lineTo(25804,1192);
ctx.lineTo(25768,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,152,100,0.85)';
ctx.strokeStyle='rgb(183,221,18)';
ctx.moveTo(25768,1096);
ctx.lineTo(25768,1060);
ctx.lineTo(25804,1060);
ctx.lineTo(25804,1096);
ctx.lineTo(25768,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,37,132,0.85)';
ctx.strokeStyle='rgb(247,5,138)';
ctx.moveTo(25768,1000);
ctx.lineTo(25768,964);
ctx.lineTo(25804,964);
ctx.lineTo(25804,1000);
ctx.lineTo(25768,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,153,115,0.85)';
ctx.strokeStyle='rgb(238,110,231)';
ctx.moveTo(25768,904);
ctx.lineTo(25768,868);
ctx.lineTo(25804,868);
ctx.lineTo(25804,904);
ctx.lineTo(25768,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,62,10,0.85)';
ctx.strokeStyle='rgb(121,189,65)';
ctx.moveTo(25672,1288);
ctx.lineTo(25672,1252);
ctx.lineTo(25708,1252);
ctx.lineTo(25708,1288);
ctx.lineTo(25672,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,118,81,0.85)';
ctx.strokeStyle='rgb(23,76,144)';
ctx.moveTo(25672,1192);
ctx.lineTo(25672,1156);
ctx.lineTo(25708,1156);
ctx.lineTo(25708,1192);
ctx.lineTo(25672,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,175,42,0.85)';
ctx.strokeStyle='rgb(150,189,142)';
ctx.moveTo(25864,1288);
ctx.lineTo(25864,1252);
ctx.lineTo(25900,1252);
ctx.lineTo(25900,1288);
ctx.lineTo(25864,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,37,114,0.85)';
ctx.strokeStyle='rgb(208,50,59)';
ctx.moveTo(25864,1192);
ctx.lineTo(25864,1156);
ctx.lineTo(25900,1156);
ctx.lineTo(25900,1192);
ctx.lineTo(25864,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,218,234,0.85)';
ctx.strokeStyle='rgb(55,213,153)';
ctx.moveTo(26152,904);
ctx.lineTo(26152,868);
ctx.lineTo(26188,868);
ctx.lineTo(26188,904);
ctx.lineTo(26152,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,26,136,0.85)';
ctx.strokeStyle='rgb(31,247,253)';
ctx.moveTo(26056,1192);
ctx.lineTo(26056,1156);
ctx.lineTo(26092,1156);
ctx.lineTo(26092,1192);
ctx.lineTo(26056,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,19,23,0.85)';
ctx.strokeStyle='rgb(215,65,99)';
ctx.moveTo(26056,1096);
ctx.lineTo(26056,1060);
ctx.lineTo(26092,1060);
ctx.lineTo(26092,1096);
ctx.lineTo(26056,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,97,215,0.85)';
ctx.strokeStyle='rgb(86,33,235)';
ctx.moveTo(26344,1288);
ctx.lineTo(26344,1252);
ctx.lineTo(26380,1252);
ctx.lineTo(26380,1288);
ctx.lineTo(26344,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,16,4,0.85)';
ctx.strokeStyle='rgb(214,43,222)';
ctx.moveTo(26344,1192);
ctx.lineTo(26344,1156);
ctx.lineTo(26380,1156);
ctx.lineTo(26380,1192);
ctx.lineTo(26344,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,164,76,0.85)';
ctx.strokeStyle='rgb(164,123,129)';
ctx.moveTo(26344,1096);
ctx.lineTo(26344,1060);
ctx.lineTo(26380,1060);
ctx.lineTo(26380,1096);
ctx.lineTo(26344,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,43,74,0.85)';
ctx.strokeStyle='rgb(133,1,127)';
ctx.moveTo(26344,1000);
ctx.lineTo(26344,964);
ctx.lineTo(26380,964);
ctx.lineTo(26380,1000);
ctx.lineTo(26344,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,12,220,0.85)';
ctx.strokeStyle='rgb(203,81,189)';
ctx.moveTo(26344,904);
ctx.lineTo(26344,868);
ctx.lineTo(26380,868);
ctx.lineTo(26380,904);
ctx.lineTo(26344,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,238,49,0.85)';
ctx.strokeStyle='rgb(118,49,251)';
ctx.moveTo(26056,1000);
ctx.lineTo(26056,964);
ctx.lineTo(26092,964);
ctx.lineTo(26092,1000);
ctx.lineTo(26056,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,172,81,0.85)';
ctx.strokeStyle='rgb(233,74,249)';
ctx.moveTo(26056,904);
ctx.lineTo(26056,868);
ctx.lineTo(26092,868);
ctx.lineTo(26092,904);
ctx.lineTo(26056,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,90,26,0.85)';
ctx.strokeStyle='rgb(65,207,241)';
ctx.moveTo(26056,1288);
ctx.lineTo(26056,1252);
ctx.lineTo(26092,1252);
ctx.lineTo(26092,1288);
ctx.lineTo(26056,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,82,157,0.85)';
ctx.strokeStyle='rgb(196,168,75)';
ctx.moveTo(26152,1288);
ctx.lineTo(26152,1252);
ctx.lineTo(26188,1252);
ctx.lineTo(26188,1288);
ctx.lineTo(26152,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,166,217,0.85)';
ctx.strokeStyle='rgb(116,73,134)';
ctx.moveTo(26248,1288);
ctx.lineTo(26248,1252);
ctx.lineTo(26284,1252);
ctx.lineTo(26284,1288);
ctx.lineTo(26248,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,58,45,0.85)';
ctx.strokeStyle='rgb(144,92,210)';
ctx.moveTo(26248,1192);
ctx.lineTo(26248,1156);
ctx.lineTo(26284,1156);
ctx.lineTo(26284,1192);
ctx.lineTo(26248,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,155,209,0.85)';
ctx.strokeStyle='rgb(167,15,233)';
ctx.moveTo(26440,1288);
ctx.lineTo(26440,1252);
ctx.lineTo(26476,1252);
ctx.lineTo(26476,1288);
ctx.lineTo(26440,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,194,12,0.85)';
ctx.strokeStyle='rgb(143,30,48)';
ctx.moveTo(26440,1192);
ctx.lineTo(26440,1156);
ctx.lineTo(26476,1156);
ctx.lineTo(26476,1192);
ctx.lineTo(26440,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,113,196,0.85)';
ctx.strokeStyle='rgb(91,135,178)';
ctx.moveTo(26440,1096);
ctx.lineTo(26440,1060);
ctx.lineTo(26476,1060);
ctx.lineTo(26476,1096);
ctx.lineTo(26440,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,109,24,0.85)';
ctx.strokeStyle='rgb(71,8,181)';
ctx.moveTo(26440,1000);
ctx.lineTo(26440,964);
ctx.lineTo(26476,964);
ctx.lineTo(26476,1000);
ctx.lineTo(26440,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,249,137,0.85)';
ctx.strokeStyle='rgb(171,3,173)';
ctx.moveTo(26440,904);
ctx.lineTo(26440,868);
ctx.lineTo(26476,868);
ctx.lineTo(26476,904);
ctx.lineTo(26440,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,23,194,0.85)';
ctx.strokeStyle='rgb(115,238,145)';
ctx.moveTo(26248,1096);
ctx.lineTo(26248,1060);
ctx.lineTo(26284,1060);
ctx.lineTo(26284,1096);
ctx.lineTo(26248,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,139,242,0.85)';
ctx.strokeStyle='rgb(234,204,7)';
ctx.moveTo(26248,1000);
ctx.lineTo(26248,964);
ctx.lineTo(26284,964);
ctx.lineTo(26284,1000);
ctx.lineTo(26248,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,0,38,0.85)';
ctx.strokeStyle='rgb(79,205,53)';
ctx.moveTo(26248,904);
ctx.lineTo(26248,868);
ctx.lineTo(26284,868);
ctx.lineTo(26284,904);
ctx.lineTo(26248,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,148,224,0.85)';
ctx.strokeStyle='rgb(167,253,240)';
ctx.moveTo(26152,1192);
ctx.lineTo(26152,1156);
ctx.lineTo(26188,1156);
ctx.lineTo(26188,1192);
ctx.lineTo(26152,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,31,203,0.85)';
ctx.strokeStyle='rgb(10,113,241)';
ctx.moveTo(26152,1096);
ctx.lineTo(26152,1060);
ctx.lineTo(26188,1060);
ctx.lineTo(26188,1096);
ctx.lineTo(26152,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,63,216,0.85)';
ctx.strokeStyle='rgb(136,165,220)';
ctx.moveTo(26152,1000);
ctx.lineTo(26152,964);
ctx.lineTo(26188,964);
ctx.lineTo(26188,1000);
ctx.lineTo(26152,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,134,39,0.85)';
ctx.strokeStyle='rgb(115,66,53)';
ctx.moveTo(25480,808);
ctx.lineTo(25480,772);
ctx.lineTo(25516,772);
ctx.lineTo(25516,808);
ctx.lineTo(25480,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,5,121,0.85)';
ctx.strokeStyle='rgb(253,77,121)';
ctx.moveTo(25576,808);
ctx.lineTo(25576,772);
ctx.lineTo(25612,772);
ctx.lineTo(25612,808);
ctx.lineTo(25576,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,16,113,0.85)';
ctx.strokeStyle='rgb(244,195,218)';
ctx.moveTo(25480,424);
ctx.lineTo(25480,388);
ctx.lineTo(25516,388);
ctx.lineTo(25516,424);
ctx.lineTo(25480,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,92,228,0.85)';
ctx.strokeStyle='rgb(67,9,184)';
ctx.moveTo(25480,328);
ctx.lineTo(25480,292);
ctx.lineTo(25516,292);
ctx.lineTo(25516,328);
ctx.lineTo(25480,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,13,137,0.85)';
ctx.strokeStyle='rgb(188,123,13)';
ctx.moveTo(25480,712);
ctx.lineTo(25480,676);
ctx.lineTo(25516,676);
ctx.lineTo(25516,712);
ctx.lineTo(25480,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,62,231,0.85)';
ctx.strokeStyle='rgb(185,106,138)';
ctx.moveTo(25576,712);
ctx.lineTo(25576,676);
ctx.lineTo(25612,676);
ctx.lineTo(25612,712);
ctx.lineTo(25576,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,60,200,0.85)';
ctx.strokeStyle='rgb(127,41,140)';
ctx.moveTo(25576,616);
ctx.lineTo(25576,580);
ctx.lineTo(25612,580);
ctx.lineTo(25612,616);
ctx.lineTo(25576,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,45,57,0.85)';
ctx.strokeStyle='rgb(195,215,48)';
ctx.moveTo(25576,520);
ctx.lineTo(25576,484);
ctx.lineTo(25612,484);
ctx.lineTo(25612,520);
ctx.lineTo(25576,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,79,62,0.85)';
ctx.strokeStyle='rgb(23,3,34)';
ctx.moveTo(25576,424);
ctx.lineTo(25576,388);
ctx.lineTo(25612,388);
ctx.lineTo(25612,424);
ctx.lineTo(25576,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,237,246,0.85)';
ctx.strokeStyle='rgb(157,137,10)';
ctx.moveTo(25576,328);
ctx.lineTo(25576,292);
ctx.lineTo(25612,292);
ctx.lineTo(25612,328);
ctx.lineTo(25576,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,167,46,0.85)';
ctx.strokeStyle='rgb(0,163,10)';
ctx.moveTo(25480,616);
ctx.lineTo(25480,580);
ctx.lineTo(25516,580);
ctx.lineTo(25516,616);
ctx.lineTo(25480,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,30,4,0.85)';
ctx.strokeStyle='rgb(118,215,111)';
ctx.moveTo(25480,520);
ctx.lineTo(25480,484);
ctx.lineTo(25516,484);
ctx.lineTo(25516,520);
ctx.lineTo(25480,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,30,122,0.85)';
ctx.strokeStyle='rgb(250,27,103)';
ctx.moveTo(25576,1192);
ctx.lineTo(25576,1156);
ctx.lineTo(25612,1156);
ctx.lineTo(25612,1192);
ctx.lineTo(25576,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,94,141,0.85)';
ctx.strokeStyle='rgb(11,52,165)';
ctx.moveTo(25576,1096);
ctx.lineTo(25576,1060);
ctx.lineTo(25612,1060);
ctx.lineTo(25612,1096);
ctx.lineTo(25576,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,198,240,0.85)';
ctx.strokeStyle='rgb(239,20,18)';
ctx.moveTo(25576,1000);
ctx.lineTo(25576,964);
ctx.lineTo(25612,964);
ctx.lineTo(25612,1000);
ctx.lineTo(25576,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,213,180,0.85)';
ctx.strokeStyle='rgb(61,182,246)';
ctx.moveTo(25576,904);
ctx.lineTo(25576,868);
ctx.lineTo(25612,868);
ctx.lineTo(25612,904);
ctx.lineTo(25576,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,28,60,0.85)';
ctx.strokeStyle='rgb(62,117,126)';
ctx.moveTo(25480,1192);
ctx.lineTo(25480,1156);
ctx.lineTo(25516,1156);
ctx.lineTo(25516,1192);
ctx.lineTo(25480,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,160,204,0.85)';
ctx.strokeStyle='rgb(34,21,43)';
ctx.moveTo(25480,1096);
ctx.lineTo(25480,1060);
ctx.lineTo(25516,1060);
ctx.lineTo(25516,1096);
ctx.lineTo(25480,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,132,167,0.85)';
ctx.strokeStyle='rgb(117,97,22)';
ctx.moveTo(25480,1000);
ctx.lineTo(25480,964);
ctx.lineTo(25516,964);
ctx.lineTo(25516,1000);
ctx.lineTo(25480,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,226,246,0.85)';
ctx.strokeStyle='rgb(160,169,4)';
ctx.moveTo(25480,904);
ctx.lineTo(25480,868);
ctx.lineTo(25516,868);
ctx.lineTo(25516,904);
ctx.lineTo(25480,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,7,86,0.85)';
ctx.strokeStyle='rgb(40,172,102)';
ctx.moveTo(25480,1288);
ctx.lineTo(25480,1252);
ctx.lineTo(25516,1252);
ctx.lineTo(25516,1288);
ctx.lineTo(25480,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,37,155,0.85)';
ctx.strokeStyle='rgb(58,128,160)';
ctx.moveTo(25576,1288);
ctx.lineTo(25576,1252);
ctx.lineTo(25612,1252);
ctx.lineTo(25612,1288);
ctx.lineTo(25576,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,88,238,0.85)';
ctx.strokeStyle='rgb(129,115,227)';
ctx.moveTo(24280,1912);
ctx.lineTo(24280,1876);
ctx.lineTo(24316,1876);
ctx.lineTo(24316,1912);
ctx.lineTo(24280,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,72,24,0.85)';
ctx.strokeStyle='rgb(33,53,43)';
ctx.moveTo(24280,2104);
ctx.lineTo(24280,2068);
ctx.lineTo(24316,2068);
ctx.lineTo(24316,2104);
ctx.lineTo(24280,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,208,181,0.85)';
ctx.strokeStyle='rgb(3,246,156)';
ctx.moveTo(24280,1816);
ctx.lineTo(24280,1780);
ctx.lineTo(24316,1780);
ctx.lineTo(24316,1816);
ctx.lineTo(24280,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,86,146,0.85)';
ctx.strokeStyle='rgb(195,169,42)';
ctx.moveTo(24280,1720);
ctx.lineTo(24280,1684);
ctx.lineTo(24316,1684);
ctx.lineTo(24316,1720);
ctx.lineTo(24280,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,22,20,0.85)';
ctx.strokeStyle='rgb(183,183,146)';
ctx.moveTo(24280,1624);
ctx.lineTo(24280,1588);
ctx.lineTo(24316,1588);
ctx.lineTo(24316,1624);
ctx.lineTo(24280,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,52,216,0.85)';
ctx.strokeStyle='rgb(129,109,94)';
ctx.moveTo(24184,1912);
ctx.lineTo(24184,1876);
ctx.lineTo(24220,1876);
ctx.lineTo(24220,1912);
ctx.lineTo(24184,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,179,203,0.85)';
ctx.strokeStyle='rgb(203,181,166)';
ctx.moveTo(24376,2008);
ctx.lineTo(24376,1972);
ctx.lineTo(24412,1972);
ctx.lineTo(24412,2008);
ctx.lineTo(24376,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,53,218,0.85)';
ctx.strokeStyle='rgb(187,198,3)';
ctx.moveTo(24376,1912);
ctx.lineTo(24376,1876);
ctx.lineTo(24412,1876);
ctx.lineTo(24412,1912);
ctx.lineTo(24376,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,251,205,0.85)';
ctx.strokeStyle='rgb(100,118,208)';
ctx.moveTo(24376,1816);
ctx.lineTo(24376,1780);
ctx.lineTo(24412,1780);
ctx.lineTo(24412,1816);
ctx.lineTo(24376,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,78,247,0.85)';
ctx.strokeStyle='rgb(55,110,76)';
ctx.moveTo(24376,1720);
ctx.lineTo(24376,1684);
ctx.lineTo(24412,1684);
ctx.lineTo(24412,1720);
ctx.lineTo(24376,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,91,244,0.85)';
ctx.strokeStyle='rgb(222,91,161)';
ctx.moveTo(24376,2104);
ctx.lineTo(24376,2068);
ctx.lineTo(24412,2068);
ctx.lineTo(24412,2104);
ctx.lineTo(24376,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,15,196,0.85)';
ctx.strokeStyle='rgb(174,150,90)';
ctx.moveTo(24472,2104);
ctx.lineTo(24472,2068);
ctx.lineTo(24508,2068);
ctx.lineTo(24508,2104);
ctx.lineTo(24472,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,98,246,0.85)';
ctx.strokeStyle='rgb(123,200,122)';
ctx.moveTo(24472,1816);
ctx.lineTo(24472,1780);
ctx.lineTo(24508,1780);
ctx.lineTo(24508,1816);
ctx.lineTo(24472,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,36,218,0.85)';
ctx.strokeStyle='rgb(106,91,140)';
ctx.moveTo(24472,1720);
ctx.lineTo(24472,1684);
ctx.lineTo(24508,1684);
ctx.lineTo(24508,1720);
ctx.lineTo(24472,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,241,48,0.85)';
ctx.strokeStyle='rgb(126,52,226)';
ctx.moveTo(24472,1624);
ctx.lineTo(24472,1588);
ctx.lineTo(24508,1588);
ctx.lineTo(24508,1624);
ctx.lineTo(24472,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,161,233,0.85)';
ctx.strokeStyle='rgb(158,48,178)';
ctx.moveTo(24184,2104);
ctx.lineTo(24184,2068);
ctx.lineTo(24220,2068);
ctx.lineTo(24220,2104);
ctx.lineTo(24184,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,170,37,0.85)';
ctx.strokeStyle='rgb(191,175,100)';
ctx.moveTo(24376,1624);
ctx.lineTo(24376,1588);
ctx.lineTo(24412,1588);
ctx.lineTo(24412,1624);
ctx.lineTo(24376,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,47,106,0.85)';
ctx.strokeStyle='rgb(167,252,138)';
ctx.moveTo(24184,1816);
ctx.lineTo(24184,1780);
ctx.lineTo(24220,1780);
ctx.lineTo(24220,1816);
ctx.lineTo(24184,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,253,52,0.85)';
ctx.strokeStyle='rgb(127,223,92)';
ctx.moveTo(24472,2008);
ctx.lineTo(24472,1972);
ctx.lineTo(24508,1972);
ctx.lineTo(24508,2008);
ctx.lineTo(24472,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,206,41,0.85)';
ctx.strokeStyle='rgb(142,190,185)';
ctx.moveTo(24472,1912);
ctx.lineTo(24472,1876);
ctx.lineTo(24508,1876);
ctx.lineTo(24508,1912);
ctx.lineTo(24472,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,214,212,0.85)';
ctx.strokeStyle='rgb(52,252,121)';
ctx.moveTo(24184,1720);
ctx.lineTo(24184,1684);
ctx.lineTo(24220,1684);
ctx.lineTo(24220,1720);
ctx.lineTo(24184,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,71,235,0.85)';
ctx.strokeStyle='rgb(54,83,171)';
ctx.moveTo(24184,1624);
ctx.lineTo(24184,1588);
ctx.lineTo(24220,1588);
ctx.lineTo(24220,1624);
ctx.lineTo(24184,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,192,181,0.85)';
ctx.strokeStyle='rgb(190,113,25)';
ctx.moveTo(24184,2008);
ctx.lineTo(24184,1972);
ctx.lineTo(24220,1972);
ctx.lineTo(24220,2008);
ctx.lineTo(24184,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,67,42,0.85)';
ctx.strokeStyle='rgb(189,58,88)';
ctx.moveTo(24280,2008);
ctx.lineTo(24280,1972);
ctx.lineTo(24316,1972);
ctx.lineTo(24316,2008);
ctx.lineTo(24280,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,15,200,0.85)';
ctx.strokeStyle='rgb(229,5,122)';
ctx.moveTo(24376,2392);
ctx.lineTo(24376,2356);
ctx.lineTo(24412,2356);
ctx.lineTo(24412,2392);
ctx.lineTo(24376,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,131,20,0.85)';
ctx.strokeStyle='rgb(80,33,19)';
ctx.moveTo(24376,2296);
ctx.lineTo(24376,2260);
ctx.lineTo(24412,2260);
ctx.lineTo(24412,2296);
ctx.lineTo(24376,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,211,213,0.85)';
ctx.strokeStyle='rgb(14,243,56)';
ctx.moveTo(24376,2200);
ctx.lineTo(24376,2164);
ctx.lineTo(24412,2164);
ctx.lineTo(24412,2200);
ctx.lineTo(24376,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,160,55,0.85)';
ctx.strokeStyle='rgb(236,152,153)';
ctx.moveTo(24280,2392);
ctx.lineTo(24280,2356);
ctx.lineTo(24316,2356);
ctx.lineTo(24316,2392);
ctx.lineTo(24280,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,58,223,0.85)';
ctx.strokeStyle='rgb(83,250,14)';
ctx.moveTo(24280,2296);
ctx.lineTo(24280,2260);
ctx.lineTo(24316,2260);
ctx.lineTo(24316,2296);
ctx.lineTo(24280,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,109,206,0.85)';
ctx.strokeStyle='rgb(49,248,146)';
ctx.moveTo(24280,2200);
ctx.lineTo(24280,2164);
ctx.lineTo(24316,2164);
ctx.lineTo(24316,2200);
ctx.lineTo(24280,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,117,143,0.85)';
ctx.strokeStyle='rgb(157,198,183)';
ctx.moveTo(24184,2392);
ctx.lineTo(24184,2356);
ctx.lineTo(24220,2356);
ctx.lineTo(24220,2392);
ctx.lineTo(24184,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,254,84,0.85)';
ctx.strokeStyle='rgb(212,185,120)';
ctx.moveTo(24472,2392);
ctx.lineTo(24472,2356);
ctx.lineTo(24508,2356);
ctx.lineTo(24508,2392);
ctx.lineTo(24472,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,236,74,0.85)';
ctx.strokeStyle='rgb(234,122,185)';
ctx.moveTo(24472,2296);
ctx.lineTo(24472,2260);
ctx.lineTo(24508,2260);
ctx.lineTo(24508,2296);
ctx.lineTo(24472,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,95,19,0.85)';
ctx.strokeStyle='rgb(86,106,53)';
ctx.moveTo(24472,2200);
ctx.lineTo(24472,2164);
ctx.lineTo(24508,2164);
ctx.lineTo(24508,2200);
ctx.lineTo(24472,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,12,191,0.85)';
ctx.strokeStyle='rgb(251,171,238)';
ctx.moveTo(24184,2296);
ctx.lineTo(24184,2260);
ctx.lineTo(24220,2260);
ctx.lineTo(24220,2296);
ctx.lineTo(24184,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,124,179,0.85)';
ctx.strokeStyle='rgb(196,188,85)';
ctx.moveTo(24184,2200);
ctx.lineTo(24184,2164);
ctx.lineTo(24220,2164);
ctx.lineTo(24220,2200);
ctx.lineTo(24184,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,64,166,0.85)';
ctx.strokeStyle='rgb(26,102,195)';
ctx.moveTo(24664,1720);
ctx.lineTo(24664,1684);
ctx.lineTo(24700,1684);
ctx.lineTo(24700,1720);
ctx.lineTo(24664,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,101,170,0.85)';
ctx.strokeStyle='rgb(30,246,196)';
ctx.moveTo(24664,1624);
ctx.lineTo(24664,1588);
ctx.lineTo(24700,1588);
ctx.lineTo(24700,1624);
ctx.lineTo(24664,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,93,113,0.85)';
ctx.strokeStyle='rgb(137,147,33)';
ctx.moveTo(24760,2104);
ctx.lineTo(24760,2068);
ctx.lineTo(24796,2068);
ctx.lineTo(24796,2104);
ctx.lineTo(24760,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,184,15,0.85)';
ctx.strokeStyle='rgb(8,65,192)';
ctx.moveTo(24856,2104);
ctx.lineTo(24856,2068);
ctx.lineTo(24892,2068);
ctx.lineTo(24892,2104);
ctx.lineTo(24856,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,147,70,0.85)';
ctx.strokeStyle='rgb(27,92,52)';
ctx.moveTo(24952,2104);
ctx.lineTo(24952,2068);
ctx.lineTo(24988,2068);
ctx.lineTo(24988,2104);
ctx.lineTo(24952,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,119,28,0.85)';
ctx.strokeStyle='rgb(19,87,104)';
ctx.moveTo(24568,1624);
ctx.lineTo(24568,1588);
ctx.lineTo(24604,1588);
ctx.lineTo(24604,1624);
ctx.lineTo(24568,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,148,75,0.85)';
ctx.strokeStyle='rgb(103,230,104)';
ctx.moveTo(25048,2104);
ctx.lineTo(25048,2068);
ctx.lineTo(25084,2068);
ctx.lineTo(25084,2104);
ctx.lineTo(25048,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,200,100,0.85)';
ctx.strokeStyle='rgb(152,236,11)';
ctx.moveTo(25144,2104);
ctx.lineTo(25144,2068);
ctx.lineTo(25180,2068);
ctx.lineTo(25180,2104);
ctx.lineTo(25144,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,214,2,0.85)';
ctx.strokeStyle='rgb(80,159,51)';
ctx.moveTo(24760,1624);
ctx.lineTo(24760,1588);
ctx.lineTo(24796,1588);
ctx.lineTo(24796,1624);
ctx.lineTo(24760,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,143,80,0.85)';
ctx.strokeStyle='rgb(199,211,238)';
ctx.moveTo(24760,2008);
ctx.lineTo(24760,1972);
ctx.lineTo(24796,1972);
ctx.lineTo(24796,2008);
ctx.lineTo(24760,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,242,40,0.85)';
ctx.strokeStyle='rgb(10,178,43)';
ctx.moveTo(24856,2008);
ctx.lineTo(24856,1972);
ctx.lineTo(24892,1972);
ctx.lineTo(24892,2008);
ctx.lineTo(24856,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,89,89,0.85)';
ctx.strokeStyle='rgb(207,18,181)';
ctx.moveTo(24856,1912);
ctx.lineTo(24856,1876);
ctx.lineTo(24892,1876);
ctx.lineTo(24892,1912);
ctx.lineTo(24856,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,39,150,0.85)';
ctx.strokeStyle='rgb(6,20,15)';
ctx.moveTo(24856,1816);
ctx.lineTo(24856,1780);
ctx.lineTo(24892,1780);
ctx.lineTo(24892,1816);
ctx.lineTo(24856,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,172,36,0.85)';
ctx.strokeStyle='rgb(128,90,113)';
ctx.moveTo(24856,1720);
ctx.lineTo(24856,1684);
ctx.lineTo(24892,1684);
ctx.lineTo(24892,1720);
ctx.lineTo(24856,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,122,56,0.85)';
ctx.strokeStyle='rgb(91,105,109)';
ctx.moveTo(24856,1624);
ctx.lineTo(24856,1588);
ctx.lineTo(24892,1588);
ctx.lineTo(24892,1624);
ctx.lineTo(24856,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,45,113,0.85)';
ctx.strokeStyle='rgb(224,180,187)';
ctx.moveTo(24760,1912);
ctx.lineTo(24760,1876);
ctx.lineTo(24796,1876);
ctx.lineTo(24796,1912);
ctx.lineTo(24760,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,191,110,0.85)';
ctx.strokeStyle='rgb(141,101,251)';
ctx.moveTo(24952,2008);
ctx.lineTo(24952,1972);
ctx.lineTo(24988,1972);
ctx.lineTo(24988,2008);
ctx.lineTo(24952,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,11,49,0.85)';
ctx.strokeStyle='rgb(71,74,89)';
ctx.moveTo(24952,1912);
ctx.lineTo(24952,1876);
ctx.lineTo(24988,1876);
ctx.lineTo(24988,1912);
ctx.lineTo(24952,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,13,193,0.85)';
ctx.strokeStyle='rgb(78,92,244)';
ctx.moveTo(24952,1816);
ctx.lineTo(24952,1780);
ctx.lineTo(24988,1780);
ctx.lineTo(24988,1816);
ctx.lineTo(24952,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,229,123,0.85)';
ctx.strokeStyle='rgb(142,82,239)';
ctx.moveTo(24952,1720);
ctx.lineTo(24952,1684);
ctx.lineTo(24988,1684);
ctx.lineTo(24988,1720);
ctx.lineTo(24952,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,176,93,0.85)';
ctx.strokeStyle='rgb(235,187,179)';
ctx.moveTo(24952,1624);
ctx.lineTo(24952,1588);
ctx.lineTo(24988,1588);
ctx.lineTo(24988,1624);
ctx.lineTo(24952,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,112,71,0.85)';
ctx.strokeStyle='rgb(12,235,228)';
ctx.moveTo(24760,1816);
ctx.lineTo(24760,1780);
ctx.lineTo(24796,1780);
ctx.lineTo(24796,1816);
ctx.lineTo(24760,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,19,200,0.85)';
ctx.strokeStyle='rgb(69,248,132)';
ctx.moveTo(25048,2008);
ctx.lineTo(25048,1972);
ctx.lineTo(25084,1972);
ctx.lineTo(25084,2008);
ctx.lineTo(25048,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,180,60,0.85)';
ctx.strokeStyle='rgb(32,59,236)';
ctx.moveTo(25048,1912);
ctx.lineTo(25048,1876);
ctx.lineTo(25084,1876);
ctx.lineTo(25084,1912);
ctx.lineTo(25048,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,131,237,0.85)';
ctx.strokeStyle='rgb(67,184,214)';
ctx.moveTo(25048,1816);
ctx.lineTo(25048,1780);
ctx.lineTo(25084,1780);
ctx.lineTo(25084,1816);
ctx.lineTo(25048,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,232,139,0.85)';
ctx.strokeStyle='rgb(248,49,66)';
ctx.moveTo(25048,1720);
ctx.lineTo(25048,1684);
ctx.lineTo(25084,1684);
ctx.lineTo(25084,1720);
ctx.lineTo(25048,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,211,118,0.85)';
ctx.strokeStyle='rgb(33,204,191)';
ctx.moveTo(25048,1624);
ctx.lineTo(25048,1588);
ctx.lineTo(25084,1588);
ctx.lineTo(25084,1624);
ctx.lineTo(25048,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,25,194,0.85)';
ctx.strokeStyle='rgb(60,69,11)';
ctx.moveTo(24760,1720);
ctx.lineTo(24760,1684);
ctx.lineTo(24796,1684);
ctx.lineTo(24796,1720);
ctx.lineTo(24760,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,117,132,0.85)';
ctx.strokeStyle='rgb(178,205,80)';
ctx.moveTo(25144,2008);
ctx.lineTo(25144,1972);
ctx.lineTo(25180,1972);
ctx.lineTo(25180,2008);
ctx.lineTo(25144,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,138,47,0.85)';
ctx.strokeStyle='rgb(56,220,53)';
ctx.moveTo(24568,2392);
ctx.lineTo(24568,2356);
ctx.lineTo(24604,2356);
ctx.lineTo(24604,2392);
ctx.lineTo(24568,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,134,71,0.85)';
ctx.strokeStyle='rgb(88,205,142)';
ctx.moveTo(25144,1912);
ctx.lineTo(25144,1876);
ctx.lineTo(25180,1876);
ctx.lineTo(25180,1912);
ctx.lineTo(25144,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,70,23,0.85)';
ctx.strokeStyle='rgb(125,225,101)';
ctx.moveTo(25144,1816);
ctx.lineTo(25144,1780);
ctx.lineTo(25180,1780);
ctx.lineTo(25180,1816);
ctx.lineTo(25144,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,168,83,0.85)';
ctx.strokeStyle='rgb(19,202,47)';
ctx.moveTo(25144,1720);
ctx.lineTo(25144,1684);
ctx.lineTo(25180,1684);
ctx.lineTo(25180,1720);
ctx.lineTo(25144,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,123,232,0.85)';
ctx.strokeStyle='rgb(191,223,198)';
ctx.moveTo(25144,1624);
ctx.lineTo(25144,1588);
ctx.lineTo(25180,1588);
ctx.lineTo(25180,1624);
ctx.lineTo(25144,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,14,112,0.85)';
ctx.strokeStyle='rgb(111,87,239)';
ctx.moveTo(24568,2296);
ctx.lineTo(24568,2260);
ctx.lineTo(24604,2260);
ctx.lineTo(24604,2296);
ctx.lineTo(24568,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,7,113,0.85)';
ctx.strokeStyle='rgb(7,93,118)';
ctx.moveTo(24568,2200);
ctx.lineTo(24568,2164);
ctx.lineTo(24604,2164);
ctx.lineTo(24604,2200);
ctx.lineTo(24568,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,137,206,0.85)';
ctx.strokeStyle='rgb(22,81,197)';
ctx.moveTo(24568,2104);
ctx.lineTo(24568,2068);
ctx.lineTo(24604,2068);
ctx.lineTo(24604,2104);
ctx.lineTo(24568,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,21,193,0.85)';
ctx.strokeStyle='rgb(68,233,165)';
ctx.moveTo(24664,2392);
ctx.lineTo(24664,2356);
ctx.lineTo(24700,2356);
ctx.lineTo(24700,2392);
ctx.lineTo(24664,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,172,204,0.85)';
ctx.strokeStyle='rgb(37,67,61)';
ctx.moveTo(24664,2296);
ctx.lineTo(24664,2260);
ctx.lineTo(24700,2260);
ctx.lineTo(24700,2296);
ctx.lineTo(24664,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,24,93,0.85)';
ctx.strokeStyle='rgb(148,149,193)';
ctx.moveTo(24664,2200);
ctx.lineTo(24664,2164);
ctx.lineTo(24700,2164);
ctx.lineTo(24700,2200);
ctx.lineTo(24664,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,14,97,0.85)';
ctx.strokeStyle='rgb(10,209,116)';
ctx.moveTo(24664,2104);
ctx.lineTo(24664,2068);
ctx.lineTo(24700,2068);
ctx.lineTo(24700,2104);
ctx.lineTo(24664,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,175,0,0.85)';
ctx.strokeStyle='rgb(31,135,58)';
ctx.moveTo(24568,2008);
ctx.lineTo(24568,1972);
ctx.lineTo(24604,1972);
ctx.lineTo(24604,2008);
ctx.lineTo(24568,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,41,192,0.85)';
ctx.strokeStyle='rgb(183,245,242)';
ctx.moveTo(24568,1912);
ctx.lineTo(24568,1876);
ctx.lineTo(24604,1876);
ctx.lineTo(24604,1912);
ctx.lineTo(24568,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,145,118,0.85)';
ctx.strokeStyle='rgb(240,43,237)';
ctx.moveTo(24568,1816);
ctx.lineTo(24568,1780);
ctx.lineTo(24604,1780);
ctx.lineTo(24604,1816);
ctx.lineTo(24568,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,32,235,0.85)';
ctx.strokeStyle='rgb(90,138,223)';
ctx.moveTo(24568,1720);
ctx.lineTo(24568,1684);
ctx.lineTo(24604,1684);
ctx.lineTo(24604,1720);
ctx.lineTo(24568,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,190,48,0.85)';
ctx.strokeStyle='rgb(106,229,210)';
ctx.moveTo(24664,2008);
ctx.lineTo(24664,1972);
ctx.lineTo(24700,1972);
ctx.lineTo(24700,2008);
ctx.lineTo(24664,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,241,5,0.85)';
ctx.strokeStyle='rgb(107,92,189)';
ctx.moveTo(24664,1912);
ctx.lineTo(24664,1876);
ctx.lineTo(24700,1876);
ctx.lineTo(24700,1912);
ctx.lineTo(24664,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,108,133,0.85)';
ctx.strokeStyle='rgb(235,214,254)';
ctx.moveTo(24664,1816);
ctx.lineTo(24664,1780);
ctx.lineTo(24700,1780);
ctx.lineTo(24700,1816);
ctx.lineTo(24664,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,232,66,0.85)';
ctx.strokeStyle='rgb(43,133,193)';
ctx.moveTo(24856,2200);
ctx.lineTo(24856,2164);
ctx.lineTo(24892,2164);
ctx.lineTo(24892,2200);
ctx.lineTo(24856,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,45,109,0.85)';
ctx.strokeStyle='rgb(158,166,68)';
ctx.moveTo(24760,2392);
ctx.lineTo(24760,2356);
ctx.lineTo(24796,2356);
ctx.lineTo(24796,2392);
ctx.lineTo(24760,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,46,6,0.85)';
ctx.strokeStyle='rgb(23,126,20)';
ctx.moveTo(25048,2392);
ctx.lineTo(25048,2356);
ctx.lineTo(25084,2356);
ctx.lineTo(25084,2392);
ctx.lineTo(25048,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,33,226,0.85)';
ctx.strokeStyle='rgb(178,129,19)';
ctx.moveTo(25048,2296);
ctx.lineTo(25048,2260);
ctx.lineTo(25084,2260);
ctx.lineTo(25084,2296);
ctx.lineTo(25048,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,20,129,0.85)';
ctx.strokeStyle='rgb(147,98,205)';
ctx.moveTo(25048,2200);
ctx.lineTo(25048,2164);
ctx.lineTo(25084,2164);
ctx.lineTo(25084,2200);
ctx.lineTo(25048,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,169,77,0.85)';
ctx.strokeStyle='rgb(231,239,24)';
ctx.moveTo(24760,2296);
ctx.lineTo(24760,2260);
ctx.lineTo(24796,2260);
ctx.lineTo(24796,2296);
ctx.lineTo(24760,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,208,90,0.85)';
ctx.strokeStyle='rgb(68,191,34)';
ctx.moveTo(24760,2200);
ctx.lineTo(24760,2164);
ctx.lineTo(24796,2164);
ctx.lineTo(24796,2200);
ctx.lineTo(24760,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,127,96,0.85)';
ctx.strokeStyle='rgb(43,208,17)';
ctx.moveTo(25144,2392);
ctx.lineTo(25144,2356);
ctx.lineTo(25180,2356);
ctx.lineTo(25180,2392);
ctx.lineTo(25144,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,118,146,0.85)';
ctx.strokeStyle='rgb(202,63,178)';
ctx.moveTo(25144,2296);
ctx.lineTo(25144,2260);
ctx.lineTo(25180,2260);
ctx.lineTo(25180,2296);
ctx.lineTo(25144,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,163,186,0.85)';
ctx.strokeStyle='rgb(193,228,177)';
ctx.moveTo(25144,2200);
ctx.lineTo(25144,2164);
ctx.lineTo(25180,2164);
ctx.lineTo(25180,2200);
ctx.lineTo(25144,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,37,96,0.85)';
ctx.strokeStyle='rgb(237,50,62)';
ctx.moveTo(24952,2392);
ctx.lineTo(24952,2356);
ctx.lineTo(24988,2356);
ctx.lineTo(24988,2392);
ctx.lineTo(24952,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,129,132,0.85)';
ctx.strokeStyle='rgb(196,64,43)';
ctx.moveTo(24952,2296);
ctx.lineTo(24952,2260);
ctx.lineTo(24988,2260);
ctx.lineTo(24988,2296);
ctx.lineTo(24952,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,69,243,0.85)';
ctx.strokeStyle='rgb(155,72,69)';
ctx.moveTo(24952,2200);
ctx.lineTo(24952,2164);
ctx.lineTo(24988,2164);
ctx.lineTo(24988,2200);
ctx.lineTo(24952,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,80,176,0.85)';
ctx.strokeStyle='rgb(158,30,202)';
ctx.moveTo(24856,2392);
ctx.lineTo(24856,2356);
ctx.lineTo(24892,2356);
ctx.lineTo(24892,2392);
ctx.lineTo(24856,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,51,139,0.85)';
ctx.strokeStyle='rgb(66,193,40)';
ctx.moveTo(24856,2296);
ctx.lineTo(24856,2260);
ctx.lineTo(24892,2260);
ctx.lineTo(24892,2296);
ctx.lineTo(24856,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,29,249,0.85)';
ctx.strokeStyle='rgb(226,186,54)';
ctx.moveTo(24376,2584);
ctx.lineTo(24376,2548);
ctx.lineTo(24412,2548);
ctx.lineTo(24412,2584);
ctx.lineTo(24376,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,165,22,0.85)';
ctx.strokeStyle='rgb(222,80,229)';
ctx.moveTo(24376,2488);
ctx.lineTo(24376,2452);
ctx.lineTo(24412,2452);
ctx.lineTo(24412,2488);
ctx.lineTo(24376,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,44,219,0.85)';
ctx.strokeStyle='rgb(61,251,136)';
ctx.moveTo(24568,2584);
ctx.lineTo(24568,2548);
ctx.lineTo(24604,2548);
ctx.lineTo(24604,2584);
ctx.lineTo(24568,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,27,167,0.85)';
ctx.strokeStyle='rgb(104,246,243)';
ctx.moveTo(24568,2488);
ctx.lineTo(24568,2452);
ctx.lineTo(24604,2452);
ctx.lineTo(24604,2488);
ctx.lineTo(24568,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,233,3,0.85)';
ctx.strokeStyle='rgb(104,119,10)';
ctx.moveTo(24760,2818);
ctx.lineTo(24760,2782);
ctx.lineTo(24796,2782);
ctx.lineTo(24796,2818);
ctx.lineTo(24760,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,98,96,0.85)';
ctx.strokeStyle='rgb(66,193,148)';
ctx.moveTo(24760,2488);
ctx.lineTo(24760,2452);
ctx.lineTo(24796,2452);
ctx.lineTo(24796,2488);
ctx.lineTo(24760,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,112,183,0.85)';
ctx.strokeStyle='rgb(203,224,157)';
ctx.moveTo(24856,2818);
ctx.lineTo(24856,2782);
ctx.lineTo(24892,2782);
ctx.lineTo(24892,2818);
ctx.lineTo(24856,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,163,153,0.85)';
ctx.strokeStyle='rgb(20,219,200)';
ctx.moveTo(25048,2584);
ctx.lineTo(25048,2548);
ctx.lineTo(25084,2548);
ctx.lineTo(25084,2584);
ctx.lineTo(25048,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,196,39,0.85)';
ctx.strokeStyle='rgb(85,117,58)';
ctx.moveTo(25048,2488);
ctx.lineTo(25048,2452);
ctx.lineTo(25084,2452);
ctx.lineTo(25084,2488);
ctx.lineTo(25048,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,229,207,0.85)';
ctx.strokeStyle='rgb(40,208,172)';
ctx.moveTo(24952,2818);
ctx.lineTo(24952,2782);
ctx.lineTo(24988,2782);
ctx.lineTo(24988,2818);
ctx.lineTo(24952,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,182,153,0.85)';
ctx.strokeStyle='rgb(103,22,29)';
ctx.moveTo(25048,2818);
ctx.lineTo(25048,2782);
ctx.lineTo(25084,2782);
ctx.lineTo(25084,2818);
ctx.lineTo(25048,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,140,17,0.85)';
ctx.strokeStyle='rgb(226,62,67)';
ctx.moveTo(24280,2488);
ctx.lineTo(24280,2452);
ctx.lineTo(24316,2452);
ctx.lineTo(24316,2488);
ctx.lineTo(24280,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,222,214,0.85)';
ctx.strokeStyle='rgb(131,72,247)';
ctx.moveTo(25144,2818);
ctx.lineTo(25144,2782);
ctx.lineTo(25180,2782);
ctx.lineTo(25180,2818);
ctx.lineTo(25144,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,78,57,0.85)';
ctx.strokeStyle='rgb(133,90,238)';
ctx.moveTo(24184,2818);
ctx.lineTo(24184,2782);
ctx.lineTo(24220,2782);
ctx.lineTo(24220,2818);
ctx.lineTo(24184,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,217,244,0.85)';
ctx.strokeStyle='rgb(59,178,170)';
ctx.moveTo(24760,2584);
ctx.lineTo(24760,2548);
ctx.lineTo(24796,2548);
ctx.lineTo(24796,2584);
ctx.lineTo(24760,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,129,141,0.85)';
ctx.strokeStyle='rgb(1,222,45)';
ctx.moveTo(24856,2584);
ctx.lineTo(24856,2548);
ctx.lineTo(24892,2548);
ctx.lineTo(24892,2584);
ctx.lineTo(24856,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,190,206,0.85)';
ctx.strokeStyle='rgb(172,199,221)';
ctx.moveTo(24952,2584);
ctx.lineTo(24952,2548);
ctx.lineTo(24988,2548);
ctx.lineTo(24988,2584);
ctx.lineTo(24952,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,1,164,0.85)';
ctx.strokeStyle='rgb(118,222,26)';
ctx.moveTo(24952,2488);
ctx.lineTo(24952,2452);
ctx.lineTo(24988,2452);
ctx.lineTo(24988,2488);
ctx.lineTo(24952,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,89,220,0.85)';
ctx.strokeStyle='rgb(237,244,235)';
ctx.moveTo(25144,2584);
ctx.lineTo(25144,2548);
ctx.lineTo(25180,2548);
ctx.lineTo(25180,2584);
ctx.lineTo(25144,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,86,57,0.85)';
ctx.strokeStyle='rgb(160,187,111)';
ctx.moveTo(25144,2488);
ctx.lineTo(25144,2452);
ctx.lineTo(25180,2452);
ctx.lineTo(25180,2488);
ctx.lineTo(25144,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,45,226,0.85)';
ctx.strokeStyle='rgb(49,12,72)';
ctx.moveTo(24280,2818);
ctx.lineTo(24280,2782);
ctx.lineTo(24316,2782);
ctx.lineTo(24316,2818);
ctx.lineTo(24280,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,203,74,0.85)';
ctx.strokeStyle='rgb(31,251,205)';
ctx.moveTo(24184,2488);
ctx.lineTo(24184,2452);
ctx.lineTo(24220,2452);
ctx.lineTo(24220,2488);
ctx.lineTo(24184,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,46,38,0.85)';
ctx.strokeStyle='rgb(199,201,239)';
ctx.moveTo(24376,2818);
ctx.lineTo(24376,2782);
ctx.lineTo(24412,2782);
ctx.lineTo(24412,2818);
ctx.lineTo(24376,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,181,137,0.85)';
ctx.strokeStyle='rgb(23,30,32)';
ctx.moveTo(24472,2584);
ctx.lineTo(24472,2548);
ctx.lineTo(24508,2548);
ctx.lineTo(24508,2584);
ctx.lineTo(24472,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,31,102,0.85)';
ctx.strokeStyle='rgb(71,199,174)';
ctx.moveTo(24472,2488);
ctx.lineTo(24472,2452);
ctx.lineTo(24508,2452);
ctx.lineTo(24508,2488);
ctx.lineTo(24472,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,244,14,0.85)';
ctx.strokeStyle='rgb(215,65,162)';
ctx.moveTo(24472,2818);
ctx.lineTo(24472,2782);
ctx.lineTo(24508,2782);
ctx.lineTo(24508,2818);
ctx.lineTo(24472,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,5,153,0.85)';
ctx.strokeStyle='rgb(96,90,101)';
ctx.moveTo(24856,2488);
ctx.lineTo(24856,2452);
ctx.lineTo(24892,2452);
ctx.lineTo(24892,2488);
ctx.lineTo(24856,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,217,157,0.85)';
ctx.strokeStyle='rgb(191,131,46)';
ctx.moveTo(24568,2818);
ctx.lineTo(24568,2782);
ctx.lineTo(24604,2782);
ctx.lineTo(24604,2818);
ctx.lineTo(24568,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,136,195,0.85)';
ctx.strokeStyle='rgb(247,156,78)';
ctx.moveTo(24664,2584);
ctx.lineTo(24664,2548);
ctx.lineTo(24700,2548);
ctx.lineTo(24700,2584);
ctx.lineTo(24664,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,215,202,0.85)';
ctx.strokeStyle='rgb(122,239,172)';
ctx.moveTo(25480,4360);
ctx.lineTo(25480,4324);
ctx.lineTo(25516,4324);
ctx.lineTo(25516,4360);
ctx.lineTo(25480,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,67,28,0.85)';
ctx.strokeStyle='rgb(229,2,239)';
ctx.moveTo(25480,4264);
ctx.lineTo(25480,4228);
ctx.lineTo(25516,4228);
ctx.lineTo(25516,4264);
ctx.lineTo(25480,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,57,207,0.85)';
ctx.strokeStyle='rgb(24,25,117)';
ctx.moveTo(25480,4168);
ctx.lineTo(25480,4132);
ctx.lineTo(25516,4132);
ctx.lineTo(25516,4168);
ctx.lineTo(25480,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,105,70,0.85)';
ctx.strokeStyle='rgb(216,148,30)';
ctx.moveTo(25576,4360);
ctx.lineTo(25576,4324);
ctx.lineTo(25612,4324);
ctx.lineTo(25612,4360);
ctx.lineTo(25576,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,183,144,0.85)';
ctx.strokeStyle='rgb(117,215,208)';
ctx.moveTo(25576,4264);
ctx.lineTo(25576,4228);
ctx.lineTo(25612,4228);
ctx.lineTo(25612,4264);
ctx.lineTo(25576,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,166,176,0.85)';
ctx.strokeStyle='rgb(118,32,167)';
ctx.moveTo(25576,4168);
ctx.lineTo(25576,4132);
ctx.lineTo(25612,4132);
ctx.lineTo(25612,4168);
ctx.lineTo(25576,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,50,5,0.85)';
ctx.strokeStyle='rgb(194,242,244)';
ctx.moveTo(24664,2488);
ctx.lineTo(24664,2452);
ctx.lineTo(24700,2452);
ctx.lineTo(24700,2488);
ctx.lineTo(24664,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,43,161,0.85)';
ctx.strokeStyle='rgb(65,224,26)';
ctx.moveTo(24664,2818);
ctx.lineTo(24664,2782);
ctx.lineTo(24700,2782);
ctx.lineTo(24700,2818);
ctx.lineTo(24664,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,73,151,0.85)';
ctx.strokeStyle='rgb(193,44,69)';
ctx.moveTo(24184,2584);
ctx.lineTo(24184,2548);
ctx.lineTo(24220,2548);
ctx.lineTo(24220,2584);
ctx.lineTo(24184,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,192,41,0.85)';
ctx.strokeStyle='rgb(204,54,56)';
ctx.moveTo(24280,2584);
ctx.lineTo(24280,2548);
ctx.lineTo(24316,2548);
ctx.lineTo(24316,2584);
ctx.lineTo(24280,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,23,75,0.85)';
ctx.strokeStyle='rgb(237,174,4)';
ctx.moveTo(26056,4264);
ctx.lineTo(26056,4228);
ctx.lineTo(26092,4228);
ctx.lineTo(26092,4264);
ctx.lineTo(26056,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,124,234,0.85)';
ctx.strokeStyle='rgb(26,30,59)';
ctx.moveTo(26056,4168);
ctx.lineTo(26056,4132);
ctx.lineTo(26092,4132);
ctx.lineTo(26092,4168);
ctx.lineTo(26056,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,107,104,0.85)';
ctx.strokeStyle='rgb(154,213,111)';
ctx.moveTo(26152,4360);
ctx.lineTo(26152,4324);
ctx.lineTo(26188,4324);
ctx.lineTo(26188,4360);
ctx.lineTo(26152,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,69,200,0.85)';
ctx.strokeStyle='rgb(14,230,111)';
ctx.moveTo(26152,4264);
ctx.lineTo(26152,4228);
ctx.lineTo(26188,4228);
ctx.lineTo(26188,4264);
ctx.lineTo(26152,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,21,104,0.85)';
ctx.strokeStyle='rgb(166,197,254)';
ctx.moveTo(26152,4168);
ctx.lineTo(26152,4132);
ctx.lineTo(26188,4132);
ctx.lineTo(26188,4168);
ctx.lineTo(26152,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,191,160,0.85)';
ctx.strokeStyle='rgb(22,96,82)';
ctx.moveTo(26248,4360);
ctx.lineTo(26248,4324);
ctx.lineTo(26284,4324);
ctx.lineTo(26284,4360);
ctx.lineTo(26248,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,192,97,0.85)';
ctx.strokeStyle='rgb(105,26,182)';
ctx.moveTo(26248,4264);
ctx.lineTo(26248,4228);
ctx.lineTo(26284,4228);
ctx.lineTo(26284,4264);
ctx.lineTo(26248,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,154,208,0.85)';
ctx.strokeStyle='rgb(80,92,12)';
ctx.moveTo(26248,4168);
ctx.lineTo(26248,4132);
ctx.lineTo(26284,4132);
ctx.lineTo(26284,4168);
ctx.lineTo(26248,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,127,81,0.85)';
ctx.strokeStyle='rgb(105,189,80)';
ctx.moveTo(26344,4360);
ctx.lineTo(26344,4324);
ctx.lineTo(26380,4324);
ctx.lineTo(26380,4360);
ctx.lineTo(26344,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,221,73,0.85)';
ctx.strokeStyle='rgb(159,81,107)';
ctx.moveTo(26344,4264);
ctx.lineTo(26344,4228);
ctx.lineTo(26380,4228);
ctx.lineTo(26380,4264);
ctx.lineTo(26344,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,12,213,0.85)';
ctx.strokeStyle='rgb(116,57,8)';
ctx.moveTo(26344,4168);
ctx.lineTo(26344,4132);
ctx.lineTo(26380,4132);
ctx.lineTo(26380,4168);
ctx.lineTo(26344,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,66,55,0.85)';
ctx.strokeStyle='rgb(94,206,104)';
ctx.moveTo(26440,4360);
ctx.lineTo(26440,4324);
ctx.lineTo(26476,4324);
ctx.lineTo(26476,4360);
ctx.lineTo(26440,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,127,195,0.85)';
ctx.strokeStyle='rgb(231,227,177)';
ctx.moveTo(26440,4264);
ctx.lineTo(26440,4228);
ctx.lineTo(26476,4228);
ctx.lineTo(26476,4264);
ctx.lineTo(26440,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,192,54,0.85)';
ctx.strokeStyle='rgb(226,62,38)';
ctx.moveTo(26440,4168);
ctx.lineTo(26440,4132);
ctx.lineTo(26476,4132);
ctx.lineTo(26476,4168);
ctx.lineTo(26440,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,117,126,0.85)';
ctx.strokeStyle='rgb(218,107,253)';
ctx.moveTo(25672,4360);
ctx.lineTo(25672,4324);
ctx.lineTo(25708,4324);
ctx.lineTo(25708,4360);
ctx.lineTo(25672,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,253,223,0.85)';
ctx.strokeStyle='rgb(157,225,232)';
ctx.moveTo(25672,4264);
ctx.lineTo(25672,4228);
ctx.lineTo(25708,4228);
ctx.lineTo(25708,4264);
ctx.lineTo(25672,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,15,161,0.85)';
ctx.strokeStyle='rgb(67,101,201)';
ctx.moveTo(25672,4168);
ctx.lineTo(25672,4132);
ctx.lineTo(25708,4132);
ctx.lineTo(25708,4168);
ctx.lineTo(25672,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,110,179,0.85)';
ctx.strokeStyle='rgb(76,95,10)';
ctx.moveTo(25768,4360);
ctx.lineTo(25768,4324);
ctx.lineTo(25804,4324);
ctx.lineTo(25804,4360);
ctx.lineTo(25768,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,47,217,0.85)';
ctx.strokeStyle='rgb(87,22,24)';
ctx.moveTo(25768,4264);
ctx.lineTo(25768,4228);
ctx.lineTo(25804,4228);
ctx.lineTo(25804,4264);
ctx.lineTo(25768,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,180,198,0.85)';
ctx.strokeStyle='rgb(249,233,203)';
ctx.moveTo(25768,4168);
ctx.lineTo(25768,4132);
ctx.lineTo(25804,4132);
ctx.lineTo(25804,4168);
ctx.lineTo(25768,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,247,203,0.85)';
ctx.strokeStyle='rgb(37,234,174)';
ctx.moveTo(25864,4360);
ctx.lineTo(25864,4324);
ctx.lineTo(25900,4324);
ctx.lineTo(25900,4360);
ctx.lineTo(25864,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,115,132,0.85)';
ctx.strokeStyle='rgb(160,206,91)';
ctx.moveTo(25864,4264);
ctx.lineTo(25864,4228);
ctx.lineTo(25900,4228);
ctx.lineTo(25900,4264);
ctx.lineTo(25864,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,96,145,0.85)';
ctx.strokeStyle='rgb(221,126,100)';
ctx.moveTo(25864,4168);
ctx.lineTo(25864,4132);
ctx.lineTo(25900,4132);
ctx.lineTo(25900,4168);
ctx.lineTo(25864,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,130,79,0.85)';
ctx.strokeStyle='rgb(224,19,123)';
ctx.moveTo(25960,4360);
ctx.lineTo(25960,4324);
ctx.lineTo(25996,4324);
ctx.lineTo(25996,4360);
ctx.lineTo(25960,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,95,245,0.85)';
ctx.strokeStyle='rgb(1,125,23)';
ctx.moveTo(25960,4264);
ctx.lineTo(25960,4228);
ctx.lineTo(25996,4228);
ctx.lineTo(25996,4264);
ctx.lineTo(25960,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,65,186,0.85)';
ctx.strokeStyle='rgb(107,186,97)';
ctx.moveTo(25960,4168);
ctx.lineTo(25960,4132);
ctx.lineTo(25996,4132);
ctx.lineTo(25996,4168);
ctx.lineTo(25960,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,192,121,0.85)';
ctx.strokeStyle='rgb(192,230,40)';
ctx.moveTo(26056,4360);
ctx.lineTo(26056,4324);
ctx.lineTo(26092,4324);
ctx.lineTo(26092,4360);
ctx.lineTo(26056,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,214,4,0.85)';
ctx.strokeStyle='rgb(185,56,55)';
ctx.moveTo(24184,5872);
ctx.lineTo(24184,5836);
ctx.lineTo(24220,5836);
ctx.lineTo(24220,5872);
ctx.lineTo(24184,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,181,71,0.85)';
ctx.strokeStyle='rgb(97,157,30)';
ctx.moveTo(24184,5776);
ctx.lineTo(24184,5740);
ctx.lineTo(24220,5740);
ctx.lineTo(24220,5776);
ctx.lineTo(24184,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,22,159,0.85)';
ctx.strokeStyle='rgb(103,71,13)';
ctx.moveTo(24184,5680);
ctx.lineTo(24184,5644);
ctx.lineTo(24220,5644);
ctx.lineTo(24220,5680);
ctx.lineTo(24184,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,33,171,0.85)';
ctx.strokeStyle='rgb(77,204,121)';
ctx.moveTo(24280,5872);
ctx.lineTo(24280,5836);
ctx.lineTo(24316,5836);
ctx.lineTo(24316,5872);
ctx.lineTo(24280,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,193,212,0.85)';
ctx.strokeStyle='rgb(53,221,138)';
ctx.moveTo(24280,5776);
ctx.lineTo(24280,5740);
ctx.lineTo(24316,5740);
ctx.lineTo(24316,5776);
ctx.lineTo(24280,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,184,0,0.85)';
ctx.strokeStyle='rgb(25,130,222)';
ctx.moveTo(24280,5680);
ctx.lineTo(24280,5644);
ctx.lineTo(24316,5644);
ctx.lineTo(24316,5680);
ctx.lineTo(24280,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,68,153,0.85)';
ctx.strokeStyle='rgb(74,225,49)';
ctx.moveTo(24376,5872);
ctx.lineTo(24376,5836);
ctx.lineTo(24412,5836);
ctx.lineTo(24412,5872);
ctx.lineTo(24376,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,4,146,0.85)';
ctx.strokeStyle='rgb(143,150,218)';
ctx.moveTo(24376,5776);
ctx.lineTo(24376,5740);
ctx.lineTo(24412,5740);
ctx.lineTo(24412,5776);
ctx.lineTo(24376,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,51,249,0.85)';
ctx.strokeStyle='rgb(42,137,149)';
ctx.moveTo(24376,5680);
ctx.lineTo(24376,5644);
ctx.lineTo(24412,5644);
ctx.lineTo(24412,5680);
ctx.lineTo(24376,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,122,252,0.85)';
ctx.strokeStyle='rgb(70,52,24)';
ctx.moveTo(24472,5872);
ctx.lineTo(24472,5836);
ctx.lineTo(24508,5836);
ctx.lineTo(24508,5872);
ctx.lineTo(24472,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,94,180,0.85)';
ctx.strokeStyle='rgb(239,2,72)';
ctx.moveTo(24472,5776);
ctx.lineTo(24472,5740);
ctx.lineTo(24508,5740);
ctx.lineTo(24508,5776);
ctx.lineTo(24472,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,191,169,0.85)';
ctx.strokeStyle='rgb(38,79,130)';
ctx.moveTo(24472,5680);
ctx.lineTo(24472,5644);
ctx.lineTo(24508,5644);
ctx.lineTo(24508,5680);
ctx.lineTo(24472,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,102,240,0.85)';
ctx.strokeStyle='rgb(220,140,164)';
ctx.moveTo(24568,5872);
ctx.lineTo(24568,5836);
ctx.lineTo(24604,5836);
ctx.lineTo(24604,5872);
ctx.lineTo(24568,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,68,145,0.85)';
ctx.strokeStyle='rgb(33,112,80)';
ctx.moveTo(24568,5776);
ctx.lineTo(24568,5740);
ctx.lineTo(24604,5740);
ctx.lineTo(24604,5776);
ctx.lineTo(24568,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,57,225,0.85)';
ctx.strokeStyle='rgb(253,179,244)';
ctx.moveTo(24568,5680);
ctx.lineTo(24568,5644);
ctx.lineTo(24604,5644);
ctx.lineTo(24604,5680);
ctx.lineTo(24568,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,20,93,0.85)';
ctx.strokeStyle='rgb(54,146,186)';
ctx.moveTo(24664,5872);
ctx.lineTo(24664,5836);
ctx.lineTo(24700,5836);
ctx.lineTo(24700,5872);
ctx.lineTo(24664,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,211,173,0.85)';
ctx.strokeStyle='rgb(82,162,51)';
ctx.moveTo(24664,5776);
ctx.lineTo(24664,5740);
ctx.lineTo(24700,5740);
ctx.lineTo(24700,5776);
ctx.lineTo(24664,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,35,99,0.85)';
ctx.strokeStyle='rgb(135,179,82)';
ctx.moveTo(24664,5680);
ctx.lineTo(24664,5644);
ctx.lineTo(24700,5644);
ctx.lineTo(24700,5680);
ctx.lineTo(24664,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,76,1,0.85)';
ctx.strokeStyle='rgb(65,72,71)';
ctx.moveTo(24760,5872);
ctx.lineTo(24760,5836);
ctx.lineTo(24796,5836);
ctx.lineTo(24796,5872);
ctx.lineTo(24760,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,248,233,0.85)';
ctx.strokeStyle='rgb(165,184,200)';
ctx.moveTo(24760,5776);
ctx.lineTo(24760,5740);
ctx.lineTo(24796,5740);
ctx.lineTo(24796,5776);
ctx.lineTo(24760,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,224,13,0.85)';
ctx.strokeStyle='rgb(92,112,28)';
ctx.moveTo(24760,5680);
ctx.lineTo(24760,5644);
ctx.lineTo(24796,5644);
ctx.lineTo(24796,5680);
ctx.lineTo(24760,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,223,60,0.85)';
ctx.strokeStyle='rgb(105,158,239)';
ctx.moveTo(24856,5872);
ctx.lineTo(24856,5836);
ctx.lineTo(24892,5836);
ctx.lineTo(24892,5872);
ctx.lineTo(24856,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,146,184,0.85)';
ctx.strokeStyle='rgb(245,224,220)';
ctx.moveTo(24856,5776);
ctx.lineTo(24856,5740);
ctx.lineTo(24892,5740);
ctx.lineTo(24892,5776);
ctx.lineTo(24856,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,200,0,0.85)';
ctx.strokeStyle='rgb(181,201,68)';
ctx.moveTo(24856,5680);
ctx.lineTo(24856,5644);
ctx.lineTo(24892,5644);
ctx.lineTo(24892,5680);
ctx.lineTo(24856,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,0,162,0.85)';
ctx.strokeStyle='rgb(24,201,24)';
ctx.moveTo(24952,5872);
ctx.lineTo(24952,5836);
ctx.lineTo(24988,5836);
ctx.lineTo(24988,5872);
ctx.lineTo(24952,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,143,174,0.85)';
ctx.strokeStyle='rgb(66,219,144)';
ctx.moveTo(24952,5776);
ctx.lineTo(24952,5740);
ctx.lineTo(24988,5740);
ctx.lineTo(24988,5776);
ctx.lineTo(24952,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,59,199,0.85)';
ctx.strokeStyle='rgb(206,170,69)';
ctx.moveTo(24952,5680);
ctx.lineTo(24952,5644);
ctx.lineTo(24988,5644);
ctx.lineTo(24988,5680);
ctx.lineTo(24952,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,245,75,0.85)';
ctx.strokeStyle='rgb(144,55,248)';
ctx.moveTo(25048,5872);
ctx.lineTo(25048,5836);
ctx.lineTo(25084,5836);
ctx.lineTo(25084,5872);
ctx.lineTo(25048,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,172,151,0.85)';
ctx.strokeStyle='rgb(67,100,145)';
ctx.moveTo(25048,5776);
ctx.lineTo(25048,5740);
ctx.lineTo(25084,5740);
ctx.lineTo(25084,5776);
ctx.lineTo(25048,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,15,81,0.85)';
ctx.strokeStyle='rgb(145,4,178)';
ctx.moveTo(25048,5680);
ctx.lineTo(25048,5644);
ctx.lineTo(25084,5644);
ctx.lineTo(25084,5680);
ctx.lineTo(25048,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,1,62,0.85)';
ctx.strokeStyle='rgb(104,202,110)';
ctx.moveTo(25144,5872);
ctx.lineTo(25144,5836);
ctx.lineTo(25180,5836);
ctx.lineTo(25180,5872);
ctx.lineTo(25144,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,139,119,0.85)';
ctx.strokeStyle='rgb(108,83,77)';
ctx.moveTo(25144,5776);
ctx.lineTo(25144,5740);
ctx.lineTo(25180,5740);
ctx.lineTo(25180,5776);
ctx.lineTo(25144,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,178,122,0.85)';
ctx.strokeStyle='rgb(207,141,6)';
ctx.moveTo(25144,5680);
ctx.lineTo(25144,5644);
ctx.lineTo(25180,5644);
ctx.lineTo(25180,5680);
ctx.lineTo(25144,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,76,222,0.85)';
ctx.strokeStyle='rgb(8,13,239)';
ctx.moveTo(25480,7384);
ctx.lineTo(25480,7348);
ctx.lineTo(25516,7348);
ctx.lineTo(25516,7384);
ctx.lineTo(25480,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,218,253,0.85)';
ctx.strokeStyle='rgb(189,106,66)';
ctx.moveTo(25480,7288);
ctx.lineTo(25480,7252);
ctx.lineTo(25516,7252);
ctx.lineTo(25516,7288);
ctx.lineTo(25480,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,52,189,0.85)';
ctx.strokeStyle='rgb(113,50,85)';
ctx.moveTo(25480,7192);
ctx.lineTo(25480,7156);
ctx.lineTo(25516,7156);
ctx.lineTo(25516,7192);
ctx.lineTo(25480,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,89,192,0.85)';
ctx.strokeStyle='rgb(5,249,251)';
ctx.moveTo(25576,7384);
ctx.lineTo(25576,7348);
ctx.lineTo(25612,7348);
ctx.lineTo(25612,7384);
ctx.lineTo(25576,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,21,233,0.85)';
ctx.strokeStyle='rgb(204,216,194)';
ctx.moveTo(25576,7288);
ctx.lineTo(25576,7252);
ctx.lineTo(25612,7252);
ctx.lineTo(25612,7288);
ctx.lineTo(25576,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,204,238,0.85)';
ctx.strokeStyle='rgb(161,134,235)';
ctx.moveTo(25576,7192);
ctx.lineTo(25576,7156);
ctx.lineTo(25612,7156);
ctx.lineTo(25612,7192);
ctx.lineTo(25576,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,45,252,0.85)';
ctx.strokeStyle='rgb(176,189,201)';
ctx.moveTo(25672,7384);
ctx.lineTo(25672,7348);
ctx.lineTo(25708,7348);
ctx.lineTo(25708,7384);
ctx.lineTo(25672,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,208,121,0.85)';
ctx.strokeStyle='rgb(241,170,85)';
ctx.moveTo(25672,7288);
ctx.lineTo(25672,7252);
ctx.lineTo(25708,7252);
ctx.lineTo(25708,7288);
ctx.lineTo(25672,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,74,19,0.85)';
ctx.strokeStyle='rgb(19,93,122)';
ctx.moveTo(25672,7192);
ctx.lineTo(25672,7156);
ctx.lineTo(25708,7156);
ctx.lineTo(25708,7192);
ctx.lineTo(25672,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,76,229,0.85)';
ctx.strokeStyle='rgb(11,129,226)';
ctx.moveTo(25768,7384);
ctx.lineTo(25768,7348);
ctx.lineTo(25804,7348);
ctx.lineTo(25804,7384);
ctx.lineTo(25768,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,5,6,0.85)';
ctx.strokeStyle='rgb(30,234,212)';
ctx.moveTo(25768,7288);
ctx.lineTo(25768,7252);
ctx.lineTo(25804,7252);
ctx.lineTo(25804,7288);
ctx.lineTo(25768,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,17,30,0.85)';
ctx.strokeStyle='rgb(2,193,175)';
ctx.moveTo(25768,7192);
ctx.lineTo(25768,7156);
ctx.lineTo(25804,7156);
ctx.lineTo(25804,7192);
ctx.lineTo(25768,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,27,45,0.85)';
ctx.strokeStyle='rgb(153,182,180)';
ctx.moveTo(25864,7384);
ctx.lineTo(25864,7348);
ctx.lineTo(25900,7348);
ctx.lineTo(25900,7384);
ctx.lineTo(25864,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,177,150,0.85)';
ctx.strokeStyle='rgb(54,187,44)';
ctx.moveTo(25864,7288);
ctx.lineTo(25864,7252);
ctx.lineTo(25900,7252);
ctx.lineTo(25900,7288);
ctx.lineTo(25864,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,150,119,0.85)';
ctx.strokeStyle='rgb(135,127,221)';
ctx.moveTo(25864,7192);
ctx.lineTo(25864,7156);
ctx.lineTo(25900,7156);
ctx.lineTo(25900,7192);
ctx.lineTo(25864,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,100,177,0.85)';
ctx.strokeStyle='rgb(82,222,218)';
ctx.moveTo(25960,7384);
ctx.lineTo(25960,7348);
ctx.lineTo(25996,7348);
ctx.lineTo(25996,7384);
ctx.lineTo(25960,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,135,160,0.85)';
ctx.strokeStyle='rgb(249,70,167)';
ctx.moveTo(25960,7288);
ctx.lineTo(25960,7252);
ctx.lineTo(25996,7252);
ctx.lineTo(25996,7288);
ctx.lineTo(25960,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,38,163,0.85)';
ctx.strokeStyle='rgb(95,77,253)';
ctx.moveTo(25960,7192);
ctx.lineTo(25960,7156);
ctx.lineTo(25996,7156);
ctx.lineTo(25996,7192);
ctx.lineTo(25960,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,195,158,0.85)';
ctx.strokeStyle='rgb(106,233,200)';
ctx.moveTo(26056,7384);
ctx.lineTo(26056,7348);
ctx.lineTo(26092,7348);
ctx.lineTo(26092,7384);
ctx.lineTo(26056,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,75,104,0.85)';
ctx.strokeStyle='rgb(38,250,162)';
ctx.moveTo(26056,7288);
ctx.lineTo(26056,7252);
ctx.lineTo(26092,7252);
ctx.lineTo(26092,7288);
ctx.lineTo(26056,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,118,0,0.85)';
ctx.strokeStyle='rgb(131,16,170)';
ctx.moveTo(26056,7192);
ctx.lineTo(26056,7156);
ctx.lineTo(26092,7156);
ctx.lineTo(26092,7192);
ctx.lineTo(26056,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,189,87,0.85)';
ctx.strokeStyle='rgb(183,13,237)';
ctx.moveTo(26152,7384);
ctx.lineTo(26152,7348);
ctx.lineTo(26188,7348);
ctx.lineTo(26188,7384);
ctx.lineTo(26152,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,226,6,0.85)';
ctx.strokeStyle='rgb(72,110,208)';
ctx.moveTo(26152,7288);
ctx.lineTo(26152,7252);
ctx.lineTo(26188,7252);
ctx.lineTo(26188,7288);
ctx.lineTo(26152,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,213,46,0.85)';
ctx.strokeStyle='rgb(243,252,113)';
ctx.moveTo(26152,7192);
ctx.lineTo(26152,7156);
ctx.lineTo(26188,7156);
ctx.lineTo(26188,7192);
ctx.lineTo(26152,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,101,92,0.85)';
ctx.strokeStyle='rgb(12,53,114)';
ctx.moveTo(26248,7384);
ctx.lineTo(26248,7348);
ctx.lineTo(26284,7348);
ctx.lineTo(26284,7384);
ctx.lineTo(26248,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,74,18,0.85)';
ctx.strokeStyle='rgb(96,205,2)';
ctx.moveTo(26248,7288);
ctx.lineTo(26248,7252);
ctx.lineTo(26284,7252);
ctx.lineTo(26284,7288);
ctx.lineTo(26248,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,2,212,0.85)';
ctx.strokeStyle='rgb(181,26,178)';
ctx.moveTo(26248,7192);
ctx.lineTo(26248,7156);
ctx.lineTo(26284,7156);
ctx.lineTo(26284,7192);
ctx.lineTo(26248,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,170,35,0.85)';
ctx.strokeStyle='rgb(184,176,186)';
ctx.moveTo(26344,7384);
ctx.lineTo(26344,7348);
ctx.lineTo(26380,7348);
ctx.lineTo(26380,7384);
ctx.lineTo(26344,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,172,99,0.85)';
ctx.strokeStyle='rgb(212,208,239)';
ctx.moveTo(26344,7288);
ctx.lineTo(26344,7252);
ctx.lineTo(26380,7252);
ctx.lineTo(26380,7288);
ctx.lineTo(26344,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,89,250,0.85)';
ctx.strokeStyle='rgb(39,172,164)';
ctx.moveTo(26344,7192);
ctx.lineTo(26344,7156);
ctx.lineTo(26380,7156);
ctx.lineTo(26380,7192);
ctx.lineTo(26344,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,248,140,0.85)';
ctx.strokeStyle='rgb(58,184,134)';
ctx.moveTo(26440,7384);
ctx.lineTo(26440,7348);
ctx.lineTo(26476,7348);
ctx.lineTo(26476,7384);
ctx.lineTo(26440,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,242,100,0.85)';
ctx.strokeStyle='rgb(229,23,20)';
ctx.moveTo(26440,7288);
ctx.lineTo(26440,7252);
ctx.lineTo(26476,7252);
ctx.lineTo(26476,7288);
ctx.lineTo(26440,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,203,50,0.85)';
ctx.strokeStyle='rgb(38,154,94)';
ctx.moveTo(26440,7192);
ctx.lineTo(26440,7156);
ctx.lineTo(26476,7156);
ctx.lineTo(26476,7192);
ctx.lineTo(26440,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,160,37,0.85)';
ctx.strokeStyle='rgb(239,141,221)';
ctx.moveTo(24568,8800);
ctx.lineTo(24568,8764);
ctx.lineTo(24604,8764);
ctx.lineTo(24604,8800);
ctx.lineTo(24568,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,197,195,0.85)';
ctx.strokeStyle='rgb(244,167,156)';
ctx.moveTo(24184,8800);
ctx.lineTo(24184,8764);
ctx.lineTo(24220,8764);
ctx.lineTo(24220,8800);
ctx.lineTo(24184,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,99,60,0.85)';
ctx.strokeStyle='rgb(199,183,60)';
ctx.moveTo(24664,8896);
ctx.lineTo(24664,8860);
ctx.lineTo(24700,8860);
ctx.lineTo(24700,8896);
ctx.lineTo(24664,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,191,57,0.85)';
ctx.strokeStyle='rgb(90,79,19)';
ctx.moveTo(24664,8800);
ctx.lineTo(24664,8764);
ctx.lineTo(24700,8764);
ctx.lineTo(24700,8800);
ctx.lineTo(24664,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,167,104,0.85)';
ctx.strokeStyle='rgb(254,124,154)';
ctx.moveTo(24376,8896);
ctx.lineTo(24376,8860);
ctx.lineTo(24412,8860);
ctx.lineTo(24412,8896);
ctx.lineTo(24376,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,157,243,0.85)';
ctx.strokeStyle='rgb(161,28,15)';
ctx.moveTo(24760,8896);
ctx.lineTo(24760,8860);
ctx.lineTo(24796,8860);
ctx.lineTo(24796,8896);
ctx.lineTo(24760,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,234,183,0.85)';
ctx.strokeStyle='rgb(127,125,206)';
ctx.moveTo(24760,8800);
ctx.lineTo(24760,8764);
ctx.lineTo(24796,8764);
ctx.lineTo(24796,8800);
ctx.lineTo(24760,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,68,52,0.85)';
ctx.strokeStyle='rgb(113,9,254)';
ctx.moveTo(24376,8800);
ctx.lineTo(24376,8764);
ctx.lineTo(24412,8764);
ctx.lineTo(24412,8800);
ctx.lineTo(24376,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,6,144,0.85)';
ctx.strokeStyle='rgb(217,91,77)';
ctx.moveTo(24856,8896);
ctx.lineTo(24856,8860);
ctx.lineTo(24892,8860);
ctx.lineTo(24892,8896);
ctx.lineTo(24856,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,231,140,0.85)';
ctx.strokeStyle='rgb(118,231,17)';
ctx.moveTo(24856,8800);
ctx.lineTo(24856,8764);
ctx.lineTo(24892,8764);
ctx.lineTo(24892,8800);
ctx.lineTo(24856,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,182,118,0.85)';
ctx.strokeStyle='rgb(82,135,212)';
ctx.moveTo(24280,8896);
ctx.lineTo(24280,8860);
ctx.lineTo(24316,8860);
ctx.lineTo(24316,8896);
ctx.lineTo(24280,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,112,40,0.85)';
ctx.strokeStyle='rgb(7,69,36)';
ctx.moveTo(24952,8896);
ctx.lineTo(24952,8860);
ctx.lineTo(24988,8860);
ctx.lineTo(24988,8896);
ctx.lineTo(24952,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,222,203,0.85)';
ctx.strokeStyle='rgb(145,192,59)';
ctx.moveTo(24952,8800);
ctx.lineTo(24952,8764);
ctx.lineTo(24988,8764);
ctx.lineTo(24988,8800);
ctx.lineTo(24952,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,249,154,0.85)';
ctx.strokeStyle='rgb(159,11,228)';
ctx.moveTo(24472,8896);
ctx.lineTo(24472,8860);
ctx.lineTo(24508,8860);
ctx.lineTo(24508,8896);
ctx.lineTo(24472,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,12,78,0.85)';
ctx.strokeStyle='rgb(1,121,237)';
ctx.moveTo(25048,8896);
ctx.lineTo(25048,8860);
ctx.lineTo(25084,8860);
ctx.lineTo(25084,8896);
ctx.lineTo(25048,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,42,106,0.85)';
ctx.strokeStyle='rgb(163,104,78)';
ctx.moveTo(25048,8800);
ctx.lineTo(25048,8764);
ctx.lineTo(25084,8764);
ctx.lineTo(25084,8800);
ctx.lineTo(25048,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,77,41,0.85)';
ctx.strokeStyle='rgb(231,55,40)';
ctx.moveTo(24472,8800);
ctx.lineTo(24472,8764);
ctx.lineTo(24508,8764);
ctx.lineTo(24508,8800);
ctx.lineTo(24472,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,154,198,0.85)';
ctx.strokeStyle='rgb(236,63,116)';
ctx.moveTo(25144,8896);
ctx.lineTo(25144,8860);
ctx.lineTo(25180,8860);
ctx.lineTo(25180,8896);
ctx.lineTo(25144,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,41,13,0.85)';
ctx.strokeStyle='rgb(48,140,92)';
ctx.moveTo(25144,8800);
ctx.lineTo(25144,8764);
ctx.lineTo(25180,8764);
ctx.lineTo(25180,8800);
ctx.lineTo(25144,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,117,76,0.85)';
ctx.strokeStyle='rgb(129,17,40)';
ctx.moveTo(24280,8800);
ctx.lineTo(24280,8764);
ctx.lineTo(24316,8764);
ctx.lineTo(24316,8800);
ctx.lineTo(24280,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,52,73,0.85)';
ctx.strokeStyle='rgb(134,219,159)';
ctx.moveTo(24568,8896);
ctx.lineTo(24568,8860);
ctx.lineTo(24604,8860);
ctx.lineTo(24604,8896);
ctx.lineTo(24568,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,243,143,0.85)';
ctx.strokeStyle='rgb(207,156,158)';
ctx.moveTo(25480,10408);
ctx.lineTo(25480,10372);
ctx.lineTo(25516,10372);
ctx.lineTo(25516,10408);
ctx.lineTo(25480,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,252,91,0.85)';
ctx.strokeStyle='rgb(1,218,249)';
ctx.moveTo(25480,10312);
ctx.lineTo(25480,10276);
ctx.lineTo(25516,10276);
ctx.lineTo(25516,10312);
ctx.lineTo(25480,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,103,207,0.85)';
ctx.strokeStyle='rgb(211,244,243)';
ctx.moveTo(25480,10216);
ctx.lineTo(25480,10180);
ctx.lineTo(25516,10180);
ctx.lineTo(25516,10216);
ctx.lineTo(25480,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,173,11,0.85)';
ctx.strokeStyle='rgb(148,209,141)';
ctx.moveTo(25576,10408);
ctx.lineTo(25576,10372);
ctx.lineTo(25612,10372);
ctx.lineTo(25612,10408);
ctx.lineTo(25576,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,78,183,0.85)';
ctx.strokeStyle='rgb(192,152,254)';
ctx.moveTo(25576,10312);
ctx.lineTo(25576,10276);
ctx.lineTo(25612,10276);
ctx.lineTo(25612,10312);
ctx.lineTo(25576,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,195,143,0.85)';
ctx.strokeStyle='rgb(136,212,44)';
ctx.moveTo(25576,10216);
ctx.lineTo(25576,10180);
ctx.lineTo(25612,10180);
ctx.lineTo(25612,10216);
ctx.lineTo(25576,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,123,12,0.85)';
ctx.strokeStyle='rgb(145,72,172)';
ctx.moveTo(25672,10408);
ctx.lineTo(25672,10372);
ctx.lineTo(25708,10372);
ctx.lineTo(25708,10408);
ctx.lineTo(25672,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,195,228,0.85)';
ctx.strokeStyle='rgb(247,231,195)';
ctx.moveTo(25672,10312);
ctx.lineTo(25672,10276);
ctx.lineTo(25708,10276);
ctx.lineTo(25708,10312);
ctx.lineTo(25672,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,6,131,0.85)';
ctx.strokeStyle='rgb(175,105,38)';
ctx.moveTo(25672,10216);
ctx.lineTo(25672,10180);
ctx.lineTo(25708,10180);
ctx.lineTo(25708,10216);
ctx.lineTo(25672,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,51,24,0.85)';
ctx.strokeStyle='rgb(20,221,122)';
ctx.moveTo(25768,10408);
ctx.lineTo(25768,10372);
ctx.lineTo(25804,10372);
ctx.lineTo(25804,10408);
ctx.lineTo(25768,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,202,0,0.85)';
ctx.strokeStyle='rgb(150,147,180)';
ctx.moveTo(25768,10312);
ctx.lineTo(25768,10276);
ctx.lineTo(25804,10276);
ctx.lineTo(25804,10312);
ctx.lineTo(25768,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,166,112,0.85)';
ctx.strokeStyle='rgb(94,44,248)';
ctx.moveTo(25768,10216);
ctx.lineTo(25768,10180);
ctx.lineTo(25804,10180);
ctx.lineTo(25804,10216);
ctx.lineTo(25768,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,215,150,0.85)';
ctx.strokeStyle='rgb(122,241,209)';
ctx.moveTo(25864,10408);
ctx.lineTo(25864,10372);
ctx.lineTo(25900,10372);
ctx.lineTo(25900,10408);
ctx.lineTo(25864,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,43,104,0.85)';
ctx.strokeStyle='rgb(2,230,29)';
ctx.moveTo(25864,10312);
ctx.lineTo(25864,10276);
ctx.lineTo(25900,10276);
ctx.lineTo(25900,10312);
ctx.lineTo(25864,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,174,36,0.85)';
ctx.strokeStyle='rgb(124,83,57)';
ctx.moveTo(25864,10216);
ctx.lineTo(25864,10180);
ctx.lineTo(25900,10180);
ctx.lineTo(25900,10216);
ctx.lineTo(25864,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,81,47,0.85)';
ctx.strokeStyle='rgb(162,213,157)';
ctx.moveTo(25960,10408);
ctx.lineTo(25960,10372);
ctx.lineTo(25996,10372);
ctx.lineTo(25996,10408);
ctx.lineTo(25960,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,107,190,0.85)';
ctx.strokeStyle='rgb(4,18,33)';
ctx.moveTo(25960,10312);
ctx.lineTo(25960,10276);
ctx.lineTo(25996,10276);
ctx.lineTo(25996,10312);
ctx.lineTo(25960,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,191,246,0.85)';
ctx.strokeStyle='rgb(103,109,229)';
ctx.moveTo(25960,10216);
ctx.lineTo(25960,10180);
ctx.lineTo(25996,10180);
ctx.lineTo(25996,10216);
ctx.lineTo(25960,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,21,231,0.85)';
ctx.strokeStyle='rgb(229,38,83)';
ctx.moveTo(26056,10408);
ctx.lineTo(26056,10372);
ctx.lineTo(26092,10372);
ctx.lineTo(26092,10408);
ctx.lineTo(26056,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,210,112,0.85)';
ctx.strokeStyle='rgb(126,80,121)';
ctx.moveTo(26056,10312);
ctx.lineTo(26056,10276);
ctx.lineTo(26092,10276);
ctx.lineTo(26092,10312);
ctx.lineTo(26056,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,191,221,0.85)';
ctx.strokeStyle='rgb(129,230,19)';
ctx.moveTo(26056,10216);
ctx.lineTo(26056,10180);
ctx.lineTo(26092,10180);
ctx.lineTo(26092,10216);
ctx.lineTo(26056,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,22,1,0.85)';
ctx.strokeStyle='rgb(225,33,216)';
ctx.moveTo(26152,10408);
ctx.lineTo(26152,10372);
ctx.lineTo(26188,10372);
ctx.lineTo(26188,10408);
ctx.lineTo(26152,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,138,23,0.85)';
ctx.strokeStyle='rgb(137,215,133)';
ctx.moveTo(26152,10312);
ctx.lineTo(26152,10276);
ctx.lineTo(26188,10276);
ctx.lineTo(26188,10312);
ctx.lineTo(26152,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,58,27,0.85)';
ctx.strokeStyle='rgb(93,155,205)';
ctx.moveTo(26152,10216);
ctx.lineTo(26152,10180);
ctx.lineTo(26188,10180);
ctx.lineTo(26188,10216);
ctx.lineTo(26152,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,93,244,0.85)';
ctx.strokeStyle='rgb(248,31,186)';
ctx.moveTo(26248,10408);
ctx.lineTo(26248,10372);
ctx.lineTo(26284,10372);
ctx.lineTo(26284,10408);
ctx.lineTo(26248,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,192,205,0.85)';
ctx.strokeStyle='rgb(150,201,86)';
ctx.moveTo(26248,10312);
ctx.lineTo(26248,10276);
ctx.lineTo(26284,10276);
ctx.lineTo(26284,10312);
ctx.lineTo(26248,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,58,33,0.85)';
ctx.strokeStyle='rgb(118,183,198)';
ctx.moveTo(26248,10216);
ctx.lineTo(26248,10180);
ctx.lineTo(26284,10180);
ctx.lineTo(26284,10216);
ctx.lineTo(26248,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,126,40,0.85)';
ctx.strokeStyle='rgb(36,242,227)';
ctx.moveTo(26344,10408);
ctx.lineTo(26344,10372);
ctx.lineTo(26380,10372);
ctx.lineTo(26380,10408);
ctx.lineTo(26344,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,201,172,0.85)';
ctx.strokeStyle='rgb(89,85,42)';
ctx.moveTo(26344,10312);
ctx.lineTo(26344,10276);
ctx.lineTo(26380,10276);
ctx.lineTo(26380,10312);
ctx.lineTo(26344,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,233,57,0.85)';
ctx.strokeStyle='rgb(191,244,54)';
ctx.moveTo(26344,10216);
ctx.lineTo(26344,10180);
ctx.lineTo(26380,10180);
ctx.lineTo(26380,10216);
ctx.lineTo(26344,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,227,142,0.85)';
ctx.strokeStyle='rgb(108,22,114)';
ctx.moveTo(26440,10408);
ctx.lineTo(26440,10372);
ctx.lineTo(26476,10372);
ctx.lineTo(26476,10408);
ctx.lineTo(26440,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,199,81,0.85)';
ctx.strokeStyle='rgb(187,96,208)';
ctx.moveTo(26440,10312);
ctx.lineTo(26440,10276);
ctx.lineTo(26476,10276);
ctx.lineTo(26476,10312);
ctx.lineTo(26440,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,198,97,0.85)';
ctx.strokeStyle='rgb(150,236,157)';
ctx.moveTo(26440,10216);
ctx.lineTo(26440,10180);
ctx.lineTo(26476,10180);
ctx.lineTo(26476,10216);
ctx.lineTo(26440,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,88,153,0.85)';
ctx.strokeStyle='rgb(235,50,119)';
ctx.moveTo(24184,11920);
ctx.lineTo(24184,11884);
ctx.lineTo(24220,11884);
ctx.lineTo(24220,11920);
ctx.lineTo(24184,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,141,103,0.85)';
ctx.strokeStyle='rgb(70,231,222)';
ctx.moveTo(24184,11824);
ctx.lineTo(24184,11788);
ctx.lineTo(24220,11788);
ctx.lineTo(24220,11824);
ctx.lineTo(24184,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,21,142,0.85)';
ctx.strokeStyle='rgb(229,128,242)';
ctx.moveTo(24184,11728);
ctx.lineTo(24184,11692);
ctx.lineTo(24220,11692);
ctx.lineTo(24220,11728);
ctx.lineTo(24184,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,232,109,0.85)';
ctx.strokeStyle='rgb(245,16,121)';
ctx.moveTo(24280,11920);
ctx.lineTo(24280,11884);
ctx.lineTo(24316,11884);
ctx.lineTo(24316,11920);
ctx.lineTo(24280,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,226,174,0.85)';
ctx.strokeStyle='rgb(246,9,181)';
ctx.moveTo(24280,11824);
ctx.lineTo(24280,11788);
ctx.lineTo(24316,11788);
ctx.lineTo(24316,11824);
ctx.lineTo(24280,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,36,118,0.85)';
ctx.strokeStyle='rgb(162,62,238)';
ctx.moveTo(24280,11728);
ctx.lineTo(24280,11692);
ctx.lineTo(24316,11692);
ctx.lineTo(24316,11728);
ctx.lineTo(24280,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,217,239,0.85)';
ctx.strokeStyle='rgb(0,145,196)';
ctx.moveTo(24376,11920);
ctx.lineTo(24376,11884);
ctx.lineTo(24412,11884);
ctx.lineTo(24412,11920);
ctx.lineTo(24376,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,143,136,0.85)';
ctx.strokeStyle='rgb(131,161,18)';
ctx.moveTo(24376,11824);
ctx.lineTo(24376,11788);
ctx.lineTo(24412,11788);
ctx.lineTo(24412,11824);
ctx.lineTo(24376,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,20,250,0.85)';
ctx.strokeStyle='rgb(110,171,207)';
ctx.moveTo(24376,11728);
ctx.lineTo(24376,11692);
ctx.lineTo(24412,11692);
ctx.lineTo(24412,11728);
ctx.lineTo(24376,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,133,130,0.85)';
ctx.strokeStyle='rgb(177,114,174)';
ctx.moveTo(24472,11920);
ctx.lineTo(24472,11884);
ctx.lineTo(24508,11884);
ctx.lineTo(24508,11920);
ctx.lineTo(24472,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,238,96,0.85)';
ctx.strokeStyle='rgb(160,244,18)';
ctx.moveTo(24472,11824);
ctx.lineTo(24472,11788);
ctx.lineTo(24508,11788);
ctx.lineTo(24508,11824);
ctx.lineTo(24472,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,189,195,0.85)';
ctx.strokeStyle='rgb(133,150,72)';
ctx.moveTo(24472,11728);
ctx.lineTo(24472,11692);
ctx.lineTo(24508,11692);
ctx.lineTo(24508,11728);
ctx.lineTo(24472,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,71,63,0.85)';
ctx.strokeStyle='rgb(34,224,34)';
ctx.moveTo(24568,11920);
ctx.lineTo(24568,11884);
ctx.lineTo(24604,11884);
ctx.lineTo(24604,11920);
ctx.lineTo(24568,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,48,157,0.85)';
ctx.strokeStyle='rgb(233,80,1)';
ctx.moveTo(24568,11824);
ctx.lineTo(24568,11788);
ctx.lineTo(24604,11788);
ctx.lineTo(24604,11824);
ctx.lineTo(24568,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,130,19,0.85)';
ctx.strokeStyle='rgb(124,26,90)';
ctx.moveTo(24568,11728);
ctx.lineTo(24568,11692);
ctx.lineTo(24604,11692);
ctx.lineTo(24604,11728);
ctx.lineTo(24568,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,205,184,0.85)';
ctx.strokeStyle='rgb(244,55,212)';
ctx.moveTo(24664,11920);
ctx.lineTo(24664,11884);
ctx.lineTo(24700,11884);
ctx.lineTo(24700,11920);
ctx.lineTo(24664,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,241,215,0.85)';
ctx.strokeStyle='rgb(198,199,195)';
ctx.moveTo(24664,11824);
ctx.lineTo(24664,11788);
ctx.lineTo(24700,11788);
ctx.lineTo(24700,11824);
ctx.lineTo(24664,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,143,225,0.85)';
ctx.strokeStyle='rgb(75,1,148)';
ctx.moveTo(24664,11728);
ctx.lineTo(24664,11692);
ctx.lineTo(24700,11692);
ctx.lineTo(24700,11728);
ctx.lineTo(24664,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,207,38,0.85)';
ctx.strokeStyle='rgb(233,95,134)';
ctx.moveTo(24760,11920);
ctx.lineTo(24760,11884);
ctx.lineTo(24796,11884);
ctx.lineTo(24796,11920);
ctx.lineTo(24760,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,75,197,0.85)';
ctx.strokeStyle='rgb(229,138,117)';
ctx.moveTo(24760,11824);
ctx.lineTo(24760,11788);
ctx.lineTo(24796,11788);
ctx.lineTo(24796,11824);
ctx.lineTo(24760,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,181,91,0.85)';
ctx.strokeStyle='rgb(16,219,142)';
ctx.moveTo(24760,11728);
ctx.lineTo(24760,11692);
ctx.lineTo(24796,11692);
ctx.lineTo(24796,11728);
ctx.lineTo(24760,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,95,46,0.85)';
ctx.strokeStyle='rgb(224,233,235)';
ctx.moveTo(24856,11920);
ctx.lineTo(24856,11884);
ctx.lineTo(24892,11884);
ctx.lineTo(24892,11920);
ctx.lineTo(24856,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,207,117,0.85)';
ctx.strokeStyle='rgb(94,222,52)';
ctx.moveTo(24856,11824);
ctx.lineTo(24856,11788);
ctx.lineTo(24892,11788);
ctx.lineTo(24892,11824);
ctx.lineTo(24856,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,218,149,0.85)';
ctx.strokeStyle='rgb(140,241,117)';
ctx.moveTo(24856,11728);
ctx.lineTo(24856,11692);
ctx.lineTo(24892,11692);
ctx.lineTo(24892,11728);
ctx.lineTo(24856,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,174,5,0.85)';
ctx.strokeStyle='rgb(231,35,89)';
ctx.moveTo(24952,11920);
ctx.lineTo(24952,11884);
ctx.lineTo(24988,11884);
ctx.lineTo(24988,11920);
ctx.lineTo(24952,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,208,161,0.85)';
ctx.strokeStyle='rgb(157,109,7)';
ctx.moveTo(24952,11824);
ctx.lineTo(24952,11788);
ctx.lineTo(24988,11788);
ctx.lineTo(24988,11824);
ctx.lineTo(24952,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,36,130,0.85)';
ctx.strokeStyle='rgb(90,156,177)';
ctx.moveTo(24952,11728);
ctx.lineTo(24952,11692);
ctx.lineTo(24988,11692);
ctx.lineTo(24988,11728);
ctx.lineTo(24952,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,41,168,0.85)';
ctx.strokeStyle='rgb(112,74,104)';
ctx.moveTo(25048,11920);
ctx.lineTo(25048,11884);
ctx.lineTo(25084,11884);
ctx.lineTo(25084,11920);
ctx.lineTo(25048,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,136,253,0.85)';
ctx.strokeStyle='rgb(166,3,3)';
ctx.moveTo(25048,11824);
ctx.lineTo(25048,11788);
ctx.lineTo(25084,11788);
ctx.lineTo(25084,11824);
ctx.lineTo(25048,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,8,117,0.85)';
ctx.strokeStyle='rgb(6,253,61)';
ctx.moveTo(25048,11728);
ctx.lineTo(25048,11692);
ctx.lineTo(25084,11692);
ctx.lineTo(25084,11728);
ctx.lineTo(25048,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,192,119,0.85)';
ctx.strokeStyle='rgb(156,5,80)';
ctx.moveTo(25144,11920);
ctx.lineTo(25144,11884);
ctx.lineTo(25180,11884);
ctx.lineTo(25180,11920);
ctx.lineTo(25144,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,118,43,0.85)';
ctx.strokeStyle='rgb(54,204,156)';
ctx.moveTo(25144,11824);
ctx.lineTo(25144,11788);
ctx.lineTo(25180,11788);
ctx.lineTo(25180,11824);
ctx.lineTo(25144,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,116,156,0.85)';
ctx.strokeStyle='rgb(251,136,92)';
ctx.moveTo(25144,11728);
ctx.lineTo(25144,11692);
ctx.lineTo(25180,11692);
ctx.lineTo(25180,11728);
ctx.lineTo(25144,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,39,196,0.85)';
ctx.strokeStyle='rgb(42,42,86)';
ctx.moveTo(24184,8896);
ctx.lineTo(24184,8860);
ctx.lineTo(24220,8860);
ctx.lineTo(24220,8896);
ctx.lineTo(24184,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,175,221,0.85)';
ctx.strokeStyle='rgb(203,32,164)';
ctx.moveTo(24184,14848);
ctx.lineTo(24184,14812);
ctx.lineTo(24220,14812);
ctx.lineTo(24220,14848);
ctx.lineTo(24184,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,17,119,0.85)';
ctx.strokeStyle='rgb(1,108,181)';
ctx.moveTo(24184,14752);
ctx.lineTo(24184,14716);
ctx.lineTo(24220,14716);
ctx.lineTo(24220,14752);
ctx.lineTo(24184,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,145,132,0.85)';
ctx.strokeStyle='rgb(150,48,54)';
ctx.moveTo(24280,14944);
ctx.lineTo(24280,14908);
ctx.lineTo(24316,14908);
ctx.lineTo(24316,14944);
ctx.lineTo(24280,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,40,21,0.85)';
ctx.strokeStyle='rgb(122,115,195)';
ctx.moveTo(24280,14848);
ctx.lineTo(24280,14812);
ctx.lineTo(24316,14812);
ctx.lineTo(24316,14848);
ctx.lineTo(24280,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,227,173,0.85)';
ctx.strokeStyle='rgb(86,195,21)';
ctx.moveTo(24280,14752);
ctx.lineTo(24280,14716);
ctx.lineTo(24316,14716);
ctx.lineTo(24316,14752);
ctx.lineTo(24280,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,89,77,0.85)';
ctx.strokeStyle='rgb(173,19,73)';
ctx.moveTo(24376,14944);
ctx.lineTo(24376,14908);
ctx.lineTo(24412,14908);
ctx.lineTo(24412,14944);
ctx.lineTo(24376,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,90,130,0.85)';
ctx.strokeStyle='rgb(225,23,137)';
ctx.moveTo(24376,14848);
ctx.lineTo(24376,14812);
ctx.lineTo(24412,14812);
ctx.lineTo(24412,14848);
ctx.lineTo(24376,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,243,196,0.85)';
ctx.strokeStyle='rgb(253,53,214)';
ctx.moveTo(24376,14752);
ctx.lineTo(24376,14716);
ctx.lineTo(24412,14716);
ctx.lineTo(24412,14752);
ctx.lineTo(24376,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,235,35,0.85)';
ctx.strokeStyle='rgb(8,249,66)';
ctx.moveTo(24472,14944);
ctx.lineTo(24472,14908);
ctx.lineTo(24508,14908);
ctx.lineTo(24508,14944);
ctx.lineTo(24472,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,23,27,0.85)';
ctx.strokeStyle='rgb(23,192,79)';
ctx.moveTo(24472,14848);
ctx.lineTo(24472,14812);
ctx.lineTo(24508,14812);
ctx.lineTo(24508,14848);
ctx.lineTo(24472,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,78,38,0.85)';
ctx.strokeStyle='rgb(179,236,63)';
ctx.moveTo(24472,14752);
ctx.lineTo(24472,14716);
ctx.lineTo(24508,14716);
ctx.lineTo(24508,14752);
ctx.lineTo(24472,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,81,204,0.85)';
ctx.strokeStyle='rgb(38,89,34)';
ctx.moveTo(24568,14944);
ctx.lineTo(24568,14908);
ctx.lineTo(24604,14908);
ctx.lineTo(24604,14944);
ctx.lineTo(24568,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,249,223,0.85)';
ctx.strokeStyle='rgb(232,161,239)';
ctx.moveTo(24568,14848);
ctx.lineTo(24568,14812);
ctx.lineTo(24604,14812);
ctx.lineTo(24604,14848);
ctx.lineTo(24568,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,149,197,0.85)';
ctx.strokeStyle='rgb(215,103,29)';
ctx.moveTo(24568,14752);
ctx.lineTo(24568,14716);
ctx.lineTo(24604,14716);
ctx.lineTo(24604,14752);
ctx.lineTo(24568,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,74,14,0.85)';
ctx.strokeStyle='rgb(122,73,152)';
ctx.moveTo(24664,14944);
ctx.lineTo(24664,14908);
ctx.lineTo(24700,14908);
ctx.lineTo(24700,14944);
ctx.lineTo(24664,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,218,33,0.85)';
ctx.strokeStyle='rgb(248,91,250)';
ctx.moveTo(24664,14848);
ctx.lineTo(24664,14812);
ctx.lineTo(24700,14812);
ctx.lineTo(24700,14848);
ctx.lineTo(24664,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,189,148,0.85)';
ctx.strokeStyle='rgb(196,33,87)';
ctx.moveTo(24664,14752);
ctx.lineTo(24664,14716);
ctx.lineTo(24700,14716);
ctx.lineTo(24700,14752);
ctx.lineTo(24664,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,213,110,0.85)';
ctx.strokeStyle='rgb(154,55,113)';
ctx.moveTo(24760,14944);
ctx.lineTo(24760,14908);
ctx.lineTo(24796,14908);
ctx.lineTo(24796,14944);
ctx.lineTo(24760,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,18,53,0.85)';
ctx.strokeStyle='rgb(164,100,210)';
ctx.moveTo(24760,14848);
ctx.lineTo(24760,14812);
ctx.lineTo(24796,14812);
ctx.lineTo(24796,14848);
ctx.lineTo(24760,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,100,232,0.85)';
ctx.strokeStyle='rgb(134,161,109)';
ctx.moveTo(24760,14752);
ctx.lineTo(24760,14716);
ctx.lineTo(24796,14716);
ctx.lineTo(24796,14752);
ctx.lineTo(24760,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,145,90,0.85)';
ctx.strokeStyle='rgb(9,88,242)';
ctx.moveTo(24856,14944);
ctx.lineTo(24856,14908);
ctx.lineTo(24892,14908);
ctx.lineTo(24892,14944);
ctx.lineTo(24856,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,94,197,0.85)';
ctx.strokeStyle='rgb(230,19,45)';
ctx.moveTo(24856,14848);
ctx.lineTo(24856,14812);
ctx.lineTo(24892,14812);
ctx.lineTo(24892,14848);
ctx.lineTo(24856,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,212,196,0.85)';
ctx.strokeStyle='rgb(193,83,57)';
ctx.moveTo(24856,14752);
ctx.lineTo(24856,14716);
ctx.lineTo(24892,14716);
ctx.lineTo(24892,14752);
ctx.lineTo(24856,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,9,202,0.85)';
ctx.strokeStyle='rgb(222,252,140)';
ctx.moveTo(24952,14944);
ctx.lineTo(24952,14908);
ctx.lineTo(24988,14908);
ctx.lineTo(24988,14944);
ctx.lineTo(24952,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,118,132,0.85)';
ctx.strokeStyle='rgb(152,52,173)';
ctx.moveTo(24952,14848);
ctx.lineTo(24952,14812);
ctx.lineTo(24988,14812);
ctx.lineTo(24988,14848);
ctx.lineTo(24952,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,195,164,0.85)';
ctx.strokeStyle='rgb(150,82,171)';
ctx.moveTo(24952,14752);
ctx.lineTo(24952,14716);
ctx.lineTo(24988,14716);
ctx.lineTo(24988,14752);
ctx.lineTo(24952,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,76,170,0.85)';
ctx.strokeStyle='rgb(97,32,126)';
ctx.moveTo(25048,14944);
ctx.lineTo(25048,14908);
ctx.lineTo(25084,14908);
ctx.lineTo(25084,14944);
ctx.lineTo(25048,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,217,248,0.85)';
ctx.strokeStyle='rgb(12,32,92)';
ctx.moveTo(25048,14848);
ctx.lineTo(25048,14812);
ctx.lineTo(25084,14812);
ctx.lineTo(25084,14848);
ctx.lineTo(25048,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,208,211,0.85)';
ctx.strokeStyle='rgb(92,91,130)';
ctx.moveTo(25048,14752);
ctx.lineTo(25048,14716);
ctx.lineTo(25084,14716);
ctx.lineTo(25084,14752);
ctx.lineTo(25048,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,245,102,0.85)';
ctx.strokeStyle='rgb(7,217,103)';
ctx.moveTo(25144,14944);
ctx.lineTo(25144,14908);
ctx.lineTo(25180,14908);
ctx.lineTo(25180,14944);
ctx.lineTo(25144,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,152,24,0.85)';
ctx.strokeStyle='rgb(214,208,93)';
ctx.moveTo(25144,14848);
ctx.lineTo(25144,14812);
ctx.lineTo(25180,14812);
ctx.lineTo(25180,14848);
ctx.lineTo(25144,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,239,93,0.85)';
ctx.strokeStyle='rgb(234,42,52)';
ctx.moveTo(25144,14752);
ctx.lineTo(25144,14716);
ctx.lineTo(25180,14716);
ctx.lineTo(25180,14752);
ctx.lineTo(25144,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,136,204,0.85)';
ctx.strokeStyle='rgb(210,41,154)';
ctx.moveTo(25480,16456);
ctx.lineTo(25480,16420);
ctx.lineTo(25516,16420);
ctx.lineTo(25516,16456);
ctx.lineTo(25480,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,18,86,0.85)';
ctx.strokeStyle='rgb(183,102,242)';
ctx.moveTo(25480,16360);
ctx.lineTo(25480,16324);
ctx.lineTo(25516,16324);
ctx.lineTo(25516,16360);
ctx.lineTo(25480,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,175,214,0.85)';
ctx.strokeStyle='rgb(65,47,13)';
ctx.moveTo(25480,16264);
ctx.lineTo(25480,16228);
ctx.lineTo(25516,16228);
ctx.lineTo(25516,16264);
ctx.lineTo(25480,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,83,152,0.85)';
ctx.strokeStyle='rgb(162,190,146)';
ctx.moveTo(25576,16456);
ctx.lineTo(25576,16420);
ctx.lineTo(25612,16420);
ctx.lineTo(25612,16456);
ctx.lineTo(25576,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,142,188,0.85)';
ctx.strokeStyle='rgb(69,6,148)';
ctx.moveTo(25576,16360);
ctx.lineTo(25576,16324);
ctx.lineTo(25612,16324);
ctx.lineTo(25612,16360);
ctx.lineTo(25576,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,73,205,0.85)';
ctx.strokeStyle='rgb(151,227,48)';
ctx.moveTo(25576,16264);
ctx.lineTo(25576,16228);
ctx.lineTo(25612,16228);
ctx.lineTo(25612,16264);
ctx.lineTo(25576,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,47,190,0.85)';
ctx.strokeStyle='rgb(122,43,235)';
ctx.moveTo(25672,16456);
ctx.lineTo(25672,16420);
ctx.lineTo(25708,16420);
ctx.lineTo(25708,16456);
ctx.lineTo(25672,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,72,54,0.85)';
ctx.strokeStyle='rgb(207,246,188)';
ctx.moveTo(25672,16360);
ctx.lineTo(25672,16324);
ctx.lineTo(25708,16324);
ctx.lineTo(25708,16360);
ctx.lineTo(25672,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,236,230,0.85)';
ctx.strokeStyle='rgb(24,136,248)';
ctx.moveTo(25672,16264);
ctx.lineTo(25672,16228);
ctx.lineTo(25708,16228);
ctx.lineTo(25708,16264);
ctx.lineTo(25672,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,128,199,0.85)';
ctx.strokeStyle='rgb(216,94,208)';
ctx.moveTo(25768,16456);
ctx.lineTo(25768,16420);
ctx.lineTo(25804,16420);
ctx.lineTo(25804,16456);
ctx.lineTo(25768,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,87,14,0.85)';
ctx.strokeStyle='rgb(244,115,89)';
ctx.moveTo(25768,16360);
ctx.lineTo(25768,16324);
ctx.lineTo(25804,16324);
ctx.lineTo(25804,16360);
ctx.lineTo(25768,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,65,99,0.85)';
ctx.strokeStyle='rgb(180,233,208)';
ctx.moveTo(25768,16264);
ctx.lineTo(25768,16228);
ctx.lineTo(25804,16228);
ctx.lineTo(25804,16264);
ctx.lineTo(25768,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,204,129,0.85)';
ctx.strokeStyle='rgb(27,44,179)';
ctx.moveTo(25864,16456);
ctx.lineTo(25864,16420);
ctx.lineTo(25900,16420);
ctx.lineTo(25900,16456);
ctx.lineTo(25864,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,200,113,0.85)';
ctx.strokeStyle='rgb(240,109,238)';
ctx.moveTo(25864,16360);
ctx.lineTo(25864,16324);
ctx.lineTo(25900,16324);
ctx.lineTo(25900,16360);
ctx.lineTo(25864,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,145,193,0.85)';
ctx.strokeStyle='rgb(231,207,219)';
ctx.moveTo(25864,16264);
ctx.lineTo(25864,16228);
ctx.lineTo(25900,16228);
ctx.lineTo(25900,16264);
ctx.lineTo(25864,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,9,38,0.85)';
ctx.strokeStyle='rgb(156,53,182)';
ctx.moveTo(25960,16456);
ctx.lineTo(25960,16420);
ctx.lineTo(25996,16420);
ctx.lineTo(25996,16456);
ctx.lineTo(25960,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,53,240,0.85)';
ctx.strokeStyle='rgb(14,185,143)';
ctx.moveTo(25960,16360);
ctx.lineTo(25960,16324);
ctx.lineTo(25996,16324);
ctx.lineTo(25996,16360);
ctx.lineTo(25960,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,56,191,0.85)';
ctx.strokeStyle='rgb(97,78,238)';
ctx.moveTo(25960,16264);
ctx.lineTo(25960,16228);
ctx.lineTo(25996,16228);
ctx.lineTo(25996,16264);
ctx.lineTo(25960,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,10,113,0.85)';
ctx.strokeStyle='rgb(23,177,66)';
ctx.moveTo(26056,16456);
ctx.lineTo(26056,16420);
ctx.lineTo(26092,16420);
ctx.lineTo(26092,16456);
ctx.lineTo(26056,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,161,11,0.85)';
ctx.strokeStyle='rgb(98,63,188)';
ctx.moveTo(26056,16360);
ctx.lineTo(26056,16324);
ctx.lineTo(26092,16324);
ctx.lineTo(26092,16360);
ctx.lineTo(26056,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,114,225,0.85)';
ctx.strokeStyle='rgb(173,29,188)';
ctx.moveTo(26056,16264);
ctx.lineTo(26056,16228);
ctx.lineTo(26092,16228);
ctx.lineTo(26092,16264);
ctx.lineTo(26056,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,133,183,0.85)';
ctx.strokeStyle='rgb(130,158,228)';
ctx.moveTo(26152,16456);
ctx.lineTo(26152,16420);
ctx.lineTo(26188,16420);
ctx.lineTo(26188,16456);
ctx.lineTo(26152,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,65,95,0.85)';
ctx.strokeStyle='rgb(73,156,232)';
ctx.moveTo(26152,16360);
ctx.lineTo(26152,16324);
ctx.lineTo(26188,16324);
ctx.lineTo(26188,16360);
ctx.lineTo(26152,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,46,156,0.85)';
ctx.strokeStyle='rgb(19,99,99)';
ctx.moveTo(26152,16264);
ctx.lineTo(26152,16228);
ctx.lineTo(26188,16228);
ctx.lineTo(26188,16264);
ctx.lineTo(26152,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,32,54,0.85)';
ctx.strokeStyle='rgb(14,114,92)';
ctx.moveTo(26248,16456);
ctx.lineTo(26248,16420);
ctx.lineTo(26284,16420);
ctx.lineTo(26284,16456);
ctx.lineTo(26248,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,0,29,0.85)';
ctx.strokeStyle='rgb(36,56,184)';
ctx.moveTo(26248,16360);
ctx.lineTo(26248,16324);
ctx.lineTo(26284,16324);
ctx.lineTo(26284,16360);
ctx.lineTo(26248,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,58,131,0.85)';
ctx.strokeStyle='rgb(141,228,232)';
ctx.moveTo(26248,16264);
ctx.lineTo(26248,16228);
ctx.lineTo(26284,16228);
ctx.lineTo(26284,16264);
ctx.lineTo(26248,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,120,2,0.85)';
ctx.strokeStyle='rgb(20,182,172)';
ctx.moveTo(26344,16456);
ctx.lineTo(26344,16420);
ctx.lineTo(26380,16420);
ctx.lineTo(26380,16456);
ctx.lineTo(26344,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,237,44,0.85)';
ctx.strokeStyle='rgb(173,37,254)';
ctx.moveTo(26344,16360);
ctx.lineTo(26344,16324);
ctx.lineTo(26380,16324);
ctx.lineTo(26380,16360);
ctx.lineTo(26344,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,36,222,0.85)';
ctx.strokeStyle='rgb(246,178,237)';
ctx.moveTo(26344,16264);
ctx.lineTo(26344,16228);
ctx.lineTo(26380,16228);
ctx.lineTo(26380,16264);
ctx.lineTo(26344,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,218,253,0.85)';
ctx.strokeStyle='rgb(231,214,29)';
ctx.moveTo(26440,16456);
ctx.lineTo(26440,16420);
ctx.lineTo(26476,16420);
ctx.lineTo(26476,16456);
ctx.lineTo(26440,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,210,33,0.85)';
ctx.strokeStyle='rgb(38,102,201)';
ctx.moveTo(26440,16360);
ctx.lineTo(26440,16324);
ctx.lineTo(26476,16324);
ctx.lineTo(26476,16360);
ctx.lineTo(26440,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,164,248,0.85)';
ctx.strokeStyle='rgb(144,57,229)';
ctx.moveTo(26440,16264);
ctx.lineTo(26440,16228);
ctx.lineTo(26476,16228);
ctx.lineTo(26476,16264);
ctx.lineTo(26440,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,189,125,0.85)';
ctx.strokeStyle='rgb(95,89,13)';
ctx.moveTo(25480,13432);
ctx.lineTo(25480,13396);
ctx.lineTo(25516,13396);
ctx.lineTo(25516,13432);
ctx.lineTo(25480,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,39,234,0.85)';
ctx.strokeStyle='rgb(82,218,234)';
ctx.moveTo(25480,13336);
ctx.lineTo(25480,13300);
ctx.lineTo(25516,13300);
ctx.lineTo(25516,13336);
ctx.lineTo(25480,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,216,41,0.85)';
ctx.strokeStyle='rgb(109,144,254)';
ctx.moveTo(25480,13240);
ctx.lineTo(25480,13204);
ctx.lineTo(25516,13204);
ctx.lineTo(25516,13240);
ctx.lineTo(25480,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,32,27,0.85)';
ctx.strokeStyle='rgb(55,75,13)';
ctx.moveTo(25576,13432);
ctx.lineTo(25576,13396);
ctx.lineTo(25612,13396);
ctx.lineTo(25612,13432);
ctx.lineTo(25576,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,16,121,0.85)';
ctx.strokeStyle='rgb(252,93,32)';
ctx.moveTo(25576,13336);
ctx.lineTo(25576,13300);
ctx.lineTo(25612,13300);
ctx.lineTo(25612,13336);
ctx.lineTo(25576,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,38,2,0.85)';
ctx.strokeStyle='rgb(132,15,249)';
ctx.moveTo(25576,13240);
ctx.lineTo(25576,13204);
ctx.lineTo(25612,13204);
ctx.lineTo(25612,13240);
ctx.lineTo(25576,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,199,243,0.85)';
ctx.strokeStyle='rgb(66,24,98)';
ctx.moveTo(25672,13432);
ctx.lineTo(25672,13396);
ctx.lineTo(25708,13396);
ctx.lineTo(25708,13432);
ctx.lineTo(25672,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,169,49,0.85)';
ctx.strokeStyle='rgb(219,113,200)';
ctx.moveTo(25672,13336);
ctx.lineTo(25672,13300);
ctx.lineTo(25708,13300);
ctx.lineTo(25708,13336);
ctx.lineTo(25672,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,172,232,0.85)';
ctx.strokeStyle='rgb(67,104,85)';
ctx.moveTo(25672,13240);
ctx.lineTo(25672,13204);
ctx.lineTo(25708,13204);
ctx.lineTo(25708,13240);
ctx.lineTo(25672,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,196,45,0.85)';
ctx.strokeStyle='rgb(170,150,29)';
ctx.moveTo(25768,13432);
ctx.lineTo(25768,13396);
ctx.lineTo(25804,13396);
ctx.lineTo(25804,13432);
ctx.lineTo(25768,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,54,7,0.85)';
ctx.strokeStyle='rgb(127,97,13)';
ctx.moveTo(25768,13336);
ctx.lineTo(25768,13300);
ctx.lineTo(25804,13300);
ctx.lineTo(25804,13336);
ctx.lineTo(25768,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,170,74,0.85)';
ctx.strokeStyle='rgb(139,191,201)';
ctx.moveTo(25768,13240);
ctx.lineTo(25768,13204);
ctx.lineTo(25804,13204);
ctx.lineTo(25804,13240);
ctx.lineTo(25768,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,108,247,0.85)';
ctx.strokeStyle='rgb(230,209,15)';
ctx.moveTo(25864,13432);
ctx.lineTo(25864,13396);
ctx.lineTo(25900,13396);
ctx.lineTo(25900,13432);
ctx.lineTo(25864,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,253,133,0.85)';
ctx.strokeStyle='rgb(140,52,193)';
ctx.moveTo(25864,13336);
ctx.lineTo(25864,13300);
ctx.lineTo(25900,13300);
ctx.lineTo(25900,13336);
ctx.lineTo(25864,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,42,234,0.85)';
ctx.strokeStyle='rgb(11,90,53)';
ctx.moveTo(25864,13240);
ctx.lineTo(25864,13204);
ctx.lineTo(25900,13204);
ctx.lineTo(25900,13240);
ctx.lineTo(25864,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,123,180,0.85)';
ctx.strokeStyle='rgb(115,78,136)';
ctx.moveTo(25960,13432);
ctx.lineTo(25960,13396);
ctx.lineTo(25996,13396);
ctx.lineTo(25996,13432);
ctx.lineTo(25960,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,143,140,0.85)';
ctx.strokeStyle='rgb(166,121,217)';
ctx.moveTo(25960,13336);
ctx.lineTo(25960,13300);
ctx.lineTo(25996,13300);
ctx.lineTo(25996,13336);
ctx.lineTo(25960,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,239,105,0.85)';
ctx.strokeStyle='rgb(5,145,213)';
ctx.moveTo(25960,13240);
ctx.lineTo(25960,13204);
ctx.lineTo(25996,13204);
ctx.lineTo(25996,13240);
ctx.lineTo(25960,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,238,70,0.85)';
ctx.strokeStyle='rgb(144,138,54)';
ctx.moveTo(26056,13432);
ctx.lineTo(26056,13396);
ctx.lineTo(26092,13396);
ctx.lineTo(26092,13432);
ctx.lineTo(26056,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,233,60,0.85)';
ctx.strokeStyle='rgb(215,161,32)';
ctx.moveTo(26056,13336);
ctx.lineTo(26056,13300);
ctx.lineTo(26092,13300);
ctx.lineTo(26092,13336);
ctx.lineTo(26056,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,201,176,0.85)';
ctx.strokeStyle='rgb(6,228,70)';
ctx.moveTo(26056,13240);
ctx.lineTo(26056,13204);
ctx.lineTo(26092,13204);
ctx.lineTo(26092,13240);
ctx.lineTo(26056,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,168,220,0.85)';
ctx.strokeStyle='rgb(69,5,236)';
ctx.moveTo(26152,13432);
ctx.lineTo(26152,13396);
ctx.lineTo(26188,13396);
ctx.lineTo(26188,13432);
ctx.lineTo(26152,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,178,234,0.85)';
ctx.strokeStyle='rgb(87,15,31)';
ctx.moveTo(26152,13336);
ctx.lineTo(26152,13300);
ctx.lineTo(26188,13300);
ctx.lineTo(26188,13336);
ctx.lineTo(26152,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,44,220,0.85)';
ctx.strokeStyle='rgb(132,117,117)';
ctx.moveTo(26152,13240);
ctx.lineTo(26152,13204);
ctx.lineTo(26188,13204);
ctx.lineTo(26188,13240);
ctx.lineTo(26152,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,41,198,0.85)';
ctx.strokeStyle='rgb(81,209,76)';
ctx.moveTo(26248,13432);
ctx.lineTo(26248,13396);
ctx.lineTo(26284,13396);
ctx.lineTo(26284,13432);
ctx.lineTo(26248,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,35,153,0.85)';
ctx.strokeStyle='rgb(114,125,42)';
ctx.moveTo(26248,13336);
ctx.lineTo(26248,13300);
ctx.lineTo(26284,13300);
ctx.lineTo(26284,13336);
ctx.lineTo(26248,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,127,77,0.85)';
ctx.strokeStyle='rgb(184,182,215)';
ctx.moveTo(26248,13240);
ctx.lineTo(26248,13204);
ctx.lineTo(26284,13204);
ctx.lineTo(26284,13240);
ctx.lineTo(26248,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,161,21,0.85)';
ctx.strokeStyle='rgb(161,21,228)';
ctx.moveTo(26344,13432);
ctx.lineTo(26344,13396);
ctx.lineTo(26380,13396);
ctx.lineTo(26380,13432);
ctx.lineTo(26344,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,180,2,0.85)';
ctx.strokeStyle='rgb(215,253,247)';
ctx.moveTo(26344,13336);
ctx.lineTo(26344,13300);
ctx.lineTo(26380,13300);
ctx.lineTo(26380,13336);
ctx.lineTo(26344,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,0,88,0.85)';
ctx.strokeStyle='rgb(116,199,93)';
ctx.moveTo(26344,13240);
ctx.lineTo(26344,13204);
ctx.lineTo(26380,13204);
ctx.lineTo(26380,13240);
ctx.lineTo(26344,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,236,223,0.85)';
ctx.strokeStyle='rgb(24,224,21)';
ctx.moveTo(26440,13432);
ctx.lineTo(26440,13396);
ctx.lineTo(26476,13396);
ctx.lineTo(26476,13432);
ctx.lineTo(26440,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,60,85,0.85)';
ctx.strokeStyle='rgb(52,31,216)';
ctx.moveTo(26440,13336);
ctx.lineTo(26440,13300);
ctx.lineTo(26476,13300);
ctx.lineTo(26476,13336);
ctx.lineTo(26440,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,82,26,0.85)';
ctx.strokeStyle='rgb(202,51,79)';
ctx.moveTo(26440,13240);
ctx.lineTo(26440,13204);
ctx.lineTo(26476,13204);
ctx.lineTo(26476,13240);
ctx.lineTo(26440,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,223,34,0.85)';
ctx.strokeStyle='rgb(229,217,225)';
ctx.moveTo(24184,14944);
ctx.lineTo(24184,14908);
ctx.lineTo(24220,14908);
ctx.lineTo(24220,14944);
ctx.lineTo(24184,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,234,168,0.85)';
ctx.strokeStyle='rgb(243,175,199)';
ctx.moveTo(34396,8800);
ctx.lineTo(34396,8764);
ctx.lineTo(34432,8764);
ctx.lineTo(34432,8800);
ctx.lineTo(34396,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,224,220,0.85)';
ctx.strokeStyle='rgb(206,82,243)';
ctx.moveTo(34972,8896);
ctx.lineTo(34972,8860);
ctx.lineTo(35008,8860);
ctx.lineTo(35008,8896);
ctx.lineTo(34972,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,234,142,0.85)';
ctx.strokeStyle='rgb(207,221,41)';
ctx.moveTo(34972,8800);
ctx.lineTo(34972,8764);
ctx.lineTo(35008,8764);
ctx.lineTo(35008,8800);
ctx.lineTo(34972,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,154,82,0.85)';
ctx.strokeStyle='rgb(216,64,183)';
ctx.moveTo(34204,8896);
ctx.lineTo(34204,8860);
ctx.lineTo(34240,8860);
ctx.lineTo(34240,8896);
ctx.lineTo(34204,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,150,134,0.85)';
ctx.strokeStyle='rgb(181,12,119)';
ctx.moveTo(35068,8896);
ctx.lineTo(35068,8860);
ctx.lineTo(35104,8860);
ctx.lineTo(35104,8896);
ctx.lineTo(35068,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,125,223,0.85)';
ctx.strokeStyle='rgb(8,149,32)';
ctx.moveTo(35068,8800);
ctx.lineTo(35068,8764);
ctx.lineTo(35104,8764);
ctx.lineTo(35104,8800);
ctx.lineTo(35068,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,48,121,0.85)';
ctx.strokeStyle='rgb(238,230,250)';
ctx.moveTo(34492,8896);
ctx.lineTo(34492,8860);
ctx.lineTo(34528,8860);
ctx.lineTo(34528,8896);
ctx.lineTo(34492,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,54,83,0.85)';
ctx.strokeStyle='rgb(127,93,143)';
ctx.moveTo(35164,8896);
ctx.lineTo(35164,8860);
ctx.lineTo(35200,8860);
ctx.lineTo(35200,8896);
ctx.lineTo(35164,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,183,153,0.85)';
ctx.strokeStyle='rgb(19,80,180)';
ctx.moveTo(35164,8800);
ctx.lineTo(35164,8764);
ctx.lineTo(35200,8764);
ctx.lineTo(35200,8800);
ctx.lineTo(35164,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,25,220,0.85)';
ctx.strokeStyle='rgb(132,131,249)';
ctx.moveTo(34492,8800);
ctx.lineTo(34492,8764);
ctx.lineTo(34528,8764);
ctx.lineTo(34528,8800);
ctx.lineTo(34492,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,166,143,0.85)';
ctx.strokeStyle='rgb(158,55,174)';
ctx.moveTo(34300,8896);
ctx.lineTo(34300,8860);
ctx.lineTo(34336,8860);
ctx.lineTo(34336,8896);
ctx.lineTo(34300,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,184,109,0.85)';
ctx.strokeStyle='rgb(237,183,108)';
ctx.moveTo(34588,8896);
ctx.lineTo(34588,8860);
ctx.lineTo(34624,8860);
ctx.lineTo(34624,8896);
ctx.lineTo(34588,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,163,193,0.85)';
ctx.strokeStyle='rgb(73,52,114)';
ctx.moveTo(34588,8800);
ctx.lineTo(34588,8764);
ctx.lineTo(34624,8764);
ctx.lineTo(34624,8800);
ctx.lineTo(34588,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,67,39,0.85)';
ctx.strokeStyle='rgb(18,229,117)';
ctx.moveTo(34300,8800);
ctx.lineTo(34300,8764);
ctx.lineTo(34336,8764);
ctx.lineTo(34336,8800);
ctx.lineTo(34300,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,113,236,0.85)';
ctx.strokeStyle='rgb(8,216,65)';
ctx.moveTo(34684,8896);
ctx.lineTo(34684,8860);
ctx.lineTo(34720,8860);
ctx.lineTo(34720,8896);
ctx.lineTo(34684,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,117,173,0.85)';
ctx.strokeStyle='rgb(120,231,155)';
ctx.moveTo(34684,8800);
ctx.lineTo(34684,8764);
ctx.lineTo(34720,8764);
ctx.lineTo(34720,8800);
ctx.lineTo(34684,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,209,77,0.85)';
ctx.strokeStyle='rgb(245,71,221)';
ctx.moveTo(34204,8800);
ctx.lineTo(34204,8764);
ctx.lineTo(34240,8764);
ctx.lineTo(34240,8800);
ctx.lineTo(34204,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,2,238,0.85)';
ctx.strokeStyle='rgb(120,12,5)';
ctx.moveTo(34780,8896);
ctx.lineTo(34780,8860);
ctx.lineTo(34816,8860);
ctx.lineTo(34816,8896);
ctx.lineTo(34780,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,25,41,0.85)';
ctx.strokeStyle='rgb(117,168,241)';
ctx.moveTo(34780,8800);
ctx.lineTo(34780,8764);
ctx.lineTo(34816,8764);
ctx.lineTo(34816,8800);
ctx.lineTo(34780,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,98,167,0.85)';
ctx.strokeStyle='rgb(191,42,247)';
ctx.moveTo(34396,8896);
ctx.lineTo(34396,8860);
ctx.lineTo(34432,8860);
ctx.lineTo(34432,8896);
ctx.lineTo(34396,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,120,229,0.85)';
ctx.strokeStyle='rgb(242,178,91)';
ctx.moveTo(34876,8896);
ctx.lineTo(34876,8860);
ctx.lineTo(34912,8860);
ctx.lineTo(34912,8896);
ctx.lineTo(34876,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,30,222,0.85)';
ctx.strokeStyle='rgb(181,118,126)';
ctx.moveTo(34204,11920);
ctx.lineTo(34204,11884);
ctx.lineTo(34240,11884);
ctx.lineTo(34240,11920);
ctx.lineTo(34204,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,102,23,0.85)';
ctx.strokeStyle='rgb(167,52,254)';
ctx.moveTo(34204,11824);
ctx.lineTo(34204,11788);
ctx.lineTo(34240,11788);
ctx.lineTo(34240,11824);
ctx.lineTo(34204,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,31,167,0.85)';
ctx.strokeStyle='rgb(23,161,115)';
ctx.moveTo(34204,11728);
ctx.lineTo(34204,11692);
ctx.lineTo(34240,11692);
ctx.lineTo(34240,11728);
ctx.lineTo(34204,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,230,211,0.85)';
ctx.strokeStyle='rgb(17,27,22)';
ctx.moveTo(34300,11920);
ctx.lineTo(34300,11884);
ctx.lineTo(34336,11884);
ctx.lineTo(34336,11920);
ctx.lineTo(34300,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,120,214,0.85)';
ctx.strokeStyle='rgb(216,106,241)';
ctx.moveTo(34300,11824);
ctx.lineTo(34300,11788);
ctx.lineTo(34336,11788);
ctx.lineTo(34336,11824);
ctx.lineTo(34300,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,233,190,0.85)';
ctx.strokeStyle='rgb(243,31,94)';
ctx.moveTo(34300,11728);
ctx.lineTo(34300,11692);
ctx.lineTo(34336,11692);
ctx.lineTo(34336,11728);
ctx.lineTo(34300,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,115,24,0.85)';
ctx.strokeStyle='rgb(23,227,228)';
ctx.moveTo(34396,11920);
ctx.lineTo(34396,11884);
ctx.lineTo(34432,11884);
ctx.lineTo(34432,11920);
ctx.lineTo(34396,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,119,34,0.85)';
ctx.strokeStyle='rgb(114,136,78)';
ctx.moveTo(34396,11824);
ctx.lineTo(34396,11788);
ctx.lineTo(34432,11788);
ctx.lineTo(34432,11824);
ctx.lineTo(34396,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,233,246,0.85)';
ctx.strokeStyle='rgb(244,180,69)';
ctx.moveTo(34396,11728);
ctx.lineTo(34396,11692);
ctx.lineTo(34432,11692);
ctx.lineTo(34432,11728);
ctx.lineTo(34396,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,131,180,0.85)';
ctx.strokeStyle='rgb(122,241,34)';
ctx.moveTo(34492,11920);
ctx.lineTo(34492,11884);
ctx.lineTo(34528,11884);
ctx.lineTo(34528,11920);
ctx.lineTo(34492,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,241,238,0.85)';
ctx.strokeStyle='rgb(46,51,94)';
ctx.moveTo(34492,11824);
ctx.lineTo(34492,11788);
ctx.lineTo(34528,11788);
ctx.lineTo(34528,11824);
ctx.lineTo(34492,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,176,155,0.85)';
ctx.strokeStyle='rgb(135,88,14)';
ctx.moveTo(34492,11728);
ctx.lineTo(34492,11692);
ctx.lineTo(34528,11692);
ctx.lineTo(34528,11728);
ctx.lineTo(34492,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,226,83,0.85)';
ctx.strokeStyle='rgb(151,60,81)';
ctx.moveTo(34588,11920);
ctx.lineTo(34588,11884);
ctx.lineTo(34624,11884);
ctx.lineTo(34624,11920);
ctx.lineTo(34588,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,3,140,0.85)';
ctx.strokeStyle='rgb(95,2,142)';
ctx.moveTo(34588,11824);
ctx.lineTo(34588,11788);
ctx.lineTo(34624,11788);
ctx.lineTo(34624,11824);
ctx.lineTo(34588,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,71,119,0.85)';
ctx.strokeStyle='rgb(22,74,123)';
ctx.moveTo(34588,11728);
ctx.lineTo(34588,11692);
ctx.lineTo(34624,11692);
ctx.lineTo(34624,11728);
ctx.lineTo(34588,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,197,199,0.85)';
ctx.strokeStyle='rgb(94,47,179)';
ctx.moveTo(34684,11920);
ctx.lineTo(34684,11884);
ctx.lineTo(34720,11884);
ctx.lineTo(34720,11920);
ctx.lineTo(34684,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,216,94,0.85)';
ctx.strokeStyle='rgb(151,58,38)';
ctx.moveTo(34684,11824);
ctx.lineTo(34684,11788);
ctx.lineTo(34720,11788);
ctx.lineTo(34720,11824);
ctx.lineTo(34684,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,222,122,0.85)';
ctx.strokeStyle='rgb(233,4,235)';
ctx.moveTo(34684,11728);
ctx.lineTo(34684,11692);
ctx.lineTo(34720,11692);
ctx.lineTo(34720,11728);
ctx.lineTo(34684,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,133,23,0.85)';
ctx.strokeStyle='rgb(69,147,94)';
ctx.moveTo(34780,11920);
ctx.lineTo(34780,11884);
ctx.lineTo(34816,11884);
ctx.lineTo(34816,11920);
ctx.lineTo(34780,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,168,213,0.85)';
ctx.strokeStyle='rgb(76,64,125)';
ctx.moveTo(34780,11824);
ctx.lineTo(34780,11788);
ctx.lineTo(34816,11788);
ctx.lineTo(34816,11824);
ctx.lineTo(34780,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,121,222,0.85)';
ctx.strokeStyle='rgb(151,139,48)';
ctx.moveTo(34780,11728);
ctx.lineTo(34780,11692);
ctx.lineTo(34816,11692);
ctx.lineTo(34816,11728);
ctx.lineTo(34780,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,147,85,0.85)';
ctx.strokeStyle='rgb(81,254,197)';
ctx.moveTo(34876,11920);
ctx.lineTo(34876,11884);
ctx.lineTo(34912,11884);
ctx.lineTo(34912,11920);
ctx.lineTo(34876,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,98,194,0.85)';
ctx.strokeStyle='rgb(81,159,248)';
ctx.moveTo(34876,11824);
ctx.lineTo(34876,11788);
ctx.lineTo(34912,11788);
ctx.lineTo(34912,11824);
ctx.lineTo(34876,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,69,110,0.85)';
ctx.strokeStyle='rgb(20,84,108)';
ctx.moveTo(34876,11728);
ctx.lineTo(34876,11692);
ctx.lineTo(34912,11692);
ctx.lineTo(34912,11728);
ctx.lineTo(34876,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,119,106,0.85)';
ctx.strokeStyle='rgb(226,222,81)';
ctx.moveTo(34972,11920);
ctx.lineTo(34972,11884);
ctx.lineTo(35008,11884);
ctx.lineTo(35008,11920);
ctx.lineTo(34972,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,132,211,0.85)';
ctx.strokeStyle='rgb(87,58,174)';
ctx.moveTo(34972,11824);
ctx.lineTo(34972,11788);
ctx.lineTo(35008,11788);
ctx.lineTo(35008,11824);
ctx.lineTo(34972,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,162,204,0.85)';
ctx.strokeStyle='rgb(223,14,154)';
ctx.moveTo(34972,11728);
ctx.lineTo(34972,11692);
ctx.lineTo(35008,11692);
ctx.lineTo(35008,11728);
ctx.lineTo(34972,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,199,48,0.85)';
ctx.strokeStyle='rgb(237,76,252)';
ctx.moveTo(35068,11920);
ctx.lineTo(35068,11884);
ctx.lineTo(35104,11884);
ctx.lineTo(35104,11920);
ctx.lineTo(35068,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,93,35,0.85)';
ctx.strokeStyle='rgb(159,22,90)';
ctx.moveTo(35068,11824);
ctx.lineTo(35068,11788);
ctx.lineTo(35104,11788);
ctx.lineTo(35104,11824);
ctx.lineTo(35068,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,201,206,0.85)';
ctx.strokeStyle='rgb(241,67,6)';
ctx.moveTo(35068,11728);
ctx.lineTo(35068,11692);
ctx.lineTo(35104,11692);
ctx.lineTo(35104,11728);
ctx.lineTo(35068,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,39,137,0.85)';
ctx.strokeStyle='rgb(170,130,70)';
ctx.moveTo(35164,11920);
ctx.lineTo(35164,11884);
ctx.lineTo(35200,11884);
ctx.lineTo(35200,11920);
ctx.lineTo(35164,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,136,15,0.85)';
ctx.strokeStyle='rgb(173,209,52)';
ctx.moveTo(35164,11824);
ctx.lineTo(35164,11788);
ctx.lineTo(35200,11788);
ctx.lineTo(35200,11824);
ctx.lineTo(35164,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,4,53,0.85)';
ctx.strokeStyle='rgb(123,171,102)';
ctx.moveTo(35164,11728);
ctx.lineTo(35164,11692);
ctx.lineTo(35200,11692);
ctx.lineTo(35200,11728);
ctx.lineTo(35164,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,139,51,0.85)';
ctx.strokeStyle='rgb(248,170,63)';
ctx.moveTo(35500,10408);
ctx.lineTo(35500,10372);
ctx.lineTo(35536,10372);
ctx.lineTo(35536,10408);
ctx.lineTo(35500,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,141,205,0.85)';
ctx.strokeStyle='rgb(177,25,18)';
ctx.moveTo(35500,10312);
ctx.lineTo(35500,10276);
ctx.lineTo(35536,10276);
ctx.lineTo(35536,10312);
ctx.lineTo(35500,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,114,141,0.85)';
ctx.strokeStyle='rgb(58,47,97)';
ctx.moveTo(35500,10216);
ctx.lineTo(35500,10180);
ctx.lineTo(35536,10180);
ctx.lineTo(35536,10216);
ctx.lineTo(35500,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,145,250,0.85)';
ctx.strokeStyle='rgb(176,196,5)';
ctx.moveTo(35596,10408);
ctx.lineTo(35596,10372);
ctx.lineTo(35632,10372);
ctx.lineTo(35632,10408);
ctx.lineTo(35596,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,79,210,0.85)';
ctx.strokeStyle='rgb(12,77,33)';
ctx.moveTo(35596,10312);
ctx.lineTo(35596,10276);
ctx.lineTo(35632,10276);
ctx.lineTo(35632,10312);
ctx.lineTo(35596,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,231,227,0.85)';
ctx.strokeStyle='rgb(141,110,36)';
ctx.moveTo(35596,10216);
ctx.lineTo(35596,10180);
ctx.lineTo(35632,10180);
ctx.lineTo(35632,10216);
ctx.lineTo(35596,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,170,138,0.85)';
ctx.strokeStyle='rgb(0,45,101)';
ctx.moveTo(35692,10408);
ctx.lineTo(35692,10372);
ctx.lineTo(35728,10372);
ctx.lineTo(35728,10408);
ctx.lineTo(35692,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,208,102,0.85)';
ctx.strokeStyle='rgb(236,170,60)';
ctx.moveTo(35692,10312);
ctx.lineTo(35692,10276);
ctx.lineTo(35728,10276);
ctx.lineTo(35728,10312);
ctx.lineTo(35692,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,196,245,0.85)';
ctx.strokeStyle='rgb(34,160,177)';
ctx.moveTo(35692,10216);
ctx.lineTo(35692,10180);
ctx.lineTo(35728,10180);
ctx.lineTo(35728,10216);
ctx.lineTo(35692,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,140,102,0.85)';
ctx.strokeStyle='rgb(156,80,137)';
ctx.moveTo(35788,10408);
ctx.lineTo(35788,10372);
ctx.lineTo(35824,10372);
ctx.lineTo(35824,10408);
ctx.lineTo(35788,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,217,16,0.85)';
ctx.strokeStyle='rgb(30,198,121)';
ctx.moveTo(35788,10312);
ctx.lineTo(35788,10276);
ctx.lineTo(35824,10276);
ctx.lineTo(35824,10312);
ctx.lineTo(35788,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,243,19,0.85)';
ctx.strokeStyle='rgb(143,48,233)';
ctx.moveTo(35788,10216);
ctx.lineTo(35788,10180);
ctx.lineTo(35824,10180);
ctx.lineTo(35824,10216);
ctx.lineTo(35788,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,141,96,0.85)';
ctx.strokeStyle='rgb(49,174,60)';
ctx.moveTo(35884,10408);
ctx.lineTo(35884,10372);
ctx.lineTo(35920,10372);
ctx.lineTo(35920,10408);
ctx.lineTo(35884,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,195,105,0.85)';
ctx.strokeStyle='rgb(42,211,140)';
ctx.moveTo(35884,10312);
ctx.lineTo(35884,10276);
ctx.lineTo(35920,10276);
ctx.lineTo(35920,10312);
ctx.lineTo(35884,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,119,49,0.85)';
ctx.strokeStyle='rgb(130,206,128)';
ctx.moveTo(35884,10216);
ctx.lineTo(35884,10180);
ctx.lineTo(35920,10180);
ctx.lineTo(35920,10216);
ctx.lineTo(35884,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,225,213,0.85)';
ctx.strokeStyle='rgb(122,191,185)';
ctx.moveTo(35980,10408);
ctx.lineTo(35980,10372);
ctx.lineTo(36016,10372);
ctx.lineTo(36016,10408);
ctx.lineTo(35980,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,249,49,0.85)';
ctx.strokeStyle='rgb(4,40,132)';
ctx.moveTo(35980,10312);
ctx.lineTo(35980,10276);
ctx.lineTo(36016,10276);
ctx.lineTo(36016,10312);
ctx.lineTo(35980,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,181,119,0.85)';
ctx.strokeStyle='rgb(86,28,98)';
ctx.moveTo(35980,10216);
ctx.lineTo(35980,10180);
ctx.lineTo(36016,10180);
ctx.lineTo(36016,10216);
ctx.lineTo(35980,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,42,249,0.85)';
ctx.strokeStyle='rgb(237,84,52)';
ctx.moveTo(36076,10408);
ctx.lineTo(36076,10372);
ctx.lineTo(36112,10372);
ctx.lineTo(36112,10408);
ctx.lineTo(36076,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,179,59,0.85)';
ctx.strokeStyle='rgb(0,1,92)';
ctx.moveTo(36076,10312);
ctx.lineTo(36076,10276);
ctx.lineTo(36112,10276);
ctx.lineTo(36112,10312);
ctx.lineTo(36076,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,48,106,0.85)';
ctx.strokeStyle='rgb(211,54,15)';
ctx.moveTo(36076,10216);
ctx.lineTo(36076,10180);
ctx.lineTo(36112,10180);
ctx.lineTo(36112,10216);
ctx.lineTo(36076,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,61,137,0.85)';
ctx.strokeStyle='rgb(127,186,69)';
ctx.moveTo(36172,10408);
ctx.lineTo(36172,10372);
ctx.lineTo(36208,10372);
ctx.lineTo(36208,10408);
ctx.lineTo(36172,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,119,111,0.85)';
ctx.strokeStyle='rgb(165,220,168)';
ctx.moveTo(36172,10312);
ctx.lineTo(36172,10276);
ctx.lineTo(36208,10276);
ctx.lineTo(36208,10312);
ctx.lineTo(36172,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,237,135,0.85)';
ctx.strokeStyle='rgb(242,246,46)';
ctx.moveTo(36172,10216);
ctx.lineTo(36172,10180);
ctx.lineTo(36208,10180);
ctx.lineTo(36208,10216);
ctx.lineTo(36172,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,64,171,0.85)';
ctx.strokeStyle='rgb(110,114,198)';
ctx.moveTo(36268,10408);
ctx.lineTo(36268,10372);
ctx.lineTo(36304,10372);
ctx.lineTo(36304,10408);
ctx.lineTo(36268,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,50,220,0.85)';
ctx.strokeStyle='rgb(126,76,84)';
ctx.moveTo(36268,10312);
ctx.lineTo(36268,10276);
ctx.lineTo(36304,10276);
ctx.lineTo(36304,10312);
ctx.lineTo(36268,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,158,215,0.85)';
ctx.strokeStyle='rgb(254,234,82)';
ctx.moveTo(36268,10216);
ctx.lineTo(36268,10180);
ctx.lineTo(36304,10180);
ctx.lineTo(36304,10216);
ctx.lineTo(36268,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,249,206,0.85)';
ctx.strokeStyle='rgb(36,99,80)';
ctx.moveTo(36364,10408);
ctx.lineTo(36364,10372);
ctx.lineTo(36400,10372);
ctx.lineTo(36400,10408);
ctx.lineTo(36364,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,156,20,0.85)';
ctx.strokeStyle='rgb(171,51,60)';
ctx.moveTo(36364,10312);
ctx.lineTo(36364,10276);
ctx.lineTo(36400,10276);
ctx.lineTo(36400,10312);
ctx.lineTo(36364,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,140,9,0.85)';
ctx.strokeStyle='rgb(239,166,212)';
ctx.moveTo(36364,10216);
ctx.lineTo(36364,10180);
ctx.lineTo(36400,10180);
ctx.lineTo(36400,10216);
ctx.lineTo(36364,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,44,206,0.85)';
ctx.strokeStyle='rgb(227,17,224)';
ctx.moveTo(36460,10408);
ctx.lineTo(36460,10372);
ctx.lineTo(36496,10372);
ctx.lineTo(36496,10408);
ctx.lineTo(36460,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,126,234,0.85)';
ctx.strokeStyle='rgb(124,241,67)';
ctx.moveTo(36460,10312);
ctx.lineTo(36460,10276);
ctx.lineTo(36496,10276);
ctx.lineTo(36496,10312);
ctx.lineTo(36460,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,189,4,0.85)';
ctx.strokeStyle='rgb(55,216,24)';
ctx.moveTo(36460,10216);
ctx.lineTo(36460,10180);
ctx.lineTo(36496,10180);
ctx.lineTo(36496,10216);
ctx.lineTo(36460,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,249,130,0.85)';
ctx.strokeStyle='rgb(148,111,147)';
ctx.moveTo(34876,8800);
ctx.lineTo(34876,8764);
ctx.lineTo(34912,8764);
ctx.lineTo(34912,8800);
ctx.lineTo(34876,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,97,64,0.85)';
ctx.strokeStyle='rgb(162,55,170)';
ctx.moveTo(34204,14848);
ctx.lineTo(34204,14812);
ctx.lineTo(34240,14812);
ctx.lineTo(34240,14848);
ctx.lineTo(34204,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,246,169,0.85)';
ctx.strokeStyle='rgb(174,181,153)';
ctx.moveTo(34204,14752);
ctx.lineTo(34204,14716);
ctx.lineTo(34240,14716);
ctx.lineTo(34240,14752);
ctx.lineTo(34204,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,180,94,0.85)';
ctx.strokeStyle='rgb(1,187,58)';
ctx.moveTo(34300,14944);
ctx.lineTo(34300,14908);
ctx.lineTo(34336,14908);
ctx.lineTo(34336,14944);
ctx.lineTo(34300,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,9,96,0.85)';
ctx.strokeStyle='rgb(213,232,34)';
ctx.moveTo(34300,14848);
ctx.lineTo(34300,14812);
ctx.lineTo(34336,14812);
ctx.lineTo(34336,14848);
ctx.lineTo(34300,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,89,72,0.85)';
ctx.strokeStyle='rgb(148,79,46)';
ctx.moveTo(34300,14752);
ctx.lineTo(34300,14716);
ctx.lineTo(34336,14716);
ctx.lineTo(34336,14752);
ctx.lineTo(34300,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,67,241,0.85)';
ctx.strokeStyle='rgb(104,251,190)';
ctx.moveTo(34396,14944);
ctx.lineTo(34396,14908);
ctx.lineTo(34432,14908);
ctx.lineTo(34432,14944);
ctx.lineTo(34396,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,226,220,0.85)';
ctx.strokeStyle='rgb(170,221,66)';
ctx.moveTo(34396,14848);
ctx.lineTo(34396,14812);
ctx.lineTo(34432,14812);
ctx.lineTo(34432,14848);
ctx.lineTo(34396,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,191,57,0.85)';
ctx.strokeStyle='rgb(83,132,117)';
ctx.moveTo(34396,14752);
ctx.lineTo(34396,14716);
ctx.lineTo(34432,14716);
ctx.lineTo(34432,14752);
ctx.lineTo(34396,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,134,73,0.85)';
ctx.strokeStyle='rgb(79,50,9)';
ctx.moveTo(34492,14944);
ctx.lineTo(34492,14908);
ctx.lineTo(34528,14908);
ctx.lineTo(34528,14944);
ctx.lineTo(34492,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,212,107,0.85)';
ctx.strokeStyle='rgb(96,147,203)';
ctx.moveTo(34492,14848);
ctx.lineTo(34492,14812);
ctx.lineTo(34528,14812);
ctx.lineTo(34528,14848);
ctx.lineTo(34492,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,205,221,0.85)';
ctx.strokeStyle='rgb(91,151,135)';
ctx.moveTo(34492,14752);
ctx.lineTo(34492,14716);
ctx.lineTo(34528,14716);
ctx.lineTo(34528,14752);
ctx.lineTo(34492,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,150,26,0.85)';
ctx.strokeStyle='rgb(96,210,111)';
ctx.moveTo(34588,14944);
ctx.lineTo(34588,14908);
ctx.lineTo(34624,14908);
ctx.lineTo(34624,14944);
ctx.lineTo(34588,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,168,230,0.85)';
ctx.strokeStyle='rgb(181,39,228)';
ctx.moveTo(34588,14848);
ctx.lineTo(34588,14812);
ctx.lineTo(34624,14812);
ctx.lineTo(34624,14848);
ctx.lineTo(34588,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,138,165,0.85)';
ctx.strokeStyle='rgb(12,44,94)';
ctx.moveTo(34588,14752);
ctx.lineTo(34588,14716);
ctx.lineTo(34624,14716);
ctx.lineTo(34624,14752);
ctx.lineTo(34588,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,157,36,0.85)';
ctx.strokeStyle='rgb(78,49,231)';
ctx.moveTo(34684,14944);
ctx.lineTo(34684,14908);
ctx.lineTo(34720,14908);
ctx.lineTo(34720,14944);
ctx.lineTo(34684,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,168,40,0.85)';
ctx.strokeStyle='rgb(3,63,4)';
ctx.moveTo(34684,14848);
ctx.lineTo(34684,14812);
ctx.lineTo(34720,14812);
ctx.lineTo(34720,14848);
ctx.lineTo(34684,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,75,219,0.85)';
ctx.strokeStyle='rgb(133,102,9)';
ctx.moveTo(34684,14752);
ctx.lineTo(34684,14716);
ctx.lineTo(34720,14716);
ctx.lineTo(34720,14752);
ctx.lineTo(34684,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,219,193,0.85)';
ctx.strokeStyle='rgb(118,226,178)';
ctx.moveTo(34780,14944);
ctx.lineTo(34780,14908);
ctx.lineTo(34816,14908);
ctx.lineTo(34816,14944);
ctx.lineTo(34780,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,11,89,0.85)';
ctx.strokeStyle='rgb(210,108,12)';
ctx.moveTo(34780,14848);
ctx.lineTo(34780,14812);
ctx.lineTo(34816,14812);
ctx.lineTo(34816,14848);
ctx.lineTo(34780,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,41,111,0.85)';
ctx.strokeStyle='rgb(88,115,198)';
ctx.moveTo(34780,14752);
ctx.lineTo(34780,14716);
ctx.lineTo(34816,14716);
ctx.lineTo(34816,14752);
ctx.lineTo(34780,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,180,108,0.85)';
ctx.strokeStyle='rgb(21,161,40)';
ctx.moveTo(34876,14944);
ctx.lineTo(34876,14908);
ctx.lineTo(34912,14908);
ctx.lineTo(34912,14944);
ctx.lineTo(34876,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,203,78,0.85)';
ctx.strokeStyle='rgb(12,20,86)';
ctx.moveTo(34876,14848);
ctx.lineTo(34876,14812);
ctx.lineTo(34912,14812);
ctx.lineTo(34912,14848);
ctx.lineTo(34876,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,245,176,0.85)';
ctx.strokeStyle='rgb(129,127,110)';
ctx.moveTo(34876,14752);
ctx.lineTo(34876,14716);
ctx.lineTo(34912,14716);
ctx.lineTo(34912,14752);
ctx.lineTo(34876,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,151,236,0.85)';
ctx.strokeStyle='rgb(254,82,237)';
ctx.moveTo(34972,14944);
ctx.lineTo(34972,14908);
ctx.lineTo(35008,14908);
ctx.lineTo(35008,14944);
ctx.lineTo(34972,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,6,210,0.85)';
ctx.strokeStyle='rgb(110,56,87)';
ctx.moveTo(34972,14848);
ctx.lineTo(34972,14812);
ctx.lineTo(35008,14812);
ctx.lineTo(35008,14848);
ctx.lineTo(34972,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,68,98,0.85)';
ctx.strokeStyle='rgb(220,133,111)';
ctx.moveTo(34972,14752);
ctx.lineTo(34972,14716);
ctx.lineTo(35008,14716);
ctx.lineTo(35008,14752);
ctx.lineTo(34972,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,225,190,0.85)';
ctx.strokeStyle='rgb(150,67,5)';
ctx.moveTo(35068,14944);
ctx.lineTo(35068,14908);
ctx.lineTo(35104,14908);
ctx.lineTo(35104,14944);
ctx.lineTo(35068,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,89,102,0.85)';
ctx.strokeStyle='rgb(92,98,79)';
ctx.moveTo(35068,14848);
ctx.lineTo(35068,14812);
ctx.lineTo(35104,14812);
ctx.lineTo(35104,14848);
ctx.lineTo(35068,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,254,56,0.85)';
ctx.strokeStyle='rgb(213,18,112)';
ctx.moveTo(35068,14752);
ctx.lineTo(35068,14716);
ctx.lineTo(35104,14716);
ctx.lineTo(35104,14752);
ctx.lineTo(35068,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,235,12,0.85)';
ctx.strokeStyle='rgb(115,45,60)';
ctx.moveTo(35164,14944);
ctx.lineTo(35164,14908);
ctx.lineTo(35200,14908);
ctx.lineTo(35200,14944);
ctx.lineTo(35164,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,154,123,0.85)';
ctx.strokeStyle='rgb(143,179,181)';
ctx.moveTo(35164,14848);
ctx.lineTo(35164,14812);
ctx.lineTo(35200,14812);
ctx.lineTo(35200,14848);
ctx.lineTo(35164,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,66,189,0.85)';
ctx.strokeStyle='rgb(6,6,252)';
ctx.moveTo(35164,14752);
ctx.lineTo(35164,14716);
ctx.lineTo(35200,14716);
ctx.lineTo(35200,14752);
ctx.lineTo(35164,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,95,113,0.85)';
ctx.strokeStyle='rgb(107,80,82)';
ctx.moveTo(35500,16456);
ctx.lineTo(35500,16420);
ctx.lineTo(35536,16420);
ctx.lineTo(35536,16456);
ctx.lineTo(35500,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,179,92,0.85)';
ctx.strokeStyle='rgb(134,25,2)';
ctx.moveTo(35500,16360);
ctx.lineTo(35500,16324);
ctx.lineTo(35536,16324);
ctx.lineTo(35536,16360);
ctx.lineTo(35500,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,79,49,0.85)';
ctx.strokeStyle='rgb(75,21,93)';
ctx.moveTo(35500,16264);
ctx.lineTo(35500,16228);
ctx.lineTo(35536,16228);
ctx.lineTo(35536,16264);
ctx.lineTo(35500,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,114,248,0.85)';
ctx.strokeStyle='rgb(93,41,153)';
ctx.moveTo(35596,16456);
ctx.lineTo(35596,16420);
ctx.lineTo(35632,16420);
ctx.lineTo(35632,16456);
ctx.lineTo(35596,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,115,121,0.85)';
ctx.strokeStyle='rgb(211,99,5)';
ctx.moveTo(35596,16360);
ctx.lineTo(35596,16324);
ctx.lineTo(35632,16324);
ctx.lineTo(35632,16360);
ctx.lineTo(35596,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,101,226,0.85)';
ctx.strokeStyle='rgb(199,5,137)';
ctx.moveTo(35596,16264);
ctx.lineTo(35596,16228);
ctx.lineTo(35632,16228);
ctx.lineTo(35632,16264);
ctx.lineTo(35596,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,222,128,0.85)';
ctx.strokeStyle='rgb(147,108,248)';
ctx.moveTo(35692,16456);
ctx.lineTo(35692,16420);
ctx.lineTo(35728,16420);
ctx.lineTo(35728,16456);
ctx.lineTo(35692,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,154,96,0.85)';
ctx.strokeStyle='rgb(20,60,83)';
ctx.moveTo(35692,16360);
ctx.lineTo(35692,16324);
ctx.lineTo(35728,16324);
ctx.lineTo(35728,16360);
ctx.lineTo(35692,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,67,164,0.85)';
ctx.strokeStyle='rgb(98,69,231)';
ctx.moveTo(35692,16264);
ctx.lineTo(35692,16228);
ctx.lineTo(35728,16228);
ctx.lineTo(35728,16264);
ctx.lineTo(35692,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,157,72,0.85)';
ctx.strokeStyle='rgb(130,27,77)';
ctx.moveTo(35788,16456);
ctx.lineTo(35788,16420);
ctx.lineTo(35824,16420);
ctx.lineTo(35824,16456);
ctx.lineTo(35788,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,84,120,0.85)';
ctx.strokeStyle='rgb(130,170,22)';
ctx.moveTo(35788,16360);
ctx.lineTo(35788,16324);
ctx.lineTo(35824,16324);
ctx.lineTo(35824,16360);
ctx.lineTo(35788,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,205,128,0.85)';
ctx.strokeStyle='rgb(132,121,122)';
ctx.moveTo(35788,16264);
ctx.lineTo(35788,16228);
ctx.lineTo(35824,16228);
ctx.lineTo(35824,16264);
ctx.lineTo(35788,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,215,129,0.85)';
ctx.strokeStyle='rgb(171,97,47)';
ctx.moveTo(35884,16456);
ctx.lineTo(35884,16420);
ctx.lineTo(35920,16420);
ctx.lineTo(35920,16456);
ctx.lineTo(35884,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,109,39,0.85)';
ctx.strokeStyle='rgb(120,244,17)';
ctx.moveTo(35884,16360);
ctx.lineTo(35884,16324);
ctx.lineTo(35920,16324);
ctx.lineTo(35920,16360);
ctx.lineTo(35884,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,51,191,0.85)';
ctx.strokeStyle='rgb(87,194,187)';
ctx.moveTo(35884,16264);
ctx.lineTo(35884,16228);
ctx.lineTo(35920,16228);
ctx.lineTo(35920,16264);
ctx.lineTo(35884,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,108,9,0.85)';
ctx.strokeStyle='rgb(79,114,30)';
ctx.moveTo(35980,16456);
ctx.lineTo(35980,16420);
ctx.lineTo(36016,16420);
ctx.lineTo(36016,16456);
ctx.lineTo(35980,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,91,137,0.85)';
ctx.strokeStyle='rgb(36,199,209)';
ctx.moveTo(35980,16360);
ctx.lineTo(35980,16324);
ctx.lineTo(36016,16324);
ctx.lineTo(36016,16360);
ctx.lineTo(35980,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,81,29,0.85)';
ctx.strokeStyle='rgb(109,140,136)';
ctx.moveTo(35980,16264);
ctx.lineTo(35980,16228);
ctx.lineTo(36016,16228);
ctx.lineTo(36016,16264);
ctx.lineTo(35980,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,59,167,0.85)';
ctx.strokeStyle='rgb(179,111,243)';
ctx.moveTo(36076,16456);
ctx.lineTo(36076,16420);
ctx.lineTo(36112,16420);
ctx.lineTo(36112,16456);
ctx.lineTo(36076,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,248,21,0.85)';
ctx.strokeStyle='rgb(97,226,14)';
ctx.moveTo(36076,16360);
ctx.lineTo(36076,16324);
ctx.lineTo(36112,16324);
ctx.lineTo(36112,16360);
ctx.lineTo(36076,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,215,99,0.85)';
ctx.strokeStyle='rgb(246,129,68)';
ctx.moveTo(36076,16264);
ctx.lineTo(36076,16228);
ctx.lineTo(36112,16228);
ctx.lineTo(36112,16264);
ctx.lineTo(36076,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,201,83,0.85)';
ctx.strokeStyle='rgb(126,148,2)';
ctx.moveTo(36172,16456);
ctx.lineTo(36172,16420);
ctx.lineTo(36208,16420);
ctx.lineTo(36208,16456);
ctx.lineTo(36172,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,119,169,0.85)';
ctx.strokeStyle='rgb(195,2,117)';
ctx.moveTo(36172,16360);
ctx.lineTo(36172,16324);
ctx.lineTo(36208,16324);
ctx.lineTo(36208,16360);
ctx.lineTo(36172,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,199,167,0.85)';
ctx.strokeStyle='rgb(89,208,8)';
ctx.moveTo(36172,16264);
ctx.lineTo(36172,16228);
ctx.lineTo(36208,16228);
ctx.lineTo(36208,16264);
ctx.lineTo(36172,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,10,118,0.85)';
ctx.strokeStyle='rgb(24,187,27)';
ctx.moveTo(36268,16456);
ctx.lineTo(36268,16420);
ctx.lineTo(36304,16420);
ctx.lineTo(36304,16456);
ctx.lineTo(36268,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,153,160,0.85)';
ctx.strokeStyle='rgb(205,5,5)';
ctx.moveTo(36268,16360);
ctx.lineTo(36268,16324);
ctx.lineTo(36304,16324);
ctx.lineTo(36304,16360);
ctx.lineTo(36268,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,193,68,0.85)';
ctx.strokeStyle='rgb(248,178,3)';
ctx.moveTo(36268,16264);
ctx.lineTo(36268,16228);
ctx.lineTo(36304,16228);
ctx.lineTo(36304,16264);
ctx.lineTo(36268,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,229,230,0.85)';
ctx.strokeStyle='rgb(217,208,249)';
ctx.moveTo(36364,16456);
ctx.lineTo(36364,16420);
ctx.lineTo(36400,16420);
ctx.lineTo(36400,16456);
ctx.lineTo(36364,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,63,120,0.85)';
ctx.strokeStyle='rgb(252,68,94)';
ctx.moveTo(36364,16360);
ctx.lineTo(36364,16324);
ctx.lineTo(36400,16324);
ctx.lineTo(36400,16360);
ctx.lineTo(36364,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,239,80,0.85)';
ctx.strokeStyle='rgb(188,77,221)';
ctx.moveTo(36364,16264);
ctx.lineTo(36364,16228);
ctx.lineTo(36400,16228);
ctx.lineTo(36400,16264);
ctx.lineTo(36364,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,180,44,0.85)';
ctx.strokeStyle='rgb(250,85,235)';
ctx.moveTo(36460,16456);
ctx.lineTo(36460,16420);
ctx.lineTo(36496,16420);
ctx.lineTo(36496,16456);
ctx.lineTo(36460,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,24,242,0.85)';
ctx.strokeStyle='rgb(37,247,209)';
ctx.moveTo(36460,16360);
ctx.lineTo(36460,16324);
ctx.lineTo(36496,16324);
ctx.lineTo(36496,16360);
ctx.lineTo(36460,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,27,122,0.85)';
ctx.strokeStyle='rgb(23,80,45)';
ctx.moveTo(36460,16264);
ctx.lineTo(36460,16228);
ctx.lineTo(36496,16228);
ctx.lineTo(36496,16264);
ctx.lineTo(36460,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,7,41,0.85)';
ctx.strokeStyle='rgb(193,152,22)';
ctx.moveTo(35500,13432);
ctx.lineTo(35500,13396);
ctx.lineTo(35536,13396);
ctx.lineTo(35536,13432);
ctx.lineTo(35500,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,177,14,0.85)';
ctx.strokeStyle='rgb(164,251,113)';
ctx.moveTo(35500,13336);
ctx.lineTo(35500,13300);
ctx.lineTo(35536,13300);
ctx.lineTo(35536,13336);
ctx.lineTo(35500,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,149,33,0.85)';
ctx.strokeStyle='rgb(247,154,98)';
ctx.moveTo(35500,13240);
ctx.lineTo(35500,13204);
ctx.lineTo(35536,13204);
ctx.lineTo(35536,13240);
ctx.lineTo(35500,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,221,104,0.85)';
ctx.strokeStyle='rgb(242,246,143)';
ctx.moveTo(35596,13432);
ctx.lineTo(35596,13396);
ctx.lineTo(35632,13396);
ctx.lineTo(35632,13432);
ctx.lineTo(35596,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,216,119,0.85)';
ctx.strokeStyle='rgb(91,161,222)';
ctx.moveTo(35596,13336);
ctx.lineTo(35596,13300);
ctx.lineTo(35632,13300);
ctx.lineTo(35632,13336);
ctx.lineTo(35596,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,86,176,0.85)';
ctx.strokeStyle='rgb(178,214,51)';
ctx.moveTo(35596,13240);
ctx.lineTo(35596,13204);
ctx.lineTo(35632,13204);
ctx.lineTo(35632,13240);
ctx.lineTo(35596,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,6,120,0.85)';
ctx.strokeStyle='rgb(127,82,82)';
ctx.moveTo(35692,13432);
ctx.lineTo(35692,13396);
ctx.lineTo(35728,13396);
ctx.lineTo(35728,13432);
ctx.lineTo(35692,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,119,46,0.85)';
ctx.strokeStyle='rgb(4,166,219)';
ctx.moveTo(35692,13336);
ctx.lineTo(35692,13300);
ctx.lineTo(35728,13300);
ctx.lineTo(35728,13336);
ctx.lineTo(35692,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,149,59,0.85)';
ctx.strokeStyle='rgb(197,128,3)';
ctx.moveTo(35692,13240);
ctx.lineTo(35692,13204);
ctx.lineTo(35728,13204);
ctx.lineTo(35728,13240);
ctx.lineTo(35692,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,72,93,0.85)';
ctx.strokeStyle='rgb(106,58,128)';
ctx.moveTo(35788,13432);
ctx.lineTo(35788,13396);
ctx.lineTo(35824,13396);
ctx.lineTo(35824,13432);
ctx.lineTo(35788,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,180,155,0.85)';
ctx.strokeStyle='rgb(111,108,188)';
ctx.moveTo(35788,13336);
ctx.lineTo(35788,13300);
ctx.lineTo(35824,13300);
ctx.lineTo(35824,13336);
ctx.lineTo(35788,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,226,211,0.85)';
ctx.strokeStyle='rgb(32,235,159)';
ctx.moveTo(35788,13240);
ctx.lineTo(35788,13204);
ctx.lineTo(35824,13204);
ctx.lineTo(35824,13240);
ctx.lineTo(35788,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,238,147,0.85)';
ctx.strokeStyle='rgb(43,12,53)';
ctx.moveTo(35884,13432);
ctx.lineTo(35884,13396);
ctx.lineTo(35920,13396);
ctx.lineTo(35920,13432);
ctx.lineTo(35884,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,210,3,0.85)';
ctx.strokeStyle='rgb(30,108,208)';
ctx.moveTo(35884,13336);
ctx.lineTo(35884,13300);
ctx.lineTo(35920,13300);
ctx.lineTo(35920,13336);
ctx.lineTo(35884,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,137,145,0.85)';
ctx.strokeStyle='rgb(21,218,13)';
ctx.moveTo(35884,13240);
ctx.lineTo(35884,13204);
ctx.lineTo(35920,13204);
ctx.lineTo(35920,13240);
ctx.lineTo(35884,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,30,221,0.85)';
ctx.strokeStyle='rgb(10,152,6)';
ctx.moveTo(35980,13432);
ctx.lineTo(35980,13396);
ctx.lineTo(36016,13396);
ctx.lineTo(36016,13432);
ctx.lineTo(35980,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,212,225,0.85)';
ctx.strokeStyle='rgb(87,65,222)';
ctx.moveTo(35980,13336);
ctx.lineTo(35980,13300);
ctx.lineTo(36016,13300);
ctx.lineTo(36016,13336);
ctx.lineTo(35980,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,101,203,0.85)';
ctx.strokeStyle='rgb(130,210,180)';
ctx.moveTo(35980,13240);
ctx.lineTo(35980,13204);
ctx.lineTo(36016,13204);
ctx.lineTo(36016,13240);
ctx.lineTo(35980,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,170,151,0.85)';
ctx.strokeStyle='rgb(39,210,216)';
ctx.moveTo(36076,13432);
ctx.lineTo(36076,13396);
ctx.lineTo(36112,13396);
ctx.lineTo(36112,13432);
ctx.lineTo(36076,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,67,94,0.85)';
ctx.strokeStyle='rgb(250,68,210)';
ctx.moveTo(36076,13336);
ctx.lineTo(36076,13300);
ctx.lineTo(36112,13300);
ctx.lineTo(36112,13336);
ctx.lineTo(36076,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,104,74,0.85)';
ctx.strokeStyle='rgb(192,214,38)';
ctx.moveTo(36076,13240);
ctx.lineTo(36076,13204);
ctx.lineTo(36112,13204);
ctx.lineTo(36112,13240);
ctx.lineTo(36076,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,211,79,0.85)';
ctx.strokeStyle='rgb(226,241,115)';
ctx.moveTo(36172,13432);
ctx.lineTo(36172,13396);
ctx.lineTo(36208,13396);
ctx.lineTo(36208,13432);
ctx.lineTo(36172,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,92,3,0.85)';
ctx.strokeStyle='rgb(239,170,108)';
ctx.moveTo(36172,13336);
ctx.lineTo(36172,13300);
ctx.lineTo(36208,13300);
ctx.lineTo(36208,13336);
ctx.lineTo(36172,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,245,219,0.85)';
ctx.strokeStyle='rgb(122,111,159)';
ctx.moveTo(36172,13240);
ctx.lineTo(36172,13204);
ctx.lineTo(36208,13204);
ctx.lineTo(36208,13240);
ctx.lineTo(36172,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,91,111,0.85)';
ctx.strokeStyle='rgb(150,138,208)';
ctx.moveTo(36268,13432);
ctx.lineTo(36268,13396);
ctx.lineTo(36304,13396);
ctx.lineTo(36304,13432);
ctx.lineTo(36268,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,57,30,0.85)';
ctx.strokeStyle='rgb(156,223,69)';
ctx.moveTo(36268,13336);
ctx.lineTo(36268,13300);
ctx.lineTo(36304,13300);
ctx.lineTo(36304,13336);
ctx.lineTo(36268,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,112,195,0.85)';
ctx.strokeStyle='rgb(131,82,111)';
ctx.moveTo(36268,13240);
ctx.lineTo(36268,13204);
ctx.lineTo(36304,13204);
ctx.lineTo(36304,13240);
ctx.lineTo(36268,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,182,56,0.85)';
ctx.strokeStyle='rgb(168,220,207)';
ctx.moveTo(36364,13432);
ctx.lineTo(36364,13396);
ctx.lineTo(36400,13396);
ctx.lineTo(36400,13432);
ctx.lineTo(36364,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,227,41,0.85)';
ctx.strokeStyle='rgb(1,146,141)';
ctx.moveTo(36364,13336);
ctx.lineTo(36364,13300);
ctx.lineTo(36400,13300);
ctx.lineTo(36400,13336);
ctx.lineTo(36364,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,188,141,0.85)';
ctx.strokeStyle='rgb(82,143,117)';
ctx.moveTo(36364,13240);
ctx.lineTo(36364,13204);
ctx.lineTo(36400,13204);
ctx.lineTo(36400,13240);
ctx.lineTo(36364,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,129,143,0.85)';
ctx.strokeStyle='rgb(250,8,99)';
ctx.moveTo(36460,13432);
ctx.lineTo(36460,13396);
ctx.lineTo(36496,13396);
ctx.lineTo(36496,13432);
ctx.lineTo(36460,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,23,168,0.85)';
ctx.strokeStyle='rgb(46,138,134)';
ctx.moveTo(36460,13336);
ctx.lineTo(36460,13300);
ctx.lineTo(36496,13300);
ctx.lineTo(36496,13336);
ctx.lineTo(36460,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,79,201,0.85)';
ctx.strokeStyle='rgb(67,57,6)';
ctx.moveTo(36460,13240);
ctx.lineTo(36460,13204);
ctx.lineTo(36496,13204);
ctx.lineTo(36496,13240);
ctx.lineTo(36460,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,62,130,0.85)';
ctx.strokeStyle='rgb(210,76,73)';
ctx.moveTo(34204,14944);
ctx.lineTo(34204,14908);
ctx.lineTo(34240,14908);
ctx.lineTo(34240,14944);
ctx.lineTo(34204,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,182,114,0.85)';
ctx.strokeStyle='rgb(249,235,46)';
ctx.moveTo(2992,8704);
ctx.lineTo(2992,8668);
ctx.lineTo(3028,8668);
ctx.lineTo(3028,8704);
ctx.lineTo(2992,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,146,251,0.85)';
ctx.strokeStyle='rgb(114,199,150)';
ctx.moveTo(3088,8704);
ctx.lineTo(3088,8668);
ctx.lineTo(3124,8668);
ctx.lineTo(3124,8704);
ctx.lineTo(3088,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,123,137,0.85)';
ctx.strokeStyle='rgb(126,233,151)';
ctx.moveTo(3184,8704);
ctx.lineTo(3184,8668);
ctx.lineTo(3220,8668);
ctx.lineTo(3220,8704);
ctx.lineTo(3184,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,154,62,0.85)';
ctx.strokeStyle='rgb(5,81,144)';
ctx.moveTo(3280,8704);
ctx.lineTo(3280,8668);
ctx.lineTo(3316,8668);
ctx.lineTo(3316,8704);
ctx.lineTo(3280,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,211,241,0.85)';
ctx.strokeStyle='rgb(177,183,86)';
ctx.moveTo(3376,8704);
ctx.lineTo(3376,8668);
ctx.lineTo(3412,8668);
ctx.lineTo(3412,8704);
ctx.lineTo(3376,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,39,37,0.85)';
ctx.strokeStyle='rgb(239,114,111)';
ctx.moveTo(3472,8704);
ctx.lineTo(3472,8668);
ctx.lineTo(3508,8668);
ctx.lineTo(3508,8704);
ctx.lineTo(3472,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,179,196,0.85)';
ctx.strokeStyle='rgb(193,81,196)';
ctx.moveTo(3568,8704);
ctx.lineTo(3568,8668);
ctx.lineTo(3604,8668);
ctx.lineTo(3604,8704);
ctx.lineTo(3568,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,38,115,0.85)';
ctx.strokeStyle='rgb(208,246,94)';
ctx.moveTo(3664,8704);
ctx.lineTo(3664,8668);
ctx.lineTo(3700,8668);
ctx.lineTo(3700,8704);
ctx.lineTo(3664,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,45,110,0.85)';
ctx.strokeStyle='rgb(242,115,153)';
ctx.moveTo(3760,8704);
ctx.lineTo(3760,8668);
ctx.lineTo(3796,8668);
ctx.lineTo(3796,8704);
ctx.lineTo(3760,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,247,52,0.85)';
ctx.strokeStyle='rgb(105,56,2)';
ctx.moveTo(3856,8704);
ctx.lineTo(3856,8668);
ctx.lineTo(3892,8668);
ctx.lineTo(3892,8704);
ctx.lineTo(3856,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,154,192,0.85)';
ctx.strokeStyle='rgb(70,227,8)';
ctx.moveTo(3952,8704);
ctx.lineTo(3952,8668);
ctx.lineTo(3988,8668);
ctx.lineTo(3988,8704);
ctx.lineTo(3952,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,175,4,0.85)';
ctx.strokeStyle='rgb(143,16,227)';
ctx.moveTo(14182,8704);
ctx.lineTo(14182,8668);
ctx.lineTo(14218,8668);
ctx.lineTo(14218,8704);
ctx.lineTo(14182,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,195,3,0.85)';
ctx.strokeStyle='rgb(139,242,58)';
ctx.moveTo(14278,8704);
ctx.lineTo(14278,8668);
ctx.lineTo(14314,8668);
ctx.lineTo(14314,8704);
ctx.lineTo(14278,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,204,226,0.85)';
ctx.strokeStyle='rgb(71,32,13)';
ctx.moveTo(14374,8704);
ctx.lineTo(14374,8668);
ctx.lineTo(14410,8668);
ctx.lineTo(14410,8704);
ctx.lineTo(14374,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,184,12,0.85)';
ctx.strokeStyle='rgb(225,253,100)';
ctx.moveTo(14470,8704);
ctx.lineTo(14470,8668);
ctx.lineTo(14506,8668);
ctx.lineTo(14506,8704);
ctx.lineTo(14470,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,92,154,0.85)';
ctx.strokeStyle='rgb(50,249,3)';
ctx.moveTo(14566,8704);
ctx.lineTo(14566,8668);
ctx.lineTo(14602,8668);
ctx.lineTo(14602,8704);
ctx.lineTo(14566,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,38,21,0.85)';
ctx.strokeStyle='rgb(40,86,248)';
ctx.moveTo(14662,8704);
ctx.lineTo(14662,8668);
ctx.lineTo(14698,8668);
ctx.lineTo(14698,8704);
ctx.lineTo(14662,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,190,93,0.85)';
ctx.strokeStyle='rgb(178,180,175)';
ctx.moveTo(14758,8704);
ctx.lineTo(14758,8668);
ctx.lineTo(14794,8668);
ctx.lineTo(14794,8704);
ctx.lineTo(14758,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,44,41,0.85)';
ctx.strokeStyle='rgb(207,90,97)';
ctx.moveTo(14854,8704);
ctx.lineTo(14854,8668);
ctx.lineTo(14890,8668);
ctx.lineTo(14890,8704);
ctx.lineTo(14854,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,20,186,0.85)';
ctx.strokeStyle='rgb(92,24,138)';
ctx.moveTo(14950,8704);
ctx.lineTo(14950,8668);
ctx.lineTo(14986,8668);
ctx.lineTo(14986,8704);
ctx.lineTo(14950,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,190,254,0.85)';
ctx.strokeStyle='rgb(71,165,67)';
ctx.moveTo(15046,8704);
ctx.lineTo(15046,8668);
ctx.lineTo(15082,8668);
ctx.lineTo(15082,8704);
ctx.lineTo(15046,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,158,69,0.85)';
ctx.strokeStyle='rgb(112,92,23)';
ctx.moveTo(15142,8704);
ctx.lineTo(15142,8668);
ctx.lineTo(15178,8668);
ctx.lineTo(15178,8704);
ctx.lineTo(15142,8704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,200,185,0.85)';
ctx.strokeStyle='rgb(209,89,193)';
ctx.moveTo(15862,808);
ctx.lineTo(15862,772);
ctx.lineTo(15898,772);
ctx.lineTo(15898,808);
ctx.lineTo(15862,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,17,173,0.85)';
ctx.strokeStyle='rgb(237,148,223)';
ctx.moveTo(15958,1288);
ctx.lineTo(15958,1252);
ctx.lineTo(15994,1252);
ctx.lineTo(15994,1288);
ctx.lineTo(15958,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,32,72,0.85)';
ctx.strokeStyle='rgb(252,244,63)';
ctx.moveTo(15958,1192);
ctx.lineTo(15958,1156);
ctx.lineTo(15994,1156);
ctx.lineTo(15994,1192);
ctx.lineTo(15958,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,233,222,0.85)';
ctx.strokeStyle='rgb(248,162,49)';
ctx.moveTo(15958,1096);
ctx.lineTo(15958,1060);
ctx.lineTo(15994,1060);
ctx.lineTo(15994,1096);
ctx.lineTo(15958,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,170,144,0.85)';
ctx.strokeStyle='rgb(175,94,0)';
ctx.moveTo(15958,1000);
ctx.lineTo(15958,964);
ctx.lineTo(15994,964);
ctx.lineTo(15994,1000);
ctx.lineTo(15958,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,207,117,0.85)';
ctx.strokeStyle='rgb(221,79,92)';
ctx.moveTo(15958,904);
ctx.lineTo(15958,868);
ctx.lineTo(15994,868);
ctx.lineTo(15994,904);
ctx.lineTo(15958,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,88,253,0.85)';
ctx.strokeStyle='rgb(101,87,105)';
ctx.moveTo(15958,808);
ctx.lineTo(15958,772);
ctx.lineTo(15994,772);
ctx.lineTo(15994,808);
ctx.lineTo(15958,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,39,55,0.85)';
ctx.strokeStyle='rgb(59,186,77)';
ctx.moveTo(15958,712);
ctx.lineTo(15958,676);
ctx.lineTo(15994,676);
ctx.lineTo(15994,712);
ctx.lineTo(15958,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,228,202,0.85)';
ctx.strokeStyle='rgb(182,200,160)';
ctx.moveTo(15958,616);
ctx.lineTo(15958,580);
ctx.lineTo(15994,580);
ctx.lineTo(15994,616);
ctx.lineTo(15958,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,67,59,0.85)';
ctx.strokeStyle='rgb(218,14,232)';
ctx.moveTo(15958,520);
ctx.lineTo(15958,484);
ctx.lineTo(15994,484);
ctx.lineTo(15994,520);
ctx.lineTo(15958,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,76,230,0.85)';
ctx.strokeStyle='rgb(46,146,233)';
ctx.moveTo(15958,424);
ctx.lineTo(15958,388);
ctx.lineTo(15994,388);
ctx.lineTo(15994,424);
ctx.lineTo(15958,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,99,122,0.85)';
ctx.strokeStyle='rgb(39,232,215)';
ctx.moveTo(15958,328);
ctx.lineTo(15958,292);
ctx.lineTo(15994,292);
ctx.lineTo(15994,328);
ctx.lineTo(15958,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,191,60,0.85)';
ctx.strokeStyle='rgb(114,4,84)';
ctx.moveTo(16054,808);
ctx.lineTo(16054,772);
ctx.lineTo(16090,772);
ctx.lineTo(16090,808);
ctx.lineTo(16054,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,83,197,0.85)';
ctx.strokeStyle='rgb(123,239,212)';
ctx.moveTo(16150,808);
ctx.lineTo(16150,772);
ctx.lineTo(16186,772);
ctx.lineTo(16186,808);
ctx.lineTo(16150,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,137,100,0.85)';
ctx.strokeStyle='rgb(254,144,55)';
ctx.moveTo(16246,808);
ctx.lineTo(16246,772);
ctx.lineTo(16282,772);
ctx.lineTo(16282,808);
ctx.lineTo(16246,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,16,190,0.85)';
ctx.strokeStyle='rgb(66,169,55)';
ctx.moveTo(16342,808);
ctx.lineTo(16342,772);
ctx.lineTo(16378,772);
ctx.lineTo(16378,808);
ctx.lineTo(16342,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,108,137,0.85)';
ctx.strokeStyle='rgb(169,98,175)';
ctx.moveTo(16438,808);
ctx.lineTo(16438,772);
ctx.lineTo(16474,772);
ctx.lineTo(16474,808);
ctx.lineTo(16438,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,12,133,0.85)';
ctx.strokeStyle='rgb(151,218,88)';
ctx.moveTo(16054,328);
ctx.lineTo(16054,292);
ctx.lineTo(16090,292);
ctx.lineTo(16090,328);
ctx.lineTo(16054,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,142,185,0.85)';
ctx.strokeStyle='rgb(0,143,181)';
ctx.moveTo(16054,712);
ctx.lineTo(16054,676);
ctx.lineTo(16090,676);
ctx.lineTo(16090,712);
ctx.lineTo(16054,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,203,192,0.85)';
ctx.strokeStyle='rgb(182,131,206)';
ctx.moveTo(16150,712);
ctx.lineTo(16150,676);
ctx.lineTo(16186,676);
ctx.lineTo(16186,712);
ctx.lineTo(16150,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,76,74,0.85)';
ctx.strokeStyle='rgb(78,186,240)';
ctx.moveTo(16150,616);
ctx.lineTo(16150,580);
ctx.lineTo(16186,580);
ctx.lineTo(16186,616);
ctx.lineTo(16150,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,218,76,0.85)';
ctx.strokeStyle='rgb(115,128,51)';
ctx.moveTo(16150,520);
ctx.lineTo(16150,484);
ctx.lineTo(16186,484);
ctx.lineTo(16186,520);
ctx.lineTo(16150,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,56,188,0.85)';
ctx.strokeStyle='rgb(171,192,89)';
ctx.moveTo(16150,424);
ctx.lineTo(16150,388);
ctx.lineTo(16186,388);
ctx.lineTo(16186,424);
ctx.lineTo(16150,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,252,110,0.85)';
ctx.strokeStyle='rgb(141,246,84)';
ctx.moveTo(16150,328);
ctx.lineTo(16150,292);
ctx.lineTo(16186,292);
ctx.lineTo(16186,328);
ctx.lineTo(16150,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,64,34,0.85)';
ctx.strokeStyle='rgb(2,248,119)';
ctx.moveTo(16054,616);
ctx.lineTo(16054,580);
ctx.lineTo(16090,580);
ctx.lineTo(16090,616);
ctx.lineTo(16054,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,253,190,0.85)';
ctx.strokeStyle='rgb(5,184,9)';
ctx.moveTo(16246,712);
ctx.lineTo(16246,676);
ctx.lineTo(16282,676);
ctx.lineTo(16282,712);
ctx.lineTo(16246,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,247,182,0.85)';
ctx.strokeStyle='rgb(60,2,25)';
ctx.moveTo(16246,616);
ctx.lineTo(16246,580);
ctx.lineTo(16282,580);
ctx.lineTo(16282,616);
ctx.lineTo(16246,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,190,28,0.85)';
ctx.strokeStyle='rgb(73,203,247)';
ctx.moveTo(16246,520);
ctx.lineTo(16246,484);
ctx.lineTo(16282,484);
ctx.lineTo(16282,520);
ctx.lineTo(16246,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,101,1,0.85)';
ctx.strokeStyle='rgb(105,84,99)';
ctx.moveTo(16246,424);
ctx.lineTo(16246,388);
ctx.lineTo(16282,388);
ctx.lineTo(16282,424);
ctx.lineTo(16246,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,233,99,0.85)';
ctx.strokeStyle='rgb(247,209,161)';
ctx.moveTo(16246,328);
ctx.lineTo(16246,292);
ctx.lineTo(16282,292);
ctx.lineTo(16282,328);
ctx.lineTo(16246,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,37,29,0.85)';
ctx.strokeStyle='rgb(169,201,158)';
ctx.moveTo(16054,520);
ctx.lineTo(16054,484);
ctx.lineTo(16090,484);
ctx.lineTo(16090,520);
ctx.lineTo(16054,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,27,24,0.85)';
ctx.strokeStyle='rgb(202,118,10)';
ctx.moveTo(16342,712);
ctx.lineTo(16342,676);
ctx.lineTo(16378,676);
ctx.lineTo(16378,712);
ctx.lineTo(16342,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,143,179,0.85)';
ctx.strokeStyle='rgb(82,140,57)';
ctx.moveTo(16342,616);
ctx.lineTo(16342,580);
ctx.lineTo(16378,580);
ctx.lineTo(16378,616);
ctx.lineTo(16342,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,228,141,0.85)';
ctx.strokeStyle='rgb(160,53,42)';
ctx.moveTo(16342,520);
ctx.lineTo(16342,484);
ctx.lineTo(16378,484);
ctx.lineTo(16378,520);
ctx.lineTo(16342,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,87,236,0.85)';
ctx.strokeStyle='rgb(30,43,137)';
ctx.moveTo(16342,424);
ctx.lineTo(16342,388);
ctx.lineTo(16378,388);
ctx.lineTo(16378,424);
ctx.lineTo(16342,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,196,55,0.85)';
ctx.strokeStyle='rgb(139,186,84)';
ctx.moveTo(16342,328);
ctx.lineTo(16342,292);
ctx.lineTo(16378,292);
ctx.lineTo(16378,328);
ctx.lineTo(16342,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,98,252,0.85)';
ctx.strokeStyle='rgb(76,244,23)';
ctx.moveTo(16054,424);
ctx.lineTo(16054,388);
ctx.lineTo(16090,388);
ctx.lineTo(16090,424);
ctx.lineTo(16054,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,59,184,0.85)';
ctx.strokeStyle='rgb(148,198,223)';
ctx.moveTo(16438,712);
ctx.lineTo(16438,676);
ctx.lineTo(16474,676);
ctx.lineTo(16474,712);
ctx.lineTo(16438,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,21,39,0.85)';
ctx.strokeStyle='rgb(253,246,8)';
ctx.moveTo(16438,616);
ctx.lineTo(16438,580);
ctx.lineTo(16474,580);
ctx.lineTo(16474,616);
ctx.lineTo(16438,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,245,160,0.85)';
ctx.strokeStyle='rgb(17,246,236)';
ctx.moveTo(16438,520);
ctx.lineTo(16438,484);
ctx.lineTo(16474,484);
ctx.lineTo(16474,520);
ctx.lineTo(16438,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,199,101,0.85)';
ctx.strokeStyle='rgb(24,149,201)';
ctx.moveTo(16438,424);
ctx.lineTo(16438,388);
ctx.lineTo(16474,388);
ctx.lineTo(16474,424);
ctx.lineTo(16438,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,180,175,0.85)';
ctx.strokeStyle='rgb(214,1,187)';
ctx.moveTo(16438,328);
ctx.lineTo(16438,292);
ctx.lineTo(16474,292);
ctx.lineTo(16474,328);
ctx.lineTo(16438,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,119,236,0.85)';
ctx.strokeStyle='rgb(224,248,234)';
ctx.moveTo(15862,712);
ctx.lineTo(15862,676);
ctx.lineTo(15898,676);
ctx.lineTo(15898,712);
ctx.lineTo(15862,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,195,186,0.85)';
ctx.strokeStyle='rgb(163,236,108)';
ctx.moveTo(15862,616);
ctx.lineTo(15862,580);
ctx.lineTo(15898,580);
ctx.lineTo(15898,616);
ctx.lineTo(15862,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,110,137,0.85)';
ctx.strokeStyle='rgb(66,106,94)';
ctx.moveTo(15862,520);
ctx.lineTo(15862,484);
ctx.lineTo(15898,484);
ctx.lineTo(15898,520);
ctx.lineTo(15862,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,189,42,0.85)';
ctx.strokeStyle='rgb(7,12,210)';
ctx.moveTo(15862,424);
ctx.lineTo(15862,388);
ctx.lineTo(15898,388);
ctx.lineTo(15898,424);
ctx.lineTo(15862,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,35,119,0.85)';
ctx.strokeStyle='rgb(212,81,141)';
ctx.moveTo(15862,328);
ctx.lineTo(15862,292);
ctx.lineTo(15898,292);
ctx.lineTo(15898,328);
ctx.lineTo(15862,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,66,204,0.85)';
ctx.strokeStyle='rgb(13,102,72)';
ctx.moveTo(15862,1096);
ctx.lineTo(15862,1060);
ctx.lineTo(15898,1060);
ctx.lineTo(15898,1096);
ctx.lineTo(15862,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,107,196,0.85)';
ctx.strokeStyle='rgb(243,140,91)';
ctx.moveTo(15862,1000);
ctx.lineTo(15862,964);
ctx.lineTo(15898,964);
ctx.lineTo(15898,1000);
ctx.lineTo(15862,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,96,148,0.85)';
ctx.strokeStyle='rgb(186,85,243)';
ctx.moveTo(15862,904);
ctx.lineTo(15862,868);
ctx.lineTo(15898,868);
ctx.lineTo(15898,904);
ctx.lineTo(15862,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,83,213,0.85)';
ctx.strokeStyle='rgb(161,152,157)';
ctx.moveTo(15862,1288);
ctx.lineTo(15862,1252);
ctx.lineTo(15898,1252);
ctx.lineTo(15898,1288);
ctx.lineTo(15862,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,4,49,0.85)';
ctx.strokeStyle='rgb(159,119,172)';
ctx.moveTo(15862,1192);
ctx.lineTo(15862,1156);
ctx.lineTo(15898,1156);
ctx.lineTo(15898,1192);
ctx.lineTo(15862,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,52,54,0.85)';
ctx.strokeStyle='rgb(6,242,114)';
ctx.moveTo(16150,904);
ctx.lineTo(16150,868);
ctx.lineTo(16186,868);
ctx.lineTo(16186,904);
ctx.lineTo(16150,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,170,141,0.85)';
ctx.strokeStyle='rgb(207,95,156)';
ctx.moveTo(16054,1192);
ctx.lineTo(16054,1156);
ctx.lineTo(16090,1156);
ctx.lineTo(16090,1192);
ctx.lineTo(16054,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,37,135,0.85)';
ctx.strokeStyle='rgb(177,169,148)';
ctx.moveTo(16054,1096);
ctx.lineTo(16054,1060);
ctx.lineTo(16090,1060);
ctx.lineTo(16090,1096);
ctx.lineTo(16054,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,113,150,0.85)';
ctx.strokeStyle='rgb(77,57,134)';
ctx.moveTo(16342,1288);
ctx.lineTo(16342,1252);
ctx.lineTo(16378,1252);
ctx.lineTo(16378,1288);
ctx.lineTo(16342,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,178,199,0.85)';
ctx.strokeStyle='rgb(159,212,37)';
ctx.moveTo(16342,1192);
ctx.lineTo(16342,1156);
ctx.lineTo(16378,1156);
ctx.lineTo(16378,1192);
ctx.lineTo(16342,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,110,80,0.85)';
ctx.strokeStyle='rgb(129,10,77)';
ctx.moveTo(16342,1096);
ctx.lineTo(16342,1060);
ctx.lineTo(16378,1060);
ctx.lineTo(16378,1096);
ctx.lineTo(16342,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,251,162,0.85)';
ctx.strokeStyle='rgb(91,94,104)';
ctx.moveTo(16342,1000);
ctx.lineTo(16342,964);
ctx.lineTo(16378,964);
ctx.lineTo(16378,1000);
ctx.lineTo(16342,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,89,13,0.85)';
ctx.strokeStyle='rgb(29,153,188)';
ctx.moveTo(16342,904);
ctx.lineTo(16342,868);
ctx.lineTo(16378,868);
ctx.lineTo(16378,904);
ctx.lineTo(16342,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,171,100,0.85)';
ctx.strokeStyle='rgb(223,220,202)';
ctx.moveTo(16054,1000);
ctx.lineTo(16054,964);
ctx.lineTo(16090,964);
ctx.lineTo(16090,1000);
ctx.lineTo(16054,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,161,218,0.85)';
ctx.strokeStyle='rgb(165,174,191)';
ctx.moveTo(16054,904);
ctx.lineTo(16054,868);
ctx.lineTo(16090,868);
ctx.lineTo(16090,904);
ctx.lineTo(16054,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,64,244,0.85)';
ctx.strokeStyle='rgb(92,218,248)';
ctx.moveTo(16054,1288);
ctx.lineTo(16054,1252);
ctx.lineTo(16090,1252);
ctx.lineTo(16090,1288);
ctx.lineTo(16054,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,118,235,0.85)';
ctx.strokeStyle='rgb(218,169,125)';
ctx.moveTo(16150,1288);
ctx.lineTo(16150,1252);
ctx.lineTo(16186,1252);
ctx.lineTo(16186,1288);
ctx.lineTo(16150,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,150,243,0.85)';
ctx.strokeStyle='rgb(17,109,214)';
ctx.moveTo(16246,1288);
ctx.lineTo(16246,1252);
ctx.lineTo(16282,1252);
ctx.lineTo(16282,1288);
ctx.lineTo(16246,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,166,22,0.85)';
ctx.strokeStyle='rgb(170,194,223)';
ctx.moveTo(16246,1192);
ctx.lineTo(16246,1156);
ctx.lineTo(16282,1156);
ctx.lineTo(16282,1192);
ctx.lineTo(16246,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,138,30,0.85)';
ctx.strokeStyle='rgb(215,220,75)';
ctx.moveTo(16438,1288);
ctx.lineTo(16438,1252);
ctx.lineTo(16474,1252);
ctx.lineTo(16474,1288);
ctx.lineTo(16438,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,93,130,0.85)';
ctx.strokeStyle='rgb(226,45,78)';
ctx.moveTo(16438,1192);
ctx.lineTo(16438,1156);
ctx.lineTo(16474,1156);
ctx.lineTo(16474,1192);
ctx.lineTo(16438,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,37,82,0.85)';
ctx.strokeStyle='rgb(69,175,211)';
ctx.moveTo(16438,1096);
ctx.lineTo(16438,1060);
ctx.lineTo(16474,1060);
ctx.lineTo(16474,1096);
ctx.lineTo(16438,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,246,224,0.85)';
ctx.strokeStyle='rgb(136,135,224)';
ctx.moveTo(16438,1000);
ctx.lineTo(16438,964);
ctx.lineTo(16474,964);
ctx.lineTo(16474,1000);
ctx.lineTo(16438,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,187,225,0.85)';
ctx.strokeStyle='rgb(89,158,188)';
ctx.moveTo(16438,904);
ctx.lineTo(16438,868);
ctx.lineTo(16474,868);
ctx.lineTo(16474,904);
ctx.lineTo(16438,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,99,66,0.85)';
ctx.strokeStyle='rgb(157,29,89)';
ctx.moveTo(16246,1096);
ctx.lineTo(16246,1060);
ctx.lineTo(16282,1060);
ctx.lineTo(16282,1096);
ctx.lineTo(16246,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,219,55,0.85)';
ctx.strokeStyle='rgb(96,200,209)';
ctx.moveTo(16246,1000);
ctx.lineTo(16246,964);
ctx.lineTo(16282,964);
ctx.lineTo(16282,1000);
ctx.lineTo(16246,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,123,162,0.85)';
ctx.strokeStyle='rgb(141,253,62)';
ctx.moveTo(16246,904);
ctx.lineTo(16246,868);
ctx.lineTo(16282,868);
ctx.lineTo(16282,904);
ctx.lineTo(16246,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,119,92,0.85)';
ctx.strokeStyle='rgb(117,146,196)';
ctx.moveTo(16150,1192);
ctx.lineTo(16150,1156);
ctx.lineTo(16186,1156);
ctx.lineTo(16186,1192);
ctx.lineTo(16150,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,181,192,0.85)';
ctx.strokeStyle='rgb(168,228,69)';
ctx.moveTo(16150,1096);
ctx.lineTo(16150,1060);
ctx.lineTo(16186,1060);
ctx.lineTo(16186,1096);
ctx.lineTo(16150,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,152,152,0.85)';
ctx.strokeStyle='rgb(153,106,120)';
ctx.moveTo(16150,1000);
ctx.lineTo(16150,964);
ctx.lineTo(16186,964);
ctx.lineTo(16186,1000);
ctx.lineTo(16150,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,252,88,0.85)';
ctx.strokeStyle='rgb(211,248,201)';
ctx.moveTo(15574,1192);
ctx.lineTo(15574,1156);
ctx.lineTo(15610,1156);
ctx.lineTo(15610,1192);
ctx.lineTo(15574,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,157,67,0.85)';
ctx.strokeStyle='rgb(12,93,23)';
ctx.moveTo(15574,1096);
ctx.lineTo(15574,1060);
ctx.lineTo(15610,1060);
ctx.lineTo(15610,1096);
ctx.lineTo(15574,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,137,189,0.85)';
ctx.strokeStyle='rgb(75,106,239)';
ctx.moveTo(15574,1000);
ctx.lineTo(15574,964);
ctx.lineTo(15610,964);
ctx.lineTo(15610,1000);
ctx.lineTo(15574,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,138,155,0.85)';
ctx.strokeStyle='rgb(174,199,41)';
ctx.moveTo(15574,904);
ctx.lineTo(15574,868);
ctx.lineTo(15610,868);
ctx.lineTo(15610,904);
ctx.lineTo(15574,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,160,25,0.85)';
ctx.strokeStyle='rgb(122,196,56)';
ctx.moveTo(15478,1192);
ctx.lineTo(15478,1156);
ctx.lineTo(15514,1156);
ctx.lineTo(15514,1192);
ctx.lineTo(15478,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,100,81,0.85)';
ctx.strokeStyle='rgb(3,28,151)';
ctx.moveTo(15478,1096);
ctx.lineTo(15478,1060);
ctx.lineTo(15514,1060);
ctx.lineTo(15514,1096);
ctx.lineTo(15478,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,52,30,0.85)';
ctx.strokeStyle='rgb(225,133,142)';
ctx.moveTo(15766,1288);
ctx.lineTo(15766,1252);
ctx.lineTo(15802,1252);
ctx.lineTo(15802,1288);
ctx.lineTo(15766,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,54,100,0.85)';
ctx.strokeStyle='rgb(184,212,245)';
ctx.moveTo(15766,1192);
ctx.lineTo(15766,1156);
ctx.lineTo(15802,1156);
ctx.lineTo(15802,1192);
ctx.lineTo(15766,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,173,143,0.85)';
ctx.strokeStyle='rgb(91,22,208)';
ctx.moveTo(15766,1096);
ctx.lineTo(15766,1060);
ctx.lineTo(15802,1060);
ctx.lineTo(15802,1096);
ctx.lineTo(15766,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,55,27,0.85)';
ctx.strokeStyle='rgb(195,111,51)';
ctx.moveTo(15766,1000);
ctx.lineTo(15766,964);
ctx.lineTo(15802,964);
ctx.lineTo(15802,1000);
ctx.lineTo(15766,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,220,163,0.85)';
ctx.strokeStyle='rgb(44,88,23)';
ctx.moveTo(15766,904);
ctx.lineTo(15766,868);
ctx.lineTo(15802,868);
ctx.lineTo(15802,904);
ctx.lineTo(15766,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,205,12,0.85)';
ctx.strokeStyle='rgb(180,210,240)';
ctx.moveTo(15478,1000);
ctx.lineTo(15478,964);
ctx.lineTo(15514,964);
ctx.lineTo(15514,1000);
ctx.lineTo(15478,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,109,72,0.85)';
ctx.strokeStyle='rgb(193,122,151)';
ctx.moveTo(15478,904);
ctx.lineTo(15478,868);
ctx.lineTo(15514,868);
ctx.lineTo(15514,904);
ctx.lineTo(15478,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,174,246,0.85)';
ctx.strokeStyle='rgb(246,109,220)';
ctx.moveTo(15478,1288);
ctx.lineTo(15478,1252);
ctx.lineTo(15514,1252);
ctx.lineTo(15514,1288);
ctx.lineTo(15478,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,103,131,0.85)';
ctx.strokeStyle='rgb(37,65,14)';
ctx.moveTo(15574,1288);
ctx.lineTo(15574,1252);
ctx.lineTo(15610,1252);
ctx.lineTo(15610,1288);
ctx.lineTo(15574,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,113,95,0.85)';
ctx.strokeStyle='rgb(173,216,253)';
ctx.moveTo(15670,1288);
ctx.lineTo(15670,1252);
ctx.lineTo(15706,1252);
ctx.lineTo(15706,1288);
ctx.lineTo(15670,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,107,62,0.85)';
ctx.strokeStyle='rgb(191,69,242)';
ctx.moveTo(15670,1192);
ctx.lineTo(15670,1156);
ctx.lineTo(15706,1156);
ctx.lineTo(15706,1192);
ctx.lineTo(15670,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,125,243,0.85)';
ctx.strokeStyle='rgb(126,248,53)';
ctx.moveTo(15670,808);
ctx.lineTo(15670,772);
ctx.lineTo(15706,772);
ctx.lineTo(15706,808);
ctx.lineTo(15670,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,78,217,0.85)';
ctx.strokeStyle='rgb(139,73,229)';
ctx.moveTo(15766,808);
ctx.lineTo(15766,772);
ctx.lineTo(15802,772);
ctx.lineTo(15802,808);
ctx.lineTo(15766,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,115,153,0.85)';
ctx.strokeStyle='rgb(167,205,114)';
ctx.moveTo(15478,808);
ctx.lineTo(15478,772);
ctx.lineTo(15514,772);
ctx.lineTo(15514,808);
ctx.lineTo(15478,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,87,113,0.85)';
ctx.strokeStyle='rgb(105,208,183)';
ctx.moveTo(15574,808);
ctx.lineTo(15574,772);
ctx.lineTo(15610,772);
ctx.lineTo(15610,808);
ctx.lineTo(15574,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,32,51,0.85)';
ctx.strokeStyle='rgb(233,159,61)';
ctx.moveTo(15766,520);
ctx.lineTo(15766,484);
ctx.lineTo(15802,484);
ctx.lineTo(15802,520);
ctx.lineTo(15766,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,96,50,0.85)';
ctx.strokeStyle='rgb(247,91,212)';
ctx.moveTo(15478,328);
ctx.lineTo(15478,292);
ctx.lineTo(15514,292);
ctx.lineTo(15514,328);
ctx.lineTo(15478,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,69,103,0.85)';
ctx.strokeStyle='rgb(224,116,186)';
ctx.moveTo(15478,712);
ctx.lineTo(15478,676);
ctx.lineTo(15514,676);
ctx.lineTo(15514,712);
ctx.lineTo(15478,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,110,168,0.85)';
ctx.strokeStyle='rgb(0,91,44)';
ctx.moveTo(15574,712);
ctx.lineTo(15574,676);
ctx.lineTo(15610,676);
ctx.lineTo(15610,712);
ctx.lineTo(15574,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,31,10,0.85)';
ctx.strokeStyle='rgb(214,176,60)';
ctx.moveTo(15574,616);
ctx.lineTo(15574,580);
ctx.lineTo(15610,580);
ctx.lineTo(15610,616);
ctx.lineTo(15574,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,18,33,0.85)';
ctx.strokeStyle='rgb(131,202,30)';
ctx.moveTo(15574,520);
ctx.lineTo(15574,484);
ctx.lineTo(15610,484);
ctx.lineTo(15610,520);
ctx.lineTo(15574,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,78,194,0.85)';
ctx.strokeStyle='rgb(149,72,166)';
ctx.moveTo(15574,424);
ctx.lineTo(15574,388);
ctx.lineTo(15610,388);
ctx.lineTo(15610,424);
ctx.lineTo(15574,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,74,228,0.85)';
ctx.strokeStyle='rgb(187,141,53)';
ctx.moveTo(15574,328);
ctx.lineTo(15574,292);
ctx.lineTo(15610,292);
ctx.lineTo(15610,328);
ctx.lineTo(15574,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,223,55,0.85)';
ctx.strokeStyle='rgb(120,112,253)';
ctx.moveTo(15478,616);
ctx.lineTo(15478,580);
ctx.lineTo(15514,580);
ctx.lineTo(15514,616);
ctx.lineTo(15478,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,26,201,0.85)';
ctx.strokeStyle='rgb(105,240,48)';
ctx.moveTo(15670,712);
ctx.lineTo(15670,676);
ctx.lineTo(15706,676);
ctx.lineTo(15706,712);
ctx.lineTo(15670,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,242,133,0.85)';
ctx.strokeStyle='rgb(15,238,126)';
ctx.moveTo(15670,616);
ctx.lineTo(15670,580);
ctx.lineTo(15706,580);
ctx.lineTo(15706,616);
ctx.lineTo(15670,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,206,34,0.85)';
ctx.strokeStyle='rgb(233,13,172)';
ctx.moveTo(15670,520);
ctx.lineTo(15670,484);
ctx.lineTo(15706,484);
ctx.lineTo(15706,520);
ctx.lineTo(15670,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,78,98,0.85)';
ctx.strokeStyle='rgb(105,83,164)';
ctx.moveTo(15670,424);
ctx.lineTo(15670,388);
ctx.lineTo(15706,388);
ctx.lineTo(15706,424);
ctx.lineTo(15670,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,111,241,0.85)';
ctx.strokeStyle='rgb(211,202,25)';
ctx.moveTo(15670,328);
ctx.lineTo(15670,292);
ctx.lineTo(15706,292);
ctx.lineTo(15706,328);
ctx.lineTo(15670,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,19,77,0.85)';
ctx.strokeStyle='rgb(241,110,48)';
ctx.moveTo(15478,520);
ctx.lineTo(15478,484);
ctx.lineTo(15514,484);
ctx.lineTo(15514,520);
ctx.lineTo(15478,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,53,189,0.85)';
ctx.strokeStyle='rgb(170,63,95)';
ctx.moveTo(15766,712);
ctx.lineTo(15766,676);
ctx.lineTo(15802,676);
ctx.lineTo(15802,712);
ctx.lineTo(15766,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,9,250,0.85)';
ctx.strokeStyle='rgb(116,185,234)';
ctx.moveTo(15766,616);
ctx.lineTo(15766,580);
ctx.lineTo(15802,580);
ctx.lineTo(15802,616);
ctx.lineTo(15766,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,203,109,0.85)';
ctx.strokeStyle='rgb(195,242,219)';
ctx.moveTo(15766,424);
ctx.lineTo(15766,388);
ctx.lineTo(15802,388);
ctx.lineTo(15802,424);
ctx.lineTo(15766,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,89,61,0.85)';
ctx.strokeStyle='rgb(132,9,161)';
ctx.moveTo(15766,328);
ctx.lineTo(15766,292);
ctx.lineTo(15802,292);
ctx.lineTo(15802,328);
ctx.lineTo(15766,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,159,157,0.85)';
ctx.strokeStyle='rgb(236,161,61)';
ctx.moveTo(15478,424);
ctx.lineTo(15478,388);
ctx.lineTo(15514,388);
ctx.lineTo(15514,424);
ctx.lineTo(15478,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,89,1,0.85)';
ctx.strokeStyle='rgb(254,93,158)';
ctx.moveTo(15670,1096);
ctx.lineTo(15670,1060);
ctx.lineTo(15706,1060);
ctx.lineTo(15706,1096);
ctx.lineTo(15670,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,214,141,0.85)';
ctx.strokeStyle='rgb(179,4,21)';
ctx.moveTo(15670,1000);
ctx.lineTo(15670,964);
ctx.lineTo(15706,964);
ctx.lineTo(15706,1000);
ctx.lineTo(15670,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,69,59,0.85)';
ctx.strokeStyle='rgb(137,169,101)';
ctx.moveTo(15670,904);
ctx.lineTo(15670,868);
ctx.lineTo(15706,868);
ctx.lineTo(15706,904);
ctx.lineTo(15670,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,198,75,0.85)';
ctx.strokeStyle='rgb(127,135,183)';
ctx.moveTo(14758,2392);
ctx.lineTo(14758,2356);
ctx.lineTo(14794,2356);
ctx.lineTo(14794,2392);
ctx.lineTo(14758,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,64,86,0.85)';
ctx.strokeStyle='rgb(183,159,74)';
ctx.moveTo(15046,2392);
ctx.lineTo(15046,2356);
ctx.lineTo(15082,2356);
ctx.lineTo(15082,2392);
ctx.lineTo(15046,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,84,149,0.85)';
ctx.strokeStyle='rgb(127,248,24)';
ctx.moveTo(15046,2296);
ctx.lineTo(15046,2260);
ctx.lineTo(15082,2260);
ctx.lineTo(15082,2296);
ctx.lineTo(15046,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,224,171,0.85)';
ctx.strokeStyle='rgb(106,173,164)';
ctx.moveTo(15046,2200);
ctx.lineTo(15046,2164);
ctx.lineTo(15082,2164);
ctx.lineTo(15082,2200);
ctx.lineTo(15046,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,155,81,0.85)';
ctx.strokeStyle='rgb(111,248,136)';
ctx.moveTo(14758,2296);
ctx.lineTo(14758,2260);
ctx.lineTo(14794,2260);
ctx.lineTo(14794,2296);
ctx.lineTo(14758,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,163,213,0.85)';
ctx.strokeStyle='rgb(15,211,203)';
ctx.moveTo(14758,2200);
ctx.lineTo(14758,2164);
ctx.lineTo(14794,2164);
ctx.lineTo(14794,2200);
ctx.lineTo(14758,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,17,89,0.85)';
ctx.strokeStyle='rgb(148,250,206)';
ctx.moveTo(15142,2392);
ctx.lineTo(15142,2356);
ctx.lineTo(15178,2356);
ctx.lineTo(15178,2392);
ctx.lineTo(15142,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,23,243,0.85)';
ctx.strokeStyle='rgb(157,111,65)';
ctx.moveTo(15142,2296);
ctx.lineTo(15142,2260);
ctx.lineTo(15178,2260);
ctx.lineTo(15178,2296);
ctx.lineTo(15142,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,101,7,0.85)';
ctx.strokeStyle='rgb(193,53,240)';
ctx.moveTo(15142,2200);
ctx.lineTo(15142,2164);
ctx.lineTo(15178,2164);
ctx.lineTo(15178,2200);
ctx.lineTo(15142,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,99,119,0.85)';
ctx.strokeStyle='rgb(98,38,238)';
ctx.moveTo(14950,2392);
ctx.lineTo(14950,2356);
ctx.lineTo(14986,2356);
ctx.lineTo(14986,2392);
ctx.lineTo(14950,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,196,237,0.85)';
ctx.strokeStyle='rgb(69,67,241)';
ctx.moveTo(14950,2296);
ctx.lineTo(14950,2260);
ctx.lineTo(14986,2260);
ctx.lineTo(14986,2296);
ctx.lineTo(14950,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,152,44,0.85)';
ctx.strokeStyle='rgb(60,125,107)';
ctx.moveTo(14950,2200);
ctx.lineTo(14950,2164);
ctx.lineTo(14986,2164);
ctx.lineTo(14986,2200);
ctx.lineTo(14950,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,94,133,0.85)';
ctx.strokeStyle='rgb(70,58,78)';
ctx.moveTo(14854,2392);
ctx.lineTo(14854,2356);
ctx.lineTo(14890,2356);
ctx.lineTo(14890,2392);
ctx.lineTo(14854,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,33,48,0.85)';
ctx.strokeStyle='rgb(217,24,121)';
ctx.moveTo(14854,2296);
ctx.lineTo(14854,2260);
ctx.lineTo(14890,2260);
ctx.lineTo(14890,2296);
ctx.lineTo(14854,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,98,37,0.85)';
ctx.strokeStyle='rgb(65,149,205)';
ctx.moveTo(14758,2104);
ctx.lineTo(14758,2068);
ctx.lineTo(14794,2068);
ctx.lineTo(14794,2104);
ctx.lineTo(14758,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,35,137,0.85)';
ctx.strokeStyle='rgb(170,56,248)';
ctx.moveTo(14854,2104);
ctx.lineTo(14854,2068);
ctx.lineTo(14890,2068);
ctx.lineTo(14890,2104);
ctx.lineTo(14854,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,139,38,0.85)';
ctx.strokeStyle='rgb(95,110,131)';
ctx.moveTo(14950,2104);
ctx.lineTo(14950,2068);
ctx.lineTo(14986,2068);
ctx.lineTo(14986,2104);
ctx.lineTo(14950,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,47,184,0.85)';
ctx.strokeStyle='rgb(215,46,148)';
ctx.moveTo(15046,2104);
ctx.lineTo(15046,2068);
ctx.lineTo(15082,2068);
ctx.lineTo(15082,2104);
ctx.lineTo(15046,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,55,3,0.85)';
ctx.strokeStyle='rgb(58,56,227)';
ctx.moveTo(15142,2104);
ctx.lineTo(15142,2068);
ctx.lineTo(15178,2068);
ctx.lineTo(15178,2104);
ctx.lineTo(15142,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,10,42,0.85)';
ctx.strokeStyle='rgb(231,144,198)';
ctx.moveTo(14758,1624);
ctx.lineTo(14758,1588);
ctx.lineTo(14794,1588);
ctx.lineTo(14794,1624);
ctx.lineTo(14758,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,3,128,0.85)';
ctx.strokeStyle='rgb(195,229,254)';
ctx.moveTo(14758,2008);
ctx.lineTo(14758,1972);
ctx.lineTo(14794,1972);
ctx.lineTo(14794,2008);
ctx.lineTo(14758,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,64,206,0.85)';
ctx.strokeStyle='rgb(147,214,195)';
ctx.moveTo(14854,2008);
ctx.lineTo(14854,1972);
ctx.lineTo(14890,1972);
ctx.lineTo(14890,2008);
ctx.lineTo(14854,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,181,241,0.85)';
ctx.strokeStyle='rgb(48,190,69)';
ctx.moveTo(14854,1912);
ctx.lineTo(14854,1876);
ctx.lineTo(14890,1876);
ctx.lineTo(14890,1912);
ctx.lineTo(14854,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,77,235,0.85)';
ctx.strokeStyle='rgb(124,126,184)';
ctx.moveTo(14854,1816);
ctx.lineTo(14854,1780);
ctx.lineTo(14890,1780);
ctx.lineTo(14890,1816);
ctx.lineTo(14854,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,243,189,0.85)';
ctx.strokeStyle='rgb(94,213,199)';
ctx.moveTo(14854,1720);
ctx.lineTo(14854,1684);
ctx.lineTo(14890,1684);
ctx.lineTo(14890,1720);
ctx.lineTo(14854,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,193,34,0.85)';
ctx.strokeStyle='rgb(190,235,80)';
ctx.moveTo(14854,1624);
ctx.lineTo(14854,1588);
ctx.lineTo(14890,1588);
ctx.lineTo(14890,1624);
ctx.lineTo(14854,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,233,49,0.85)';
ctx.strokeStyle='rgb(118,11,224)';
ctx.moveTo(14758,1912);
ctx.lineTo(14758,1876);
ctx.lineTo(14794,1876);
ctx.lineTo(14794,1912);
ctx.lineTo(14758,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,79,168,0.85)';
ctx.strokeStyle='rgb(37,98,250)';
ctx.moveTo(14950,2008);
ctx.lineTo(14950,1972);
ctx.lineTo(14986,1972);
ctx.lineTo(14986,2008);
ctx.lineTo(14950,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,171,222,0.85)';
ctx.strokeStyle='rgb(220,77,70)';
ctx.moveTo(14950,1912);
ctx.lineTo(14950,1876);
ctx.lineTo(14986,1876);
ctx.lineTo(14986,1912);
ctx.lineTo(14950,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,219,243,0.85)';
ctx.strokeStyle='rgb(120,222,47)';
ctx.moveTo(14950,1816);
ctx.lineTo(14950,1780);
ctx.lineTo(14986,1780);
ctx.lineTo(14986,1816);
ctx.lineTo(14950,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,154,41,0.85)';
ctx.strokeStyle='rgb(20,213,33)';
ctx.moveTo(14950,1720);
ctx.lineTo(14950,1684);
ctx.lineTo(14986,1684);
ctx.lineTo(14986,1720);
ctx.lineTo(14950,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,55,7,0.85)';
ctx.strokeStyle='rgb(79,251,226)';
ctx.moveTo(14950,1624);
ctx.lineTo(14950,1588);
ctx.lineTo(14986,1588);
ctx.lineTo(14986,1624);
ctx.lineTo(14950,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,184,227,0.85)';
ctx.strokeStyle='rgb(207,167,254)';
ctx.moveTo(14758,1816);
ctx.lineTo(14758,1780);
ctx.lineTo(14794,1780);
ctx.lineTo(14794,1816);
ctx.lineTo(14758,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,201,233,0.85)';
ctx.strokeStyle='rgb(236,139,225)';
ctx.moveTo(15046,2008);
ctx.lineTo(15046,1972);
ctx.lineTo(15082,1972);
ctx.lineTo(15082,2008);
ctx.lineTo(15046,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,235,242,0.85)';
ctx.strokeStyle='rgb(181,191,21)';
ctx.moveTo(15046,1912);
ctx.lineTo(15046,1876);
ctx.lineTo(15082,1876);
ctx.lineTo(15082,1912);
ctx.lineTo(15046,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,251,75,0.85)';
ctx.strokeStyle='rgb(137,117,250)';
ctx.moveTo(15046,1816);
ctx.lineTo(15046,1780);
ctx.lineTo(15082,1780);
ctx.lineTo(15082,1816);
ctx.lineTo(15046,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,17,39,0.85)';
ctx.strokeStyle='rgb(189,249,22)';
ctx.moveTo(15046,1720);
ctx.lineTo(15046,1684);
ctx.lineTo(15082,1684);
ctx.lineTo(15082,1720);
ctx.lineTo(15046,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,44,82,0.85)';
ctx.strokeStyle='rgb(243,229,90)';
ctx.moveTo(15046,1624);
ctx.lineTo(15046,1588);
ctx.lineTo(15082,1588);
ctx.lineTo(15082,1624);
ctx.lineTo(15046,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,172,224,0.85)';
ctx.strokeStyle='rgb(172,122,136)';
ctx.moveTo(14758,1720);
ctx.lineTo(14758,1684);
ctx.lineTo(14794,1684);
ctx.lineTo(14794,1720);
ctx.lineTo(14758,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,145,129,0.85)';
ctx.strokeStyle='rgb(42,180,221)';
ctx.moveTo(15142,2008);
ctx.lineTo(15142,1972);
ctx.lineTo(15178,1972);
ctx.lineTo(15178,2008);
ctx.lineTo(15142,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,108,21,0.85)';
ctx.strokeStyle='rgb(254,195,67)';
ctx.moveTo(15142,1912);
ctx.lineTo(15142,1876);
ctx.lineTo(15178,1876);
ctx.lineTo(15178,1912);
ctx.lineTo(15142,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,90,243,0.85)';
ctx.strokeStyle='rgb(35,183,81)';
ctx.moveTo(15142,1816);
ctx.lineTo(15142,1780);
ctx.lineTo(15178,1780);
ctx.lineTo(15178,1816);
ctx.lineTo(15142,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,254,234,0.85)';
ctx.strokeStyle='rgb(95,100,59)';
ctx.moveTo(15142,1720);
ctx.lineTo(15142,1684);
ctx.lineTo(15178,1684);
ctx.lineTo(15178,1720);
ctx.lineTo(15142,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,20,13,0.85)';
ctx.strokeStyle='rgb(10,182,162)';
ctx.moveTo(15142,1624);
ctx.lineTo(15142,1588);
ctx.lineTo(15178,1588);
ctx.lineTo(15178,1624);
ctx.lineTo(15142,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,170,27,0.85)';
ctx.strokeStyle='rgb(20,166,175)';
ctx.moveTo(14854,2200);
ctx.lineTo(14854,2164);
ctx.lineTo(14890,2164);
ctx.lineTo(14890,2200);
ctx.lineTo(14854,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,110,37,0.85)';
ctx.strokeStyle='rgb(90,196,213)';
ctx.moveTo(15766,4264);
ctx.lineTo(15766,4228);
ctx.lineTo(15802,4228);
ctx.lineTo(15802,4264);
ctx.lineTo(15766,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,24,107,0.85)';
ctx.strokeStyle='rgb(192,217,252)';
ctx.moveTo(15766,4168);
ctx.lineTo(15766,4132);
ctx.lineTo(15802,4132);
ctx.lineTo(15802,4168);
ctx.lineTo(15766,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,131,144,0.85)';
ctx.strokeStyle='rgb(75,16,22)';
ctx.moveTo(15862,4360);
ctx.lineTo(15862,4324);
ctx.lineTo(15898,4324);
ctx.lineTo(15898,4360);
ctx.lineTo(15862,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,48,64,0.85)';
ctx.strokeStyle='rgb(182,142,116)';
ctx.moveTo(15862,4264);
ctx.lineTo(15862,4228);
ctx.lineTo(15898,4228);
ctx.lineTo(15898,4264);
ctx.lineTo(15862,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,160,217,0.85)';
ctx.strokeStyle='rgb(179,24,139)';
ctx.moveTo(15862,4168);
ctx.lineTo(15862,4132);
ctx.lineTo(15898,4132);
ctx.lineTo(15898,4168);
ctx.lineTo(15862,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,144,77,0.85)';
ctx.strokeStyle='rgb(254,232,98)';
ctx.moveTo(15958,4360);
ctx.lineTo(15958,4324);
ctx.lineTo(15994,4324);
ctx.lineTo(15994,4360);
ctx.lineTo(15958,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,130,131,0.85)';
ctx.strokeStyle='rgb(21,245,128)';
ctx.moveTo(15958,4264);
ctx.lineTo(15958,4228);
ctx.lineTo(15994,4228);
ctx.lineTo(15994,4264);
ctx.lineTo(15958,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,201,89,0.85)';
ctx.strokeStyle='rgb(132,233,103)';
ctx.moveTo(15958,4168);
ctx.lineTo(15958,4132);
ctx.lineTo(15994,4132);
ctx.lineTo(15994,4168);
ctx.lineTo(15958,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,76,104,0.85)';
ctx.strokeStyle='rgb(72,73,149)';
ctx.moveTo(16054,4360);
ctx.lineTo(16054,4324);
ctx.lineTo(16090,4324);
ctx.lineTo(16090,4360);
ctx.lineTo(16054,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,173,34,0.85)';
ctx.strokeStyle='rgb(102,254,178)';
ctx.moveTo(16054,4264);
ctx.lineTo(16054,4228);
ctx.lineTo(16090,4228);
ctx.lineTo(16090,4264);
ctx.lineTo(16054,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,117,217,0.85)';
ctx.strokeStyle='rgb(68,122,10)';
ctx.moveTo(16054,4168);
ctx.lineTo(16054,4132);
ctx.lineTo(16090,4132);
ctx.lineTo(16090,4168);
ctx.lineTo(16054,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,5,113,0.85)';
ctx.strokeStyle='rgb(17,179,47)';
ctx.moveTo(16150,4360);
ctx.lineTo(16150,4324);
ctx.lineTo(16186,4324);
ctx.lineTo(16186,4360);
ctx.lineTo(16150,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,125,225,0.85)';
ctx.strokeStyle='rgb(30,176,243)';
ctx.moveTo(16150,4264);
ctx.lineTo(16150,4228);
ctx.lineTo(16186,4228);
ctx.lineTo(16186,4264);
ctx.lineTo(16150,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,51,51,0.85)';
ctx.strokeStyle='rgb(201,14,83)';
ctx.moveTo(16150,4168);
ctx.lineTo(16150,4132);
ctx.lineTo(16186,4132);
ctx.lineTo(16186,4168);
ctx.lineTo(16150,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,149,95,0.85)';
ctx.strokeStyle='rgb(48,179,4)';
ctx.moveTo(16246,4360);
ctx.lineTo(16246,4324);
ctx.lineTo(16282,4324);
ctx.lineTo(16282,4360);
ctx.lineTo(16246,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,68,5,0.85)';
ctx.strokeStyle='rgb(220,223,179)';
ctx.moveTo(16246,4264);
ctx.lineTo(16246,4228);
ctx.lineTo(16282,4228);
ctx.lineTo(16282,4264);
ctx.lineTo(16246,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,71,98,0.85)';
ctx.strokeStyle='rgb(25,37,143)';
ctx.moveTo(16246,4168);
ctx.lineTo(16246,4132);
ctx.lineTo(16282,4132);
ctx.lineTo(16282,4168);
ctx.lineTo(16246,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,134,66,0.85)';
ctx.strokeStyle='rgb(97,26,152)';
ctx.moveTo(16342,4360);
ctx.lineTo(16342,4324);
ctx.lineTo(16378,4324);
ctx.lineTo(16378,4360);
ctx.lineTo(16342,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,241,233,0.85)';
ctx.strokeStyle='rgb(3,70,123)';
ctx.moveTo(16342,4264);
ctx.lineTo(16342,4228);
ctx.lineTo(16378,4228);
ctx.lineTo(16378,4264);
ctx.lineTo(16342,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,240,131,0.85)';
ctx.strokeStyle='rgb(115,192,114)';
ctx.moveTo(16342,4168);
ctx.lineTo(16342,4132);
ctx.lineTo(16378,4132);
ctx.lineTo(16378,4168);
ctx.lineTo(16342,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,198,238,0.85)';
ctx.strokeStyle='rgb(74,159,222)';
ctx.moveTo(16438,4360);
ctx.lineTo(16438,4324);
ctx.lineTo(16474,4324);
ctx.lineTo(16474,4360);
ctx.lineTo(16438,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,141,178,0.85)';
ctx.strokeStyle='rgb(203,100,67)';
ctx.moveTo(16438,4264);
ctx.lineTo(16438,4228);
ctx.lineTo(16474,4228);
ctx.lineTo(16474,4264);
ctx.lineTo(16438,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,13,122,0.85)';
ctx.strokeStyle='rgb(119,170,155)';
ctx.moveTo(16438,4168);
ctx.lineTo(16438,4132);
ctx.lineTo(16474,4132);
ctx.lineTo(16474,4168);
ctx.lineTo(16438,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,213,215,0.85)';
ctx.strokeStyle='rgb(126,140,234)';
ctx.moveTo(14758,2584);
ctx.lineTo(14758,2548);
ctx.lineTo(14794,2548);
ctx.lineTo(14794,2584);
ctx.lineTo(14758,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,221,253,0.85)';
ctx.strokeStyle='rgb(109,197,246)';
ctx.moveTo(14854,2584);
ctx.lineTo(14854,2548);
ctx.lineTo(14890,2548);
ctx.lineTo(14890,2584);
ctx.lineTo(14854,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,208,78,0.85)';
ctx.strokeStyle='rgb(253,5,147)';
ctx.moveTo(14950,2584);
ctx.lineTo(14950,2548);
ctx.lineTo(14986,2548);
ctx.lineTo(14986,2584);
ctx.lineTo(14950,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,25,147,0.85)';
ctx.strokeStyle='rgb(230,122,47)';
ctx.moveTo(14950,2488);
ctx.lineTo(14950,2452);
ctx.lineTo(14986,2452);
ctx.lineTo(14986,2488);
ctx.lineTo(14950,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,250,213,0.85)';
ctx.strokeStyle='rgb(253,36,34)';
ctx.moveTo(15142,2584);
ctx.lineTo(15142,2548);
ctx.lineTo(15178,2548);
ctx.lineTo(15178,2584);
ctx.lineTo(15142,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,160,198,0.85)';
ctx.strokeStyle='rgb(11,120,217)';
ctx.moveTo(15142,2488);
ctx.lineTo(15142,2452);
ctx.lineTo(15178,2452);
ctx.lineTo(15178,2488);
ctx.lineTo(15142,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,61,93,0.85)';
ctx.strokeStyle='rgb(223,9,227)';
ctx.moveTo(14854,2818);
ctx.lineTo(14854,2782);
ctx.lineTo(14890,2782);
ctx.lineTo(14890,2818);
ctx.lineTo(14854,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,245,120,0.85)';
ctx.strokeStyle='rgb(27,62,46)';
ctx.moveTo(15046,2584);
ctx.lineTo(15046,2548);
ctx.lineTo(15082,2548);
ctx.lineTo(15082,2584);
ctx.lineTo(15046,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,33,77,0.85)';
ctx.strokeStyle='rgb(23,172,28)';
ctx.moveTo(15046,2488);
ctx.lineTo(15046,2452);
ctx.lineTo(15082,2452);
ctx.lineTo(15082,2488);
ctx.lineTo(15046,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,124,17,0.85)';
ctx.strokeStyle='rgb(118,133,170)';
ctx.moveTo(14950,2818);
ctx.lineTo(14950,2782);
ctx.lineTo(14986,2782);
ctx.lineTo(14986,2818);
ctx.lineTo(14950,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,101,31,0.85)';
ctx.strokeStyle='rgb(112,49,131)';
ctx.moveTo(15046,2818);
ctx.lineTo(15046,2782);
ctx.lineTo(15082,2782);
ctx.lineTo(15082,2818);
ctx.lineTo(15046,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,168,193,0.85)';
ctx.strokeStyle='rgb(84,12,123)';
ctx.moveTo(15142,2818);
ctx.lineTo(15142,2782);
ctx.lineTo(15178,2782);
ctx.lineTo(15178,2818);
ctx.lineTo(15142,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,93,6,0.85)';
ctx.strokeStyle='rgb(195,218,92)';
ctx.moveTo(14854,2488);
ctx.lineTo(14854,2452);
ctx.lineTo(14890,2452);
ctx.lineTo(14890,2488);
ctx.lineTo(14854,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,133,174,0.85)';
ctx.strokeStyle='rgb(16,216,134)';
ctx.moveTo(14758,2818);
ctx.lineTo(14758,2782);
ctx.lineTo(14794,2782);
ctx.lineTo(14794,2818);
ctx.lineTo(14758,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,243,30,0.85)';
ctx.strokeStyle='rgb(155,216,183)';
ctx.moveTo(14758,2488);
ctx.lineTo(14758,2452);
ctx.lineTo(14794,2452);
ctx.lineTo(14794,2488);
ctx.lineTo(14758,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,171,240,0.85)';
ctx.strokeStyle='rgb(113,26,224)';
ctx.moveTo(15478,4360);
ctx.lineTo(15478,4324);
ctx.lineTo(15514,4324);
ctx.lineTo(15514,4360);
ctx.lineTo(15478,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,39,66,0.85)';
ctx.strokeStyle='rgb(190,93,14)';
ctx.moveTo(15478,4264);
ctx.lineTo(15478,4228);
ctx.lineTo(15514,4228);
ctx.lineTo(15514,4264);
ctx.lineTo(15478,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,97,84,0.85)';
ctx.strokeStyle='rgb(196,106,3)';
ctx.moveTo(15478,4168);
ctx.lineTo(15478,4132);
ctx.lineTo(15514,4132);
ctx.lineTo(15514,4168);
ctx.lineTo(15478,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,162,90,0.85)';
ctx.strokeStyle='rgb(165,212,91)';
ctx.moveTo(15574,4360);
ctx.lineTo(15574,4324);
ctx.lineTo(15610,4324);
ctx.lineTo(15610,4360);
ctx.lineTo(15574,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,19,149,0.85)';
ctx.strokeStyle='rgb(238,21,91)';
ctx.moveTo(15574,4264);
ctx.lineTo(15574,4228);
ctx.lineTo(15610,4228);
ctx.lineTo(15610,4264);
ctx.lineTo(15574,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,221,210,0.85)';
ctx.strokeStyle='rgb(141,224,205)';
ctx.moveTo(15574,4168);
ctx.lineTo(15574,4132);
ctx.lineTo(15610,4132);
ctx.lineTo(15610,4168);
ctx.lineTo(15574,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,196,9,0.85)';
ctx.strokeStyle='rgb(129,235,43)';
ctx.moveTo(15670,4360);
ctx.lineTo(15670,4324);
ctx.lineTo(15706,4324);
ctx.lineTo(15706,4360);
ctx.lineTo(15670,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,129,242,0.85)';
ctx.strokeStyle='rgb(71,146,46)';
ctx.moveTo(15670,4264);
ctx.lineTo(15670,4228);
ctx.lineTo(15706,4228);
ctx.lineTo(15706,4264);
ctx.lineTo(15670,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,102,136,0.85)';
ctx.strokeStyle='rgb(81,155,175)';
ctx.moveTo(15670,4168);
ctx.lineTo(15670,4132);
ctx.lineTo(15706,4132);
ctx.lineTo(15706,4168);
ctx.lineTo(15670,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,63,211,0.85)';
ctx.strokeStyle='rgb(187,113,145)';
ctx.moveTo(15766,4360);
ctx.lineTo(15766,4324);
ctx.lineTo(15802,4324);
ctx.lineTo(15802,4360);
ctx.lineTo(15766,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,38,52,0.85)';
ctx.strokeStyle='rgb(9,217,216)';
ctx.moveTo(14278,1816);
ctx.lineTo(14278,1780);
ctx.lineTo(14314,1780);
ctx.lineTo(14314,1816);
ctx.lineTo(14278,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,206,209,0.85)';
ctx.strokeStyle='rgb(240,41,106)';
ctx.moveTo(14278,1720);
ctx.lineTo(14278,1684);
ctx.lineTo(14314,1684);
ctx.lineTo(14314,1720);
ctx.lineTo(14278,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,201,98,0.85)';
ctx.strokeStyle='rgb(76,211,242)';
ctx.moveTo(14278,1624);
ctx.lineTo(14278,1588);
ctx.lineTo(14314,1588);
ctx.lineTo(14314,1624);
ctx.lineTo(14278,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,118,221,0.85)';
ctx.strokeStyle='rgb(162,201,212)';
ctx.moveTo(14182,1912);
ctx.lineTo(14182,1876);
ctx.lineTo(14218,1876);
ctx.lineTo(14218,1912);
ctx.lineTo(14182,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,28,198,0.85)';
ctx.strokeStyle='rgb(47,87,186)';
ctx.moveTo(14374,2008);
ctx.lineTo(14374,1972);
ctx.lineTo(14410,1972);
ctx.lineTo(14410,2008);
ctx.lineTo(14374,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,127,209,0.85)';
ctx.strokeStyle='rgb(162,144,157)';
ctx.moveTo(14374,1912);
ctx.lineTo(14374,1876);
ctx.lineTo(14410,1876);
ctx.lineTo(14410,1912);
ctx.lineTo(14374,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,155,193,0.85)';
ctx.strokeStyle='rgb(77,6,86)';
ctx.moveTo(14374,1816);
ctx.lineTo(14374,1780);
ctx.lineTo(14410,1780);
ctx.lineTo(14410,1816);
ctx.lineTo(14374,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,133,97,0.85)';
ctx.strokeStyle='rgb(0,13,118)';
ctx.moveTo(14374,1720);
ctx.lineTo(14374,1684);
ctx.lineTo(14410,1684);
ctx.lineTo(14410,1720);
ctx.lineTo(14374,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,248,152,0.85)';
ctx.strokeStyle='rgb(30,245,163)';
ctx.moveTo(14374,1624);
ctx.lineTo(14374,1588);
ctx.lineTo(14410,1588);
ctx.lineTo(14410,1624);
ctx.lineTo(14374,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,119,163,0.85)';
ctx.strokeStyle='rgb(245,167,235)';
ctx.moveTo(14182,1816);
ctx.lineTo(14182,1780);
ctx.lineTo(14218,1780);
ctx.lineTo(14218,1816);
ctx.lineTo(14182,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,212,248,0.85)';
ctx.strokeStyle='rgb(236,65,96)';
ctx.moveTo(14470,2008);
ctx.lineTo(14470,1972);
ctx.lineTo(14506,1972);
ctx.lineTo(14506,2008);
ctx.lineTo(14470,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,182,6,0.85)';
ctx.strokeStyle='rgb(222,23,174)';
ctx.moveTo(14470,1912);
ctx.lineTo(14470,1876);
ctx.lineTo(14506,1876);
ctx.lineTo(14506,1912);
ctx.lineTo(14470,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,180,150,0.85)';
ctx.strokeStyle='rgb(132,123,38)';
ctx.moveTo(14566,2392);
ctx.lineTo(14566,2356);
ctx.lineTo(14602,2356);
ctx.lineTo(14602,2392);
ctx.lineTo(14566,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,151,110,0.85)';
ctx.strokeStyle='rgb(128,133,197)';
ctx.moveTo(14566,2296);
ctx.lineTo(14566,2260);
ctx.lineTo(14602,2260);
ctx.lineTo(14602,2296);
ctx.lineTo(14566,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,140,69,0.85)';
ctx.strokeStyle='rgb(233,66,210)';
ctx.moveTo(14566,2200);
ctx.lineTo(14566,2164);
ctx.lineTo(14602,2164);
ctx.lineTo(14602,2200);
ctx.lineTo(14566,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,248,127,0.85)';
ctx.strokeStyle='rgb(174,37,148)';
ctx.moveTo(14374,2392);
ctx.lineTo(14374,2356);
ctx.lineTo(14410,2356);
ctx.lineTo(14410,2392);
ctx.lineTo(14374,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,222,210,0.85)';
ctx.strokeStyle='rgb(46,58,246)';
ctx.moveTo(14374,2296);
ctx.lineTo(14374,2260);
ctx.lineTo(14410,2260);
ctx.lineTo(14410,2296);
ctx.lineTo(14374,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,137,27,0.85)';
ctx.strokeStyle='rgb(95,172,45)';
ctx.moveTo(14374,2200);
ctx.lineTo(14374,2164);
ctx.lineTo(14410,2164);
ctx.lineTo(14410,2200);
ctx.lineTo(14374,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,221,151,0.85)';
ctx.strokeStyle='rgb(132,51,164)';
ctx.moveTo(14278,2488);
ctx.lineTo(14278,2452);
ctx.lineTo(14314,2452);
ctx.lineTo(14314,2488);
ctx.lineTo(14278,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,185,133,0.85)';
ctx.strokeStyle='rgb(91,174,95)';
ctx.moveTo(14278,2392);
ctx.lineTo(14278,2356);
ctx.lineTo(14314,2356);
ctx.lineTo(14314,2392);
ctx.lineTo(14278,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,38,115,0.85)';
ctx.strokeStyle='rgb(46,254,110)';
ctx.moveTo(14278,2296);
ctx.lineTo(14278,2260);
ctx.lineTo(14314,2260);
ctx.lineTo(14314,2296);
ctx.lineTo(14278,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,223,174,0.85)';
ctx.strokeStyle='rgb(18,218,83)';
ctx.moveTo(14278,2200);
ctx.lineTo(14278,2164);
ctx.lineTo(14314,2164);
ctx.lineTo(14314,2200);
ctx.lineTo(14278,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,11,219,0.85)';
ctx.strokeStyle='rgb(50,238,48)';
ctx.moveTo(14182,2488);
ctx.lineTo(14182,2452);
ctx.lineTo(14218,2452);
ctx.lineTo(14218,2488);
ctx.lineTo(14182,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,9,190,0.85)';
ctx.strokeStyle='rgb(68,191,35)';
ctx.moveTo(14182,2392);
ctx.lineTo(14182,2356);
ctx.lineTo(14218,2356);
ctx.lineTo(14218,2392);
ctx.lineTo(14182,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,149,30,0.85)';
ctx.strokeStyle='rgb(14,101,62)';
ctx.moveTo(14470,2584);
ctx.lineTo(14470,2548);
ctx.lineTo(14506,2548);
ctx.lineTo(14506,2584);
ctx.lineTo(14470,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,254,27,0.85)';
ctx.strokeStyle='rgb(194,96,219)';
ctx.moveTo(14470,2488);
ctx.lineTo(14470,2452);
ctx.lineTo(14506,2452);
ctx.lineTo(14506,2488);
ctx.lineTo(14470,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,172,34,0.85)';
ctx.strokeStyle='rgb(202,197,249)';
ctx.moveTo(14470,2392);
ctx.lineTo(14470,2356);
ctx.lineTo(14506,2356);
ctx.lineTo(14506,2392);
ctx.lineTo(14470,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,7,91,0.85)';
ctx.strokeStyle='rgb(52,18,146)';
ctx.moveTo(14470,2296);
ctx.lineTo(14470,2260);
ctx.lineTo(14506,2260);
ctx.lineTo(14506,2296);
ctx.lineTo(14470,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,229,88,0.85)';
ctx.strokeStyle='rgb(225,175,29)';
ctx.moveTo(14470,2200);
ctx.lineTo(14470,2164);
ctx.lineTo(14506,2164);
ctx.lineTo(14506,2200);
ctx.lineTo(14470,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,50,23,0.85)';
ctx.strokeStyle='rgb(82,94,102)';
ctx.moveTo(14182,2296);
ctx.lineTo(14182,2260);
ctx.lineTo(14218,2260);
ctx.lineTo(14218,2296);
ctx.lineTo(14182,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,23,37,0.85)';
ctx.strokeStyle='rgb(223,189,107)';
ctx.moveTo(14182,2200);
ctx.lineTo(14182,2164);
ctx.lineTo(14218,2164);
ctx.lineTo(14218,2200);
ctx.lineTo(14182,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,178,188,0.85)';
ctx.strokeStyle='rgb(188,223,9)';
ctx.moveTo(14182,2584);
ctx.lineTo(14182,2548);
ctx.lineTo(14218,2548);
ctx.lineTo(14218,2584);
ctx.lineTo(14182,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,113,174,0.85)';
ctx.strokeStyle='rgb(116,67,114)';
ctx.moveTo(14278,2584);
ctx.lineTo(14278,2548);
ctx.lineTo(14314,2548);
ctx.lineTo(14314,2584);
ctx.lineTo(14278,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,29,205,0.85)';
ctx.strokeStyle='rgb(174,45,226)';
ctx.moveTo(14374,2584);
ctx.lineTo(14374,2548);
ctx.lineTo(14410,2548);
ctx.lineTo(14410,2584);
ctx.lineTo(14374,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,14,26,0.85)';
ctx.strokeStyle='rgb(174,198,123)';
ctx.moveTo(14374,2488);
ctx.lineTo(14374,2452);
ctx.lineTo(14410,2452);
ctx.lineTo(14410,2488);
ctx.lineTo(14374,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,133,138,0.85)';
ctx.strokeStyle='rgb(30,99,149)';
ctx.moveTo(14566,2584);
ctx.lineTo(14566,2548);
ctx.lineTo(14602,2548);
ctx.lineTo(14602,2584);
ctx.lineTo(14566,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,178,110,0.85)';
ctx.strokeStyle='rgb(99,225,184)';
ctx.moveTo(14566,2488);
ctx.lineTo(14566,2452);
ctx.lineTo(14602,2452);
ctx.lineTo(14602,2488);
ctx.lineTo(14566,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,152,206,0.85)';
ctx.strokeStyle='rgb(149,26,86)';
ctx.moveTo(14374,2104);
ctx.lineTo(14374,2068);
ctx.lineTo(14410,2068);
ctx.lineTo(14410,2104);
ctx.lineTo(14374,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,105,213,0.85)';
ctx.strokeStyle='rgb(167,32,45)';
ctx.moveTo(14470,2104);
ctx.lineTo(14470,2068);
ctx.lineTo(14506,2068);
ctx.lineTo(14506,2104);
ctx.lineTo(14470,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,158,4,0.85)';
ctx.strokeStyle='rgb(234,131,178)';
ctx.moveTo(14566,2104);
ctx.lineTo(14566,2068);
ctx.lineTo(14602,2068);
ctx.lineTo(14602,2104);
ctx.lineTo(14566,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,193,68,0.85)';
ctx.strokeStyle='rgb(52,71,46)';
ctx.moveTo(14662,2584);
ctx.lineTo(14662,2548);
ctx.lineTo(14698,2548);
ctx.lineTo(14698,2584);
ctx.lineTo(14662,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,76,80,0.85)';
ctx.strokeStyle='rgb(225,189,150)';
ctx.moveTo(14662,2488);
ctx.lineTo(14662,2452);
ctx.lineTo(14698,2452);
ctx.lineTo(14698,2488);
ctx.lineTo(14662,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,104,15,0.85)';
ctx.strokeStyle='rgb(114,49,211)';
ctx.moveTo(14662,2392);
ctx.lineTo(14662,2356);
ctx.lineTo(14698,2356);
ctx.lineTo(14698,2392);
ctx.lineTo(14662,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,50,113,0.85)';
ctx.strokeStyle='rgb(231,9,152)';
ctx.moveTo(14662,2296);
ctx.lineTo(14662,2260);
ctx.lineTo(14698,2260);
ctx.lineTo(14698,2296);
ctx.lineTo(14662,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,244,254,0.85)';
ctx.strokeStyle='rgb(186,218,104)';
ctx.moveTo(14662,2200);
ctx.lineTo(14662,2164);
ctx.lineTo(14698,2164);
ctx.lineTo(14698,2200);
ctx.lineTo(14662,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,1,60,0.85)';
ctx.strokeStyle='rgb(63,66,90)';
ctx.moveTo(14662,2104);
ctx.lineTo(14662,2068);
ctx.lineTo(14698,2068);
ctx.lineTo(14698,2104);
ctx.lineTo(14662,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,161,41,0.85)';
ctx.strokeStyle='rgb(225,228,41)';
ctx.moveTo(14662,2008);
ctx.lineTo(14662,1972);
ctx.lineTo(14698,1972);
ctx.lineTo(14698,2008);
ctx.lineTo(14662,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,155,86,0.85)';
ctx.strokeStyle='rgb(145,61,47)';
ctx.moveTo(14662,1912);
ctx.lineTo(14662,1876);
ctx.lineTo(14698,1876);
ctx.lineTo(14698,1912);
ctx.lineTo(14662,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,143,205,0.85)';
ctx.strokeStyle='rgb(230,217,56)';
ctx.moveTo(14662,1816);
ctx.lineTo(14662,1780);
ctx.lineTo(14698,1780);
ctx.lineTo(14698,1816);
ctx.lineTo(14662,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,54,142,0.85)';
ctx.strokeStyle='rgb(172,199,156)';
ctx.moveTo(14662,1720);
ctx.lineTo(14662,1684);
ctx.lineTo(14698,1684);
ctx.lineTo(14698,1720);
ctx.lineTo(14662,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,70,71,0.85)';
ctx.strokeStyle='rgb(49,17,252)';
ctx.moveTo(14662,1624);
ctx.lineTo(14662,1588);
ctx.lineTo(14698,1588);
ctx.lineTo(14698,1624);
ctx.lineTo(14662,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,23,47,0.85)';
ctx.strokeStyle='rgb(105,133,80)';
ctx.moveTo(14662,2818);
ctx.lineTo(14662,2782);
ctx.lineTo(14698,2782);
ctx.lineTo(14698,2818);
ctx.lineTo(14662,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,220,25,0.85)';
ctx.strokeStyle='rgb(138,42,198)';
ctx.moveTo(14182,2818);
ctx.lineTo(14182,2782);
ctx.lineTo(14218,2782);
ctx.lineTo(14218,2818);
ctx.lineTo(14182,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,140,149,0.85)';
ctx.strokeStyle='rgb(51,170,76)';
ctx.moveTo(14278,2818);
ctx.lineTo(14278,2782);
ctx.lineTo(14314,2782);
ctx.lineTo(14314,2818);
ctx.lineTo(14278,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,18,118,0.85)';
ctx.strokeStyle='rgb(173,135,55)';
ctx.moveTo(14374,2818);
ctx.lineTo(14374,2782);
ctx.lineTo(14410,2782);
ctx.lineTo(14410,2818);
ctx.lineTo(14374,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,168,168,0.85)';
ctx.strokeStyle='rgb(103,157,122)';
ctx.moveTo(14470,2818);
ctx.lineTo(14470,2782);
ctx.lineTo(14506,2782);
ctx.lineTo(14506,2818);
ctx.lineTo(14470,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,190,242,0.85)';
ctx.strokeStyle='rgb(94,131,127)';
ctx.moveTo(14566,2818);
ctx.lineTo(14566,2782);
ctx.lineTo(14602,2782);
ctx.lineTo(14602,2818);
ctx.lineTo(14566,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,68,133,0.85)';
ctx.strokeStyle='rgb(171,123,40)';
ctx.moveTo(14182,2104);
ctx.lineTo(14182,2068);
ctx.lineTo(14218,2068);
ctx.lineTo(14218,2104);
ctx.lineTo(14182,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,128,12,0.85)';
ctx.strokeStyle='rgb(25,117,72)';
ctx.moveTo(14278,2104);
ctx.lineTo(14278,2068);
ctx.lineTo(14314,2068);
ctx.lineTo(14314,2104);
ctx.lineTo(14278,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,173,241,0.85)';
ctx.strokeStyle='rgb(60,39,228)';
ctx.moveTo(14470,1816);
ctx.lineTo(14470,1780);
ctx.lineTo(14506,1780);
ctx.lineTo(14506,1816);
ctx.lineTo(14470,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,154,7,0.85)';
ctx.strokeStyle='rgb(26,226,98)';
ctx.moveTo(14470,1720);
ctx.lineTo(14470,1684);
ctx.lineTo(14506,1684);
ctx.lineTo(14506,1720);
ctx.lineTo(14470,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,30,184,0.85)';
ctx.strokeStyle='rgb(4,205,189)';
ctx.moveTo(14470,1624);
ctx.lineTo(14470,1588);
ctx.lineTo(14506,1588);
ctx.lineTo(14506,1624);
ctx.lineTo(14470,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,38,87,0.85)';
ctx.strokeStyle='rgb(94,191,116)';
ctx.moveTo(14182,1720);
ctx.lineTo(14182,1684);
ctx.lineTo(14218,1684);
ctx.lineTo(14218,1720);
ctx.lineTo(14182,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,8,89,0.85)';
ctx.strokeStyle='rgb(195,73,204)';
ctx.moveTo(14566,2008);
ctx.lineTo(14566,1972);
ctx.lineTo(14602,1972);
ctx.lineTo(14602,2008);
ctx.lineTo(14566,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,78,159,0.85)';
ctx.strokeStyle='rgb(171,249,139)';
ctx.moveTo(14566,1912);
ctx.lineTo(14566,1876);
ctx.lineTo(14602,1876);
ctx.lineTo(14602,1912);
ctx.lineTo(14566,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,99,73,0.85)';
ctx.strokeStyle='rgb(21,190,94)';
ctx.moveTo(14566,1816);
ctx.lineTo(14566,1780);
ctx.lineTo(14602,1780);
ctx.lineTo(14602,1816);
ctx.lineTo(14566,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,170,28,0.85)';
ctx.strokeStyle='rgb(57,41,67)';
ctx.moveTo(14566,1720);
ctx.lineTo(14566,1684);
ctx.lineTo(14602,1684);
ctx.lineTo(14602,1720);
ctx.lineTo(14566,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,7,21,0.85)';
ctx.strokeStyle='rgb(230,39,191)';
ctx.moveTo(14566,1624);
ctx.lineTo(14566,1588);
ctx.lineTo(14602,1588);
ctx.lineTo(14602,1624);
ctx.lineTo(14566,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,116,128,0.85)';
ctx.strokeStyle='rgb(108,249,97)';
ctx.moveTo(14182,1624);
ctx.lineTo(14182,1588);
ctx.lineTo(14218,1588);
ctx.lineTo(14218,1624);
ctx.lineTo(14182,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,234,150,0.85)';
ctx.strokeStyle='rgb(224,249,84)';
ctx.moveTo(14182,2008);
ctx.lineTo(14182,1972);
ctx.lineTo(14218,1972);
ctx.lineTo(14218,2008);
ctx.lineTo(14182,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,120,234,0.85)';
ctx.strokeStyle='rgb(206,106,151)';
ctx.moveTo(14278,2008);
ctx.lineTo(14278,1972);
ctx.lineTo(14314,1972);
ctx.lineTo(14314,2008);
ctx.lineTo(14278,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,46,206,0.85)';
ctx.strokeStyle='rgb(247,218,40)';
ctx.moveTo(14278,1912);
ctx.lineTo(14278,1876);
ctx.lineTo(14314,1876);
ctx.lineTo(14314,1912);
ctx.lineTo(14278,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,165,72,0.85)';
ctx.strokeStyle='rgb(221,212,249)';
ctx.moveTo(14662,5776);
ctx.lineTo(14662,5740);
ctx.lineTo(14698,5740);
ctx.lineTo(14698,5776);
ctx.lineTo(14662,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,138,14,0.85)';
ctx.strokeStyle='rgb(195,153,160)';
ctx.moveTo(14662,5680);
ctx.lineTo(14662,5644);
ctx.lineTo(14698,5644);
ctx.lineTo(14698,5680);
ctx.lineTo(14662,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,73,7,0.85)';
ctx.strokeStyle='rgb(152,97,40)';
ctx.moveTo(14182,5872);
ctx.lineTo(14182,5836);
ctx.lineTo(14218,5836);
ctx.lineTo(14218,5872);
ctx.lineTo(14182,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,222,77,0.85)';
ctx.strokeStyle='rgb(4,160,125)';
ctx.moveTo(14182,5776);
ctx.lineTo(14182,5740);
ctx.lineTo(14218,5740);
ctx.lineTo(14218,5776);
ctx.lineTo(14182,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,59,122,0.85)';
ctx.strokeStyle='rgb(202,143,106)';
ctx.moveTo(14182,5680);
ctx.lineTo(14182,5644);
ctx.lineTo(14218,5644);
ctx.lineTo(14218,5680);
ctx.lineTo(14182,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,104,162,0.85)';
ctx.strokeStyle='rgb(137,163,79)';
ctx.moveTo(14278,5872);
ctx.lineTo(14278,5836);
ctx.lineTo(14314,5836);
ctx.lineTo(14314,5872);
ctx.lineTo(14278,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,120,25,0.85)';
ctx.strokeStyle='rgb(151,205,91)';
ctx.moveTo(14278,5776);
ctx.lineTo(14278,5740);
ctx.lineTo(14314,5740);
ctx.lineTo(14314,5776);
ctx.lineTo(14278,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,98,13,0.85)';
ctx.strokeStyle='rgb(213,197,53)';
ctx.moveTo(14278,5680);
ctx.lineTo(14278,5644);
ctx.lineTo(14314,5644);
ctx.lineTo(14314,5680);
ctx.lineTo(14278,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,90,147,0.85)';
ctx.strokeStyle='rgb(230,153,58)';
ctx.moveTo(14374,5872);
ctx.lineTo(14374,5836);
ctx.lineTo(14410,5836);
ctx.lineTo(14410,5872);
ctx.lineTo(14374,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,175,151,0.85)';
ctx.strokeStyle='rgb(235,151,103)';
ctx.moveTo(14374,5776);
ctx.lineTo(14374,5740);
ctx.lineTo(14410,5740);
ctx.lineTo(14410,5776);
ctx.lineTo(14374,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,238,224,0.85)';
ctx.strokeStyle='rgb(67,27,12)';
ctx.moveTo(14374,5680);
ctx.lineTo(14374,5644);
ctx.lineTo(14410,5644);
ctx.lineTo(14410,5680);
ctx.lineTo(14374,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,173,127,0.85)';
ctx.strokeStyle='rgb(91,200,161)';
ctx.moveTo(14470,5872);
ctx.lineTo(14470,5836);
ctx.lineTo(14506,5836);
ctx.lineTo(14506,5872);
ctx.lineTo(14470,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,117,9,0.85)';
ctx.strokeStyle='rgb(248,39,29)';
ctx.moveTo(14470,5776);
ctx.lineTo(14470,5740);
ctx.lineTo(14506,5740);
ctx.lineTo(14506,5776);
ctx.lineTo(14470,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,86,44,0.85)';
ctx.strokeStyle='rgb(4,190,160)';
ctx.moveTo(14470,5680);
ctx.lineTo(14470,5644);
ctx.lineTo(14506,5644);
ctx.lineTo(14506,5680);
ctx.lineTo(14470,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,64,11,0.85)';
ctx.strokeStyle='rgb(172,199,138)';
ctx.moveTo(14566,5872);
ctx.lineTo(14566,5836);
ctx.lineTo(14602,5836);
ctx.lineTo(14602,5872);
ctx.lineTo(14566,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,127,254,0.85)';
ctx.strokeStyle='rgb(193,139,223)';
ctx.moveTo(14566,5776);
ctx.lineTo(14566,5740);
ctx.lineTo(14602,5740);
ctx.lineTo(14602,5776);
ctx.lineTo(14566,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,58,148,0.85)';
ctx.strokeStyle='rgb(12,77,2)';
ctx.moveTo(14566,5680);
ctx.lineTo(14566,5644);
ctx.lineTo(14602,5644);
ctx.lineTo(14602,5680);
ctx.lineTo(14566,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,1,58,0.85)';
ctx.strokeStyle='rgb(19,124,157)';
ctx.moveTo(14662,5872);
ctx.lineTo(14662,5836);
ctx.lineTo(14698,5836);
ctx.lineTo(14698,5872);
ctx.lineTo(14662,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,145,183,0.85)';
ctx.strokeStyle='rgb(186,158,14)';
ctx.moveTo(14758,5776);
ctx.lineTo(14758,5740);
ctx.lineTo(14794,5740);
ctx.lineTo(14794,5776);
ctx.lineTo(14758,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,161,37,0.85)';
ctx.strokeStyle='rgb(212,50,82)';
ctx.moveTo(14758,5680);
ctx.lineTo(14758,5644);
ctx.lineTo(14794,5644);
ctx.lineTo(14794,5680);
ctx.lineTo(14758,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,132,1,0.85)';
ctx.strokeStyle='rgb(56,165,85)';
ctx.moveTo(14854,5872);
ctx.lineTo(14854,5836);
ctx.lineTo(14890,5836);
ctx.lineTo(14890,5872);
ctx.lineTo(14854,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,169,81,0.85)';
ctx.strokeStyle='rgb(228,150,111)';
ctx.moveTo(14854,5776);
ctx.lineTo(14854,5740);
ctx.lineTo(14890,5740);
ctx.lineTo(14890,5776);
ctx.lineTo(14854,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,115,150,0.85)';
ctx.strokeStyle='rgb(1,76,163)';
ctx.moveTo(14854,5680);
ctx.lineTo(14854,5644);
ctx.lineTo(14890,5644);
ctx.lineTo(14890,5680);
ctx.lineTo(14854,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,161,35,0.85)';
ctx.strokeStyle='rgb(251,117,135)';
ctx.moveTo(14950,5872);
ctx.lineTo(14950,5836);
ctx.lineTo(14986,5836);
ctx.lineTo(14986,5872);
ctx.lineTo(14950,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,197,158,0.85)';
ctx.strokeStyle='rgb(241,238,253)';
ctx.moveTo(14950,5776);
ctx.lineTo(14950,5740);
ctx.lineTo(14986,5740);
ctx.lineTo(14986,5776);
ctx.lineTo(14950,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,157,129,0.85)';
ctx.strokeStyle='rgb(112,82,201)';
ctx.moveTo(14950,5680);
ctx.lineTo(14950,5644);
ctx.lineTo(14986,5644);
ctx.lineTo(14986,5680);
ctx.lineTo(14950,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,94,25,0.85)';
ctx.strokeStyle='rgb(138,244,235)';
ctx.moveTo(15046,5872);
ctx.lineTo(15046,5836);
ctx.lineTo(15082,5836);
ctx.lineTo(15082,5872);
ctx.lineTo(15046,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,250,124,0.85)';
ctx.strokeStyle='rgb(138,26,111)';
ctx.moveTo(15046,5776);
ctx.lineTo(15046,5740);
ctx.lineTo(15082,5740);
ctx.lineTo(15082,5776);
ctx.lineTo(15046,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,110,242,0.85)';
ctx.strokeStyle='rgb(110,173,148)';
ctx.moveTo(15046,5680);
ctx.lineTo(15046,5644);
ctx.lineTo(15082,5644);
ctx.lineTo(15082,5680);
ctx.lineTo(15046,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,237,111,0.85)';
ctx.strokeStyle='rgb(73,86,134)';
ctx.moveTo(15142,5872);
ctx.lineTo(15142,5836);
ctx.lineTo(15178,5836);
ctx.lineTo(15178,5872);
ctx.lineTo(15142,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,215,87,0.85)';
ctx.strokeStyle='rgb(9,145,91)';
ctx.moveTo(15142,5776);
ctx.lineTo(15142,5740);
ctx.lineTo(15178,5740);
ctx.lineTo(15178,5776);
ctx.lineTo(15142,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,173,207,0.85)';
ctx.strokeStyle='rgb(117,171,30)';
ctx.moveTo(15142,5680);
ctx.lineTo(15142,5644);
ctx.lineTo(15178,5644);
ctx.lineTo(15178,5680);
ctx.lineTo(15142,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,20,37,0.85)';
ctx.strokeStyle='rgb(139,93,125)';
ctx.moveTo(14758,5872);
ctx.lineTo(14758,5836);
ctx.lineTo(14794,5836);
ctx.lineTo(14794,5872);
ctx.lineTo(14758,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,246,176,0.85)';
ctx.strokeStyle='rgb(215,150,66)';
ctx.moveTo(15478,7384);
ctx.lineTo(15478,7348);
ctx.lineTo(15514,7348);
ctx.lineTo(15514,7384);
ctx.lineTo(15478,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,130,115,0.85)';
ctx.strokeStyle='rgb(202,19,143)';
ctx.moveTo(15478,7288);
ctx.lineTo(15478,7252);
ctx.lineTo(15514,7252);
ctx.lineTo(15514,7288);
ctx.lineTo(15478,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,138,180,0.85)';
ctx.strokeStyle='rgb(151,210,4)';
ctx.moveTo(15478,7192);
ctx.lineTo(15478,7156);
ctx.lineTo(15514,7156);
ctx.lineTo(15514,7192);
ctx.lineTo(15478,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,52,105,0.85)';
ctx.strokeStyle='rgb(249,30,120)';
ctx.moveTo(15574,7384);
ctx.lineTo(15574,7348);
ctx.lineTo(15610,7348);
ctx.lineTo(15610,7384);
ctx.lineTo(15574,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,32,52,0.85)';
ctx.strokeStyle='rgb(188,65,248)';
ctx.moveTo(15574,7288);
ctx.lineTo(15574,7252);
ctx.lineTo(15610,7252);
ctx.lineTo(15610,7288);
ctx.lineTo(15574,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,120,12,0.85)';
ctx.strokeStyle='rgb(239,0,47)';
ctx.moveTo(15574,7192);
ctx.lineTo(15574,7156);
ctx.lineTo(15610,7156);
ctx.lineTo(15610,7192);
ctx.lineTo(15574,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,24,236,0.85)';
ctx.strokeStyle='rgb(80,230,84)';
ctx.moveTo(15670,7384);
ctx.lineTo(15670,7348);
ctx.lineTo(15706,7348);
ctx.lineTo(15706,7384);
ctx.lineTo(15670,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,130,46,0.85)';
ctx.strokeStyle='rgb(128,129,80)';
ctx.moveTo(15670,7288);
ctx.lineTo(15670,7252);
ctx.lineTo(15706,7252);
ctx.lineTo(15706,7288);
ctx.lineTo(15670,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,171,227,0.85)';
ctx.strokeStyle='rgb(15,106,119)';
ctx.moveTo(15670,7192);
ctx.lineTo(15670,7156);
ctx.lineTo(15706,7156);
ctx.lineTo(15706,7192);
ctx.lineTo(15670,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,180,186,0.85)';
ctx.strokeStyle='rgb(44,153,172)';
ctx.moveTo(15766,7384);
ctx.lineTo(15766,7348);
ctx.lineTo(15802,7348);
ctx.lineTo(15802,7384);
ctx.lineTo(15766,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,120,179,0.85)';
ctx.strokeStyle='rgb(52,99,15)';
ctx.moveTo(15766,7288);
ctx.lineTo(15766,7252);
ctx.lineTo(15802,7252);
ctx.lineTo(15802,7288);
ctx.lineTo(15766,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,109,172,0.85)';
ctx.strokeStyle='rgb(28,250,183)';
ctx.moveTo(15766,7192);
ctx.lineTo(15766,7156);
ctx.lineTo(15802,7156);
ctx.lineTo(15802,7192);
ctx.lineTo(15766,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,253,196,0.85)';
ctx.strokeStyle='rgb(211,224,26)';
ctx.moveTo(15862,7384);
ctx.lineTo(15862,7348);
ctx.lineTo(15898,7348);
ctx.lineTo(15898,7384);
ctx.lineTo(15862,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,189,151,0.85)';
ctx.strokeStyle='rgb(195,227,168)';
ctx.moveTo(15862,7288);
ctx.lineTo(15862,7252);
ctx.lineTo(15898,7252);
ctx.lineTo(15898,7288);
ctx.lineTo(15862,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,217,193,0.85)';
ctx.strokeStyle='rgb(215,193,194)';
ctx.moveTo(15862,7192);
ctx.lineTo(15862,7156);
ctx.lineTo(15898,7156);
ctx.lineTo(15898,7192);
ctx.lineTo(15862,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,93,118,0.85)';
ctx.strokeStyle='rgb(109,227,210)';
ctx.moveTo(15958,7384);
ctx.lineTo(15958,7348);
ctx.lineTo(15994,7348);
ctx.lineTo(15994,7384);
ctx.lineTo(15958,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,207,87,0.85)';
ctx.strokeStyle='rgb(216,237,214)';
ctx.moveTo(15958,7288);
ctx.lineTo(15958,7252);
ctx.lineTo(15994,7252);
ctx.lineTo(15994,7288);
ctx.lineTo(15958,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,138,65,0.85)';
ctx.strokeStyle='rgb(210,227,155)';
ctx.moveTo(15958,7192);
ctx.lineTo(15958,7156);
ctx.lineTo(15994,7156);
ctx.lineTo(15994,7192);
ctx.lineTo(15958,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,154,52,0.85)';
ctx.strokeStyle='rgb(71,90,59)';
ctx.moveTo(16054,7384);
ctx.lineTo(16054,7348);
ctx.lineTo(16090,7348);
ctx.lineTo(16090,7384);
ctx.lineTo(16054,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,88,224,0.85)';
ctx.strokeStyle='rgb(83,160,15)';
ctx.moveTo(16054,7288);
ctx.lineTo(16054,7252);
ctx.lineTo(16090,7252);
ctx.lineTo(16090,7288);
ctx.lineTo(16054,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,140,167,0.85)';
ctx.strokeStyle='rgb(190,85,18)';
ctx.moveTo(16054,7192);
ctx.lineTo(16054,7156);
ctx.lineTo(16090,7156);
ctx.lineTo(16090,7192);
ctx.lineTo(16054,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,46,188,0.85)';
ctx.strokeStyle='rgb(35,79,3)';
ctx.moveTo(16150,7384);
ctx.lineTo(16150,7348);
ctx.lineTo(16186,7348);
ctx.lineTo(16186,7384);
ctx.lineTo(16150,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,209,18,0.85)';
ctx.strokeStyle='rgb(184,90,151)';
ctx.moveTo(16150,7288);
ctx.lineTo(16150,7252);
ctx.lineTo(16186,7252);
ctx.lineTo(16186,7288);
ctx.lineTo(16150,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,209,190,0.85)';
ctx.strokeStyle='rgb(195,112,13)';
ctx.moveTo(16150,7192);
ctx.lineTo(16150,7156);
ctx.lineTo(16186,7156);
ctx.lineTo(16186,7192);
ctx.lineTo(16150,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,226,130,0.85)';
ctx.strokeStyle='rgb(14,38,241)';
ctx.moveTo(16246,7384);
ctx.lineTo(16246,7348);
ctx.lineTo(16282,7348);
ctx.lineTo(16282,7384);
ctx.lineTo(16246,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,254,1,0.85)';
ctx.strokeStyle='rgb(101,44,185)';
ctx.moveTo(16246,7288);
ctx.lineTo(16246,7252);
ctx.lineTo(16282,7252);
ctx.lineTo(16282,7288);
ctx.lineTo(16246,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,139,6,0.85)';
ctx.strokeStyle='rgb(195,225,95)';
ctx.moveTo(16246,7192);
ctx.lineTo(16246,7156);
ctx.lineTo(16282,7156);
ctx.lineTo(16282,7192);
ctx.lineTo(16246,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,174,122,0.85)';
ctx.strokeStyle='rgb(17,221,105)';
ctx.moveTo(16342,7384);
ctx.lineTo(16342,7348);
ctx.lineTo(16378,7348);
ctx.lineTo(16378,7384);
ctx.lineTo(16342,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,229,188,0.85)';
ctx.strokeStyle='rgb(90,160,64)';
ctx.moveTo(16342,7288);
ctx.lineTo(16342,7252);
ctx.lineTo(16378,7252);
ctx.lineTo(16378,7288);
ctx.lineTo(16342,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,28,228,0.85)';
ctx.strokeStyle='rgb(76,145,253)';
ctx.moveTo(16342,7192);
ctx.lineTo(16342,7156);
ctx.lineTo(16378,7156);
ctx.lineTo(16378,7192);
ctx.lineTo(16342,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,54,18,0.85)';
ctx.strokeStyle='rgb(15,119,76)';
ctx.moveTo(16438,7384);
ctx.lineTo(16438,7348);
ctx.lineTo(16474,7348);
ctx.lineTo(16474,7384);
ctx.lineTo(16438,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,10,245,0.85)';
ctx.strokeStyle='rgb(132,31,104)';
ctx.moveTo(16438,7288);
ctx.lineTo(16438,7252);
ctx.lineTo(16474,7252);
ctx.lineTo(16474,7288);
ctx.lineTo(16438,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,145,33,0.85)';
ctx.strokeStyle='rgb(197,172,115)';
ctx.moveTo(16438,7192);
ctx.lineTo(16438,7156);
ctx.lineTo(16474,7156);
ctx.lineTo(16474,7192);
ctx.lineTo(16438,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,207,93,0.85)';
ctx.strokeStyle='rgb(58,68,171)';
ctx.moveTo(6052,4360);
ctx.lineTo(6052,4324);
ctx.lineTo(6088,4324);
ctx.lineTo(6088,4360);
ctx.lineTo(6052,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,5,100,0.85)';
ctx.strokeStyle='rgb(124,13,36)';
ctx.moveTo(6052,4264);
ctx.lineTo(6052,4228);
ctx.lineTo(6088,4228);
ctx.lineTo(6088,4264);
ctx.lineTo(6052,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,233,236,0.85)';
ctx.strokeStyle='rgb(208,246,223)';
ctx.moveTo(6052,4168);
ctx.lineTo(6052,4132);
ctx.lineTo(6088,4132);
ctx.lineTo(6088,4168);
ctx.lineTo(6052,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,32,223,0.85)';
ctx.strokeStyle='rgb(188,71,52)';
ctx.moveTo(6148,4360);
ctx.lineTo(6148,4324);
ctx.lineTo(6184,4324);
ctx.lineTo(6184,4360);
ctx.lineTo(6148,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,222,100,0.85)';
ctx.strokeStyle='rgb(66,106,202)';
ctx.moveTo(6148,4264);
ctx.lineTo(6148,4228);
ctx.lineTo(6184,4228);
ctx.lineTo(6184,4264);
ctx.lineTo(6148,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,74,220,0.85)';
ctx.strokeStyle='rgb(122,107,237)';
ctx.moveTo(6148,4168);
ctx.lineTo(6148,4132);
ctx.lineTo(6184,4132);
ctx.lineTo(6184,4168);
ctx.lineTo(6148,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,62,138,0.85)';
ctx.strokeStyle='rgb(14,163,150)';
ctx.moveTo(6244,4360);
ctx.lineTo(6244,4324);
ctx.lineTo(6280,4324);
ctx.lineTo(6280,4360);
ctx.lineTo(6244,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,107,103,0.85)';
ctx.strokeStyle='rgb(207,40,233)';
ctx.moveTo(6244,4264);
ctx.lineTo(6244,4228);
ctx.lineTo(6280,4228);
ctx.lineTo(6280,4264);
ctx.lineTo(6244,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,44,184,0.85)';
ctx.strokeStyle='rgb(10,244,92)';
ctx.moveTo(6244,4168);
ctx.lineTo(6244,4132);
ctx.lineTo(6280,4132);
ctx.lineTo(6280,4168);
ctx.lineTo(6244,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,113,22,0.85)';
ctx.strokeStyle='rgb(61,22,166)';
ctx.moveTo(6340,4360);
ctx.lineTo(6340,4324);
ctx.lineTo(6376,4324);
ctx.lineTo(6376,4360);
ctx.lineTo(6340,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,217,37,0.85)';
ctx.strokeStyle='rgb(51,221,163)';
ctx.moveTo(6340,4264);
ctx.lineTo(6340,4228);
ctx.lineTo(6376,4228);
ctx.lineTo(6376,4264);
ctx.lineTo(6340,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,155,135,0.85)';
ctx.strokeStyle='rgb(192,207,105)';
ctx.moveTo(6340,4168);
ctx.lineTo(6340,4132);
ctx.lineTo(6376,4132);
ctx.lineTo(6376,4168);
ctx.lineTo(6340,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,253,173,0.85)';
ctx.strokeStyle='rgb(103,64,216)';
ctx.moveTo(6436,4360);
ctx.lineTo(6436,4324);
ctx.lineTo(6472,4324);
ctx.lineTo(6472,4360);
ctx.lineTo(6436,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,206,150,0.85)';
ctx.strokeStyle='rgb(35,104,104)';
ctx.moveTo(6436,4264);
ctx.lineTo(6436,4228);
ctx.lineTo(6472,4228);
ctx.lineTo(6472,4264);
ctx.lineTo(6436,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,21,83,0.85)';
ctx.strokeStyle='rgb(138,38,170)';
ctx.moveTo(6436,4168);
ctx.lineTo(6436,4132);
ctx.lineTo(6472,4132);
ctx.lineTo(6472,4168);
ctx.lineTo(6436,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,138,214,0.85)';
ctx.strokeStyle='rgb(169,90,217)';
ctx.moveTo(6052,808);
ctx.lineTo(6052,772);
ctx.lineTo(6088,772);
ctx.lineTo(6088,808);
ctx.lineTo(6052,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,50,178,0.85)';
ctx.strokeStyle='rgb(232,89,50)';
ctx.moveTo(6148,808);
ctx.lineTo(6148,772);
ctx.lineTo(6184,772);
ctx.lineTo(6184,808);
ctx.lineTo(6148,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,228,75,0.85)';
ctx.strokeStyle='rgb(189,180,8)';
ctx.moveTo(6244,808);
ctx.lineTo(6244,772);
ctx.lineTo(6280,772);
ctx.lineTo(6280,808);
ctx.lineTo(6244,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,176,60,0.85)';
ctx.strokeStyle='rgb(28,80,214)';
ctx.moveTo(6340,808);
ctx.lineTo(6340,772);
ctx.lineTo(6376,772);
ctx.lineTo(6376,808);
ctx.lineTo(6340,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,95,184,0.85)';
ctx.strokeStyle='rgb(30,144,36)';
ctx.moveTo(6436,808);
ctx.lineTo(6436,772);
ctx.lineTo(6472,772);
ctx.lineTo(6472,808);
ctx.lineTo(6436,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,217,84,0.85)';
ctx.strokeStyle='rgb(181,104,249)';
ctx.moveTo(6052,328);
ctx.lineTo(6052,292);
ctx.lineTo(6088,292);
ctx.lineTo(6088,328);
ctx.lineTo(6052,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,188,12,0.85)';
ctx.strokeStyle='rgb(213,28,14)';
ctx.moveTo(6052,712);
ctx.lineTo(6052,676);
ctx.lineTo(6088,676);
ctx.lineTo(6088,712);
ctx.lineTo(6052,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,235,35,0.85)';
ctx.strokeStyle='rgb(102,233,155)';
ctx.moveTo(6148,712);
ctx.lineTo(6148,676);
ctx.lineTo(6184,676);
ctx.lineTo(6184,712);
ctx.lineTo(6148,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,21,117,0.85)';
ctx.strokeStyle='rgb(91,123,46)';
ctx.moveTo(6148,616);
ctx.lineTo(6148,580);
ctx.lineTo(6184,580);
ctx.lineTo(6184,616);
ctx.lineTo(6148,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,71,224,0.85)';
ctx.strokeStyle='rgb(16,181,242)';
ctx.moveTo(6148,520);
ctx.lineTo(6148,484);
ctx.lineTo(6184,484);
ctx.lineTo(6184,520);
ctx.lineTo(6148,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,199,82,0.85)';
ctx.strokeStyle='rgb(184,50,215)';
ctx.moveTo(6148,424);
ctx.lineTo(6148,388);
ctx.lineTo(6184,388);
ctx.lineTo(6184,424);
ctx.lineTo(6148,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,102,162,0.85)';
ctx.strokeStyle='rgb(87,70,253)';
ctx.moveTo(6148,328);
ctx.lineTo(6148,292);
ctx.lineTo(6184,292);
ctx.lineTo(6184,328);
ctx.lineTo(6148,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,69,90,0.85)';
ctx.strokeStyle='rgb(117,119,49)';
ctx.moveTo(6052,616);
ctx.lineTo(6052,580);
ctx.lineTo(6088,580);
ctx.lineTo(6088,616);
ctx.lineTo(6052,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,207,30,0.85)';
ctx.strokeStyle='rgb(167,31,5)';
ctx.moveTo(6244,712);
ctx.lineTo(6244,676);
ctx.lineTo(6280,676);
ctx.lineTo(6280,712);
ctx.lineTo(6244,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,35,120,0.85)';
ctx.strokeStyle='rgb(143,138,4)';
ctx.moveTo(6244,616);
ctx.lineTo(6244,580);
ctx.lineTo(6280,580);
ctx.lineTo(6280,616);
ctx.lineTo(6244,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,230,248,0.85)';
ctx.strokeStyle='rgb(110,78,208)';
ctx.moveTo(6244,520);
ctx.lineTo(6244,484);
ctx.lineTo(6280,484);
ctx.lineTo(6280,520);
ctx.lineTo(6244,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,225,142,0.85)';
ctx.strokeStyle='rgb(148,123,84)';
ctx.moveTo(6244,424);
ctx.lineTo(6244,388);
ctx.lineTo(6280,388);
ctx.lineTo(6280,424);
ctx.lineTo(6244,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,122,173,0.85)';
ctx.strokeStyle='rgb(19,30,92)';
ctx.moveTo(6244,328);
ctx.lineTo(6244,292);
ctx.lineTo(6280,292);
ctx.lineTo(6280,328);
ctx.lineTo(6244,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,152,134,0.85)';
ctx.strokeStyle='rgb(68,63,80)';
ctx.moveTo(6052,520);
ctx.lineTo(6052,484);
ctx.lineTo(6088,484);
ctx.lineTo(6088,520);
ctx.lineTo(6052,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,110,154,0.85)';
ctx.strokeStyle='rgb(87,253,148)';
ctx.moveTo(6340,712);
ctx.lineTo(6340,676);
ctx.lineTo(6376,676);
ctx.lineTo(6376,712);
ctx.lineTo(6340,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,10,236,0.85)';
ctx.strokeStyle='rgb(34,80,195)';
ctx.moveTo(6340,616);
ctx.lineTo(6340,580);
ctx.lineTo(6376,580);
ctx.lineTo(6376,616);
ctx.lineTo(6340,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,68,250,0.85)';
ctx.strokeStyle='rgb(135,109,221)';
ctx.moveTo(6340,520);
ctx.lineTo(6340,484);
ctx.lineTo(6376,484);
ctx.lineTo(6376,520);
ctx.lineTo(6340,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,164,48,0.85)';
ctx.strokeStyle='rgb(195,25,250)';
ctx.moveTo(6340,424);
ctx.lineTo(6340,388);
ctx.lineTo(6376,388);
ctx.lineTo(6376,424);
ctx.lineTo(6340,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,214,113,0.85)';
ctx.strokeStyle='rgb(35,145,94)';
ctx.moveTo(6340,328);
ctx.lineTo(6340,292);
ctx.lineTo(6376,292);
ctx.lineTo(6376,328);
ctx.lineTo(6340,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,36,251,0.85)';
ctx.strokeStyle='rgb(167,243,26)';
ctx.moveTo(6052,424);
ctx.lineTo(6052,388);
ctx.lineTo(6088,388);
ctx.lineTo(6088,424);
ctx.lineTo(6052,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,233,55,0.85)';
ctx.strokeStyle='rgb(67,81,54)';
ctx.moveTo(6436,712);
ctx.lineTo(6436,676);
ctx.lineTo(6472,676);
ctx.lineTo(6472,712);
ctx.lineTo(6436,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,10,181,0.85)';
ctx.strokeStyle='rgb(235,63,155)';
ctx.moveTo(6436,616);
ctx.lineTo(6436,580);
ctx.lineTo(6472,580);
ctx.lineTo(6472,616);
ctx.lineTo(6436,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,144,192,0.85)';
ctx.strokeStyle='rgb(138,199,131)';
ctx.moveTo(6436,520);
ctx.lineTo(6436,484);
ctx.lineTo(6472,484);
ctx.lineTo(6472,520);
ctx.lineTo(6436,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,64,160,0.85)';
ctx.strokeStyle='rgb(22,79,20)';
ctx.moveTo(6436,424);
ctx.lineTo(6436,388);
ctx.lineTo(6472,388);
ctx.lineTo(6472,424);
ctx.lineTo(6436,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,183,143,0.85)';
ctx.strokeStyle='rgb(168,209,187)';
ctx.moveTo(6436,328);
ctx.lineTo(6436,292);
ctx.lineTo(6472,292);
ctx.lineTo(6472,328);
ctx.lineTo(6436,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,144,239,0.85)';
ctx.strokeStyle='rgb(227,175,126)';
ctx.moveTo(6148,904);
ctx.lineTo(6148,868);
ctx.lineTo(6184,868);
ctx.lineTo(6184,904);
ctx.lineTo(6148,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,134,102,0.85)';
ctx.strokeStyle='rgb(29,149,173)';
ctx.moveTo(6052,1192);
ctx.lineTo(6052,1156);
ctx.lineTo(6088,1156);
ctx.lineTo(6088,1192);
ctx.lineTo(6052,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,53,86,0.85)';
ctx.strokeStyle='rgb(129,109,177)';
ctx.moveTo(6052,1096);
ctx.lineTo(6052,1060);
ctx.lineTo(6088,1060);
ctx.lineTo(6088,1096);
ctx.lineTo(6052,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,141,171,0.85)';
ctx.strokeStyle='rgb(110,237,55)';
ctx.moveTo(6340,1288);
ctx.lineTo(6340,1252);
ctx.lineTo(6376,1252);
ctx.lineTo(6376,1288);
ctx.lineTo(6340,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,120,186,0.85)';
ctx.strokeStyle='rgb(239,145,237)';
ctx.moveTo(6340,1192);
ctx.lineTo(6340,1156);
ctx.lineTo(6376,1156);
ctx.lineTo(6376,1192);
ctx.lineTo(6340,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,169,31,0.85)';
ctx.strokeStyle='rgb(209,121,13)';
ctx.moveTo(6340,1096);
ctx.lineTo(6340,1060);
ctx.lineTo(6376,1060);
ctx.lineTo(6376,1096);
ctx.lineTo(6340,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,31,77,0.85)';
ctx.strokeStyle='rgb(95,73,72)';
ctx.moveTo(6340,1000);
ctx.lineTo(6340,964);
ctx.lineTo(6376,964);
ctx.lineTo(6376,1000);
ctx.lineTo(6340,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,71,187,0.85)';
ctx.strokeStyle='rgb(211,24,208)';
ctx.moveTo(6340,904);
ctx.lineTo(6340,868);
ctx.lineTo(6376,868);
ctx.lineTo(6376,904);
ctx.lineTo(6340,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,145,98,0.85)';
ctx.strokeStyle='rgb(36,176,228)';
ctx.moveTo(6052,1000);
ctx.lineTo(6052,964);
ctx.lineTo(6088,964);
ctx.lineTo(6088,1000);
ctx.lineTo(6052,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,120,168,0.85)';
ctx.strokeStyle='rgb(16,58,16)';
ctx.moveTo(6052,904);
ctx.lineTo(6052,868);
ctx.lineTo(6088,868);
ctx.lineTo(6088,904);
ctx.lineTo(6052,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,194,197,0.85)';
ctx.strokeStyle='rgb(147,145,22)';
ctx.moveTo(6052,1288);
ctx.lineTo(6052,1252);
ctx.lineTo(6088,1252);
ctx.lineTo(6088,1288);
ctx.lineTo(6052,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,55,9,0.85)';
ctx.strokeStyle='rgb(57,201,209)';
ctx.moveTo(6148,1288);
ctx.lineTo(6148,1252);
ctx.lineTo(6184,1252);
ctx.lineTo(6184,1288);
ctx.lineTo(6148,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,79,114,0.85)';
ctx.strokeStyle='rgb(32,169,251)';
ctx.moveTo(6244,1288);
ctx.lineTo(6244,1252);
ctx.lineTo(6280,1252);
ctx.lineTo(6280,1288);
ctx.lineTo(6244,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,63,163,0.85)';
ctx.strokeStyle='rgb(138,178,70)';
ctx.moveTo(6244,1192);
ctx.lineTo(6244,1156);
ctx.lineTo(6280,1156);
ctx.lineTo(6280,1192);
ctx.lineTo(6244,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,189,181,0.85)';
ctx.strokeStyle='rgb(142,132,85)';
ctx.moveTo(6436,1288);
ctx.lineTo(6436,1252);
ctx.lineTo(6472,1252);
ctx.lineTo(6472,1288);
ctx.lineTo(6436,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,53,226,0.85)';
ctx.strokeStyle='rgb(20,91,59)';
ctx.moveTo(6436,1192);
ctx.lineTo(6436,1156);
ctx.lineTo(6472,1156);
ctx.lineTo(6472,1192);
ctx.lineTo(6436,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,161,203,0.85)';
ctx.strokeStyle='rgb(71,246,183)';
ctx.moveTo(6436,1096);
ctx.lineTo(6436,1060);
ctx.lineTo(6472,1060);
ctx.lineTo(6472,1096);
ctx.lineTo(6436,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,45,52,0.85)';
ctx.strokeStyle='rgb(220,139,192)';
ctx.moveTo(6436,1000);
ctx.lineTo(6436,964);
ctx.lineTo(6472,964);
ctx.lineTo(6472,1000);
ctx.lineTo(6436,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,207,61,0.85)';
ctx.strokeStyle='rgb(70,246,218)';
ctx.moveTo(6436,904);
ctx.lineTo(6436,868);
ctx.lineTo(6472,868);
ctx.lineTo(6472,904);
ctx.lineTo(6436,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,223,211,0.85)';
ctx.strokeStyle='rgb(22,97,139)';
ctx.moveTo(6244,1096);
ctx.lineTo(6244,1060);
ctx.lineTo(6280,1060);
ctx.lineTo(6280,1096);
ctx.lineTo(6244,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,173,3,0.85)';
ctx.strokeStyle='rgb(191,153,36)';
ctx.moveTo(6244,1000);
ctx.lineTo(6244,964);
ctx.lineTo(6280,964);
ctx.lineTo(6280,1000);
ctx.lineTo(6244,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,122,87,0.85)';
ctx.strokeStyle='rgb(32,47,145)';
ctx.moveTo(6244,904);
ctx.lineTo(6244,868);
ctx.lineTo(6280,868);
ctx.lineTo(6280,904);
ctx.lineTo(6244,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,97,174,0.85)';
ctx.strokeStyle='rgb(92,29,44)';
ctx.moveTo(6148,1192);
ctx.lineTo(6148,1156);
ctx.lineTo(6184,1156);
ctx.lineTo(6184,1192);
ctx.lineTo(6148,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,202,97,0.85)';
ctx.strokeStyle='rgb(209,64,16)';
ctx.moveTo(6148,1096);
ctx.lineTo(6148,1060);
ctx.lineTo(6184,1060);
ctx.lineTo(6184,1096);
ctx.lineTo(6148,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,244,229,0.85)';
ctx.strokeStyle='rgb(50,156,219)';
ctx.moveTo(6148,1000);
ctx.lineTo(6148,964);
ctx.lineTo(6184,964);
ctx.lineTo(6184,1000);
ctx.lineTo(6148,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,67,6,0.85)';
ctx.strokeStyle='rgb(143,164,75)';
ctx.moveTo(3856,2818);
ctx.lineTo(3856,2782);
ctx.lineTo(3892,2782);
ctx.lineTo(3892,2818);
ctx.lineTo(3856,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,142,174,0.85)';
ctx.strokeStyle='rgb(225,156,182)';
ctx.moveTo(3856,2104);
ctx.lineTo(3856,2068);
ctx.lineTo(3892,2068);
ctx.lineTo(3892,2104);
ctx.lineTo(3856,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,246,226,0.85)';
ctx.strokeStyle='rgb(225,33,197)';
ctx.moveTo(3856,2008);
ctx.lineTo(3856,1972);
ctx.lineTo(3892,1972);
ctx.lineTo(3892,2008);
ctx.lineTo(3856,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,91,199,0.85)';
ctx.strokeStyle='rgb(60,65,185)';
ctx.moveTo(3856,1912);
ctx.lineTo(3856,1876);
ctx.lineTo(3892,1876);
ctx.lineTo(3892,1912);
ctx.lineTo(3856,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,16,237,0.85)';
ctx.strokeStyle='rgb(181,106,86)';
ctx.moveTo(3856,1816);
ctx.lineTo(3856,1780);
ctx.lineTo(3892,1780);
ctx.lineTo(3892,1816);
ctx.lineTo(3856,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,239,118,0.85)';
ctx.strokeStyle='rgb(31,236,146)';
ctx.moveTo(3856,1720);
ctx.lineTo(3856,1684);
ctx.lineTo(3892,1684);
ctx.lineTo(3892,1720);
ctx.lineTo(3856,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,89,140,0.85)';
ctx.strokeStyle='rgb(22,30,180)';
ctx.moveTo(3856,1624);
ctx.lineTo(3856,1588);
ctx.lineTo(3892,1588);
ctx.lineTo(3892,1624);
ctx.lineTo(3856,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,80,232,0.85)';
ctx.strokeStyle='rgb(141,250,45)';
ctx.moveTo(3856,2584);
ctx.lineTo(3856,2548);
ctx.lineTo(3892,2548);
ctx.lineTo(3892,2584);
ctx.lineTo(3856,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,167,121,0.85)';
ctx.strokeStyle='rgb(70,29,250)';
ctx.moveTo(3856,2488);
ctx.lineTo(3856,2452);
ctx.lineTo(3892,2452);
ctx.lineTo(3892,2488);
ctx.lineTo(3856,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,13,76,0.85)';
ctx.strokeStyle='rgb(238,93,249)';
ctx.moveTo(3856,2392);
ctx.lineTo(3856,2356);
ctx.lineTo(3892,2356);
ctx.lineTo(3892,2392);
ctx.lineTo(3856,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,250,83,0.85)';
ctx.strokeStyle='rgb(250,127,211)';
ctx.moveTo(3856,2296);
ctx.lineTo(3856,2260);
ctx.lineTo(3892,2260);
ctx.lineTo(3892,2296);
ctx.lineTo(3856,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,7,187,0.85)';
ctx.strokeStyle='rgb(228,189,121)';
ctx.moveTo(3856,2200);
ctx.lineTo(3856,2164);
ctx.lineTo(3892,2164);
ctx.lineTo(3892,2200);
ctx.lineTo(3856,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,57,211,0.85)';
ctx.strokeStyle='rgb(233,161,184)';
ctx.moveTo(5476,424);
ctx.lineTo(5476,388);
ctx.lineTo(5512,388);
ctx.lineTo(5512,424);
ctx.lineTo(5476,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,177,253,0.85)';
ctx.strokeStyle='rgb(179,213,92)';
ctx.moveTo(5860,712);
ctx.lineTo(5860,676);
ctx.lineTo(5896,676);
ctx.lineTo(5896,712);
ctx.lineTo(5860,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,11,81,0.85)';
ctx.strokeStyle='rgb(160,54,57)';
ctx.moveTo(5860,616);
ctx.lineTo(5860,580);
ctx.lineTo(5896,580);
ctx.lineTo(5896,616);
ctx.lineTo(5860,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,93,63,0.85)';
ctx.strokeStyle='rgb(41,154,97)';
ctx.moveTo(5860,520);
ctx.lineTo(5860,484);
ctx.lineTo(5896,484);
ctx.lineTo(5896,520);
ctx.lineTo(5860,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,174,182,0.85)';
ctx.strokeStyle='rgb(98,46,76)';
ctx.moveTo(5860,424);
ctx.lineTo(5860,388);
ctx.lineTo(5896,388);
ctx.lineTo(5896,424);
ctx.lineTo(5860,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,67,41,0.85)';
ctx.strokeStyle='rgb(136,177,117)';
ctx.moveTo(5860,328);
ctx.lineTo(5860,292);
ctx.lineTo(5896,292);
ctx.lineTo(5896,328);
ctx.lineTo(5860,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,23,88,0.85)';
ctx.strokeStyle='rgb(222,221,87)';
ctx.moveTo(5476,328);
ctx.lineTo(5476,292);
ctx.lineTo(5512,292);
ctx.lineTo(5512,328);
ctx.lineTo(5476,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,48,223,0.85)';
ctx.strokeStyle='rgb(252,110,149)';
ctx.moveTo(5476,712);
ctx.lineTo(5476,676);
ctx.lineTo(5512,676);
ctx.lineTo(5512,712);
ctx.lineTo(5476,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,67,206,0.85)';
ctx.strokeStyle='rgb(166,90,159)';
ctx.moveTo(5572,712);
ctx.lineTo(5572,676);
ctx.lineTo(5608,676);
ctx.lineTo(5608,712);
ctx.lineTo(5572,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,196,163,0.85)';
ctx.strokeStyle='rgb(149,76,172)';
ctx.moveTo(5572,616);
ctx.lineTo(5572,580);
ctx.lineTo(5608,580);
ctx.lineTo(5608,616);
ctx.lineTo(5572,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,23,234,0.85)';
ctx.strokeStyle='rgb(202,221,117)';
ctx.moveTo(5572,520);
ctx.lineTo(5572,484);
ctx.lineTo(5608,484);
ctx.lineTo(5608,520);
ctx.lineTo(5572,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,82,91,0.85)';
ctx.strokeStyle='rgb(142,97,171)';
ctx.moveTo(5572,424);
ctx.lineTo(5572,388);
ctx.lineTo(5608,388);
ctx.lineTo(5608,424);
ctx.lineTo(5572,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,95,133,0.85)';
ctx.strokeStyle='rgb(73,6,33)';
ctx.moveTo(5572,328);
ctx.lineTo(5572,292);
ctx.lineTo(5608,292);
ctx.lineTo(5608,328);
ctx.lineTo(5572,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,248,116,0.85)';
ctx.strokeStyle='rgb(126,224,130)';
ctx.moveTo(5476,616);
ctx.lineTo(5476,580);
ctx.lineTo(5512,580);
ctx.lineTo(5512,616);
ctx.lineTo(5476,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,182,16,0.85)';
ctx.strokeStyle='rgb(108,87,14)';
ctx.moveTo(5668,712);
ctx.lineTo(5668,676);
ctx.lineTo(5704,676);
ctx.lineTo(5704,712);
ctx.lineTo(5668,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,61,239,0.85)';
ctx.strokeStyle='rgb(12,20,93)';
ctx.moveTo(5668,616);
ctx.lineTo(5668,580);
ctx.lineTo(5704,580);
ctx.lineTo(5704,616);
ctx.lineTo(5668,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,80,239,0.85)';
ctx.strokeStyle='rgb(98,118,224)';
ctx.moveTo(5668,520);
ctx.lineTo(5668,484);
ctx.lineTo(5704,484);
ctx.lineTo(5704,520);
ctx.lineTo(5668,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,160,227,0.85)';
ctx.strokeStyle='rgb(114,90,154)';
ctx.moveTo(5668,424);
ctx.lineTo(5668,388);
ctx.lineTo(5704,388);
ctx.lineTo(5704,424);
ctx.lineTo(5668,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,247,192,0.85)';
ctx.strokeStyle='rgb(93,187,200)';
ctx.moveTo(5668,328);
ctx.lineTo(5668,292);
ctx.lineTo(5704,292);
ctx.lineTo(5704,328);
ctx.lineTo(5668,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,207,47,0.85)';
ctx.strokeStyle='rgb(246,33,77)';
ctx.moveTo(5476,520);
ctx.lineTo(5476,484);
ctx.lineTo(5512,484);
ctx.lineTo(5512,520);
ctx.lineTo(5476,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,74,250,0.85)';
ctx.strokeStyle='rgb(213,134,85)';
ctx.moveTo(5764,712);
ctx.lineTo(5764,676);
ctx.lineTo(5800,676);
ctx.lineTo(5800,712);
ctx.lineTo(5764,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,87,195,0.85)';
ctx.strokeStyle='rgb(233,104,181)';
ctx.moveTo(5764,616);
ctx.lineTo(5764,580);
ctx.lineTo(5800,580);
ctx.lineTo(5800,616);
ctx.lineTo(5764,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,35,19,0.85)';
ctx.strokeStyle='rgb(122,87,26)';
ctx.moveTo(5860,1096);
ctx.lineTo(5860,1060);
ctx.lineTo(5896,1060);
ctx.lineTo(5896,1096);
ctx.lineTo(5860,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,39,29,0.85)';
ctx.strokeStyle='rgb(32,114,173)';
ctx.moveTo(5860,1000);
ctx.lineTo(5860,964);
ctx.lineTo(5896,964);
ctx.lineTo(5896,1000);
ctx.lineTo(5860,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,148,147,0.85)';
ctx.strokeStyle='rgb(78,236,120)';
ctx.moveTo(5860,904);
ctx.lineTo(5860,868);
ctx.lineTo(5896,868);
ctx.lineTo(5896,904);
ctx.lineTo(5860,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,185,193,0.85)';
ctx.strokeStyle='rgb(0,58,227)';
ctx.moveTo(5668,1096);
ctx.lineTo(5668,1060);
ctx.lineTo(5704,1060);
ctx.lineTo(5704,1096);
ctx.lineTo(5668,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,1,153,0.85)';
ctx.strokeStyle='rgb(223,117,12)';
ctx.moveTo(5668,1000);
ctx.lineTo(5668,964);
ctx.lineTo(5704,964);
ctx.lineTo(5704,1000);
ctx.lineTo(5668,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,135,25,0.85)';
ctx.strokeStyle='rgb(99,236,84)';
ctx.moveTo(5668,904);
ctx.lineTo(5668,868);
ctx.lineTo(5704,868);
ctx.lineTo(5704,904);
ctx.lineTo(5668,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,5,58,0.85)';
ctx.strokeStyle='rgb(92,59,105)';
ctx.moveTo(5572,1192);
ctx.lineTo(5572,1156);
ctx.lineTo(5608,1156);
ctx.lineTo(5608,1192);
ctx.lineTo(5572,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,51,118,0.85)';
ctx.strokeStyle='rgb(93,153,128)';
ctx.moveTo(5572,1096);
ctx.lineTo(5572,1060);
ctx.lineTo(5608,1060);
ctx.lineTo(5608,1096);
ctx.lineTo(5572,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,176,17,0.85)';
ctx.strokeStyle='rgb(248,204,53)';
ctx.moveTo(5572,1000);
ctx.lineTo(5572,964);
ctx.lineTo(5608,964);
ctx.lineTo(5608,1000);
ctx.lineTo(5572,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,45,198,0.85)';
ctx.strokeStyle='rgb(143,58,102)';
ctx.moveTo(5572,904);
ctx.lineTo(5572,868);
ctx.lineTo(5608,868);
ctx.lineTo(5608,904);
ctx.lineTo(5572,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,230,142,0.85)';
ctx.strokeStyle='rgb(132,193,14)';
ctx.moveTo(5476,1192);
ctx.lineTo(5476,1156);
ctx.lineTo(5512,1156);
ctx.lineTo(5512,1192);
ctx.lineTo(5476,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,100,218,0.85)';
ctx.strokeStyle='rgb(121,187,215)';
ctx.moveTo(5476,1096);
ctx.lineTo(5476,1060);
ctx.lineTo(5512,1060);
ctx.lineTo(5512,1096);
ctx.lineTo(5476,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,190,234,0.85)';
ctx.strokeStyle='rgb(79,29,132)';
ctx.moveTo(5764,1288);
ctx.lineTo(5764,1252);
ctx.lineTo(5800,1252);
ctx.lineTo(5800,1288);
ctx.lineTo(5764,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,6,61,0.85)';
ctx.strokeStyle='rgb(231,43,147)';
ctx.moveTo(5764,1192);
ctx.lineTo(5764,1156);
ctx.lineTo(5800,1156);
ctx.lineTo(5800,1192);
ctx.lineTo(5764,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,79,111,0.85)';
ctx.strokeStyle='rgb(195,118,81)';
ctx.moveTo(5764,1096);
ctx.lineTo(5764,1060);
ctx.lineTo(5800,1060);
ctx.lineTo(5800,1096);
ctx.lineTo(5764,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,219,235,0.85)';
ctx.strokeStyle='rgb(48,9,132)';
ctx.moveTo(5764,1000);
ctx.lineTo(5764,964);
ctx.lineTo(5800,964);
ctx.lineTo(5800,1000);
ctx.lineTo(5764,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,217,27,0.85)';
ctx.strokeStyle='rgb(196,14,56)';
ctx.moveTo(5764,904);
ctx.lineTo(5764,868);
ctx.lineTo(5800,868);
ctx.lineTo(5800,904);
ctx.lineTo(5764,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,184,11,0.85)';
ctx.strokeStyle='rgb(196,242,182)';
ctx.moveTo(5476,1000);
ctx.lineTo(5476,964);
ctx.lineTo(5512,964);
ctx.lineTo(5512,1000);
ctx.lineTo(5476,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,248,172,0.85)';
ctx.strokeStyle='rgb(138,171,109)';
ctx.moveTo(5476,904);
ctx.lineTo(5476,868);
ctx.lineTo(5512,868);
ctx.lineTo(5512,904);
ctx.lineTo(5476,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,156,207,0.85)';
ctx.strokeStyle='rgb(241,213,36)';
ctx.moveTo(5476,1288);
ctx.lineTo(5476,1252);
ctx.lineTo(5512,1252);
ctx.lineTo(5512,1288);
ctx.lineTo(5476,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,128,109,0.85)';
ctx.strokeStyle='rgb(182,162,224)';
ctx.moveTo(5572,1288);
ctx.lineTo(5572,1252);
ctx.lineTo(5608,1252);
ctx.lineTo(5608,1288);
ctx.lineTo(5572,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,228,169,0.85)';
ctx.strokeStyle='rgb(156,186,199)';
ctx.moveTo(5668,1288);
ctx.lineTo(5668,1252);
ctx.lineTo(5704,1252);
ctx.lineTo(5704,1288);
ctx.lineTo(5668,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,74,247,0.85)';
ctx.strokeStyle='rgb(65,55,143)';
ctx.moveTo(5668,1192);
ctx.lineTo(5668,1156);
ctx.lineTo(5704,1156);
ctx.lineTo(5704,1192);
ctx.lineTo(5668,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,81,32,0.85)';
ctx.strokeStyle='rgb(110,136,101)';
ctx.moveTo(5860,1288);
ctx.lineTo(5860,1252);
ctx.lineTo(5896,1252);
ctx.lineTo(5896,1288);
ctx.lineTo(5860,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,88,246,0.85)';
ctx.strokeStyle='rgb(54,182,57)';
ctx.moveTo(5860,1192);
ctx.lineTo(5860,1156);
ctx.lineTo(5896,1156);
ctx.lineTo(5896,1192);
ctx.lineTo(5860,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,252,153,0.85)';
ctx.strokeStyle='rgb(128,185,120)';
ctx.moveTo(5956,616);
ctx.lineTo(5956,580);
ctx.lineTo(5992,580);
ctx.lineTo(5992,616);
ctx.lineTo(5956,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,182,166,0.85)';
ctx.strokeStyle='rgb(87,227,35)';
ctx.moveTo(5956,520);
ctx.lineTo(5956,484);
ctx.lineTo(5992,484);
ctx.lineTo(5992,520);
ctx.lineTo(5956,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,173,169,0.85)';
ctx.strokeStyle='rgb(24,155,172)';
ctx.moveTo(5956,424);
ctx.lineTo(5956,388);
ctx.lineTo(5992,388);
ctx.lineTo(5992,424);
ctx.lineTo(5956,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,226,148,0.85)';
ctx.strokeStyle='rgb(249,155,236)';
ctx.moveTo(5956,328);
ctx.lineTo(5956,292);
ctx.lineTo(5992,292);
ctx.lineTo(5992,328);
ctx.lineTo(5956,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,64,70,0.85)';
ctx.strokeStyle='rgb(55,146,147)';
ctx.moveTo(5476,808);
ctx.lineTo(5476,772);
ctx.lineTo(5512,772);
ctx.lineTo(5512,808);
ctx.lineTo(5476,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,20,174,0.85)';
ctx.strokeStyle='rgb(173,199,252)';
ctx.moveTo(5572,808);
ctx.lineTo(5572,772);
ctx.lineTo(5608,772);
ctx.lineTo(5608,808);
ctx.lineTo(5572,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,209,73,0.85)';
ctx.strokeStyle='rgb(124,28,228)';
ctx.moveTo(5668,808);
ctx.lineTo(5668,772);
ctx.lineTo(5704,772);
ctx.lineTo(5704,808);
ctx.lineTo(5668,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,75,8,0.85)';
ctx.strokeStyle='rgb(136,161,47)';
ctx.moveTo(5764,808);
ctx.lineTo(5764,772);
ctx.lineTo(5800,772);
ctx.lineTo(5800,808);
ctx.lineTo(5764,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,229,9,0.85)';
ctx.strokeStyle='rgb(204,219,136)';
ctx.moveTo(5860,808);
ctx.lineTo(5860,772);
ctx.lineTo(5896,772);
ctx.lineTo(5896,808);
ctx.lineTo(5860,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,103,122,0.85)';
ctx.strokeStyle='rgb(21,84,144)';
ctx.moveTo(3952,2104);
ctx.lineTo(3952,2068);
ctx.lineTo(3988,2068);
ctx.lineTo(3988,2104);
ctx.lineTo(3952,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,101,199,0.85)';
ctx.strokeStyle='rgb(73,113,57)';
ctx.moveTo(5956,1288);
ctx.lineTo(5956,1252);
ctx.lineTo(5992,1252);
ctx.lineTo(5992,1288);
ctx.lineTo(5956,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,37,3,0.85)';
ctx.strokeStyle='rgb(213,114,203)';
ctx.moveTo(5956,1192);
ctx.lineTo(5956,1156);
ctx.lineTo(5992,1156);
ctx.lineTo(5992,1192);
ctx.lineTo(5956,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,225,208,0.85)';
ctx.strokeStyle='rgb(82,142,159)';
ctx.moveTo(5956,1096);
ctx.lineTo(5956,1060);
ctx.lineTo(5992,1060);
ctx.lineTo(5992,1096);
ctx.lineTo(5956,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,149,228,0.85)';
ctx.strokeStyle='rgb(16,57,16)';
ctx.moveTo(5956,1000);
ctx.lineTo(5956,964);
ctx.lineTo(5992,964);
ctx.lineTo(5992,1000);
ctx.lineTo(5956,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,133,42,0.85)';
ctx.strokeStyle='rgb(172,218,234)';
ctx.moveTo(5956,904);
ctx.lineTo(5956,868);
ctx.lineTo(5992,868);
ctx.lineTo(5992,904);
ctx.lineTo(5956,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,0,194,0.85)';
ctx.strokeStyle='rgb(35,39,4)';
ctx.moveTo(3952,2008);
ctx.lineTo(3952,1972);
ctx.lineTo(3988,1972);
ctx.lineTo(3988,2008);
ctx.lineTo(3952,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,17,64,0.85)';
ctx.strokeStyle='rgb(5,119,102)';
ctx.moveTo(3952,1912);
ctx.lineTo(3952,1876);
ctx.lineTo(3988,1876);
ctx.lineTo(3988,1912);
ctx.lineTo(3952,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,79,88,0.85)';
ctx.strokeStyle='rgb(63,230,2)';
ctx.moveTo(3952,1816);
ctx.lineTo(3952,1780);
ctx.lineTo(3988,1780);
ctx.lineTo(3988,1816);
ctx.lineTo(3952,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,233,161,0.85)';
ctx.strokeStyle='rgb(202,126,152)';
ctx.moveTo(3952,1720);
ctx.lineTo(3952,1684);
ctx.lineTo(3988,1684);
ctx.lineTo(3988,1720);
ctx.lineTo(3952,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,101,87,0.85)';
ctx.strokeStyle='rgb(113,37,1)';
ctx.moveTo(3952,1624);
ctx.lineTo(3952,1588);
ctx.lineTo(3988,1588);
ctx.lineTo(3988,1624);
ctx.lineTo(3952,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,91,102,0.85)';
ctx.strokeStyle='rgb(186,223,30)';
ctx.moveTo(5956,808);
ctx.lineTo(5956,772);
ctx.lineTo(5992,772);
ctx.lineTo(5992,808);
ctx.lineTo(5956,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,101,117,0.85)';
ctx.strokeStyle='rgb(97,160,31)';
ctx.moveTo(5956,712);
ctx.lineTo(5956,676);
ctx.lineTo(5992,676);
ctx.lineTo(5992,712);
ctx.lineTo(5956,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,180,251,0.85)';
ctx.strokeStyle='rgb(176,251,206)';
ctx.moveTo(5764,520);
ctx.lineTo(5764,484);
ctx.lineTo(5800,484);
ctx.lineTo(5800,520);
ctx.lineTo(5764,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,90,54,0.85)';
ctx.strokeStyle='rgb(12,48,216)';
ctx.moveTo(5764,424);
ctx.lineTo(5764,388);
ctx.lineTo(5800,388);
ctx.lineTo(5800,424);
ctx.lineTo(5764,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,71,19,0.85)';
ctx.strokeStyle='rgb(135,244,119)';
ctx.moveTo(5764,328);
ctx.lineTo(5764,292);
ctx.lineTo(5800,292);
ctx.lineTo(5800,328);
ctx.lineTo(5764,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,150,252,0.85)';
ctx.strokeStyle='rgb(120,101,122)';
ctx.moveTo(3952,2392);
ctx.lineTo(3952,2356);
ctx.lineTo(3988,2356);
ctx.lineTo(3988,2392);
ctx.lineTo(3952,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,13,188,0.85)';
ctx.strokeStyle='rgb(242,167,12)';
ctx.moveTo(3952,2296);
ctx.lineTo(3952,2260);
ctx.lineTo(3988,2260);
ctx.lineTo(3988,2296);
ctx.lineTo(3952,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,151,109,0.85)';
ctx.strokeStyle='rgb(251,51,163)';
ctx.moveTo(3952,2200);
ctx.lineTo(3952,2164);
ctx.lineTo(3988,2164);
ctx.lineTo(3988,2200);
ctx.lineTo(3952,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,118,73,0.85)';
ctx.strokeStyle='rgb(239,151,49)';
ctx.moveTo(2272,808);
ctx.lineTo(2272,772);
ctx.lineTo(2308,772);
ctx.lineTo(2308,808);
ctx.lineTo(2272,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,176,210,0.85)';
ctx.strokeStyle='rgb(207,29,143)';
ctx.moveTo(2368,808);
ctx.lineTo(2368,772);
ctx.lineTo(2404,772);
ctx.lineTo(2404,808);
ctx.lineTo(2368,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,23,176,0.85)';
ctx.strokeStyle='rgb(71,73,222)';
ctx.moveTo(2464,808);
ctx.lineTo(2464,772);
ctx.lineTo(2500,772);
ctx.lineTo(2500,808);
ctx.lineTo(2464,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,163,28,0.85)';
ctx.strokeStyle='rgb(103,40,142)';
ctx.moveTo(2560,808);
ctx.lineTo(2560,772);
ctx.lineTo(2596,772);
ctx.lineTo(2596,808);
ctx.lineTo(2560,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,165,25,0.85)';
ctx.strokeStyle='rgb(151,3,93)';
ctx.moveTo(2656,808);
ctx.lineTo(2656,772);
ctx.lineTo(2692,772);
ctx.lineTo(2692,808);
ctx.lineTo(2656,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,42,209,0.85)';
ctx.strokeStyle='rgb(135,233,136)';
ctx.moveTo(2272,328);
ctx.lineTo(2272,292);
ctx.lineTo(2308,292);
ctx.lineTo(2308,328);
ctx.lineTo(2272,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,25,246,0.85)';
ctx.strokeStyle='rgb(157,30,244)';
ctx.moveTo(2272,712);
ctx.lineTo(2272,676);
ctx.lineTo(2308,676);
ctx.lineTo(2308,712);
ctx.lineTo(2272,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,164,174,0.85)';
ctx.strokeStyle='rgb(173,204,112)';
ctx.moveTo(2368,712);
ctx.lineTo(2368,676);
ctx.lineTo(2404,676);
ctx.lineTo(2404,712);
ctx.lineTo(2368,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,172,116,0.85)';
ctx.strokeStyle='rgb(153,122,150)';
ctx.moveTo(2368,616);
ctx.lineTo(2368,580);
ctx.lineTo(2404,580);
ctx.lineTo(2404,616);
ctx.lineTo(2368,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,167,63,0.85)';
ctx.strokeStyle='rgb(126,192,230)';
ctx.moveTo(2368,520);
ctx.lineTo(2368,484);
ctx.lineTo(2404,484);
ctx.lineTo(2404,520);
ctx.lineTo(2368,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,152,164,0.85)';
ctx.strokeStyle='rgb(254,173,86)';
ctx.moveTo(2368,424);
ctx.lineTo(2368,388);
ctx.lineTo(2404,388);
ctx.lineTo(2404,424);
ctx.lineTo(2368,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,134,249,0.85)';
ctx.strokeStyle='rgb(109,168,21)';
ctx.moveTo(2368,328);
ctx.lineTo(2368,292);
ctx.lineTo(2404,292);
ctx.lineTo(2404,328);
ctx.lineTo(2368,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,91,149,0.85)';
ctx.strokeStyle='rgb(254,219,233)';
ctx.moveTo(2272,616);
ctx.lineTo(2272,580);
ctx.lineTo(2308,580);
ctx.lineTo(2308,616);
ctx.lineTo(2272,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,30,113,0.85)';
ctx.strokeStyle='rgb(195,94,149)';
ctx.moveTo(2464,712);
ctx.lineTo(2464,676);
ctx.lineTo(2500,676);
ctx.lineTo(2500,712);
ctx.lineTo(2464,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,242,182,0.85)';
ctx.strokeStyle='rgb(195,112,245)';
ctx.moveTo(2464,616);
ctx.lineTo(2464,580);
ctx.lineTo(2500,580);
ctx.lineTo(2500,616);
ctx.lineTo(2464,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,73,33,0.85)';
ctx.strokeStyle='rgb(185,206,65)';
ctx.moveTo(2464,520);
ctx.lineTo(2464,484);
ctx.lineTo(2500,484);
ctx.lineTo(2500,520);
ctx.lineTo(2464,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,232,163,0.85)';
ctx.strokeStyle='rgb(26,178,101)';
ctx.moveTo(2464,424);
ctx.lineTo(2464,388);
ctx.lineTo(2500,388);
ctx.lineTo(2500,424);
ctx.lineTo(2464,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,195,19,0.85)';
ctx.strokeStyle='rgb(15,250,242)';
ctx.moveTo(2464,328);
ctx.lineTo(2464,292);
ctx.lineTo(2500,292);
ctx.lineTo(2500,328);
ctx.lineTo(2464,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,215,106,0.85)';
ctx.strokeStyle='rgb(140,110,214)';
ctx.moveTo(2272,520);
ctx.lineTo(2272,484);
ctx.lineTo(2308,484);
ctx.lineTo(2308,520);
ctx.lineTo(2272,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,3,152,0.85)';
ctx.strokeStyle='rgb(253,35,20)';
ctx.moveTo(2560,712);
ctx.lineTo(2560,676);
ctx.lineTo(2596,676);
ctx.lineTo(2596,712);
ctx.lineTo(2560,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,14,80,0.85)';
ctx.strokeStyle='rgb(253,79,50)';
ctx.moveTo(2560,616);
ctx.lineTo(2560,580);
ctx.lineTo(2596,580);
ctx.lineTo(2596,616);
ctx.lineTo(2560,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,219,138,0.85)';
ctx.strokeStyle='rgb(136,220,61)';
ctx.moveTo(2560,520);
ctx.lineTo(2560,484);
ctx.lineTo(2596,484);
ctx.lineTo(2596,520);
ctx.lineTo(2560,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,187,254,0.85)';
ctx.strokeStyle='rgb(91,97,52)';
ctx.moveTo(2560,424);
ctx.lineTo(2560,388);
ctx.lineTo(2596,388);
ctx.lineTo(2596,424);
ctx.lineTo(2560,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,43,223,0.85)';
ctx.strokeStyle='rgb(177,98,15)';
ctx.moveTo(2560,328);
ctx.lineTo(2560,292);
ctx.lineTo(2596,292);
ctx.lineTo(2596,328);
ctx.lineTo(2560,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,50,153,0.85)';
ctx.strokeStyle='rgb(136,146,67)';
ctx.moveTo(2272,424);
ctx.lineTo(2272,388);
ctx.lineTo(2308,388);
ctx.lineTo(2308,424);
ctx.lineTo(2272,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,69,87,0.85)';
ctx.strokeStyle='rgb(8,177,222)';
ctx.moveTo(2656,712);
ctx.lineTo(2656,676);
ctx.lineTo(2692,676);
ctx.lineTo(2692,712);
ctx.lineTo(2656,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,142,49,0.85)';
ctx.strokeStyle='rgb(124,225,51)';
ctx.moveTo(2656,616);
ctx.lineTo(2656,580);
ctx.lineTo(2692,580);
ctx.lineTo(2692,616);
ctx.lineTo(2656,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,146,33,0.85)';
ctx.strokeStyle='rgb(93,223,249)';
ctx.moveTo(2656,520);
ctx.lineTo(2656,484);
ctx.lineTo(2692,484);
ctx.lineTo(2692,520);
ctx.lineTo(2656,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,96,98,0.85)';
ctx.strokeStyle='rgb(51,68,202)';
ctx.moveTo(2656,424);
ctx.lineTo(2656,388);
ctx.lineTo(2692,388);
ctx.lineTo(2692,424);
ctx.lineTo(2656,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,109,87,0.85)';
ctx.strokeStyle='rgb(42,120,236)';
ctx.moveTo(2656,328);
ctx.lineTo(2656,292);
ctx.lineTo(2692,292);
ctx.lineTo(2692,328);
ctx.lineTo(2656,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,252,222,0.85)';
ctx.strokeStyle='rgb(29,34,80)';
ctx.moveTo(2176,520);
ctx.lineTo(2176,484);
ctx.lineTo(2212,484);
ctx.lineTo(2212,520);
ctx.lineTo(2176,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,210,120,0.85)';
ctx.strokeStyle='rgb(33,206,31)';
ctx.moveTo(2176,424);
ctx.lineTo(2176,388);
ctx.lineTo(2212,388);
ctx.lineTo(2212,424);
ctx.lineTo(2176,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,110,36,0.85)';
ctx.strokeStyle='rgb(105,109,160)';
ctx.moveTo(2176,328);
ctx.lineTo(2176,292);
ctx.lineTo(2212,292);
ctx.lineTo(2212,328);
ctx.lineTo(2176,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,47,91,0.85)';
ctx.strokeStyle='rgb(120,188,87)';
ctx.moveTo(1696,808);
ctx.lineTo(1696,772);
ctx.lineTo(1732,772);
ctx.lineTo(1732,808);
ctx.lineTo(1696,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,131,148,0.85)';
ctx.strokeStyle='rgb(6,19,79)';
ctx.moveTo(1792,808);
ctx.lineTo(1792,772);
ctx.lineTo(1828,772);
ctx.lineTo(1828,808);
ctx.lineTo(1792,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,7,164,0.85)';
ctx.strokeStyle='rgb(146,128,136)';
ctx.moveTo(1888,808);
ctx.lineTo(1888,772);
ctx.lineTo(1924,772);
ctx.lineTo(1924,808);
ctx.lineTo(1888,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,33,119,0.85)';
ctx.strokeStyle='rgb(106,120,68)';
ctx.moveTo(1984,808);
ctx.lineTo(1984,772);
ctx.lineTo(2020,772);
ctx.lineTo(2020,808);
ctx.lineTo(1984,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,164,141,0.85)';
ctx.strokeStyle='rgb(213,41,70)';
ctx.moveTo(2080,808);
ctx.lineTo(2080,772);
ctx.lineTo(2116,772);
ctx.lineTo(2116,808);
ctx.lineTo(2080,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,7,236,0.85)';
ctx.strokeStyle='rgb(24,241,137)';
ctx.moveTo(2176,808);
ctx.lineTo(2176,772);
ctx.lineTo(2212,772);
ctx.lineTo(2212,808);
ctx.lineTo(2176,808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,71,54,0.85)';
ctx.strokeStyle='rgb(108,98,181)';
ctx.moveTo(2176,712);
ctx.lineTo(2176,676);
ctx.lineTo(2212,676);
ctx.lineTo(2212,712);
ctx.lineTo(2176,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,253,52,0.85)';
ctx.strokeStyle='rgb(93,141,118)';
ctx.moveTo(2176,616);
ctx.lineTo(2176,580);
ctx.lineTo(2212,580);
ctx.lineTo(2212,616);
ctx.lineTo(2176,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,182,6,0.85)';
ctx.strokeStyle='rgb(11,154,192)';
ctx.moveTo(1984,520);
ctx.lineTo(1984,484);
ctx.lineTo(2020,484);
ctx.lineTo(2020,520);
ctx.lineTo(1984,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,199,160,0.85)';
ctx.strokeStyle='rgb(18,150,214)';
ctx.moveTo(1984,424);
ctx.lineTo(1984,388);
ctx.lineTo(2020,388);
ctx.lineTo(2020,424);
ctx.lineTo(1984,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,143,60,0.85)';
ctx.strokeStyle='rgb(175,5,185)';
ctx.moveTo(1984,328);
ctx.lineTo(1984,292);
ctx.lineTo(2020,292);
ctx.lineTo(2020,328);
ctx.lineTo(1984,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,54,16,0.85)';
ctx.strokeStyle='rgb(232,18,249)';
ctx.moveTo(1696,424);
ctx.lineTo(1696,388);
ctx.lineTo(1732,388);
ctx.lineTo(1732,424);
ctx.lineTo(1696,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,37,166,0.85)';
ctx.strokeStyle='rgb(108,153,171)';
ctx.moveTo(2080,712);
ctx.lineTo(2080,676);
ctx.lineTo(2116,676);
ctx.lineTo(2116,712);
ctx.lineTo(2080,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,83,183,0.85)';
ctx.strokeStyle='rgb(129,47,88)';
ctx.moveTo(2080,616);
ctx.lineTo(2080,580);
ctx.lineTo(2116,580);
ctx.lineTo(2116,616);
ctx.lineTo(2080,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,154,55,0.85)';
ctx.strokeStyle='rgb(191,71,66)';
ctx.moveTo(2080,520);
ctx.lineTo(2080,484);
ctx.lineTo(2116,484);
ctx.lineTo(2116,520);
ctx.lineTo(2080,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,23,134,0.85)';
ctx.strokeStyle='rgb(170,38,225)';
ctx.moveTo(2080,424);
ctx.lineTo(2080,388);
ctx.lineTo(2116,388);
ctx.lineTo(2116,424);
ctx.lineTo(2080,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,81,72,0.85)';
ctx.strokeStyle='rgb(51,160,6)';
ctx.moveTo(2080,328);
ctx.lineTo(2080,292);
ctx.lineTo(2116,292);
ctx.lineTo(2116,328);
ctx.lineTo(2080,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,226,42,0.85)';
ctx.strokeStyle='rgb(188,96,231)';
ctx.moveTo(1696,328);
ctx.lineTo(1696,292);
ctx.lineTo(1732,292);
ctx.lineTo(1732,328);
ctx.lineTo(1696,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,100,29,0.85)';
ctx.strokeStyle='rgb(244,78,229)';
ctx.moveTo(1696,712);
ctx.lineTo(1696,676);
ctx.lineTo(1732,676);
ctx.lineTo(1732,712);
ctx.lineTo(1696,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,209,220,0.85)';
ctx.strokeStyle='rgb(240,182,161)';
ctx.moveTo(1792,712);
ctx.lineTo(1792,676);
ctx.lineTo(1828,676);
ctx.lineTo(1828,712);
ctx.lineTo(1792,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,26,97,0.85)';
ctx.strokeStyle='rgb(36,139,26)';
ctx.moveTo(1792,616);
ctx.lineTo(1792,580);
ctx.lineTo(1828,580);
ctx.lineTo(1828,616);
ctx.lineTo(1792,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,29,191,0.85)';
ctx.strokeStyle='rgb(155,174,248)';
ctx.moveTo(1792,520);
ctx.lineTo(1792,484);
ctx.lineTo(1828,484);
ctx.lineTo(1828,520);
ctx.lineTo(1792,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,198,2,0.85)';
ctx.strokeStyle='rgb(149,7,93)';
ctx.moveTo(1792,424);
ctx.lineTo(1792,388);
ctx.lineTo(1828,388);
ctx.lineTo(1828,424);
ctx.lineTo(1792,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,117,114,0.85)';
ctx.strokeStyle='rgb(189,99,162)';
ctx.moveTo(1792,328);
ctx.lineTo(1792,292);
ctx.lineTo(1828,292);
ctx.lineTo(1828,328);
ctx.lineTo(1792,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,145,49,0.85)';
ctx.strokeStyle='rgb(28,82,99)';
ctx.moveTo(1696,616);
ctx.lineTo(1696,580);
ctx.lineTo(1732,580);
ctx.lineTo(1732,616);
ctx.lineTo(1696,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,161,147,0.85)';
ctx.strokeStyle='rgb(241,80,140)';
ctx.moveTo(1888,712);
ctx.lineTo(1888,676);
ctx.lineTo(1924,676);
ctx.lineTo(1924,712);
ctx.lineTo(1888,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,55,38,0.85)';
ctx.strokeStyle='rgb(167,225,1)';
ctx.moveTo(1888,616);
ctx.lineTo(1888,580);
ctx.lineTo(1924,580);
ctx.lineTo(1924,616);
ctx.lineTo(1888,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,35,39,0.85)';
ctx.strokeStyle='rgb(227,72,143)';
ctx.moveTo(1888,520);
ctx.lineTo(1888,484);
ctx.lineTo(1924,484);
ctx.lineTo(1924,520);
ctx.lineTo(1888,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,72,227,0.85)';
ctx.strokeStyle='rgb(43,199,73)';
ctx.moveTo(1888,424);
ctx.lineTo(1888,388);
ctx.lineTo(1924,388);
ctx.lineTo(1924,424);
ctx.lineTo(1888,424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,252,40,0.85)';
ctx.strokeStyle='rgb(5,49,234)';
ctx.moveTo(1888,328);
ctx.lineTo(1888,292);
ctx.lineTo(1924,292);
ctx.lineTo(1924,328);
ctx.lineTo(1888,328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,69,47,0.85)';
ctx.strokeStyle='rgb(232,10,195)';
ctx.moveTo(1696,520);
ctx.lineTo(1696,484);
ctx.lineTo(1732,484);
ctx.lineTo(1732,520);
ctx.lineTo(1696,520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,3,79,0.85)';
ctx.strokeStyle='rgb(98,110,14)';
ctx.moveTo(1984,712);
ctx.lineTo(1984,676);
ctx.lineTo(2020,676);
ctx.lineTo(2020,712);
ctx.lineTo(1984,712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,49,180,0.85)';
ctx.strokeStyle='rgb(54,232,131)';
ctx.moveTo(1984,616);
ctx.lineTo(1984,580);
ctx.lineTo(2020,580);
ctx.lineTo(2020,616);
ctx.lineTo(1984,616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,133,3,0.85)';
ctx.strokeStyle='rgb(103,193,87)';
ctx.moveTo(2176,1192);
ctx.lineTo(2176,1156);
ctx.lineTo(2212,1156);
ctx.lineTo(2212,1192);
ctx.lineTo(2176,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,125,150,0.85)';
ctx.strokeStyle='rgb(4,172,191)';
ctx.moveTo(2176,1096);
ctx.lineTo(2176,1060);
ctx.lineTo(2212,1060);
ctx.lineTo(2212,1096);
ctx.lineTo(2176,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,54,238,0.85)';
ctx.strokeStyle='rgb(148,85,242)';
ctx.moveTo(2176,1000);
ctx.lineTo(2176,964);
ctx.lineTo(2212,964);
ctx.lineTo(2212,1000);
ctx.lineTo(2176,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,17,214,0.85)';
ctx.strokeStyle='rgb(123,115,248)';
ctx.moveTo(2176,904);
ctx.lineTo(2176,868);
ctx.lineTo(2212,868);
ctx.lineTo(2212,904);
ctx.lineTo(2176,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,56,238,0.85)';
ctx.strokeStyle='rgb(176,235,151)';
ctx.moveTo(2176,1288);
ctx.lineTo(2176,1252);
ctx.lineTo(2212,1252);
ctx.lineTo(2212,1288);
ctx.lineTo(2176,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,11,241,0.85)';
ctx.strokeStyle='rgb(71,220,102)';
ctx.moveTo(2080,1096);
ctx.lineTo(2080,1060);
ctx.lineTo(2116,1060);
ctx.lineTo(2116,1096);
ctx.lineTo(2080,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,181,87,0.85)';
ctx.strokeStyle='rgb(116,139,107)';
ctx.moveTo(2080,1000);
ctx.lineTo(2080,964);
ctx.lineTo(2116,964);
ctx.lineTo(2116,1000);
ctx.lineTo(2080,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,140,48,0.85)';
ctx.strokeStyle='rgb(69,133,172)';
ctx.moveTo(2080,904);
ctx.lineTo(2080,868);
ctx.lineTo(2116,868);
ctx.lineTo(2116,904);
ctx.lineTo(2080,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,72,243,0.85)';
ctx.strokeStyle='rgb(202,45,100)';
ctx.moveTo(1888,1096);
ctx.lineTo(1888,1060);
ctx.lineTo(1924,1060);
ctx.lineTo(1924,1096);
ctx.lineTo(1888,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,252,84,0.85)';
ctx.strokeStyle='rgb(196,111,150)';
ctx.moveTo(1888,1000);
ctx.lineTo(1888,964);
ctx.lineTo(1924,964);
ctx.lineTo(1924,1000);
ctx.lineTo(1888,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,134,132,0.85)';
ctx.strokeStyle='rgb(62,91,190)';
ctx.moveTo(1888,904);
ctx.lineTo(1888,868);
ctx.lineTo(1924,868);
ctx.lineTo(1924,904);
ctx.lineTo(1888,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,213,38,0.85)';
ctx.strokeStyle='rgb(90,153,172)';
ctx.moveTo(1792,1192);
ctx.lineTo(1792,1156);
ctx.lineTo(1828,1156);
ctx.lineTo(1828,1192);
ctx.lineTo(1792,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,186,188,0.85)';
ctx.strokeStyle='rgb(199,166,234)';
ctx.moveTo(1792,1096);
ctx.lineTo(1792,1060);
ctx.lineTo(1828,1060);
ctx.lineTo(1828,1096);
ctx.lineTo(1792,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,155,185,0.85)';
ctx.strokeStyle='rgb(141,2,220)';
ctx.moveTo(1792,1000);
ctx.lineTo(1792,964);
ctx.lineTo(1828,964);
ctx.lineTo(1828,1000);
ctx.lineTo(1792,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,32,181,0.85)';
ctx.strokeStyle='rgb(117,30,199)';
ctx.moveTo(1792,904);
ctx.lineTo(1792,868);
ctx.lineTo(1828,868);
ctx.lineTo(1828,904);
ctx.lineTo(1792,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,36,222,0.85)';
ctx.strokeStyle='rgb(201,174,142)';
ctx.moveTo(1696,1192);
ctx.lineTo(1696,1156);
ctx.lineTo(1732,1156);
ctx.lineTo(1732,1192);
ctx.lineTo(1696,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,213,62,0.85)';
ctx.strokeStyle='rgb(136,72,139)';
ctx.moveTo(1696,1096);
ctx.lineTo(1696,1060);
ctx.lineTo(1732,1060);
ctx.lineTo(1732,1096);
ctx.lineTo(1696,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,242,95,0.85)';
ctx.strokeStyle='rgb(146,179,203)';
ctx.moveTo(1984,1288);
ctx.lineTo(1984,1252);
ctx.lineTo(2020,1252);
ctx.lineTo(2020,1288);
ctx.lineTo(1984,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,6,166,0.85)';
ctx.strokeStyle='rgb(39,202,53)';
ctx.moveTo(1984,1192);
ctx.lineTo(1984,1156);
ctx.lineTo(2020,1156);
ctx.lineTo(2020,1192);
ctx.lineTo(1984,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,25,208,0.85)';
ctx.strokeStyle='rgb(93,156,109)';
ctx.moveTo(1984,1096);
ctx.lineTo(1984,1060);
ctx.lineTo(2020,1060);
ctx.lineTo(2020,1096);
ctx.lineTo(1984,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,83,176,0.85)';
ctx.strokeStyle='rgb(230,92,52)';
ctx.moveTo(1984,1000);
ctx.lineTo(1984,964);
ctx.lineTo(2020,964);
ctx.lineTo(2020,1000);
ctx.lineTo(1984,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,136,123,0.85)';
ctx.strokeStyle='rgb(91,228,253)';
ctx.moveTo(1984,904);
ctx.lineTo(1984,868);
ctx.lineTo(2020,868);
ctx.lineTo(2020,904);
ctx.lineTo(1984,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,19,128,0.85)';
ctx.strokeStyle='rgb(6,49,75)';
ctx.moveTo(1696,1000);
ctx.lineTo(1696,964);
ctx.lineTo(1732,964);
ctx.lineTo(1732,1000);
ctx.lineTo(1696,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,182,187,0.85)';
ctx.strokeStyle='rgb(85,119,30)';
ctx.moveTo(1696,904);
ctx.lineTo(1696,868);
ctx.lineTo(1732,868);
ctx.lineTo(1732,904);
ctx.lineTo(1696,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,119,234,0.85)';
ctx.strokeStyle='rgb(80,99,208)';
ctx.moveTo(1696,1288);
ctx.lineTo(1696,1252);
ctx.lineTo(1732,1252);
ctx.lineTo(1732,1288);
ctx.lineTo(1696,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,67,136,0.85)';
ctx.strokeStyle='rgb(53,170,10)';
ctx.moveTo(1792,1288);
ctx.lineTo(1792,1252);
ctx.lineTo(1828,1252);
ctx.lineTo(1828,1288);
ctx.lineTo(1792,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,91,198,0.85)';
ctx.strokeStyle='rgb(88,71,243)';
ctx.moveTo(1888,1288);
ctx.lineTo(1888,1252);
ctx.lineTo(1924,1252);
ctx.lineTo(1924,1288);
ctx.lineTo(1888,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,239,243,0.85)';
ctx.strokeStyle='rgb(171,163,227)';
ctx.moveTo(1888,1192);
ctx.lineTo(1888,1156);
ctx.lineTo(1924,1156);
ctx.lineTo(1924,1192);
ctx.lineTo(1888,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,128,115,0.85)';
ctx.strokeStyle='rgb(137,7,68)';
ctx.moveTo(2080,1288);
ctx.lineTo(2080,1252);
ctx.lineTo(2116,1252);
ctx.lineTo(2116,1288);
ctx.lineTo(2080,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,117,89,0.85)';
ctx.strokeStyle='rgb(48,235,185)';
ctx.moveTo(2080,1192);
ctx.lineTo(2080,1156);
ctx.lineTo(2116,1156);
ctx.lineTo(2116,1192);
ctx.lineTo(2080,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,118,116,0.85)';
ctx.strokeStyle='rgb(4,212,197)';
ctx.moveTo(2368,904);
ctx.lineTo(2368,868);
ctx.lineTo(2404,868);
ctx.lineTo(2404,904);
ctx.lineTo(2368,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,249,3,0.85)';
ctx.strokeStyle='rgb(104,140,5)';
ctx.moveTo(2272,1192);
ctx.lineTo(2272,1156);
ctx.lineTo(2308,1156);
ctx.lineTo(2308,1192);
ctx.lineTo(2272,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,79,199,0.85)';
ctx.strokeStyle='rgb(253,2,166)';
ctx.moveTo(2272,1096);
ctx.lineTo(2272,1060);
ctx.lineTo(2308,1060);
ctx.lineTo(2308,1096);
ctx.lineTo(2272,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,38,102,0.85)';
ctx.strokeStyle='rgb(188,169,175)';
ctx.moveTo(2560,1288);
ctx.lineTo(2560,1252);
ctx.lineTo(2596,1252);
ctx.lineTo(2596,1288);
ctx.lineTo(2560,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,206,41,0.85)';
ctx.strokeStyle='rgb(79,28,251)';
ctx.moveTo(2560,1192);
ctx.lineTo(2560,1156);
ctx.lineTo(2596,1156);
ctx.lineTo(2596,1192);
ctx.lineTo(2560,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,86,42,0.85)';
ctx.strokeStyle='rgb(79,120,140)';
ctx.moveTo(2560,1096);
ctx.lineTo(2560,1060);
ctx.lineTo(2596,1060);
ctx.lineTo(2596,1096);
ctx.lineTo(2560,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,254,104,0.85)';
ctx.strokeStyle='rgb(177,160,125)';
ctx.moveTo(2560,1000);
ctx.lineTo(2560,964);
ctx.lineTo(2596,964);
ctx.lineTo(2596,1000);
ctx.lineTo(2560,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,56,195,0.85)';
ctx.strokeStyle='rgb(169,10,125)';
ctx.moveTo(2560,904);
ctx.lineTo(2560,868);
ctx.lineTo(2596,868);
ctx.lineTo(2596,904);
ctx.lineTo(2560,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,217,178,0.85)';
ctx.strokeStyle='rgb(143,194,139)';
ctx.moveTo(2272,1000);
ctx.lineTo(2272,964);
ctx.lineTo(2308,964);
ctx.lineTo(2308,1000);
ctx.lineTo(2272,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,71,242,0.85)';
ctx.strokeStyle='rgb(89,226,243)';
ctx.moveTo(2272,904);
ctx.lineTo(2272,868);
ctx.lineTo(2308,868);
ctx.lineTo(2308,904);
ctx.lineTo(2272,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,202,119,0.85)';
ctx.strokeStyle='rgb(95,107,245)';
ctx.moveTo(2272,1288);
ctx.lineTo(2272,1252);
ctx.lineTo(2308,1252);
ctx.lineTo(2308,1288);
ctx.lineTo(2272,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,12,111,0.85)';
ctx.strokeStyle='rgb(162,50,2)';
ctx.moveTo(2368,1288);
ctx.lineTo(2368,1252);
ctx.lineTo(2404,1252);
ctx.lineTo(2404,1288);
ctx.lineTo(2368,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,253,30,0.85)';
ctx.strokeStyle='rgb(52,53,181)';
ctx.moveTo(2464,1288);
ctx.lineTo(2464,1252);
ctx.lineTo(2500,1252);
ctx.lineTo(2500,1288);
ctx.lineTo(2464,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,66,251,0.85)';
ctx.strokeStyle='rgb(145,225,122)';
ctx.moveTo(2464,1192);
ctx.lineTo(2464,1156);
ctx.lineTo(2500,1156);
ctx.lineTo(2500,1192);
ctx.lineTo(2464,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,104,178,0.85)';
ctx.strokeStyle='rgb(42,209,148)';
ctx.moveTo(2656,1288);
ctx.lineTo(2656,1252);
ctx.lineTo(2692,1252);
ctx.lineTo(2692,1288);
ctx.lineTo(2656,1288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,175,102,0.85)';
ctx.strokeStyle='rgb(27,112,158)';
ctx.moveTo(2656,1192);
ctx.lineTo(2656,1156);
ctx.lineTo(2692,1156);
ctx.lineTo(2692,1192);
ctx.lineTo(2656,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,163,188,0.85)';
ctx.strokeStyle='rgb(76,84,91)';
ctx.moveTo(2656,1096);
ctx.lineTo(2656,1060);
ctx.lineTo(2692,1060);
ctx.lineTo(2692,1096);
ctx.lineTo(2656,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,41,200,0.85)';
ctx.strokeStyle='rgb(107,12,226)';
ctx.moveTo(2656,1000);
ctx.lineTo(2656,964);
ctx.lineTo(2692,964);
ctx.lineTo(2692,1000);
ctx.lineTo(2656,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,229,178,0.85)';
ctx.strokeStyle='rgb(175,217,202)';
ctx.moveTo(2656,904);
ctx.lineTo(2656,868);
ctx.lineTo(2692,868);
ctx.lineTo(2692,904);
ctx.lineTo(2656,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,227,169,0.85)';
ctx.strokeStyle='rgb(149,27,133)';
ctx.moveTo(2464,1096);
ctx.lineTo(2464,1060);
ctx.lineTo(2500,1060);
ctx.lineTo(2500,1096);
ctx.lineTo(2464,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,13,201,0.85)';
ctx.strokeStyle='rgb(236,188,86)';
ctx.moveTo(2464,1000);
ctx.lineTo(2464,964);
ctx.lineTo(2500,964);
ctx.lineTo(2500,1000);
ctx.lineTo(2464,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,238,59,0.85)';
ctx.strokeStyle='rgb(20,115,78)';
ctx.moveTo(2464,904);
ctx.lineTo(2464,868);
ctx.lineTo(2500,868);
ctx.lineTo(2500,904);
ctx.lineTo(2464,904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,42,6,0.85)';
ctx.strokeStyle='rgb(35,167,191)';
ctx.moveTo(2368,1192);
ctx.lineTo(2368,1156);
ctx.lineTo(2404,1156);
ctx.lineTo(2404,1192);
ctx.lineTo(2368,1192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,251,10,0.85)';
ctx.strokeStyle='rgb(70,202,199)';
ctx.moveTo(2368,1096);
ctx.lineTo(2368,1060);
ctx.lineTo(2404,1060);
ctx.lineTo(2404,1096);
ctx.lineTo(2368,1096);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,74,31,0.85)';
ctx.strokeStyle='rgb(253,239,254)';
ctx.moveTo(2368,1000);
ctx.lineTo(2368,964);
ctx.lineTo(2404,964);
ctx.lineTo(2404,1000);
ctx.lineTo(2368,1000);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,150,82,0.85)';
ctx.strokeStyle='rgb(225,100,132)';
ctx.moveTo(2992,1912);
ctx.lineTo(2992,1876);
ctx.lineTo(3028,1876);
ctx.lineTo(3028,1912);
ctx.lineTo(2992,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,130,149,0.85)';
ctx.strokeStyle='rgb(91,207,196)';
ctx.moveTo(3184,2008);
ctx.lineTo(3184,1972);
ctx.lineTo(3220,1972);
ctx.lineTo(3220,2008);
ctx.lineTo(3184,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,170,215,0.85)';
ctx.strokeStyle='rgb(167,8,22)';
ctx.moveTo(3184,1912);
ctx.lineTo(3184,1876);
ctx.lineTo(3220,1876);
ctx.lineTo(3220,1912);
ctx.lineTo(3184,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,85,42,0.85)';
ctx.strokeStyle='rgb(1,31,224)';
ctx.moveTo(3184,1816);
ctx.lineTo(3184,1780);
ctx.lineTo(3220,1780);
ctx.lineTo(3220,1816);
ctx.lineTo(3184,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,135,43,0.85)';
ctx.strokeStyle='rgb(63,134,209)';
ctx.moveTo(3184,1720);
ctx.lineTo(3184,1684);
ctx.lineTo(3220,1684);
ctx.lineTo(3220,1720);
ctx.lineTo(3184,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,231,52,0.85)';
ctx.strokeStyle='rgb(91,56,198)';
ctx.moveTo(3184,1624);
ctx.lineTo(3184,1588);
ctx.lineTo(3220,1588);
ctx.lineTo(3220,1624);
ctx.lineTo(3184,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,233,198,0.85)';
ctx.strokeStyle='rgb(203,173,39)';
ctx.moveTo(2992,1816);
ctx.lineTo(2992,1780);
ctx.lineTo(3028,1780);
ctx.lineTo(3028,1816);
ctx.lineTo(2992,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,98,205,0.85)';
ctx.strokeStyle='rgb(173,248,195)';
ctx.moveTo(3280,2008);
ctx.lineTo(3280,1972);
ctx.lineTo(3316,1972);
ctx.lineTo(3316,2008);
ctx.lineTo(3280,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,36,89,0.85)';
ctx.strokeStyle='rgb(83,154,150)';
ctx.moveTo(3280,1912);
ctx.lineTo(3280,1876);
ctx.lineTo(3316,1876);
ctx.lineTo(3316,1912);
ctx.lineTo(3280,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,74,115,0.85)';
ctx.strokeStyle='rgb(205,64,216)';
ctx.moveTo(3376,2392);
ctx.lineTo(3376,2356);
ctx.lineTo(3412,2356);
ctx.lineTo(3412,2392);
ctx.lineTo(3376,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,82,160,0.85)';
ctx.strokeStyle='rgb(74,9,105)';
ctx.moveTo(3376,2296);
ctx.lineTo(3376,2260);
ctx.lineTo(3412,2260);
ctx.lineTo(3412,2296);
ctx.lineTo(3376,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,28,47,0.85)';
ctx.strokeStyle='rgb(21,197,57)';
ctx.moveTo(3376,2200);
ctx.lineTo(3376,2164);
ctx.lineTo(3412,2164);
ctx.lineTo(3412,2200);
ctx.lineTo(3376,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,132,247,0.85)';
ctx.strokeStyle='rgb(2,248,224)';
ctx.moveTo(3184,2392);
ctx.lineTo(3184,2356);
ctx.lineTo(3220,2356);
ctx.lineTo(3220,2392);
ctx.lineTo(3184,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,7,141,0.85)';
ctx.strokeStyle='rgb(174,197,40)';
ctx.moveTo(3184,2296);
ctx.lineTo(3184,2260);
ctx.lineTo(3220,2260);
ctx.lineTo(3220,2296);
ctx.lineTo(3184,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,49,26,0.85)';
ctx.strokeStyle='rgb(126,183,202)';
ctx.moveTo(3184,2200);
ctx.lineTo(3184,2164);
ctx.lineTo(3220,2164);
ctx.lineTo(3220,2200);
ctx.lineTo(3184,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,91,36,0.85)';
ctx.strokeStyle='rgb(106,175,29)';
ctx.moveTo(3088,2392);
ctx.lineTo(3088,2356);
ctx.lineTo(3124,2356);
ctx.lineTo(3124,2392);
ctx.lineTo(3088,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,114,35,0.85)';
ctx.strokeStyle='rgb(91,200,29)';
ctx.moveTo(3088,2296);
ctx.lineTo(3088,2260);
ctx.lineTo(3124,2260);
ctx.lineTo(3124,2296);
ctx.lineTo(3088,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,92,182,0.85)';
ctx.strokeStyle='rgb(213,120,83)';
ctx.moveTo(3088,2200);
ctx.lineTo(3088,2164);
ctx.lineTo(3124,2164);
ctx.lineTo(3124,2200);
ctx.lineTo(3088,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,197,142,0.85)';
ctx.strokeStyle='rgb(69,174,147)';
ctx.moveTo(2992,2392);
ctx.lineTo(2992,2356);
ctx.lineTo(3028,2356);
ctx.lineTo(3028,2392);
ctx.lineTo(2992,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,11,12,0.85)';
ctx.strokeStyle='rgb(245,112,103)';
ctx.moveTo(3280,2392);
ctx.lineTo(3280,2356);
ctx.lineTo(3316,2356);
ctx.lineTo(3316,2392);
ctx.lineTo(3280,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,200,127,0.85)';
ctx.strokeStyle='rgb(166,103,101)';
ctx.moveTo(3280,2296);
ctx.lineTo(3280,2260);
ctx.lineTo(3316,2260);
ctx.lineTo(3316,2296);
ctx.lineTo(3280,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,216,198,0.85)';
ctx.strokeStyle='rgb(161,21,178)';
ctx.moveTo(3280,2200);
ctx.lineTo(3280,2164);
ctx.lineTo(3316,2164);
ctx.lineTo(3316,2200);
ctx.lineTo(3280,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,215,142,0.85)';
ctx.strokeStyle='rgb(24,100,79)';
ctx.moveTo(2992,2296);
ctx.lineTo(2992,2260);
ctx.lineTo(3028,2260);
ctx.lineTo(3028,2296);
ctx.lineTo(2992,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,41,191,0.85)';
ctx.strokeStyle='rgb(18,175,239)';
ctx.moveTo(2992,2200);
ctx.lineTo(2992,2164);
ctx.lineTo(3028,2164);
ctx.lineTo(3028,2200);
ctx.lineTo(2992,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,78,0,0.85)';
ctx.strokeStyle='rgb(153,145,212)';
ctx.moveTo(3664,2200);
ctx.lineTo(3664,2164);
ctx.lineTo(3700,2164);
ctx.lineTo(3700,2200);
ctx.lineTo(3664,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,159,173,0.85)';
ctx.strokeStyle='rgb(218,13,211)';
ctx.moveTo(3568,2392);
ctx.lineTo(3568,2356);
ctx.lineTo(3604,2356);
ctx.lineTo(3604,2392);
ctx.lineTo(3568,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,111,92,0.85)';
ctx.strokeStyle='rgb(232,137,233)';
ctx.moveTo(3472,1720);
ctx.lineTo(3472,1684);
ctx.lineTo(3508,1684);
ctx.lineTo(3508,1720);
ctx.lineTo(3472,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,12,1,0.85)';
ctx.strokeStyle='rgb(200,61,189)';
ctx.moveTo(3472,1624);
ctx.lineTo(3472,1588);
ctx.lineTo(3508,1588);
ctx.lineTo(3508,1624);
ctx.lineTo(3472,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,28,151,0.85)';
ctx.strokeStyle='rgb(119,218,145)';
ctx.moveTo(3568,2104);
ctx.lineTo(3568,2068);
ctx.lineTo(3604,2068);
ctx.lineTo(3604,2104);
ctx.lineTo(3568,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,197,239,0.85)';
ctx.strokeStyle='rgb(54,78,186)';
ctx.moveTo(3664,2104);
ctx.lineTo(3664,2068);
ctx.lineTo(3700,2068);
ctx.lineTo(3700,2104);
ctx.lineTo(3664,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,115,165,0.85)';
ctx.strokeStyle='rgb(226,200,113)';
ctx.moveTo(3760,2104);
ctx.lineTo(3760,2068);
ctx.lineTo(3796,2068);
ctx.lineTo(3796,2104);
ctx.lineTo(3760,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,87,186,0.85)';
ctx.strokeStyle='rgb(215,103,140)';
ctx.moveTo(3568,2296);
ctx.lineTo(3568,2260);
ctx.lineTo(3604,2260);
ctx.lineTo(3604,2296);
ctx.lineTo(3568,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,216,132,0.85)';
ctx.strokeStyle='rgb(80,112,173)';
ctx.moveTo(3568,2200);
ctx.lineTo(3568,2164);
ctx.lineTo(3604,2164);
ctx.lineTo(3604,2200);
ctx.lineTo(3568,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,180,97,0.85)';
ctx.strokeStyle='rgb(148,29,181)';
ctx.moveTo(2992,2104);
ctx.lineTo(2992,2068);
ctx.lineTo(3028,2068);
ctx.lineTo(3028,2104);
ctx.lineTo(2992,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,159,180,0.85)';
ctx.strokeStyle='rgb(201,193,251)';
ctx.moveTo(3088,2104);
ctx.lineTo(3088,2068);
ctx.lineTo(3124,2068);
ctx.lineTo(3124,2104);
ctx.lineTo(3088,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,61,199,0.85)';
ctx.strokeStyle='rgb(1,227,152)';
ctx.moveTo(3568,1624);
ctx.lineTo(3568,1588);
ctx.lineTo(3604,1588);
ctx.lineTo(3604,1624);
ctx.lineTo(3568,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,101,98,0.85)';
ctx.strokeStyle='rgb(156,234,50)';
ctx.moveTo(3760,2392);
ctx.lineTo(3760,2356);
ctx.lineTo(3796,2356);
ctx.lineTo(3796,2392);
ctx.lineTo(3760,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,254,80,0.85)';
ctx.strokeStyle='rgb(70,126,202)';
ctx.moveTo(3760,2296);
ctx.lineTo(3760,2260);
ctx.lineTo(3796,2260);
ctx.lineTo(3796,2296);
ctx.lineTo(3760,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,8,67,0.85)';
ctx.strokeStyle='rgb(64,64,200)';
ctx.moveTo(3760,2200);
ctx.lineTo(3760,2164);
ctx.lineTo(3796,2164);
ctx.lineTo(3796,2200);
ctx.lineTo(3760,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,44,70,0.85)';
ctx.strokeStyle='rgb(19,24,8)';
ctx.moveTo(3664,2392);
ctx.lineTo(3664,2356);
ctx.lineTo(3700,2356);
ctx.lineTo(3700,2392);
ctx.lineTo(3664,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,1,130,0.85)';
ctx.strokeStyle='rgb(55,166,151)';
ctx.moveTo(3664,2296);
ctx.lineTo(3664,2260);
ctx.lineTo(3700,2260);
ctx.lineTo(3700,2296);
ctx.lineTo(3664,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,90,119,0.85)';
ctx.strokeStyle='rgb(185,223,73)';
ctx.moveTo(3568,2008);
ctx.lineTo(3568,1972);
ctx.lineTo(3604,1972);
ctx.lineTo(3604,2008);
ctx.lineTo(3568,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,128,12,0.85)';
ctx.strokeStyle='rgb(109,191,39)';
ctx.moveTo(3664,2008);
ctx.lineTo(3664,1972);
ctx.lineTo(3700,1972);
ctx.lineTo(3700,2008);
ctx.lineTo(3664,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,84,34,0.85)';
ctx.strokeStyle='rgb(216,137,28)';
ctx.moveTo(3664,1912);
ctx.lineTo(3664,1876);
ctx.lineTo(3700,1876);
ctx.lineTo(3700,1912);
ctx.lineTo(3664,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,16,196,0.85)';
ctx.strokeStyle='rgb(95,47,161)';
ctx.moveTo(3664,1816);
ctx.lineTo(3664,1780);
ctx.lineTo(3700,1780);
ctx.lineTo(3700,1816);
ctx.lineTo(3664,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,57,138,0.85)';
ctx.strokeStyle='rgb(182,165,47)';
ctx.moveTo(3664,1720);
ctx.lineTo(3664,1684);
ctx.lineTo(3700,1684);
ctx.lineTo(3700,1720);
ctx.lineTo(3664,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,26,148,0.85)';
ctx.strokeStyle='rgb(159,8,21)';
ctx.moveTo(3664,1624);
ctx.lineTo(3664,1588);
ctx.lineTo(3700,1588);
ctx.lineTo(3700,1624);
ctx.lineTo(3664,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,200,197,0.85)';
ctx.strokeStyle='rgb(107,98,73)';
ctx.moveTo(3568,1912);
ctx.lineTo(3568,1876);
ctx.lineTo(3604,1876);
ctx.lineTo(3604,1912);
ctx.lineTo(3568,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,133,232,0.85)';
ctx.strokeStyle='rgb(209,182,127)';
ctx.moveTo(3760,2008);
ctx.lineTo(3760,1972);
ctx.lineTo(3796,1972);
ctx.lineTo(3796,2008);
ctx.lineTo(3760,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,60,230,0.85)';
ctx.strokeStyle='rgb(37,204,130)';
ctx.moveTo(3760,1912);
ctx.lineTo(3760,1876);
ctx.lineTo(3796,1876);
ctx.lineTo(3796,1912);
ctx.lineTo(3760,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,186,32,0.85)';
ctx.strokeStyle='rgb(80,51,249)';
ctx.moveTo(3760,1816);
ctx.lineTo(3760,1780);
ctx.lineTo(3796,1780);
ctx.lineTo(3796,1816);
ctx.lineTo(3760,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,104,211,0.85)';
ctx.strokeStyle='rgb(35,53,155)';
ctx.moveTo(3760,1720);
ctx.lineTo(3760,1684);
ctx.lineTo(3796,1684);
ctx.lineTo(3796,1720);
ctx.lineTo(3760,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,117,142,0.85)';
ctx.strokeStyle='rgb(31,241,100)';
ctx.moveTo(3760,1624);
ctx.lineTo(3760,1588);
ctx.lineTo(3796,1588);
ctx.lineTo(3796,1624);
ctx.lineTo(3760,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,156,179,0.85)';
ctx.strokeStyle='rgb(21,21,244)';
ctx.moveTo(3568,1816);
ctx.lineTo(3568,1780);
ctx.lineTo(3604,1780);
ctx.lineTo(3604,1816);
ctx.lineTo(3568,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,15,16,0.85)';
ctx.strokeStyle='rgb(113,108,153)';
ctx.moveTo(3184,2104);
ctx.lineTo(3184,2068);
ctx.lineTo(3220,2068);
ctx.lineTo(3220,2104);
ctx.lineTo(3184,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,129,30,0.85)';
ctx.strokeStyle='rgb(216,36,51)';
ctx.moveTo(3280,2104);
ctx.lineTo(3280,2068);
ctx.lineTo(3316,2068);
ctx.lineTo(3316,2104);
ctx.lineTo(3280,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,53,4,0.85)';
ctx.strokeStyle='rgb(32,111,115)';
ctx.moveTo(3376,2104);
ctx.lineTo(3376,2068);
ctx.lineTo(3412,2068);
ctx.lineTo(3412,2104);
ctx.lineTo(3376,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,46,100,0.85)';
ctx.strokeStyle='rgb(1,194,192)';
ctx.moveTo(3472,2392);
ctx.lineTo(3472,2356);
ctx.lineTo(3508,2356);
ctx.lineTo(3508,2392);
ctx.lineTo(3472,2392);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,222,250,0.85)';
ctx.strokeStyle='rgb(4,242,189)';
ctx.moveTo(3472,2296);
ctx.lineTo(3472,2260);
ctx.lineTo(3508,2260);
ctx.lineTo(3508,2296);
ctx.lineTo(3472,2296);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,203,204,0.85)';
ctx.strokeStyle='rgb(21,242,149)';
ctx.moveTo(3568,1720);
ctx.lineTo(3568,1684);
ctx.lineTo(3604,1684);
ctx.lineTo(3604,1720);
ctx.lineTo(3568,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,212,143,0.85)';
ctx.strokeStyle='rgb(31,64,243)';
ctx.moveTo(3472,2200);
ctx.lineTo(3472,2164);
ctx.lineTo(3508,2164);
ctx.lineTo(3508,2200);
ctx.lineTo(3472,2200);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,145,129,0.85)';
ctx.strokeStyle='rgb(201,119,65)';
ctx.moveTo(3472,2104);
ctx.lineTo(3472,2068);
ctx.lineTo(3508,2068);
ctx.lineTo(3508,2104);
ctx.lineTo(3472,2104);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,91,137,0.85)';
ctx.strokeStyle='rgb(108,20,95)';
ctx.moveTo(3472,2008);
ctx.lineTo(3472,1972);
ctx.lineTo(3508,1972);
ctx.lineTo(3508,2008);
ctx.lineTo(3472,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,177,6,0.85)';
ctx.strokeStyle='rgb(156,67,69)';
ctx.moveTo(3472,1912);
ctx.lineTo(3472,1876);
ctx.lineTo(3508,1876);
ctx.lineTo(3508,1912);
ctx.lineTo(3472,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,14,140,0.85)';
ctx.strokeStyle='rgb(113,72,17)';
ctx.moveTo(3472,1816);
ctx.lineTo(3472,1780);
ctx.lineTo(3508,1780);
ctx.lineTo(3508,1816);
ctx.lineTo(3472,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,84,232,0.85)';
ctx.strokeStyle='rgb(70,221,207)';
ctx.moveTo(3280,1816);
ctx.lineTo(3280,1780);
ctx.lineTo(3316,1780);
ctx.lineTo(3316,1816);
ctx.lineTo(3280,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,8,59,0.85)';
ctx.strokeStyle='rgb(6,191,179)';
ctx.moveTo(3280,1720);
ctx.lineTo(3280,1684);
ctx.lineTo(3316,1684);
ctx.lineTo(3316,1720);
ctx.lineTo(3280,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,245,183,0.85)';
ctx.strokeStyle='rgb(253,214,228)';
ctx.moveTo(3280,1624);
ctx.lineTo(3280,1588);
ctx.lineTo(3316,1588);
ctx.lineTo(3316,1624);
ctx.lineTo(3280,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,181,45,0.85)';
ctx.strokeStyle='rgb(188,85,217)';
ctx.moveTo(2992,1720);
ctx.lineTo(2992,1684);
ctx.lineTo(3028,1684);
ctx.lineTo(3028,1720);
ctx.lineTo(2992,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,25,241,0.85)';
ctx.strokeStyle='rgb(38,55,243)';
ctx.moveTo(3376,2008);
ctx.lineTo(3376,1972);
ctx.lineTo(3412,1972);
ctx.lineTo(3412,2008);
ctx.lineTo(3376,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,20,99,0.85)';
ctx.strokeStyle='rgb(202,154,187)';
ctx.moveTo(3376,1912);
ctx.lineTo(3376,1876);
ctx.lineTo(3412,1876);
ctx.lineTo(3412,1912);
ctx.lineTo(3376,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,89,47,0.85)';
ctx.strokeStyle='rgb(163,187,114)';
ctx.moveTo(3376,1816);
ctx.lineTo(3376,1780);
ctx.lineTo(3412,1780);
ctx.lineTo(3412,1816);
ctx.lineTo(3376,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,232,45,0.85)';
ctx.strokeStyle='rgb(237,112,116)';
ctx.moveTo(3376,1720);
ctx.lineTo(3376,1684);
ctx.lineTo(3412,1684);
ctx.lineTo(3412,1720);
ctx.lineTo(3376,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,89,75,0.85)';
ctx.strokeStyle='rgb(4,156,234)';
ctx.moveTo(3376,1624);
ctx.lineTo(3376,1588);
ctx.lineTo(3412,1588);
ctx.lineTo(3412,1624);
ctx.lineTo(3376,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,152,242,0.85)';
ctx.strokeStyle='rgb(74,201,197)';
ctx.moveTo(2992,1624);
ctx.lineTo(2992,1588);
ctx.lineTo(3028,1588);
ctx.lineTo(3028,1624);
ctx.lineTo(2992,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,152,164,0.85)';
ctx.strokeStyle='rgb(183,189,59)';
ctx.moveTo(2992,2008);
ctx.lineTo(2992,1972);
ctx.lineTo(3028,1972);
ctx.lineTo(3028,2008);
ctx.lineTo(2992,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,8,50,0.85)';
ctx.strokeStyle='rgb(40,180,133)';
ctx.moveTo(3088,2008);
ctx.lineTo(3088,1972);
ctx.lineTo(3124,1972);
ctx.lineTo(3124,2008);
ctx.lineTo(3088,2008);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,99,145,0.85)';
ctx.strokeStyle='rgb(249,182,153)';
ctx.moveTo(3088,1912);
ctx.lineTo(3088,1876);
ctx.lineTo(3124,1876);
ctx.lineTo(3124,1912);
ctx.lineTo(3088,1912);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,155,120,0.85)';
ctx.strokeStyle='rgb(238,156,65)';
ctx.moveTo(3088,1816);
ctx.lineTo(3088,1780);
ctx.lineTo(3124,1780);
ctx.lineTo(3124,1816);
ctx.lineTo(3088,1816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,22,235,0.85)';
ctx.strokeStyle='rgb(92,129,142)';
ctx.moveTo(3088,1720);
ctx.lineTo(3088,1684);
ctx.lineTo(3124,1684);
ctx.lineTo(3124,1720);
ctx.lineTo(3088,1720);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,97,106,0.85)';
ctx.strokeStyle='rgb(233,54,174)';
ctx.moveTo(3088,1624);
ctx.lineTo(3088,1588);
ctx.lineTo(3124,1588);
ctx.lineTo(3124,1624);
ctx.lineTo(3088,1624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,198,116,0.85)';
ctx.strokeStyle='rgb(191,15,166)';
ctx.moveTo(3184,2488);
ctx.lineTo(3184,2452);
ctx.lineTo(3220,2452);
ctx.lineTo(3220,2488);
ctx.lineTo(3184,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,198,35,0.85)';
ctx.strokeStyle='rgb(38,82,68)';
ctx.moveTo(3376,2584);
ctx.lineTo(3376,2548);
ctx.lineTo(3412,2548);
ctx.lineTo(3412,2584);
ctx.lineTo(3376,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,118,233,0.85)';
ctx.strokeStyle='rgb(228,0,94)';
ctx.moveTo(3376,2488);
ctx.lineTo(3376,2452);
ctx.lineTo(3412,2452);
ctx.lineTo(3412,2488);
ctx.lineTo(3376,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,224,226,0.85)';
ctx.strokeStyle='rgb(34,26,222)';
ctx.moveTo(3760,2818);
ctx.lineTo(3760,2782);
ctx.lineTo(3796,2782);
ctx.lineTo(3796,2818);
ctx.lineTo(3760,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,106,101,0.85)';
ctx.strokeStyle='rgb(183,209,58)';
ctx.moveTo(3568,2488);
ctx.lineTo(3568,2452);
ctx.lineTo(3604,2452);
ctx.lineTo(3604,2488);
ctx.lineTo(3568,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,133,201,0.85)';
ctx.strokeStyle='rgb(178,81,23)';
ctx.moveTo(2992,2818);
ctx.lineTo(2992,2782);
ctx.lineTo(3028,2782);
ctx.lineTo(3028,2818);
ctx.lineTo(2992,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,198,229,0.85)';
ctx.strokeStyle='rgb(11,21,238)';
ctx.moveTo(3088,2488);
ctx.lineTo(3088,2452);
ctx.lineTo(3124,2452);
ctx.lineTo(3124,2488);
ctx.lineTo(3088,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,215,79,0.85)';
ctx.strokeStyle='rgb(187,175,245)';
ctx.moveTo(3088,2818);
ctx.lineTo(3088,2782);
ctx.lineTo(3124,2782);
ctx.lineTo(3124,2818);
ctx.lineTo(3088,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,90,250,0.85)';
ctx.strokeStyle='rgb(26,110,154)';
ctx.moveTo(3184,2818);
ctx.lineTo(3184,2782);
ctx.lineTo(3220,2782);
ctx.lineTo(3220,2818);
ctx.lineTo(3184,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,166,225,0.85)';
ctx.strokeStyle='rgb(124,91,78)';
ctx.moveTo(3280,2818);
ctx.lineTo(3280,2782);
ctx.lineTo(3316,2782);
ctx.lineTo(3316,2818);
ctx.lineTo(3280,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,158,119,0.85)';
ctx.strokeStyle='rgb(44,51,14)';
ctx.moveTo(2992,2488);
ctx.lineTo(2992,2452);
ctx.lineTo(3028,2452);
ctx.lineTo(3028,2488);
ctx.lineTo(2992,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,224,119,0.85)';
ctx.strokeStyle='rgb(172,220,28)';
ctx.moveTo(3376,2818);
ctx.lineTo(3376,2782);
ctx.lineTo(3412,2782);
ctx.lineTo(3412,2818);
ctx.lineTo(3376,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,201,161,0.85)';
ctx.strokeStyle='rgb(49,129,149)';
ctx.moveTo(3280,2584);
ctx.lineTo(3280,2548);
ctx.lineTo(3316,2548);
ctx.lineTo(3316,2584);
ctx.lineTo(3280,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,112,123,0.85)';
ctx.strokeStyle='rgb(123,227,94)';
ctx.moveTo(3568,2584);
ctx.lineTo(3568,2548);
ctx.lineTo(3604,2548);
ctx.lineTo(3604,2584);
ctx.lineTo(3568,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,149,9,0.85)';
ctx.strokeStyle='rgb(191,109,114)';
ctx.moveTo(3664,2584);
ctx.lineTo(3664,2548);
ctx.lineTo(3700,2548);
ctx.lineTo(3700,2584);
ctx.lineTo(3664,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,200,114,0.85)';
ctx.strokeStyle='rgb(249,44,3)';
ctx.moveTo(3760,2584);
ctx.lineTo(3760,2548);
ctx.lineTo(3796,2548);
ctx.lineTo(3796,2584);
ctx.lineTo(3760,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,76,128,0.85)';
ctx.strokeStyle='rgb(203,134,171)';
ctx.moveTo(3760,2488);
ctx.lineTo(3760,2452);
ctx.lineTo(3796,2452);
ctx.lineTo(3796,2488);
ctx.lineTo(3760,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,29,229,0.85)';
ctx.strokeStyle='rgb(63,1,46)';
ctx.moveTo(3280,2488);
ctx.lineTo(3280,2452);
ctx.lineTo(3316,2452);
ctx.lineTo(3316,2488);
ctx.lineTo(3280,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,16,60,0.85)';
ctx.strokeStyle='rgb(112,170,199)';
ctx.moveTo(3472,2818);
ctx.lineTo(3472,2782);
ctx.lineTo(3508,2782);
ctx.lineTo(3508,2818);
ctx.lineTo(3472,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,89,32,0.85)';
ctx.strokeStyle='rgb(53,248,71)';
ctx.moveTo(3472,2584);
ctx.lineTo(3472,2548);
ctx.lineTo(3508,2548);
ctx.lineTo(3508,2584);
ctx.lineTo(3472,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,111,8,0.85)';
ctx.strokeStyle='rgb(162,109,195)';
ctx.moveTo(3472,2488);
ctx.lineTo(3472,2452);
ctx.lineTo(3508,2452);
ctx.lineTo(3508,2488);
ctx.lineTo(3472,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,199,232,0.85)';
ctx.strokeStyle='rgb(43,182,245)';
ctx.moveTo(3568,2818);
ctx.lineTo(3568,2782);
ctx.lineTo(3604,2782);
ctx.lineTo(3604,2818);
ctx.lineTo(3568,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,102,153,0.85)';
ctx.strokeStyle='rgb(171,131,16)';
ctx.moveTo(3664,2818);
ctx.lineTo(3664,2782);
ctx.lineTo(3700,2782);
ctx.lineTo(3700,2818);
ctx.lineTo(3664,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,129,148,0.85)';
ctx.strokeStyle='rgb(145,65,170)';
ctx.moveTo(3664,2488);
ctx.lineTo(3664,2452);
ctx.lineTo(3700,2452);
ctx.lineTo(3700,2488);
ctx.lineTo(3664,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,77,223,0.85)';
ctx.strokeStyle='rgb(49,24,80)';
ctx.moveTo(2992,2584);
ctx.lineTo(2992,2548);
ctx.lineTo(3028,2548);
ctx.lineTo(3028,2584);
ctx.lineTo(2992,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,170,166,0.85)';
ctx.strokeStyle='rgb(215,47,245)';
ctx.moveTo(3088,2584);
ctx.lineTo(3088,2548);
ctx.lineTo(3124,2548);
ctx.lineTo(3124,2584);
ctx.lineTo(3088,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,157,156,0.85)';
ctx.strokeStyle='rgb(104,15,135)';
ctx.moveTo(1696,4360);
ctx.lineTo(1696,4324);
ctx.lineTo(1732,4324);
ctx.lineTo(1732,4360);
ctx.lineTo(1696,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,231,83,0.85)';
ctx.strokeStyle='rgb(65,77,184)';
ctx.moveTo(1696,4264);
ctx.lineTo(1696,4228);
ctx.lineTo(1732,4228);
ctx.lineTo(1732,4264);
ctx.lineTo(1696,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,106,190,0.85)';
ctx.strokeStyle='rgb(58,67,22)';
ctx.moveTo(1696,4168);
ctx.lineTo(1696,4132);
ctx.lineTo(1732,4132);
ctx.lineTo(1732,4168);
ctx.lineTo(1696,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,159,67,0.85)';
ctx.strokeStyle='rgb(68,173,251)';
ctx.moveTo(1792,4360);
ctx.lineTo(1792,4324);
ctx.lineTo(1828,4324);
ctx.lineTo(1828,4360);
ctx.lineTo(1792,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,98,49,0.85)';
ctx.strokeStyle='rgb(36,65,125)';
ctx.moveTo(1792,4264);
ctx.lineTo(1792,4228);
ctx.lineTo(1828,4228);
ctx.lineTo(1828,4264);
ctx.lineTo(1792,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,18,156,0.85)';
ctx.strokeStyle='rgb(229,166,240)';
ctx.moveTo(1792,4168);
ctx.lineTo(1792,4132);
ctx.lineTo(1828,4132);
ctx.lineTo(1828,4168);
ctx.lineTo(1792,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,254,44,0.85)';
ctx.strokeStyle='rgb(237,224,73)';
ctx.moveTo(1888,4360);
ctx.lineTo(1888,4324);
ctx.lineTo(1924,4324);
ctx.lineTo(1924,4360);
ctx.lineTo(1888,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,226,64,0.85)';
ctx.strokeStyle='rgb(139,219,248)';
ctx.moveTo(1888,4264);
ctx.lineTo(1888,4228);
ctx.lineTo(1924,4228);
ctx.lineTo(1924,4264);
ctx.lineTo(1888,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,207,67,0.85)';
ctx.strokeStyle='rgb(149,14,76)';
ctx.moveTo(1888,4168);
ctx.lineTo(1888,4132);
ctx.lineTo(1924,4132);
ctx.lineTo(1924,4168);
ctx.lineTo(1888,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,11,184,0.85)';
ctx.strokeStyle='rgb(234,9,243)';
ctx.moveTo(1984,4360);
ctx.lineTo(1984,4324);
ctx.lineTo(2020,4324);
ctx.lineTo(2020,4360);
ctx.lineTo(1984,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,32,78,0.85)';
ctx.strokeStyle='rgb(52,203,151)';
ctx.moveTo(1984,4264);
ctx.lineTo(1984,4228);
ctx.lineTo(2020,4228);
ctx.lineTo(2020,4264);
ctx.lineTo(1984,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,157,129,0.85)';
ctx.strokeStyle='rgb(126,251,60)';
ctx.moveTo(1984,4168);
ctx.lineTo(1984,4132);
ctx.lineTo(2020,4132);
ctx.lineTo(2020,4168);
ctx.lineTo(1984,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,116,202,0.85)';
ctx.strokeStyle='rgb(196,51,69)';
ctx.moveTo(2080,4360);
ctx.lineTo(2080,4324);
ctx.lineTo(2116,4324);
ctx.lineTo(2116,4360);
ctx.lineTo(2080,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,189,88,0.85)';
ctx.strokeStyle='rgb(15,220,179)';
ctx.moveTo(2080,4264);
ctx.lineTo(2080,4228);
ctx.lineTo(2116,4228);
ctx.lineTo(2116,4264);
ctx.lineTo(2080,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,229,246,0.85)';
ctx.strokeStyle='rgb(91,35,120)';
ctx.moveTo(2080,4168);
ctx.lineTo(2080,4132);
ctx.lineTo(2116,4132);
ctx.lineTo(2116,4168);
ctx.lineTo(2080,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,155,65,0.85)';
ctx.strokeStyle='rgb(39,92,75)';
ctx.moveTo(2176,4360);
ctx.lineTo(2176,4324);
ctx.lineTo(2212,4324);
ctx.lineTo(2212,4360);
ctx.lineTo(2176,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,187,205,0.85)';
ctx.strokeStyle='rgb(243,12,239)';
ctx.moveTo(2176,4264);
ctx.lineTo(2176,4228);
ctx.lineTo(2212,4228);
ctx.lineTo(2212,4264);
ctx.lineTo(2176,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,41,138,0.85)';
ctx.strokeStyle='rgb(198,45,199)';
ctx.moveTo(2176,4168);
ctx.lineTo(2176,4132);
ctx.lineTo(2212,4132);
ctx.lineTo(2212,4168);
ctx.lineTo(2176,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,105,118,0.85)';
ctx.strokeStyle='rgb(59,170,134)';
ctx.moveTo(2272,4360);
ctx.lineTo(2272,4324);
ctx.lineTo(2308,4324);
ctx.lineTo(2308,4360);
ctx.lineTo(2272,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,221,85,0.85)';
ctx.strokeStyle='rgb(29,172,13)';
ctx.moveTo(2272,4264);
ctx.lineTo(2272,4228);
ctx.lineTo(2308,4228);
ctx.lineTo(2308,4264);
ctx.lineTo(2272,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,151,177,0.85)';
ctx.strokeStyle='rgb(192,13,250)';
ctx.moveTo(2272,4168);
ctx.lineTo(2272,4132);
ctx.lineTo(2308,4132);
ctx.lineTo(2308,4168);
ctx.lineTo(2272,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,211,87,0.85)';
ctx.strokeStyle='rgb(81,214,140)';
ctx.moveTo(2368,4360);
ctx.lineTo(2368,4324);
ctx.lineTo(2404,4324);
ctx.lineTo(2404,4360);
ctx.lineTo(2368,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,34,203,0.85)';
ctx.strokeStyle='rgb(188,232,62)';
ctx.moveTo(2368,4264);
ctx.lineTo(2368,4228);
ctx.lineTo(2404,4228);
ctx.lineTo(2404,4264);
ctx.lineTo(2368,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,247,221,0.85)';
ctx.strokeStyle='rgb(49,188,67)';
ctx.moveTo(2368,4168);
ctx.lineTo(2368,4132);
ctx.lineTo(2404,4132);
ctx.lineTo(2404,4168);
ctx.lineTo(2368,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,71,191,0.85)';
ctx.strokeStyle='rgb(171,122,253)';
ctx.moveTo(2464,4360);
ctx.lineTo(2464,4324);
ctx.lineTo(2500,4324);
ctx.lineTo(2500,4360);
ctx.lineTo(2464,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,225,132,0.85)';
ctx.strokeStyle='rgb(254,137,89)';
ctx.moveTo(2464,4264);
ctx.lineTo(2464,4228);
ctx.lineTo(2500,4228);
ctx.lineTo(2500,4264);
ctx.lineTo(2464,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,238,192,0.85)';
ctx.strokeStyle='rgb(59,100,68)';
ctx.moveTo(2464,4168);
ctx.lineTo(2464,4132);
ctx.lineTo(2500,4132);
ctx.lineTo(2500,4168);
ctx.lineTo(2464,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,55,38,0.85)';
ctx.strokeStyle='rgb(180,86,179)';
ctx.moveTo(2560,4360);
ctx.lineTo(2560,4324);
ctx.lineTo(2596,4324);
ctx.lineTo(2596,4360);
ctx.lineTo(2560,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,46,211,0.85)';
ctx.strokeStyle='rgb(145,68,170)';
ctx.moveTo(2560,4264);
ctx.lineTo(2560,4228);
ctx.lineTo(2596,4228);
ctx.lineTo(2596,4264);
ctx.lineTo(2560,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,8,39,0.85)';
ctx.strokeStyle='rgb(173,36,37)';
ctx.moveTo(2560,4168);
ctx.lineTo(2560,4132);
ctx.lineTo(2596,4132);
ctx.lineTo(2596,4168);
ctx.lineTo(2560,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,94,238,0.85)';
ctx.strokeStyle='rgb(168,41,21)';
ctx.moveTo(2656,4360);
ctx.lineTo(2656,4324);
ctx.lineTo(2692,4324);
ctx.lineTo(2692,4360);
ctx.lineTo(2656,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,209,10,0.85)';
ctx.strokeStyle='rgb(90,60,4)';
ctx.moveTo(2656,4264);
ctx.lineTo(2656,4228);
ctx.lineTo(2692,4228);
ctx.lineTo(2692,4264);
ctx.lineTo(2656,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,166,118,0.85)';
ctx.strokeStyle='rgb(126,43,118)';
ctx.moveTo(2656,4168);
ctx.lineTo(2656,4132);
ctx.lineTo(2692,4132);
ctx.lineTo(2692,4168);
ctx.lineTo(2656,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,10,242,0.85)';
ctx.strokeStyle='rgb(19,226,220)';
ctx.moveTo(3184,2584);
ctx.lineTo(3184,2548);
ctx.lineTo(3220,2548);
ctx.lineTo(3220,2584);
ctx.lineTo(3184,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,26,134,0.85)';
ctx.strokeStyle='rgb(65,112,123)';
ctx.moveTo(5572,4264);
ctx.lineTo(5572,4228);
ctx.lineTo(5608,4228);
ctx.lineTo(5608,4264);
ctx.lineTo(5572,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,187,78,0.85)';
ctx.strokeStyle='rgb(56,179,218)';
ctx.moveTo(5572,4168);
ctx.lineTo(5572,4132);
ctx.lineTo(5608,4132);
ctx.lineTo(5608,4168);
ctx.lineTo(5572,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,72,124,0.85)';
ctx.strokeStyle='rgb(88,229,79)';
ctx.moveTo(5668,4360);
ctx.lineTo(5668,4324);
ctx.lineTo(5704,4324);
ctx.lineTo(5704,4360);
ctx.lineTo(5668,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,246,202,0.85)';
ctx.strokeStyle='rgb(12,16,237)';
ctx.moveTo(3952,2584);
ctx.lineTo(3952,2548);
ctx.lineTo(3988,2548);
ctx.lineTo(3988,2584);
ctx.lineTo(3952,2584);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,11,212,0.85)';
ctx.strokeStyle='rgb(196,231,119)';
ctx.moveTo(3952,2488);
ctx.lineTo(3952,2452);
ctx.lineTo(3988,2452);
ctx.lineTo(3988,2488);
ctx.lineTo(3952,2488);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,217,30,0.85)';
ctx.strokeStyle='rgb(190,180,170)';
ctx.moveTo(5668,4264);
ctx.lineTo(5668,4228);
ctx.lineTo(5704,4228);
ctx.lineTo(5704,4264);
ctx.lineTo(5668,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,229,95,0.85)';
ctx.strokeStyle='rgb(161,57,248)';
ctx.moveTo(5668,4168);
ctx.lineTo(5668,4132);
ctx.lineTo(5704,4132);
ctx.lineTo(5704,4168);
ctx.lineTo(5668,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,36,109,0.85)';
ctx.strokeStyle='rgb(84,60,73)';
ctx.moveTo(5764,4360);
ctx.lineTo(5764,4324);
ctx.lineTo(5800,4324);
ctx.lineTo(5800,4360);
ctx.lineTo(5764,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,122,56,0.85)';
ctx.strokeStyle='rgb(151,239,254)';
ctx.moveTo(3952,2818);
ctx.lineTo(3952,2782);
ctx.lineTo(3988,2782);
ctx.lineTo(3988,2818);
ctx.lineTo(3952,2818);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,44,252,0.85)';
ctx.strokeStyle='rgb(47,100,153)';
ctx.moveTo(5764,4264);
ctx.lineTo(5764,4228);
ctx.lineTo(5800,4228);
ctx.lineTo(5800,4264);
ctx.lineTo(5764,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,225,1,0.85)';
ctx.strokeStyle='rgb(116,10,44)';
ctx.moveTo(5764,4168);
ctx.lineTo(5764,4132);
ctx.lineTo(5800,4132);
ctx.lineTo(5800,4168);
ctx.lineTo(5764,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,239,87,0.85)';
ctx.strokeStyle='rgb(57,251,9)';
ctx.moveTo(5860,4360);
ctx.lineTo(5860,4324);
ctx.lineTo(5896,4324);
ctx.lineTo(5896,4360);
ctx.lineTo(5860,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,47,160,0.85)';
ctx.strokeStyle='rgb(199,176,177)';
ctx.moveTo(5860,4264);
ctx.lineTo(5860,4228);
ctx.lineTo(5896,4228);
ctx.lineTo(5896,4264);
ctx.lineTo(5860,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,165,45,0.85)';
ctx.strokeStyle='rgb(134,193,8)';
ctx.moveTo(5860,4168);
ctx.lineTo(5860,4132);
ctx.lineTo(5896,4132);
ctx.lineTo(5896,4168);
ctx.lineTo(5860,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,183,206,0.85)';
ctx.strokeStyle='rgb(204,128,85)';
ctx.moveTo(5956,4360);
ctx.lineTo(5956,4324);
ctx.lineTo(5992,4324);
ctx.lineTo(5992,4360);
ctx.lineTo(5956,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,122,135,0.85)';
ctx.strokeStyle='rgb(227,154,32)';
ctx.moveTo(5956,4264);
ctx.lineTo(5956,4228);
ctx.lineTo(5992,4228);
ctx.lineTo(5992,4264);
ctx.lineTo(5956,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,162,175,0.85)';
ctx.strokeStyle='rgb(27,91,167)';
ctx.moveTo(5956,4168);
ctx.lineTo(5956,4132);
ctx.lineTo(5992,4132);
ctx.lineTo(5992,4168);
ctx.lineTo(5956,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,219,130,0.85)';
ctx.strokeStyle='rgb(79,54,71)';
ctx.moveTo(5476,4360);
ctx.lineTo(5476,4324);
ctx.lineTo(5512,4324);
ctx.lineTo(5512,4360);
ctx.lineTo(5476,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,233,207,0.85)';
ctx.strokeStyle='rgb(190,66,251)';
ctx.moveTo(5476,4264);
ctx.lineTo(5476,4228);
ctx.lineTo(5512,4228);
ctx.lineTo(5512,4264);
ctx.lineTo(5476,4264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,159,201,0.85)';
ctx.strokeStyle='rgb(213,142,235)';
ctx.moveTo(5476,4168);
ctx.lineTo(5476,4132);
ctx.lineTo(5512,4132);
ctx.lineTo(5512,4168);
ctx.lineTo(5476,4168);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,127,88,0.85)';
ctx.strokeStyle='rgb(186,3,16)';
ctx.moveTo(5572,4360);
ctx.lineTo(5572,4324);
ctx.lineTo(5608,4324);
ctx.lineTo(5608,4360);
ctx.lineTo(5572,4360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,206,193,0.85)';
ctx.strokeStyle='rgb(111,51,109)';
ctx.moveTo(5668,7192);
ctx.lineTo(5668,7156);
ctx.lineTo(5704,7156);
ctx.lineTo(5704,7192);
ctx.lineTo(5668,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,178,106,0.85)';
ctx.strokeStyle='rgb(235,11,183)';
ctx.moveTo(5764,7384);
ctx.lineTo(5764,7348);
ctx.lineTo(5800,7348);
ctx.lineTo(5800,7384);
ctx.lineTo(5764,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,239,134,0.85)';
ctx.strokeStyle='rgb(110,207,104)';
ctx.moveTo(5764,7288);
ctx.lineTo(5764,7252);
ctx.lineTo(5800,7252);
ctx.lineTo(5800,7288);
ctx.lineTo(5764,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,5,183,0.85)';
ctx.strokeStyle='rgb(237,206,175)';
ctx.moveTo(5764,7192);
ctx.lineTo(5764,7156);
ctx.lineTo(5800,7156);
ctx.lineTo(5800,7192);
ctx.lineTo(5764,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,243,254,0.85)';
ctx.strokeStyle='rgb(251,171,204)';
ctx.moveTo(5860,7384);
ctx.lineTo(5860,7348);
ctx.lineTo(5896,7348);
ctx.lineTo(5896,7384);
ctx.lineTo(5860,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,48,55,0.85)';
ctx.strokeStyle='rgb(113,151,97)';
ctx.moveTo(5860,7288);
ctx.lineTo(5860,7252);
ctx.lineTo(5896,7252);
ctx.lineTo(5896,7288);
ctx.lineTo(5860,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,233,29,0.85)';
ctx.strokeStyle='rgb(183,178,167)';
ctx.moveTo(5860,7192);
ctx.lineTo(5860,7156);
ctx.lineTo(5896,7156);
ctx.lineTo(5896,7192);
ctx.lineTo(5860,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,165,66,0.85)';
ctx.strokeStyle='rgb(167,52,127)';
ctx.moveTo(5956,7384);
ctx.lineTo(5956,7348);
ctx.lineTo(5992,7348);
ctx.lineTo(5992,7384);
ctx.lineTo(5956,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,194,5,0.85)';
ctx.strokeStyle='rgb(91,143,38)';
ctx.moveTo(5956,7288);
ctx.lineTo(5956,7252);
ctx.lineTo(5992,7252);
ctx.lineTo(5992,7288);
ctx.lineTo(5956,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,201,181,0.85)';
ctx.strokeStyle='rgb(130,233,227)';
ctx.moveTo(5956,7192);
ctx.lineTo(5956,7156);
ctx.lineTo(5992,7156);
ctx.lineTo(5992,7192);
ctx.lineTo(5956,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,12,169,0.85)';
ctx.strokeStyle='rgb(61,109,221)';
ctx.moveTo(5476,7384);
ctx.lineTo(5476,7348);
ctx.lineTo(5512,7348);
ctx.lineTo(5512,7384);
ctx.lineTo(5476,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,125,172,0.85)';
ctx.strokeStyle='rgb(122,90,41)';
ctx.moveTo(5476,7288);
ctx.lineTo(5476,7252);
ctx.lineTo(5512,7252);
ctx.lineTo(5512,7288);
ctx.lineTo(5476,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,26,132,0.85)';
ctx.strokeStyle='rgb(207,135,155)';
ctx.moveTo(5476,7192);
ctx.lineTo(5476,7156);
ctx.lineTo(5512,7156);
ctx.lineTo(5512,7192);
ctx.lineTo(5476,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,39,133,0.85)';
ctx.strokeStyle='rgb(84,18,51)';
ctx.moveTo(5572,7384);
ctx.lineTo(5572,7348);
ctx.lineTo(5608,7348);
ctx.lineTo(5608,7384);
ctx.lineTo(5572,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,134,18,0.85)';
ctx.strokeStyle='rgb(56,144,95)';
ctx.moveTo(5572,7288);
ctx.lineTo(5572,7252);
ctx.lineTo(5608,7252);
ctx.lineTo(5608,7288);
ctx.lineTo(5572,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,162,20,0.85)';
ctx.strokeStyle='rgb(248,178,46)';
ctx.moveTo(5572,7192);
ctx.lineTo(5572,7156);
ctx.lineTo(5608,7156);
ctx.lineTo(5608,7192);
ctx.lineTo(5572,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,36,216,0.85)';
ctx.strokeStyle='rgb(181,10,186)';
ctx.moveTo(5668,7384);
ctx.lineTo(5668,7348);
ctx.lineTo(5704,7348);
ctx.lineTo(5704,7384);
ctx.lineTo(5668,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,161,60,0.85)';
ctx.strokeStyle='rgb(93,218,26)';
ctx.moveTo(5668,7288);
ctx.lineTo(5668,7252);
ctx.lineTo(5704,7252);
ctx.lineTo(5704,7288);
ctx.lineTo(5668,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,184,75,0.85)';
ctx.strokeStyle='rgb(154,95,219)';
ctx.moveTo(2992,5872);
ctx.lineTo(2992,5836);
ctx.lineTo(3028,5836);
ctx.lineTo(3028,5872);
ctx.lineTo(2992,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,114,222,0.85)';
ctx.strokeStyle='rgb(192,228,104)';
ctx.moveTo(2992,5776);
ctx.lineTo(2992,5740);
ctx.lineTo(3028,5740);
ctx.lineTo(3028,5776);
ctx.lineTo(2992,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,45,72,0.85)';
ctx.strokeStyle='rgb(92,124,43)';
ctx.moveTo(2992,5680);
ctx.lineTo(2992,5644);
ctx.lineTo(3028,5644);
ctx.lineTo(3028,5680);
ctx.lineTo(2992,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,227,207,0.85)';
ctx.strokeStyle='rgb(51,41,237)';
ctx.moveTo(3088,5872);
ctx.lineTo(3088,5836);
ctx.lineTo(3124,5836);
ctx.lineTo(3124,5872);
ctx.lineTo(3088,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,210,30,0.85)';
ctx.strokeStyle='rgb(143,76,168)';
ctx.moveTo(3088,5776);
ctx.lineTo(3088,5740);
ctx.lineTo(3124,5740);
ctx.lineTo(3124,5776);
ctx.lineTo(3088,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,118,22,0.85)';
ctx.strokeStyle='rgb(161,102,169)';
ctx.moveTo(3088,5680);
ctx.lineTo(3088,5644);
ctx.lineTo(3124,5644);
ctx.lineTo(3124,5680);
ctx.lineTo(3088,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,202,177,0.85)';
ctx.strokeStyle='rgb(114,1,189)';
ctx.moveTo(3184,5872);
ctx.lineTo(3184,5836);
ctx.lineTo(3220,5836);
ctx.lineTo(3220,5872);
ctx.lineTo(3184,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,238,146,0.85)';
ctx.strokeStyle='rgb(230,228,238)';
ctx.moveTo(3184,5776);
ctx.lineTo(3184,5740);
ctx.lineTo(3220,5740);
ctx.lineTo(3220,5776);
ctx.lineTo(3184,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,40,74,0.85)';
ctx.strokeStyle='rgb(64,124,195)';
ctx.moveTo(3184,5680);
ctx.lineTo(3184,5644);
ctx.lineTo(3220,5644);
ctx.lineTo(3220,5680);
ctx.lineTo(3184,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,231,6,0.85)';
ctx.strokeStyle='rgb(115,33,86)';
ctx.moveTo(3280,5872);
ctx.lineTo(3280,5836);
ctx.lineTo(3316,5836);
ctx.lineTo(3316,5872);
ctx.lineTo(3280,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,208,72,0.85)';
ctx.strokeStyle='rgb(244,175,48)';
ctx.moveTo(3280,5776);
ctx.lineTo(3280,5740);
ctx.lineTo(3316,5740);
ctx.lineTo(3316,5776);
ctx.lineTo(3280,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,168,126,0.85)';
ctx.strokeStyle='rgb(77,224,172)';
ctx.moveTo(3280,5680);
ctx.lineTo(3280,5644);
ctx.lineTo(3316,5644);
ctx.lineTo(3316,5680);
ctx.lineTo(3280,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,143,34,0.85)';
ctx.strokeStyle='rgb(54,33,110)';
ctx.moveTo(3376,5872);
ctx.lineTo(3376,5836);
ctx.lineTo(3412,5836);
ctx.lineTo(3412,5872);
ctx.lineTo(3376,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,36,187,0.85)';
ctx.strokeStyle='rgb(5,68,210)';
ctx.moveTo(3376,5776);
ctx.lineTo(3376,5740);
ctx.lineTo(3412,5740);
ctx.lineTo(3412,5776);
ctx.lineTo(3376,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,228,74,0.85)';
ctx.strokeStyle='rgb(90,5,135)';
ctx.moveTo(3376,5680);
ctx.lineTo(3376,5644);
ctx.lineTo(3412,5644);
ctx.lineTo(3412,5680);
ctx.lineTo(3376,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,181,31,0.85)';
ctx.strokeStyle='rgb(176,182,75)';
ctx.moveTo(3472,5872);
ctx.lineTo(3472,5836);
ctx.lineTo(3508,5836);
ctx.lineTo(3508,5872);
ctx.lineTo(3472,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,218,81,0.85)';
ctx.strokeStyle='rgb(221,50,7)';
ctx.moveTo(3472,5776);
ctx.lineTo(3472,5740);
ctx.lineTo(3508,5740);
ctx.lineTo(3508,5776);
ctx.lineTo(3472,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,48,198,0.85)';
ctx.strokeStyle='rgb(177,155,18)';
ctx.moveTo(3472,5680);
ctx.lineTo(3472,5644);
ctx.lineTo(3508,5644);
ctx.lineTo(3508,5680);
ctx.lineTo(3472,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,3,160,0.85)';
ctx.strokeStyle='rgb(77,85,98)';
ctx.moveTo(3568,5872);
ctx.lineTo(3568,5836);
ctx.lineTo(3604,5836);
ctx.lineTo(3604,5872);
ctx.lineTo(3568,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,228,205,0.85)';
ctx.strokeStyle='rgb(194,42,216)';
ctx.moveTo(3568,5776);
ctx.lineTo(3568,5740);
ctx.lineTo(3604,5740);
ctx.lineTo(3604,5776);
ctx.lineTo(3568,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,178,225,0.85)';
ctx.strokeStyle='rgb(108,37,100)';
ctx.moveTo(3568,5680);
ctx.lineTo(3568,5644);
ctx.lineTo(3604,5644);
ctx.lineTo(3604,5680);
ctx.lineTo(3568,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,237,198,0.85)';
ctx.strokeStyle='rgb(190,59,199)';
ctx.moveTo(3664,5872);
ctx.lineTo(3664,5836);
ctx.lineTo(3700,5836);
ctx.lineTo(3700,5872);
ctx.lineTo(3664,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,133,177,0.85)';
ctx.strokeStyle='rgb(201,217,63)';
ctx.moveTo(3664,5776);
ctx.lineTo(3664,5740);
ctx.lineTo(3700,5740);
ctx.lineTo(3700,5776);
ctx.lineTo(3664,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,236,88,0.85)';
ctx.strokeStyle='rgb(98,210,208)';
ctx.moveTo(3664,5680);
ctx.lineTo(3664,5644);
ctx.lineTo(3700,5644);
ctx.lineTo(3700,5680);
ctx.lineTo(3664,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,155,138,0.85)';
ctx.strokeStyle='rgb(236,122,116)';
ctx.moveTo(3760,5872);
ctx.lineTo(3760,5836);
ctx.lineTo(3796,5836);
ctx.lineTo(3796,5872);
ctx.lineTo(3760,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,3,22,0.85)';
ctx.strokeStyle='rgb(142,247,214)';
ctx.moveTo(3760,5776);
ctx.lineTo(3760,5740);
ctx.lineTo(3796,5740);
ctx.lineTo(3796,5776);
ctx.lineTo(3760,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,164,194,0.85)';
ctx.strokeStyle='rgb(125,156,229)';
ctx.moveTo(3760,5680);
ctx.lineTo(3760,5644);
ctx.lineTo(3796,5644);
ctx.lineTo(3796,5680);
ctx.lineTo(3760,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,214,34,0.85)';
ctx.strokeStyle='rgb(177,196,210)';
ctx.moveTo(3856,5872);
ctx.lineTo(3856,5836);
ctx.lineTo(3892,5836);
ctx.lineTo(3892,5872);
ctx.lineTo(3856,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,214,227,0.85)';
ctx.strokeStyle='rgb(233,54,92)';
ctx.moveTo(3856,5776);
ctx.lineTo(3856,5740);
ctx.lineTo(3892,5740);
ctx.lineTo(3892,5776);
ctx.lineTo(3856,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,113,51,0.85)';
ctx.strokeStyle='rgb(70,18,100)';
ctx.moveTo(3856,5680);
ctx.lineTo(3856,5644);
ctx.lineTo(3892,5644);
ctx.lineTo(3892,5680);
ctx.lineTo(3856,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,123,38,0.85)';
ctx.strokeStyle='rgb(98,144,35)';
ctx.moveTo(3952,5872);
ctx.lineTo(3952,5836);
ctx.lineTo(3988,5836);
ctx.lineTo(3988,5872);
ctx.lineTo(3952,5872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,70,129,0.85)';
ctx.strokeStyle='rgb(107,19,34)';
ctx.moveTo(3952,5776);
ctx.lineTo(3952,5740);
ctx.lineTo(3988,5740);
ctx.lineTo(3988,5776);
ctx.lineTo(3952,5776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,98,186,0.85)';
ctx.strokeStyle='rgb(25,177,154)';
ctx.moveTo(3952,5680);
ctx.lineTo(3952,5644);
ctx.lineTo(3988,5644);
ctx.lineTo(3988,5680);
ctx.lineTo(3952,5680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,82,215,0.85)';
ctx.strokeStyle='rgb(40,49,48)';
ctx.moveTo(1696,7384);
ctx.lineTo(1696,7348);
ctx.lineTo(1732,7348);
ctx.lineTo(1732,7384);
ctx.lineTo(1696,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,225,95,0.85)';
ctx.strokeStyle='rgb(86,58,106)';
ctx.moveTo(1696,7288);
ctx.lineTo(1696,7252);
ctx.lineTo(1732,7252);
ctx.lineTo(1732,7288);
ctx.lineTo(1696,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,98,117,0.85)';
ctx.strokeStyle='rgb(103,46,179)';
ctx.moveTo(1696,7192);
ctx.lineTo(1696,7156);
ctx.lineTo(1732,7156);
ctx.lineTo(1732,7192);
ctx.lineTo(1696,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,35,105,0.85)';
ctx.strokeStyle='rgb(244,33,253)';
ctx.moveTo(1792,7384);
ctx.lineTo(1792,7348);
ctx.lineTo(1828,7348);
ctx.lineTo(1828,7384);
ctx.lineTo(1792,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,48,22,0.85)';
ctx.strokeStyle='rgb(81,72,98)';
ctx.moveTo(1792,7288);
ctx.lineTo(1792,7252);
ctx.lineTo(1828,7252);
ctx.lineTo(1828,7288);
ctx.lineTo(1792,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,157,52,0.85)';
ctx.strokeStyle='rgb(166,151,242)';
ctx.moveTo(1792,7192);
ctx.lineTo(1792,7156);
ctx.lineTo(1828,7156);
ctx.lineTo(1828,7192);
ctx.lineTo(1792,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,18,15,0.85)';
ctx.strokeStyle='rgb(65,159,220)';
ctx.moveTo(1888,7384);
ctx.lineTo(1888,7348);
ctx.lineTo(1924,7348);
ctx.lineTo(1924,7384);
ctx.lineTo(1888,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,217,213,0.85)';
ctx.strokeStyle='rgb(139,206,204)';
ctx.moveTo(1888,7288);
ctx.lineTo(1888,7252);
ctx.lineTo(1924,7252);
ctx.lineTo(1924,7288);
ctx.lineTo(1888,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,213,240,0.85)';
ctx.strokeStyle='rgb(157,158,175)';
ctx.moveTo(1888,7192);
ctx.lineTo(1888,7156);
ctx.lineTo(1924,7156);
ctx.lineTo(1924,7192);
ctx.lineTo(1888,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,50,210,0.85)';
ctx.strokeStyle='rgb(87,61,153)';
ctx.moveTo(1984,7384);
ctx.lineTo(1984,7348);
ctx.lineTo(2020,7348);
ctx.lineTo(2020,7384);
ctx.lineTo(1984,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,125,238,0.85)';
ctx.strokeStyle='rgb(118,79,208)';
ctx.moveTo(1984,7288);
ctx.lineTo(1984,7252);
ctx.lineTo(2020,7252);
ctx.lineTo(2020,7288);
ctx.lineTo(1984,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,212,135,0.85)';
ctx.strokeStyle='rgb(212,79,119)';
ctx.moveTo(1984,7192);
ctx.lineTo(1984,7156);
ctx.lineTo(2020,7156);
ctx.lineTo(2020,7192);
ctx.lineTo(1984,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,184,74,0.85)';
ctx.strokeStyle='rgb(94,120,171)';
ctx.moveTo(2080,7384);
ctx.lineTo(2080,7348);
ctx.lineTo(2116,7348);
ctx.lineTo(2116,7384);
ctx.lineTo(2080,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,225,235,0.85)';
ctx.strokeStyle='rgb(68,60,144)';
ctx.moveTo(2080,7288);
ctx.lineTo(2080,7252);
ctx.lineTo(2116,7252);
ctx.lineTo(2116,7288);
ctx.lineTo(2080,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,176,169,0.85)';
ctx.strokeStyle='rgb(249,249,211)';
ctx.moveTo(2080,7192);
ctx.lineTo(2080,7156);
ctx.lineTo(2116,7156);
ctx.lineTo(2116,7192);
ctx.lineTo(2080,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,198,250,0.85)';
ctx.strokeStyle='rgb(236,245,4)';
ctx.moveTo(2176,7384);
ctx.lineTo(2176,7348);
ctx.lineTo(2212,7348);
ctx.lineTo(2212,7384);
ctx.lineTo(2176,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,120,19,0.85)';
ctx.strokeStyle='rgb(204,154,12)';
ctx.moveTo(2176,7288);
ctx.lineTo(2176,7252);
ctx.lineTo(2212,7252);
ctx.lineTo(2212,7288);
ctx.lineTo(2176,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,24,74,0.85)';
ctx.strokeStyle='rgb(83,245,75)';
ctx.moveTo(2176,7192);
ctx.lineTo(2176,7156);
ctx.lineTo(2212,7156);
ctx.lineTo(2212,7192);
ctx.lineTo(2176,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,143,35,0.85)';
ctx.strokeStyle='rgb(196,158,245)';
ctx.moveTo(2272,7384);
ctx.lineTo(2272,7348);
ctx.lineTo(2308,7348);
ctx.lineTo(2308,7384);
ctx.lineTo(2272,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,107,115,0.85)';
ctx.strokeStyle='rgb(134,140,93)';
ctx.moveTo(2272,7288);
ctx.lineTo(2272,7252);
ctx.lineTo(2308,7252);
ctx.lineTo(2308,7288);
ctx.lineTo(2272,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,85,239,0.85)';
ctx.strokeStyle='rgb(130,41,171)';
ctx.moveTo(2272,7192);
ctx.lineTo(2272,7156);
ctx.lineTo(2308,7156);
ctx.lineTo(2308,7192);
ctx.lineTo(2272,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,230,207,0.85)';
ctx.strokeStyle='rgb(35,242,164)';
ctx.moveTo(2368,7384);
ctx.lineTo(2368,7348);
ctx.lineTo(2404,7348);
ctx.lineTo(2404,7384);
ctx.lineTo(2368,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,118,98,0.85)';
ctx.strokeStyle='rgb(179,154,119)';
ctx.moveTo(2368,7288);
ctx.lineTo(2368,7252);
ctx.lineTo(2404,7252);
ctx.lineTo(2404,7288);
ctx.lineTo(2368,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,138,181,0.85)';
ctx.strokeStyle='rgb(138,198,135)';
ctx.moveTo(2368,7192);
ctx.lineTo(2368,7156);
ctx.lineTo(2404,7156);
ctx.lineTo(2404,7192);
ctx.lineTo(2368,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,80,224,0.85)';
ctx.strokeStyle='rgb(41,104,134)';
ctx.moveTo(2464,7384);
ctx.lineTo(2464,7348);
ctx.lineTo(2500,7348);
ctx.lineTo(2500,7384);
ctx.lineTo(2464,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,224,164,0.85)';
ctx.strokeStyle='rgb(67,7,187)';
ctx.moveTo(2464,7288);
ctx.lineTo(2464,7252);
ctx.lineTo(2500,7252);
ctx.lineTo(2500,7288);
ctx.lineTo(2464,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,39,78,0.85)';
ctx.strokeStyle='rgb(147,55,158)';
ctx.moveTo(2464,7192);
ctx.lineTo(2464,7156);
ctx.lineTo(2500,7156);
ctx.lineTo(2500,7192);
ctx.lineTo(2464,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,109,36,0.85)';
ctx.strokeStyle='rgb(10,29,239)';
ctx.moveTo(2560,7384);
ctx.lineTo(2560,7348);
ctx.lineTo(2596,7348);
ctx.lineTo(2596,7384);
ctx.lineTo(2560,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,83,16,0.85)';
ctx.strokeStyle='rgb(191,57,241)';
ctx.moveTo(2560,7288);
ctx.lineTo(2560,7252);
ctx.lineTo(2596,7252);
ctx.lineTo(2596,7288);
ctx.lineTo(2560,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,130,164,0.85)';
ctx.strokeStyle='rgb(15,123,193)';
ctx.moveTo(2560,7192);
ctx.lineTo(2560,7156);
ctx.lineTo(2596,7156);
ctx.lineTo(2596,7192);
ctx.lineTo(2560,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,111,245,0.85)';
ctx.strokeStyle='rgb(172,138,216)';
ctx.moveTo(2656,7384);
ctx.lineTo(2656,7348);
ctx.lineTo(2692,7348);
ctx.lineTo(2692,7384);
ctx.lineTo(2656,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,108,231,0.85)';
ctx.strokeStyle='rgb(206,20,250)';
ctx.moveTo(2656,7288);
ctx.lineTo(2656,7252);
ctx.lineTo(2692,7252);
ctx.lineTo(2692,7288);
ctx.lineTo(2656,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,238,37,0.85)';
ctx.strokeStyle='rgb(4,100,98)';
ctx.moveTo(2656,7192);
ctx.lineTo(2656,7156);
ctx.lineTo(2692,7156);
ctx.lineTo(2692,7192);
ctx.lineTo(2656,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,201,214,0.85)';
ctx.strokeStyle='rgb(61,77,194)';
ctx.moveTo(6340,7192);
ctx.lineTo(6340,7156);
ctx.lineTo(6376,7156);
ctx.lineTo(6376,7192);
ctx.lineTo(6340,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,16,198,0.85)';
ctx.strokeStyle='rgb(65,69,123)';
ctx.moveTo(6436,7384);
ctx.lineTo(6436,7348);
ctx.lineTo(6472,7348);
ctx.lineTo(6472,7384);
ctx.lineTo(6436,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,246,179,0.85)';
ctx.strokeStyle='rgb(81,114,115)';
ctx.moveTo(6436,7288);
ctx.lineTo(6436,7252);
ctx.lineTo(6472,7252);
ctx.lineTo(6472,7288);
ctx.lineTo(6436,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,26,190,0.85)';
ctx.strokeStyle='rgb(117,37,144)';
ctx.moveTo(6436,7192);
ctx.lineTo(6436,7156);
ctx.lineTo(6472,7156);
ctx.lineTo(6472,7192);
ctx.lineTo(6436,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,155,47,0.85)';
ctx.strokeStyle='rgb(244,139,93)';
ctx.moveTo(6052,7384);
ctx.lineTo(6052,7348);
ctx.lineTo(6088,7348);
ctx.lineTo(6088,7384);
ctx.lineTo(6052,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,5,208,0.85)';
ctx.strokeStyle='rgb(254,125,164)';
ctx.moveTo(6052,7288);
ctx.lineTo(6052,7252);
ctx.lineTo(6088,7252);
ctx.lineTo(6088,7288);
ctx.lineTo(6052,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,164,88,0.85)';
ctx.strokeStyle='rgb(112,41,196)';
ctx.moveTo(6052,7192);
ctx.lineTo(6052,7156);
ctx.lineTo(6088,7156);
ctx.lineTo(6088,7192);
ctx.lineTo(6052,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,36,146,0.85)';
ctx.strokeStyle='rgb(243,243,54)';
ctx.moveTo(6148,7384);
ctx.lineTo(6148,7348);
ctx.lineTo(6184,7348);
ctx.lineTo(6184,7384);
ctx.lineTo(6148,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,212,8,0.85)';
ctx.strokeStyle='rgb(18,209,151)';
ctx.moveTo(6148,7288);
ctx.lineTo(6148,7252);
ctx.lineTo(6184,7252);
ctx.lineTo(6184,7288);
ctx.lineTo(6148,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,136,15,0.85)';
ctx.strokeStyle='rgb(74,185,142)';
ctx.moveTo(6148,7192);
ctx.lineTo(6148,7156);
ctx.lineTo(6184,7156);
ctx.lineTo(6184,7192);
ctx.lineTo(6148,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,49,10,0.85)';
ctx.strokeStyle='rgb(30,40,162)';
ctx.moveTo(6244,7384);
ctx.lineTo(6244,7348);
ctx.lineTo(6280,7348);
ctx.lineTo(6280,7384);
ctx.lineTo(6244,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,197,204,0.85)';
ctx.strokeStyle='rgb(107,71,202)';
ctx.moveTo(6244,7288);
ctx.lineTo(6244,7252);
ctx.lineTo(6280,7252);
ctx.lineTo(6280,7288);
ctx.lineTo(6244,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,122,7,0.85)';
ctx.strokeStyle='rgb(55,237,32)';
ctx.moveTo(6244,7192);
ctx.lineTo(6244,7156);
ctx.lineTo(6280,7156);
ctx.lineTo(6280,7192);
ctx.lineTo(6244,7192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,245,93,0.85)';
ctx.strokeStyle='rgb(79,200,165)';
ctx.moveTo(6340,7384);
ctx.lineTo(6340,7348);
ctx.lineTo(6376,7348);
ctx.lineTo(6376,7384);
ctx.lineTo(6340,7384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,28,29,0.85)';
ctx.strokeStyle='rgb(195,217,132)';
ctx.moveTo(6340,7288);
ctx.lineTo(6340,7252);
ctx.lineTo(6376,7252);
ctx.lineTo(6376,7288);
ctx.lineTo(6340,7288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,207,175,0.85)';
ctx.strokeStyle='rgb(225,42,25)';
ctx.moveTo(6052,10408);
ctx.lineTo(6052,10372);
ctx.lineTo(6088,10372);
ctx.lineTo(6088,10408);
ctx.lineTo(6052,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,116,24,0.85)';
ctx.strokeStyle='rgb(176,110,22)';
ctx.moveTo(6052,10312);
ctx.lineTo(6052,10276);
ctx.lineTo(6088,10276);
ctx.lineTo(6088,10312);
ctx.lineTo(6052,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,155,147,0.85)';
ctx.strokeStyle='rgb(38,159,94)';
ctx.moveTo(6052,10216);
ctx.lineTo(6052,10180);
ctx.lineTo(6088,10180);
ctx.lineTo(6088,10216);
ctx.lineTo(6052,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,197,114,0.85)';
ctx.strokeStyle='rgb(8,206,58)';
ctx.moveTo(6148,10408);
ctx.lineTo(6148,10372);
ctx.lineTo(6184,10372);
ctx.lineTo(6184,10408);
ctx.lineTo(6148,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,250,128,0.85)';
ctx.strokeStyle='rgb(79,173,84)';
ctx.moveTo(6148,10312);
ctx.lineTo(6148,10276);
ctx.lineTo(6184,10276);
ctx.lineTo(6184,10312);
ctx.lineTo(6148,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,245,250,0.85)';
ctx.strokeStyle='rgb(166,128,166)';
ctx.moveTo(6148,10216);
ctx.lineTo(6148,10180);
ctx.lineTo(6184,10180);
ctx.lineTo(6184,10216);
ctx.lineTo(6148,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,58,20,0.85)';
ctx.strokeStyle='rgb(67,147,232)';
ctx.moveTo(6244,10408);
ctx.lineTo(6244,10372);
ctx.lineTo(6280,10372);
ctx.lineTo(6280,10408);
ctx.lineTo(6244,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,210,49,0.85)';
ctx.strokeStyle='rgb(189,82,14)';
ctx.moveTo(6244,10312);
ctx.lineTo(6244,10276);
ctx.lineTo(6280,10276);
ctx.lineTo(6280,10312);
ctx.lineTo(6244,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,128,149,0.85)';
ctx.strokeStyle='rgb(83,143,27)';
ctx.moveTo(6244,10216);
ctx.lineTo(6244,10180);
ctx.lineTo(6280,10180);
ctx.lineTo(6280,10216);
ctx.lineTo(6244,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,83,125,0.85)';
ctx.strokeStyle='rgb(104,108,67)';
ctx.moveTo(6340,10408);
ctx.lineTo(6340,10372);
ctx.lineTo(6376,10372);
ctx.lineTo(6376,10408);
ctx.lineTo(6340,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,89,20,0.85)';
ctx.strokeStyle='rgb(200,108,21)';
ctx.moveTo(6340,10312);
ctx.lineTo(6340,10276);
ctx.lineTo(6376,10276);
ctx.lineTo(6376,10312);
ctx.lineTo(6340,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,101,223,0.85)';
ctx.strokeStyle='rgb(119,109,190)';
ctx.moveTo(6340,10216);
ctx.lineTo(6340,10180);
ctx.lineTo(6376,10180);
ctx.lineTo(6376,10216);
ctx.lineTo(6340,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,207,31,0.85)';
ctx.strokeStyle='rgb(202,74,113)';
ctx.moveTo(6436,10408);
ctx.lineTo(6436,10372);
ctx.lineTo(6472,10372);
ctx.lineTo(6472,10408);
ctx.lineTo(6436,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,138,254,0.85)';
ctx.strokeStyle='rgb(122,20,254)';
ctx.moveTo(6436,10312);
ctx.lineTo(6436,10276);
ctx.lineTo(6472,10276);
ctx.lineTo(6472,10312);
ctx.lineTo(6436,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,46,3,0.85)';
ctx.strokeStyle='rgb(122,69,155)';
ctx.moveTo(6436,10216);
ctx.lineTo(6436,10180);
ctx.lineTo(6472,10180);
ctx.lineTo(6472,10216);
ctx.lineTo(6436,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,162,18,0.85)';
ctx.strokeStyle='rgb(150,180,110)';
ctx.moveTo(3856,8896);
ctx.lineTo(3856,8860);
ctx.lineTo(3892,8860);
ctx.lineTo(3892,8896);
ctx.lineTo(3856,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,117,250,0.85)';
ctx.strokeStyle='rgb(78,109,99)';
ctx.moveTo(3856,8800);
ctx.lineTo(3856,8764);
ctx.lineTo(3892,8764);
ctx.lineTo(3892,8800);
ctx.lineTo(3856,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,179,243,0.85)';
ctx.strokeStyle='rgb(175,149,207)';
ctx.moveTo(3856,11920);
ctx.lineTo(3856,11884);
ctx.lineTo(3892,11884);
ctx.lineTo(3892,11920);
ctx.lineTo(3856,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,51,77,0.85)';
ctx.strokeStyle='rgb(150,42,125)';
ctx.moveTo(3856,11824);
ctx.lineTo(3856,11788);
ctx.lineTo(3892,11788);
ctx.lineTo(3892,11824);
ctx.lineTo(3856,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,207,115,0.85)';
ctx.strokeStyle='rgb(78,126,122)';
ctx.moveTo(3856,11728);
ctx.lineTo(3856,11692);
ctx.lineTo(3892,11692);
ctx.lineTo(3892,11728);
ctx.lineTo(3856,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,208,2,0.85)';
ctx.strokeStyle='rgb(58,90,162)';
ctx.moveTo(5476,10312);
ctx.lineTo(5476,10276);
ctx.lineTo(5512,10276);
ctx.lineTo(5512,10312);
ctx.lineTo(5476,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,223,119,0.85)';
ctx.strokeStyle='rgb(27,110,20)';
ctx.moveTo(5476,10216);
ctx.lineTo(5476,10180);
ctx.lineTo(5512,10180);
ctx.lineTo(5512,10216);
ctx.lineTo(5476,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,26,157,0.85)';
ctx.strokeStyle='rgb(218,161,102)';
ctx.moveTo(5572,10408);
ctx.lineTo(5572,10372);
ctx.lineTo(5608,10372);
ctx.lineTo(5608,10408);
ctx.lineTo(5572,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,222,232,0.85)';
ctx.strokeStyle='rgb(126,106,39)';
ctx.moveTo(5572,10312);
ctx.lineTo(5572,10276);
ctx.lineTo(5608,10276);
ctx.lineTo(5608,10312);
ctx.lineTo(5572,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,102,89,0.85)';
ctx.strokeStyle='rgb(232,169,108)';
ctx.moveTo(5572,10216);
ctx.lineTo(5572,10180);
ctx.lineTo(5608,10180);
ctx.lineTo(5608,10216);
ctx.lineTo(5572,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,126,126,0.85)';
ctx.strokeStyle='rgb(91,123,14)';
ctx.moveTo(5668,10408);
ctx.lineTo(5668,10372);
ctx.lineTo(5704,10372);
ctx.lineTo(5704,10408);
ctx.lineTo(5668,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,233,127,0.85)';
ctx.strokeStyle='rgb(72,171,6)';
ctx.moveTo(5668,10312);
ctx.lineTo(5668,10276);
ctx.lineTo(5704,10276);
ctx.lineTo(5704,10312);
ctx.lineTo(5668,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,134,197,0.85)';
ctx.strokeStyle='rgb(130,183,39)';
ctx.moveTo(5668,10216);
ctx.lineTo(5668,10180);
ctx.lineTo(5704,10180);
ctx.lineTo(5704,10216);
ctx.lineTo(5668,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,20,109,0.85)';
ctx.strokeStyle='rgb(37,194,100)';
ctx.moveTo(5764,10408);
ctx.lineTo(5764,10372);
ctx.lineTo(5800,10372);
ctx.lineTo(5800,10408);
ctx.lineTo(5764,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,229,31,0.85)';
ctx.strokeStyle='rgb(129,115,79)';
ctx.moveTo(5764,10312);
ctx.lineTo(5764,10276);
ctx.lineTo(5800,10276);
ctx.lineTo(5800,10312);
ctx.lineTo(5764,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,143,98,0.85)';
ctx.strokeStyle='rgb(185,151,186)';
ctx.moveTo(5764,10216);
ctx.lineTo(5764,10180);
ctx.lineTo(5800,10180);
ctx.lineTo(5800,10216);
ctx.lineTo(5764,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,61,142,0.85)';
ctx.strokeStyle='rgb(46,120,147)';
ctx.moveTo(5860,10408);
ctx.lineTo(5860,10372);
ctx.lineTo(5896,10372);
ctx.lineTo(5896,10408);
ctx.lineTo(5860,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,143,196,0.85)';
ctx.strokeStyle='rgb(65,109,215)';
ctx.moveTo(5860,10312);
ctx.lineTo(5860,10276);
ctx.lineTo(5896,10276);
ctx.lineTo(5896,10312);
ctx.lineTo(5860,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,188,238,0.85)';
ctx.strokeStyle='rgb(191,83,15)';
ctx.moveTo(5860,10216);
ctx.lineTo(5860,10180);
ctx.lineTo(5896,10180);
ctx.lineTo(5896,10216);
ctx.lineTo(5860,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,30,187,0.85)';
ctx.strokeStyle='rgb(132,123,73)';
ctx.moveTo(5956,10408);
ctx.lineTo(5956,10372);
ctx.lineTo(5992,10372);
ctx.lineTo(5992,10408);
ctx.lineTo(5956,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,84,236,0.85)';
ctx.strokeStyle='rgb(34,213,179)';
ctx.moveTo(5956,10312);
ctx.lineTo(5956,10276);
ctx.lineTo(5992,10276);
ctx.lineTo(5992,10312);
ctx.lineTo(5956,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,120,93,0.85)';
ctx.strokeStyle='rgb(182,54,164)';
ctx.moveTo(5956,10216);
ctx.lineTo(5956,10180);
ctx.lineTo(5992,10180);
ctx.lineTo(5992,10216);
ctx.lineTo(5956,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,97,104,0.85)';
ctx.strokeStyle='rgb(205,181,119)';
ctx.moveTo(3952,8896);
ctx.lineTo(3952,8860);
ctx.lineTo(3988,8860);
ctx.lineTo(3988,8896);
ctx.lineTo(3952,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,27,9,0.85)';
ctx.strokeStyle='rgb(0,58,49)';
ctx.moveTo(3952,8800);
ctx.lineTo(3952,8764);
ctx.lineTo(3988,8764);
ctx.lineTo(3988,8800);
ctx.lineTo(3952,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,39,77,0.85)';
ctx.strokeStyle='rgb(209,13,199)';
ctx.moveTo(5476,10408);
ctx.lineTo(5476,10372);
ctx.lineTo(5512,10372);
ctx.lineTo(5512,10408);
ctx.lineTo(5476,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,106,244,0.85)';
ctx.strokeStyle='rgb(109,61,225)';
ctx.moveTo(3376,8896);
ctx.lineTo(3376,8860);
ctx.lineTo(3412,8860);
ctx.lineTo(3412,8896);
ctx.lineTo(3376,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,37,101,0.85)';
ctx.strokeStyle='rgb(180,88,109)';
ctx.moveTo(3376,8800);
ctx.lineTo(3376,8764);
ctx.lineTo(3412,8764);
ctx.lineTo(3412,8800);
ctx.lineTo(3376,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,54,140,0.85)';
ctx.strokeStyle='rgb(54,83,111)';
ctx.moveTo(2992,8800);
ctx.lineTo(2992,8764);
ctx.lineTo(3028,8764);
ctx.lineTo(3028,8800);
ctx.lineTo(2992,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,40,238,0.85)';
ctx.strokeStyle='rgb(63,99,100)';
ctx.moveTo(3472,8896);
ctx.lineTo(3472,8860);
ctx.lineTo(3508,8860);
ctx.lineTo(3508,8896);
ctx.lineTo(3472,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,73,236,0.85)';
ctx.strokeStyle='rgb(185,123,146)';
ctx.moveTo(3472,8800);
ctx.lineTo(3472,8764);
ctx.lineTo(3508,8764);
ctx.lineTo(3508,8800);
ctx.lineTo(3472,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,159,137,0.85)';
ctx.strokeStyle='rgb(130,120,62)';
ctx.moveTo(3184,8896);
ctx.lineTo(3184,8860);
ctx.lineTo(3220,8860);
ctx.lineTo(3220,8896);
ctx.lineTo(3184,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,137,175,0.85)';
ctx.strokeStyle='rgb(239,34,235)';
ctx.moveTo(3568,8896);
ctx.lineTo(3568,8860);
ctx.lineTo(3604,8860);
ctx.lineTo(3604,8896);
ctx.lineTo(3568,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,159,143,0.85)';
ctx.strokeStyle='rgb(142,120,57)';
ctx.moveTo(3568,8800);
ctx.lineTo(3568,8764);
ctx.lineTo(3604,8764);
ctx.lineTo(3604,8800);
ctx.lineTo(3568,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,160,222,0.85)';
ctx.strokeStyle='rgb(16,216,243)';
ctx.moveTo(3184,8800);
ctx.lineTo(3184,8764);
ctx.lineTo(3220,8764);
ctx.lineTo(3220,8800);
ctx.lineTo(3184,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,195,184,0.85)';
ctx.strokeStyle='rgb(59,224,247)';
ctx.moveTo(3664,8896);
ctx.lineTo(3664,8860);
ctx.lineTo(3700,8860);
ctx.lineTo(3700,8896);
ctx.lineTo(3664,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,219,140,0.85)';
ctx.strokeStyle='rgb(228,231,149)';
ctx.moveTo(3664,8800);
ctx.lineTo(3664,8764);
ctx.lineTo(3700,8764);
ctx.lineTo(3700,8800);
ctx.lineTo(3664,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,212,21,0.85)';
ctx.strokeStyle='rgb(90,10,69)';
ctx.moveTo(3088,8896);
ctx.lineTo(3088,8860);
ctx.lineTo(3124,8860);
ctx.lineTo(3124,8896);
ctx.lineTo(3088,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,214,148,0.85)';
ctx.strokeStyle='rgb(171,167,166)';
ctx.moveTo(3760,8896);
ctx.lineTo(3760,8860);
ctx.lineTo(3796,8860);
ctx.lineTo(3796,8896);
ctx.lineTo(3760,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,143,94,0.85)';
ctx.strokeStyle='rgb(5,230,224)';
ctx.moveTo(3760,8800);
ctx.lineTo(3760,8764);
ctx.lineTo(3796,8764);
ctx.lineTo(3796,8800);
ctx.lineTo(3760,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,224,252,0.85)';
ctx.strokeStyle='rgb(213,201,209)';
ctx.moveTo(3280,8896);
ctx.lineTo(3280,8860);
ctx.lineTo(3316,8860);
ctx.lineTo(3316,8896);
ctx.lineTo(3280,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,167,224,0.85)';
ctx.strokeStyle='rgb(44,103,57)';
ctx.moveTo(3280,8800);
ctx.lineTo(3280,8764);
ctx.lineTo(3316,8764);
ctx.lineTo(3316,8800);
ctx.lineTo(3280,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,30,171,0.85)';
ctx.strokeStyle='rgb(212,209,141)';
ctx.moveTo(3088,8800);
ctx.lineTo(3088,8764);
ctx.lineTo(3124,8764);
ctx.lineTo(3124,8800);
ctx.lineTo(3088,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,24,47,0.85)';
ctx.strokeStyle='rgb(100,246,198)';
ctx.moveTo(1696,10408);
ctx.lineTo(1696,10372);
ctx.lineTo(1732,10372);
ctx.lineTo(1732,10408);
ctx.lineTo(1696,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,23,113,0.85)';
ctx.strokeStyle='rgb(92,12,74)';
ctx.moveTo(1696,10312);
ctx.lineTo(1696,10276);
ctx.lineTo(1732,10276);
ctx.lineTo(1732,10312);
ctx.lineTo(1696,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,97,149,0.85)';
ctx.strokeStyle='rgb(12,26,175)';
ctx.moveTo(1696,10216);
ctx.lineTo(1696,10180);
ctx.lineTo(1732,10180);
ctx.lineTo(1732,10216);
ctx.lineTo(1696,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,190,36,0.85)';
ctx.strokeStyle='rgb(175,68,72)';
ctx.moveTo(1792,10408);
ctx.lineTo(1792,10372);
ctx.lineTo(1828,10372);
ctx.lineTo(1828,10408);
ctx.lineTo(1792,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,30,243,0.85)';
ctx.strokeStyle='rgb(3,225,75)';
ctx.moveTo(1792,10312);
ctx.lineTo(1792,10276);
ctx.lineTo(1828,10276);
ctx.lineTo(1828,10312);
ctx.lineTo(1792,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,188,56,0.85)';
ctx.strokeStyle='rgb(49,148,72)';
ctx.moveTo(1792,10216);
ctx.lineTo(1792,10180);
ctx.lineTo(1828,10180);
ctx.lineTo(1828,10216);
ctx.lineTo(1792,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,38,108,0.85)';
ctx.strokeStyle='rgb(230,7,26)';
ctx.moveTo(1888,10408);
ctx.lineTo(1888,10372);
ctx.lineTo(1924,10372);
ctx.lineTo(1924,10408);
ctx.lineTo(1888,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,150,35,0.85)';
ctx.strokeStyle='rgb(177,172,42)';
ctx.moveTo(1888,10312);
ctx.lineTo(1888,10276);
ctx.lineTo(1924,10276);
ctx.lineTo(1924,10312);
ctx.lineTo(1888,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,241,243,0.85)';
ctx.strokeStyle='rgb(21,133,254)';
ctx.moveTo(1888,10216);
ctx.lineTo(1888,10180);
ctx.lineTo(1924,10180);
ctx.lineTo(1924,10216);
ctx.lineTo(1888,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,87,118,0.85)';
ctx.strokeStyle='rgb(251,151,44)';
ctx.moveTo(1984,10408);
ctx.lineTo(1984,10372);
ctx.lineTo(2020,10372);
ctx.lineTo(2020,10408);
ctx.lineTo(1984,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,119,182,0.85)';
ctx.strokeStyle='rgb(217,45,106)';
ctx.moveTo(1984,10312);
ctx.lineTo(1984,10276);
ctx.lineTo(2020,10276);
ctx.lineTo(2020,10312);
ctx.lineTo(1984,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,2,48,0.85)';
ctx.strokeStyle='rgb(54,5,213)';
ctx.moveTo(1984,10216);
ctx.lineTo(1984,10180);
ctx.lineTo(2020,10180);
ctx.lineTo(2020,10216);
ctx.lineTo(1984,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,238,153,0.85)';
ctx.strokeStyle='rgb(158,151,199)';
ctx.moveTo(2080,10408);
ctx.lineTo(2080,10372);
ctx.lineTo(2116,10372);
ctx.lineTo(2116,10408);
ctx.lineTo(2080,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,251,76,0.85)';
ctx.strokeStyle='rgb(175,105,212)';
ctx.moveTo(2080,10312);
ctx.lineTo(2080,10276);
ctx.lineTo(2116,10276);
ctx.lineTo(2116,10312);
ctx.lineTo(2080,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,30,249,0.85)';
ctx.strokeStyle='rgb(73,79,80)';
ctx.moveTo(2080,10216);
ctx.lineTo(2080,10180);
ctx.lineTo(2116,10180);
ctx.lineTo(2116,10216);
ctx.lineTo(2080,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,30,32,0.85)';
ctx.strokeStyle='rgb(58,46,252)';
ctx.moveTo(2176,10408);
ctx.lineTo(2176,10372);
ctx.lineTo(2212,10372);
ctx.lineTo(2212,10408);
ctx.lineTo(2176,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,94,133,0.85)';
ctx.strokeStyle='rgb(235,4,189)';
ctx.moveTo(2176,10312);
ctx.lineTo(2176,10276);
ctx.lineTo(2212,10276);
ctx.lineTo(2212,10312);
ctx.lineTo(2176,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,159,112,0.85)';
ctx.strokeStyle='rgb(235,43,167)';
ctx.moveTo(2176,10216);
ctx.lineTo(2176,10180);
ctx.lineTo(2212,10180);
ctx.lineTo(2212,10216);
ctx.lineTo(2176,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,90,13,0.85)';
ctx.strokeStyle='rgb(50,74,72)';
ctx.moveTo(2272,10408);
ctx.lineTo(2272,10372);
ctx.lineTo(2308,10372);
ctx.lineTo(2308,10408);
ctx.lineTo(2272,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,245,62,0.85)';
ctx.strokeStyle='rgb(209,15,102)';
ctx.moveTo(2272,10312);
ctx.lineTo(2272,10276);
ctx.lineTo(2308,10276);
ctx.lineTo(2308,10312);
ctx.lineTo(2272,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,166,164,0.85)';
ctx.strokeStyle='rgb(231,197,18)';
ctx.moveTo(2272,10216);
ctx.lineTo(2272,10180);
ctx.lineTo(2308,10180);
ctx.lineTo(2308,10216);
ctx.lineTo(2272,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,46,6,0.85)';
ctx.strokeStyle='rgb(91,47,70)';
ctx.moveTo(2368,10408);
ctx.lineTo(2368,10372);
ctx.lineTo(2404,10372);
ctx.lineTo(2404,10408);
ctx.lineTo(2368,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,53,31,0.85)';
ctx.strokeStyle='rgb(219,48,117)';
ctx.moveTo(2368,10312);
ctx.lineTo(2368,10276);
ctx.lineTo(2404,10276);
ctx.lineTo(2404,10312);
ctx.lineTo(2368,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,233,235,0.85)';
ctx.strokeStyle='rgb(196,173,7)';
ctx.moveTo(2368,10216);
ctx.lineTo(2368,10180);
ctx.lineTo(2404,10180);
ctx.lineTo(2404,10216);
ctx.lineTo(2368,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,114,22,0.85)';
ctx.strokeStyle='rgb(77,199,244)';
ctx.moveTo(2464,10408);
ctx.lineTo(2464,10372);
ctx.lineTo(2500,10372);
ctx.lineTo(2500,10408);
ctx.lineTo(2464,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,45,220,0.85)';
ctx.strokeStyle='rgb(162,20,242)';
ctx.moveTo(2464,10312);
ctx.lineTo(2464,10276);
ctx.lineTo(2500,10276);
ctx.lineTo(2500,10312);
ctx.lineTo(2464,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,129,7,0.85)';
ctx.strokeStyle='rgb(25,6,16)';
ctx.moveTo(2464,10216);
ctx.lineTo(2464,10180);
ctx.lineTo(2500,10180);
ctx.lineTo(2500,10216);
ctx.lineTo(2464,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,162,149,0.85)';
ctx.strokeStyle='rgb(66,106,22)';
ctx.moveTo(2560,10408);
ctx.lineTo(2560,10372);
ctx.lineTo(2596,10372);
ctx.lineTo(2596,10408);
ctx.lineTo(2560,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,73,48,0.85)';
ctx.strokeStyle='rgb(97,6,191)';
ctx.moveTo(2560,10312);
ctx.lineTo(2560,10276);
ctx.lineTo(2596,10276);
ctx.lineTo(2596,10312);
ctx.lineTo(2560,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,6,49,0.85)';
ctx.strokeStyle='rgb(150,155,21)';
ctx.moveTo(2560,10216);
ctx.lineTo(2560,10180);
ctx.lineTo(2596,10180);
ctx.lineTo(2596,10216);
ctx.lineTo(2560,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,64,136,0.85)';
ctx.strokeStyle='rgb(194,60,120)';
ctx.moveTo(2656,10408);
ctx.lineTo(2656,10372);
ctx.lineTo(2692,10372);
ctx.lineTo(2692,10408);
ctx.lineTo(2656,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,55,45,0.85)';
ctx.strokeStyle='rgb(55,33,126)';
ctx.moveTo(2656,10312);
ctx.lineTo(2656,10276);
ctx.lineTo(2692,10276);
ctx.lineTo(2692,10312);
ctx.lineTo(2656,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,29,246,0.85)';
ctx.strokeStyle='rgb(71,155,222)';
ctx.moveTo(2656,10216);
ctx.lineTo(2656,10180);
ctx.lineTo(2692,10180);
ctx.lineTo(2692,10216);
ctx.lineTo(2656,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,210,98,0.85)';
ctx.strokeStyle='rgb(243,85,146)';
ctx.moveTo(2992,8896);
ctx.lineTo(2992,8860);
ctx.lineTo(3028,8860);
ctx.lineTo(3028,8896);
ctx.lineTo(2992,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,75,154,0.85)';
ctx.strokeStyle='rgb(121,129,249)';
ctx.moveTo(3280,11824);
ctx.lineTo(3280,11788);
ctx.lineTo(3316,11788);
ctx.lineTo(3316,11824);
ctx.lineTo(3280,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,22,111,0.85)';
ctx.strokeStyle='rgb(145,226,226)';
ctx.moveTo(3280,11728);
ctx.lineTo(3280,11692);
ctx.lineTo(3316,11692);
ctx.lineTo(3316,11728);
ctx.lineTo(3280,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,149,45,0.85)';
ctx.strokeStyle='rgb(127,12,162)';
ctx.moveTo(3376,11920);
ctx.lineTo(3376,11884);
ctx.lineTo(3412,11884);
ctx.lineTo(3412,11920);
ctx.lineTo(3376,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,64,44,0.85)';
ctx.strokeStyle='rgb(192,47,66)';
ctx.moveTo(3376,11824);
ctx.lineTo(3376,11788);
ctx.lineTo(3412,11788);
ctx.lineTo(3412,11824);
ctx.lineTo(3376,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,221,232,0.85)';
ctx.strokeStyle='rgb(168,166,198)';
ctx.moveTo(3376,11728);
ctx.lineTo(3376,11692);
ctx.lineTo(3412,11692);
ctx.lineTo(3412,11728);
ctx.lineTo(3376,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,218,61,0.85)';
ctx.strokeStyle='rgb(253,57,234)';
ctx.moveTo(3472,11920);
ctx.lineTo(3472,11884);
ctx.lineTo(3508,11884);
ctx.lineTo(3508,11920);
ctx.lineTo(3472,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,228,193,0.85)';
ctx.strokeStyle='rgb(65,86,106)';
ctx.moveTo(3472,11824);
ctx.lineTo(3472,11788);
ctx.lineTo(3508,11788);
ctx.lineTo(3508,11824);
ctx.lineTo(3472,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,225,11,0.85)';
ctx.strokeStyle='rgb(208,80,234)';
ctx.moveTo(3472,11728);
ctx.lineTo(3472,11692);
ctx.lineTo(3508,11692);
ctx.lineTo(3508,11728);
ctx.lineTo(3472,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,176,242,0.85)';
ctx.strokeStyle='rgb(84,233,68)';
ctx.moveTo(3568,11920);
ctx.lineTo(3568,11884);
ctx.lineTo(3604,11884);
ctx.lineTo(3604,11920);
ctx.lineTo(3568,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,242,165,0.85)';
ctx.strokeStyle='rgb(176,31,208)';
ctx.moveTo(3568,11824);
ctx.lineTo(3568,11788);
ctx.lineTo(3604,11788);
ctx.lineTo(3604,11824);
ctx.lineTo(3568,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,13,69,0.85)';
ctx.strokeStyle='rgb(32,83,118)';
ctx.moveTo(3568,11728);
ctx.lineTo(3568,11692);
ctx.lineTo(3604,11692);
ctx.lineTo(3604,11728);
ctx.lineTo(3568,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,115,27,0.85)';
ctx.strokeStyle='rgb(185,42,223)';
ctx.moveTo(3664,11920);
ctx.lineTo(3664,11884);
ctx.lineTo(3700,11884);
ctx.lineTo(3700,11920);
ctx.lineTo(3664,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,53,187,0.85)';
ctx.strokeStyle='rgb(82,225,9)';
ctx.moveTo(3664,11824);
ctx.lineTo(3664,11788);
ctx.lineTo(3700,11788);
ctx.lineTo(3700,11824);
ctx.lineTo(3664,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,203,107,0.85)';
ctx.strokeStyle='rgb(42,53,114)';
ctx.moveTo(3664,11728);
ctx.lineTo(3664,11692);
ctx.lineTo(3700,11692);
ctx.lineTo(3700,11728);
ctx.lineTo(3664,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,16,82,0.85)';
ctx.strokeStyle='rgb(132,125,71)';
ctx.moveTo(3760,11920);
ctx.lineTo(3760,11884);
ctx.lineTo(3796,11884);
ctx.lineTo(3796,11920);
ctx.lineTo(3760,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,67,127,0.85)';
ctx.strokeStyle='rgb(250,47,3)';
ctx.moveTo(3760,11824);
ctx.lineTo(3760,11788);
ctx.lineTo(3796,11788);
ctx.lineTo(3796,11824);
ctx.lineTo(3760,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,33,152,0.85)';
ctx.strokeStyle='rgb(201,244,94)';
ctx.moveTo(3760,11728);
ctx.lineTo(3760,11692);
ctx.lineTo(3796,11692);
ctx.lineTo(3796,11728);
ctx.lineTo(3760,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,204,43,0.85)';
ctx.strokeStyle='rgb(234,217,1)';
ctx.moveTo(2992,11920);
ctx.lineTo(2992,11884);
ctx.lineTo(3028,11884);
ctx.lineTo(3028,11920);
ctx.lineTo(2992,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,182,226,0.85)';
ctx.strokeStyle='rgb(169,180,200)';
ctx.moveTo(2992,11824);
ctx.lineTo(2992,11788);
ctx.lineTo(3028,11788);
ctx.lineTo(3028,11824);
ctx.lineTo(2992,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,146,142,0.85)';
ctx.strokeStyle='rgb(97,114,229)';
ctx.moveTo(2992,11728);
ctx.lineTo(2992,11692);
ctx.lineTo(3028,11692);
ctx.lineTo(3028,11728);
ctx.lineTo(2992,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,233,242,0.85)';
ctx.strokeStyle='rgb(92,214,201)';
ctx.moveTo(3088,11920);
ctx.lineTo(3088,11884);
ctx.lineTo(3124,11884);
ctx.lineTo(3124,11920);
ctx.lineTo(3088,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,18,163,0.85)';
ctx.strokeStyle='rgb(180,14,93)';
ctx.moveTo(3088,11824);
ctx.lineTo(3088,11788);
ctx.lineTo(3124,11788);
ctx.lineTo(3124,11824);
ctx.lineTo(3088,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,155,9,0.85)';
ctx.strokeStyle='rgb(233,30,202)';
ctx.moveTo(3088,11728);
ctx.lineTo(3088,11692);
ctx.lineTo(3124,11692);
ctx.lineTo(3124,11728);
ctx.lineTo(3088,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,47,2,0.85)';
ctx.strokeStyle='rgb(100,46,106)';
ctx.moveTo(3184,11920);
ctx.lineTo(3184,11884);
ctx.lineTo(3220,11884);
ctx.lineTo(3220,11920);
ctx.lineTo(3184,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,127,48,0.85)';
ctx.strokeStyle='rgb(141,100,242)';
ctx.moveTo(3184,11824);
ctx.lineTo(3184,11788);
ctx.lineTo(3220,11788);
ctx.lineTo(3220,11824);
ctx.lineTo(3184,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,228,57,0.85)';
ctx.strokeStyle='rgb(134,165,184)';
ctx.moveTo(3184,11728);
ctx.lineTo(3184,11692);
ctx.lineTo(3220,11692);
ctx.lineTo(3220,11728);
ctx.lineTo(3184,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,192,13,0.85)';
ctx.strokeStyle='rgb(188,247,157)';
ctx.moveTo(3280,11920);
ctx.lineTo(3280,11884);
ctx.lineTo(3316,11884);
ctx.lineTo(3316,11920);
ctx.lineTo(3280,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,101,103,0.85)';
ctx.strokeStyle='rgb(155,191,153)';
ctx.moveTo(3952,11824);
ctx.lineTo(3952,11788);
ctx.lineTo(3988,11788);
ctx.lineTo(3988,11824);
ctx.lineTo(3952,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,244,0,0.85)';
ctx.strokeStyle='rgb(143,105,139)';
ctx.moveTo(3952,11728);
ctx.lineTo(3952,11692);
ctx.lineTo(3988,11692);
ctx.lineTo(3988,11728);
ctx.lineTo(3952,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,9,73,0.85)';
ctx.strokeStyle='rgb(34,49,127)';
ctx.moveTo(3952,11920);
ctx.lineTo(3952,11884);
ctx.lineTo(3988,11884);
ctx.lineTo(3988,11920);
ctx.lineTo(3952,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,150,109,0.85)';
ctx.strokeStyle='rgb(251,211,199)';
ctx.moveTo(3856,14944);
ctx.lineTo(3856,14908);
ctx.lineTo(3892,14908);
ctx.lineTo(3892,14944);
ctx.lineTo(3856,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,227,173,0.85)';
ctx.strokeStyle='rgb(133,190,237)';
ctx.moveTo(3856,14848);
ctx.lineTo(3856,14812);
ctx.lineTo(3892,14812);
ctx.lineTo(3892,14848);
ctx.lineTo(3856,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,29,4,0.85)';
ctx.strokeStyle='rgb(47,130,11)';
ctx.moveTo(3856,14752);
ctx.lineTo(3856,14716);
ctx.lineTo(3892,14716);
ctx.lineTo(3892,14752);
ctx.lineTo(3856,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,138,118,0.85)';
ctx.strokeStyle='rgb(173,254,94)';
ctx.moveTo(5860,13336);
ctx.lineTo(5860,13300);
ctx.lineTo(5896,13300);
ctx.lineTo(5896,13336);
ctx.lineTo(5860,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,194,88,0.85)';
ctx.strokeStyle='rgb(200,64,234)';
ctx.moveTo(5860,13240);
ctx.lineTo(5860,13204);
ctx.lineTo(5896,13204);
ctx.lineTo(5896,13240);
ctx.lineTo(5860,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,184,96,0.85)';
ctx.strokeStyle='rgb(16,45,216)';
ctx.moveTo(5956,13432);
ctx.lineTo(5956,13396);
ctx.lineTo(5992,13396);
ctx.lineTo(5992,13432);
ctx.lineTo(5956,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,123,40,0.85)';
ctx.strokeStyle='rgb(206,193,44)';
ctx.moveTo(5956,13336);
ctx.lineTo(5956,13300);
ctx.lineTo(5992,13300);
ctx.lineTo(5992,13336);
ctx.lineTo(5956,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,6,117,0.85)';
ctx.strokeStyle='rgb(39,47,253)';
ctx.moveTo(5956,13240);
ctx.lineTo(5956,13204);
ctx.lineTo(5992,13204);
ctx.lineTo(5992,13240);
ctx.lineTo(5956,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,196,55,0.85)';
ctx.strokeStyle='rgb(215,43,61)';
ctx.moveTo(5476,13432);
ctx.lineTo(5476,13396);
ctx.lineTo(5512,13396);
ctx.lineTo(5512,13432);
ctx.lineTo(5476,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,209,15,0.85)';
ctx.strokeStyle='rgb(230,36,193)';
ctx.moveTo(5476,13336);
ctx.lineTo(5476,13300);
ctx.lineTo(5512,13300);
ctx.lineTo(5512,13336);
ctx.lineTo(5476,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,166,165,0.85)';
ctx.strokeStyle='rgb(245,252,91)';
ctx.moveTo(5476,13240);
ctx.lineTo(5476,13204);
ctx.lineTo(5512,13204);
ctx.lineTo(5512,13240);
ctx.lineTo(5476,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,206,52,0.85)';
ctx.strokeStyle='rgb(146,81,121)';
ctx.moveTo(5572,13432);
ctx.lineTo(5572,13396);
ctx.lineTo(5608,13396);
ctx.lineTo(5608,13432);
ctx.lineTo(5572,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,88,169,0.85)';
ctx.strokeStyle='rgb(145,159,222)';
ctx.moveTo(5572,13336);
ctx.lineTo(5572,13300);
ctx.lineTo(5608,13300);
ctx.lineTo(5608,13336);
ctx.lineTo(5572,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,65,20,0.85)';
ctx.strokeStyle='rgb(58,203,99)';
ctx.moveTo(5572,13240);
ctx.lineTo(5572,13204);
ctx.lineTo(5608,13204);
ctx.lineTo(5608,13240);
ctx.lineTo(5572,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,168,7,0.85)';
ctx.strokeStyle='rgb(102,71,106)';
ctx.moveTo(5668,13432);
ctx.lineTo(5668,13396);
ctx.lineTo(5704,13396);
ctx.lineTo(5704,13432);
ctx.lineTo(5668,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,242,174,0.85)';
ctx.strokeStyle='rgb(186,226,46)';
ctx.moveTo(5668,13336);
ctx.lineTo(5668,13300);
ctx.lineTo(5704,13300);
ctx.lineTo(5704,13336);
ctx.lineTo(5668,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,235,132,0.85)';
ctx.strokeStyle='rgb(185,50,179)';
ctx.moveTo(5668,13240);
ctx.lineTo(5668,13204);
ctx.lineTo(5704,13204);
ctx.lineTo(5704,13240);
ctx.lineTo(5668,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,232,200,0.85)';
ctx.strokeStyle='rgb(225,184,239)';
ctx.moveTo(5764,13336);
ctx.lineTo(5764,13300);
ctx.lineTo(5800,13300);
ctx.lineTo(5800,13336);
ctx.lineTo(5764,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,107,153,0.85)';
ctx.strokeStyle='rgb(55,117,34)';
ctx.moveTo(5764,13240);
ctx.lineTo(5764,13204);
ctx.lineTo(5800,13204);
ctx.lineTo(5800,13240);
ctx.lineTo(5764,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,216,46,0.85)';
ctx.strokeStyle='rgb(68,129,191)';
ctx.moveTo(5860,13432);
ctx.lineTo(5860,13396);
ctx.lineTo(5896,13396);
ctx.lineTo(5896,13432);
ctx.lineTo(5860,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,231,150,0.85)';
ctx.strokeStyle='rgb(96,79,162)';
ctx.moveTo(3952,14944);
ctx.lineTo(3952,14908);
ctx.lineTo(3988,14908);
ctx.lineTo(3988,14944);
ctx.lineTo(3952,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,203,90,0.85)';
ctx.strokeStyle='rgb(60,33,224)';
ctx.moveTo(3952,14848);
ctx.lineTo(3952,14812);
ctx.lineTo(3988,14812);
ctx.lineTo(3988,14848);
ctx.lineTo(3952,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,91,244,0.85)';
ctx.strokeStyle='rgb(130,98,12)';
ctx.moveTo(3952,14752);
ctx.lineTo(3952,14716);
ctx.lineTo(3988,14716);
ctx.lineTo(3988,14752);
ctx.lineTo(3952,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,178,206,0.85)';
ctx.strokeStyle='rgb(96,227,87)';
ctx.moveTo(5764,13432);
ctx.lineTo(5764,13396);
ctx.lineTo(5800,13396);
ctx.lineTo(5800,13432);
ctx.lineTo(5764,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,17,134,0.85)';
ctx.strokeStyle='rgb(65,175,81)';
ctx.moveTo(3184,14848);
ctx.lineTo(3184,14812);
ctx.lineTo(3220,14812);
ctx.lineTo(3220,14848);
ctx.lineTo(3184,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,197,238,0.85)';
ctx.strokeStyle='rgb(175,206,127)';
ctx.moveTo(3184,14752);
ctx.lineTo(3184,14716);
ctx.lineTo(3220,14716);
ctx.lineTo(3220,14752);
ctx.lineTo(3184,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,84,167,0.85)';
ctx.strokeStyle='rgb(243,166,68)';
ctx.moveTo(3280,14944);
ctx.lineTo(3280,14908);
ctx.lineTo(3316,14908);
ctx.lineTo(3316,14944);
ctx.lineTo(3280,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,182,1,0.85)';
ctx.strokeStyle='rgb(64,27,171)';
ctx.moveTo(3280,14848);
ctx.lineTo(3280,14812);
ctx.lineTo(3316,14812);
ctx.lineTo(3316,14848);
ctx.lineTo(3280,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,181,112,0.85)';
ctx.strokeStyle='rgb(152,240,225)';
ctx.moveTo(3280,14752);
ctx.lineTo(3280,14716);
ctx.lineTo(3316,14716);
ctx.lineTo(3316,14752);
ctx.lineTo(3280,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,35,226,0.85)';
ctx.strokeStyle='rgb(161,27,195)';
ctx.moveTo(3376,14944);
ctx.lineTo(3376,14908);
ctx.lineTo(3412,14908);
ctx.lineTo(3412,14944);
ctx.lineTo(3376,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,185,200,0.85)';
ctx.strokeStyle='rgb(238,194,168)';
ctx.moveTo(3376,14848);
ctx.lineTo(3376,14812);
ctx.lineTo(3412,14812);
ctx.lineTo(3412,14848);
ctx.lineTo(3376,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,37,57,0.85)';
ctx.strokeStyle='rgb(58,226,24)';
ctx.moveTo(3376,14752);
ctx.lineTo(3376,14716);
ctx.lineTo(3412,14716);
ctx.lineTo(3412,14752);
ctx.lineTo(3376,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,91,109,0.85)';
ctx.strokeStyle='rgb(138,196,235)';
ctx.moveTo(3472,14944);
ctx.lineTo(3472,14908);
ctx.lineTo(3508,14908);
ctx.lineTo(3508,14944);
ctx.lineTo(3472,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,142,97,0.85)';
ctx.strokeStyle='rgb(187,168,120)';
ctx.moveTo(3472,14848);
ctx.lineTo(3472,14812);
ctx.lineTo(3508,14812);
ctx.lineTo(3508,14848);
ctx.lineTo(3472,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,187,219,0.85)';
ctx.strokeStyle='rgb(144,161,67)';
ctx.moveTo(3472,14752);
ctx.lineTo(3472,14716);
ctx.lineTo(3508,14716);
ctx.lineTo(3508,14752);
ctx.lineTo(3472,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,144,193,0.85)';
ctx.strokeStyle='rgb(193,12,61)';
ctx.moveTo(3568,14944);
ctx.lineTo(3568,14908);
ctx.lineTo(3604,14908);
ctx.lineTo(3604,14944);
ctx.lineTo(3568,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,171,163,0.85)';
ctx.strokeStyle='rgb(182,156,221)';
ctx.moveTo(3568,14848);
ctx.lineTo(3568,14812);
ctx.lineTo(3604,14812);
ctx.lineTo(3604,14848);
ctx.lineTo(3568,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,91,191,0.85)';
ctx.strokeStyle='rgb(246,56,159)';
ctx.moveTo(3568,14752);
ctx.lineTo(3568,14716);
ctx.lineTo(3604,14716);
ctx.lineTo(3604,14752);
ctx.lineTo(3568,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,112,26,0.85)';
ctx.strokeStyle='rgb(212,195,23)';
ctx.moveTo(3664,14944);
ctx.lineTo(3664,14908);
ctx.lineTo(3700,14908);
ctx.lineTo(3700,14944);
ctx.lineTo(3664,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,236,192,0.85)';
ctx.strokeStyle='rgb(91,50,3)';
ctx.moveTo(3664,14848);
ctx.lineTo(3664,14812);
ctx.lineTo(3700,14812);
ctx.lineTo(3700,14848);
ctx.lineTo(3664,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,4,52,0.85)';
ctx.strokeStyle='rgb(78,203,146)';
ctx.moveTo(3664,14752);
ctx.lineTo(3664,14716);
ctx.lineTo(3700,14716);
ctx.lineTo(3700,14752);
ctx.lineTo(3664,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,45,74,0.85)';
ctx.strokeStyle='rgb(88,212,9)';
ctx.moveTo(3760,14944);
ctx.lineTo(3760,14908);
ctx.lineTo(3796,14908);
ctx.lineTo(3796,14944);
ctx.lineTo(3760,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,220,213,0.85)';
ctx.strokeStyle='rgb(234,193,44)';
ctx.moveTo(3760,14848);
ctx.lineTo(3760,14812);
ctx.lineTo(3796,14812);
ctx.lineTo(3796,14848);
ctx.lineTo(3760,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,249,77,0.85)';
ctx.strokeStyle='rgb(18,41,12)';
ctx.moveTo(3760,14752);
ctx.lineTo(3760,14716);
ctx.lineTo(3796,14716);
ctx.lineTo(3796,14752);
ctx.lineTo(3760,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,216,160,0.85)';
ctx.strokeStyle='rgb(38,11,254)';
ctx.moveTo(2992,14944);
ctx.lineTo(2992,14908);
ctx.lineTo(3028,14908);
ctx.lineTo(3028,14944);
ctx.lineTo(2992,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,49,132,0.85)';
ctx.strokeStyle='rgb(100,217,219)';
ctx.moveTo(2992,14848);
ctx.lineTo(2992,14812);
ctx.lineTo(3028,14812);
ctx.lineTo(3028,14848);
ctx.lineTo(2992,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,116,86,0.85)';
ctx.strokeStyle='rgb(86,250,0)';
ctx.moveTo(2992,14752);
ctx.lineTo(2992,14716);
ctx.lineTo(3028,14716);
ctx.lineTo(3028,14752);
ctx.lineTo(2992,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,174,249,0.85)';
ctx.strokeStyle='rgb(50,221,166)';
ctx.moveTo(3088,14944);
ctx.lineTo(3088,14908);
ctx.lineTo(3124,14908);
ctx.lineTo(3124,14944);
ctx.lineTo(3088,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,163,67,0.85)';
ctx.strokeStyle='rgb(62,110,143)';
ctx.moveTo(3088,14848);
ctx.lineTo(3088,14812);
ctx.lineTo(3124,14812);
ctx.lineTo(3124,14848);
ctx.lineTo(3088,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,127,11,0.85)';
ctx.strokeStyle='rgb(164,224,130)';
ctx.moveTo(3088,14752);
ctx.lineTo(3088,14716);
ctx.lineTo(3124,14716);
ctx.lineTo(3124,14752);
ctx.lineTo(3088,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,196,157,0.85)';
ctx.strokeStyle='rgb(56,74,104)';
ctx.moveTo(1696,13432);
ctx.lineTo(1696,13396);
ctx.lineTo(1732,13396);
ctx.lineTo(1732,13432);
ctx.lineTo(1696,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,133,65,0.85)';
ctx.strokeStyle='rgb(134,199,99)';
ctx.moveTo(1696,13336);
ctx.lineTo(1696,13300);
ctx.lineTo(1732,13300);
ctx.lineTo(1732,13336);
ctx.lineTo(1696,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,42,108,0.85)';
ctx.strokeStyle='rgb(217,224,74)';
ctx.moveTo(1696,13240);
ctx.lineTo(1696,13204);
ctx.lineTo(1732,13204);
ctx.lineTo(1732,13240);
ctx.lineTo(1696,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,127,151,0.85)';
ctx.strokeStyle='rgb(241,225,52)';
ctx.moveTo(1792,13432);
ctx.lineTo(1792,13396);
ctx.lineTo(1828,13396);
ctx.lineTo(1828,13432);
ctx.lineTo(1792,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,147,110,0.85)';
ctx.strokeStyle='rgb(99,59,88)';
ctx.moveTo(1792,13336);
ctx.lineTo(1792,13300);
ctx.lineTo(1828,13300);
ctx.lineTo(1828,13336);
ctx.lineTo(1792,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,242,11,0.85)';
ctx.strokeStyle='rgb(190,176,204)';
ctx.moveTo(1792,13240);
ctx.lineTo(1792,13204);
ctx.lineTo(1828,13204);
ctx.lineTo(1828,13240);
ctx.lineTo(1792,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,59,120,0.85)';
ctx.strokeStyle='rgb(135,149,121)';
ctx.moveTo(1888,13432);
ctx.lineTo(1888,13396);
ctx.lineTo(1924,13396);
ctx.lineTo(1924,13432);
ctx.lineTo(1888,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,206,165,0.85)';
ctx.strokeStyle='rgb(220,190,228)';
ctx.moveTo(1888,13336);
ctx.lineTo(1888,13300);
ctx.lineTo(1924,13300);
ctx.lineTo(1924,13336);
ctx.lineTo(1888,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,208,227,0.85)';
ctx.strokeStyle='rgb(63,31,122)';
ctx.moveTo(1888,13240);
ctx.lineTo(1888,13204);
ctx.lineTo(1924,13204);
ctx.lineTo(1924,13240);
ctx.lineTo(1888,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,178,134,0.85)';
ctx.strokeStyle='rgb(89,219,187)';
ctx.moveTo(1984,13432);
ctx.lineTo(1984,13396);
ctx.lineTo(2020,13396);
ctx.lineTo(2020,13432);
ctx.lineTo(1984,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,3,28,0.85)';
ctx.strokeStyle='rgb(207,4,55)';
ctx.moveTo(1984,13336);
ctx.lineTo(1984,13300);
ctx.lineTo(2020,13300);
ctx.lineTo(2020,13336);
ctx.lineTo(1984,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,121,169,0.85)';
ctx.strokeStyle='rgb(178,117,119)';
ctx.moveTo(1984,13240);
ctx.lineTo(1984,13204);
ctx.lineTo(2020,13204);
ctx.lineTo(2020,13240);
ctx.lineTo(1984,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,136,59,0.85)';
ctx.strokeStyle='rgb(8,24,220)';
ctx.moveTo(2080,13432);
ctx.lineTo(2080,13396);
ctx.lineTo(2116,13396);
ctx.lineTo(2116,13432);
ctx.lineTo(2080,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,183,176,0.85)';
ctx.strokeStyle='rgb(197,238,137)';
ctx.moveTo(2080,13336);
ctx.lineTo(2080,13300);
ctx.lineTo(2116,13300);
ctx.lineTo(2116,13336);
ctx.lineTo(2080,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,94,59,0.85)';
ctx.strokeStyle='rgb(159,242,141)';
ctx.moveTo(2080,13240);
ctx.lineTo(2080,13204);
ctx.lineTo(2116,13204);
ctx.lineTo(2116,13240);
ctx.lineTo(2080,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,132,14,0.85)';
ctx.strokeStyle='rgb(9,186,118)';
ctx.moveTo(2176,13432);
ctx.lineTo(2176,13396);
ctx.lineTo(2212,13396);
ctx.lineTo(2212,13432);
ctx.lineTo(2176,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,193,226,0.85)';
ctx.strokeStyle='rgb(23,8,207)';
ctx.moveTo(2176,13336);
ctx.lineTo(2176,13300);
ctx.lineTo(2212,13300);
ctx.lineTo(2212,13336);
ctx.lineTo(2176,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,241,48,0.85)';
ctx.strokeStyle='rgb(186,148,76)';
ctx.moveTo(2176,13240);
ctx.lineTo(2176,13204);
ctx.lineTo(2212,13204);
ctx.lineTo(2212,13240);
ctx.lineTo(2176,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,48,120,0.85)';
ctx.strokeStyle='rgb(174,44,237)';
ctx.moveTo(2272,13432);
ctx.lineTo(2272,13396);
ctx.lineTo(2308,13396);
ctx.lineTo(2308,13432);
ctx.lineTo(2272,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,4,171,0.85)';
ctx.strokeStyle='rgb(207,58,38)';
ctx.moveTo(2272,13336);
ctx.lineTo(2272,13300);
ctx.lineTo(2308,13300);
ctx.lineTo(2308,13336);
ctx.lineTo(2272,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,246,54,0.85)';
ctx.strokeStyle='rgb(245,2,155)';
ctx.moveTo(2272,13240);
ctx.lineTo(2272,13204);
ctx.lineTo(2308,13204);
ctx.lineTo(2308,13240);
ctx.lineTo(2272,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,29,243,0.85)';
ctx.strokeStyle='rgb(237,207,174)';
ctx.moveTo(2368,13432);
ctx.lineTo(2368,13396);
ctx.lineTo(2404,13396);
ctx.lineTo(2404,13432);
ctx.lineTo(2368,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,118,206,0.85)';
ctx.strokeStyle='rgb(131,250,204)';
ctx.moveTo(2368,13336);
ctx.lineTo(2368,13300);
ctx.lineTo(2404,13300);
ctx.lineTo(2404,13336);
ctx.lineTo(2368,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,35,39,0.85)';
ctx.strokeStyle='rgb(226,231,100)';
ctx.moveTo(2368,13240);
ctx.lineTo(2368,13204);
ctx.lineTo(2404,13204);
ctx.lineTo(2404,13240);
ctx.lineTo(2368,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,206,133,0.85)';
ctx.strokeStyle='rgb(75,18,1)';
ctx.moveTo(2464,13432);
ctx.lineTo(2464,13396);
ctx.lineTo(2500,13396);
ctx.lineTo(2500,13432);
ctx.lineTo(2464,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,91,163,0.85)';
ctx.strokeStyle='rgb(103,148,95)';
ctx.moveTo(2464,13336);
ctx.lineTo(2464,13300);
ctx.lineTo(2500,13300);
ctx.lineTo(2500,13336);
ctx.lineTo(2464,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,176,84,0.85)';
ctx.strokeStyle='rgb(142,93,57)';
ctx.moveTo(2464,13240);
ctx.lineTo(2464,13204);
ctx.lineTo(2500,13204);
ctx.lineTo(2500,13240);
ctx.lineTo(2464,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,60,231,0.85)';
ctx.strokeStyle='rgb(164,164,245)';
ctx.moveTo(2560,13432);
ctx.lineTo(2560,13396);
ctx.lineTo(2596,13396);
ctx.lineTo(2596,13432);
ctx.lineTo(2560,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,61,245,0.85)';
ctx.strokeStyle='rgb(46,107,176)';
ctx.moveTo(2560,13336);
ctx.lineTo(2560,13300);
ctx.lineTo(2596,13300);
ctx.lineTo(2596,13336);
ctx.lineTo(2560,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,45,163,0.85)';
ctx.strokeStyle='rgb(50,112,81)';
ctx.moveTo(2560,13240);
ctx.lineTo(2560,13204);
ctx.lineTo(2596,13204);
ctx.lineTo(2596,13240);
ctx.lineTo(2560,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,23,207,0.85)';
ctx.strokeStyle='rgb(85,189,96)';
ctx.moveTo(2656,13432);
ctx.lineTo(2656,13396);
ctx.lineTo(2692,13396);
ctx.lineTo(2692,13432);
ctx.lineTo(2656,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,58,126,0.85)';
ctx.strokeStyle='rgb(122,210,71)';
ctx.moveTo(2656,13336);
ctx.lineTo(2656,13300);
ctx.lineTo(2692,13300);
ctx.lineTo(2692,13336);
ctx.lineTo(2656,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,213,7,0.85)';
ctx.strokeStyle='rgb(78,243,249)';
ctx.moveTo(2656,13240);
ctx.lineTo(2656,13204);
ctx.lineTo(2692,13204);
ctx.lineTo(2692,13240);
ctx.lineTo(2656,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,55,240,0.85)';
ctx.strokeStyle='rgb(48,126,223)';
ctx.moveTo(3184,14944);
ctx.lineTo(3184,14908);
ctx.lineTo(3220,14908);
ctx.lineTo(3220,14944);
ctx.lineTo(3184,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,121,189,0.85)';
ctx.strokeStyle='rgb(85,58,179)';
ctx.moveTo(1696,16360);
ctx.lineTo(1696,16324);
ctx.lineTo(1732,16324);
ctx.lineTo(1732,16360);
ctx.lineTo(1696,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,54,149,0.85)';
ctx.strokeStyle='rgb(239,163,77)';
ctx.moveTo(1696,16264);
ctx.lineTo(1696,16228);
ctx.lineTo(1732,16228);
ctx.lineTo(1732,16264);
ctx.lineTo(1696,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,23,251,0.85)';
ctx.strokeStyle='rgb(210,213,103)';
ctx.moveTo(1792,16456);
ctx.lineTo(1792,16420);
ctx.lineTo(1828,16420);
ctx.lineTo(1828,16456);
ctx.lineTo(1792,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,152,215,0.85)';
ctx.strokeStyle='rgb(15,196,48)';
ctx.moveTo(1792,16360);
ctx.lineTo(1792,16324);
ctx.lineTo(1828,16324);
ctx.lineTo(1828,16360);
ctx.lineTo(1792,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,167,202,0.85)';
ctx.strokeStyle='rgb(105,206,130)';
ctx.moveTo(1792,16264);
ctx.lineTo(1792,16228);
ctx.lineTo(1828,16228);
ctx.lineTo(1828,16264);
ctx.lineTo(1792,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,147,188,0.85)';
ctx.strokeStyle='rgb(82,161,128)';
ctx.moveTo(1888,16456);
ctx.lineTo(1888,16420);
ctx.lineTo(1924,16420);
ctx.lineTo(1924,16456);
ctx.lineTo(1888,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,246,147,0.85)';
ctx.strokeStyle='rgb(190,198,252)';
ctx.moveTo(1888,16360);
ctx.lineTo(1888,16324);
ctx.lineTo(1924,16324);
ctx.lineTo(1924,16360);
ctx.lineTo(1888,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,95,192,0.85)';
ctx.strokeStyle='rgb(240,31,113)';
ctx.moveTo(1888,16264);
ctx.lineTo(1888,16228);
ctx.lineTo(1924,16228);
ctx.lineTo(1924,16264);
ctx.lineTo(1888,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,31,147,0.85)';
ctx.strokeStyle='rgb(104,105,87)';
ctx.moveTo(1984,16456);
ctx.lineTo(1984,16420);
ctx.lineTo(2020,16420);
ctx.lineTo(2020,16456);
ctx.lineTo(1984,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,83,163,0.85)';
ctx.strokeStyle='rgb(149,36,201)';
ctx.moveTo(1984,16360);
ctx.lineTo(1984,16324);
ctx.lineTo(2020,16324);
ctx.lineTo(2020,16360);
ctx.lineTo(1984,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,111,104,0.85)';
ctx.strokeStyle='rgb(57,88,164)';
ctx.moveTo(1984,16264);
ctx.lineTo(1984,16228);
ctx.lineTo(2020,16228);
ctx.lineTo(2020,16264);
ctx.lineTo(1984,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,135,204,0.85)';
ctx.strokeStyle='rgb(233,250,132)';
ctx.moveTo(2080,16456);
ctx.lineTo(2080,16420);
ctx.lineTo(2116,16420);
ctx.lineTo(2116,16456);
ctx.lineTo(2080,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,188,57,0.85)';
ctx.strokeStyle='rgb(133,155,240)';
ctx.moveTo(2080,16360);
ctx.lineTo(2080,16324);
ctx.lineTo(2116,16324);
ctx.lineTo(2116,16360);
ctx.lineTo(2080,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,146,180,0.85)';
ctx.strokeStyle='rgb(20,79,105)';
ctx.moveTo(2080,16264);
ctx.lineTo(2080,16228);
ctx.lineTo(2116,16228);
ctx.lineTo(2116,16264);
ctx.lineTo(2080,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,169,223,0.85)';
ctx.strokeStyle='rgb(173,213,249)';
ctx.moveTo(2176,16456);
ctx.lineTo(2176,16420);
ctx.lineTo(2212,16420);
ctx.lineTo(2212,16456);
ctx.lineTo(2176,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,166,11,0.85)';
ctx.strokeStyle='rgb(94,225,77)';
ctx.moveTo(2176,16360);
ctx.lineTo(2176,16324);
ctx.lineTo(2212,16324);
ctx.lineTo(2212,16360);
ctx.lineTo(2176,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,2,131,0.85)';
ctx.strokeStyle='rgb(236,72,140)';
ctx.moveTo(2176,16264);
ctx.lineTo(2176,16228);
ctx.lineTo(2212,16228);
ctx.lineTo(2212,16264);
ctx.lineTo(2176,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,227,219,0.85)';
ctx.strokeStyle='rgb(31,65,143)';
ctx.moveTo(2272,16456);
ctx.lineTo(2272,16420);
ctx.lineTo(2308,16420);
ctx.lineTo(2308,16456);
ctx.lineTo(2272,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,177,227,0.85)';
ctx.strokeStyle='rgb(58,152,131)';
ctx.moveTo(2272,16360);
ctx.lineTo(2272,16324);
ctx.lineTo(2308,16324);
ctx.lineTo(2308,16360);
ctx.lineTo(2272,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,96,149,0.85)';
ctx.strokeStyle='rgb(101,219,32)';
ctx.moveTo(2272,16264);
ctx.lineTo(2272,16228);
ctx.lineTo(2308,16228);
ctx.lineTo(2308,16264);
ctx.lineTo(2272,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,25,231,0.85)';
ctx.strokeStyle='rgb(166,134,24)';
ctx.moveTo(2368,16456);
ctx.lineTo(2368,16420);
ctx.lineTo(2404,16420);
ctx.lineTo(2404,16456);
ctx.lineTo(2368,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,100,180,0.85)';
ctx.strokeStyle='rgb(51,26,210)';
ctx.moveTo(2368,16360);
ctx.lineTo(2368,16324);
ctx.lineTo(2404,16324);
ctx.lineTo(2404,16360);
ctx.lineTo(2368,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,107,9,0.85)';
ctx.strokeStyle='rgb(145,13,40)';
ctx.moveTo(2368,16264);
ctx.lineTo(2368,16228);
ctx.lineTo(2404,16228);
ctx.lineTo(2404,16264);
ctx.lineTo(2368,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,186,163,0.85)';
ctx.strokeStyle='rgb(147,191,132)';
ctx.moveTo(2464,16456);
ctx.lineTo(2464,16420);
ctx.lineTo(2500,16420);
ctx.lineTo(2500,16456);
ctx.lineTo(2464,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,172,236,0.85)';
ctx.strokeStyle='rgb(246,241,231)';
ctx.moveTo(2464,16360);
ctx.lineTo(2464,16324);
ctx.lineTo(2500,16324);
ctx.lineTo(2500,16360);
ctx.lineTo(2464,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,117,136,0.85)';
ctx.strokeStyle='rgb(4,226,232)';
ctx.moveTo(2464,16264);
ctx.lineTo(2464,16228);
ctx.lineTo(2500,16228);
ctx.lineTo(2500,16264);
ctx.lineTo(2464,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,198,129,0.85)';
ctx.strokeStyle='rgb(204,75,197)';
ctx.moveTo(2560,16456);
ctx.lineTo(2560,16420);
ctx.lineTo(2596,16420);
ctx.lineTo(2596,16456);
ctx.lineTo(2560,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,165,106,0.85)';
ctx.strokeStyle='rgb(216,222,31)';
ctx.moveTo(2560,16360);
ctx.lineTo(2560,16324);
ctx.lineTo(2596,16324);
ctx.lineTo(2596,16360);
ctx.lineTo(2560,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,83,105,0.85)';
ctx.strokeStyle='rgb(216,152,68)';
ctx.moveTo(2560,16264);
ctx.lineTo(2560,16228);
ctx.lineTo(2596,16228);
ctx.lineTo(2596,16264);
ctx.lineTo(2560,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,0,42,0.85)';
ctx.strokeStyle='rgb(247,91,246)';
ctx.moveTo(2656,16456);
ctx.lineTo(2656,16420);
ctx.lineTo(2692,16420);
ctx.lineTo(2692,16456);
ctx.lineTo(2656,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,69,216,0.85)';
ctx.strokeStyle='rgb(66,135,56)';
ctx.moveTo(2656,16360);
ctx.lineTo(2656,16324);
ctx.lineTo(2692,16324);
ctx.lineTo(2692,16360);
ctx.lineTo(2656,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,130,245,0.85)';
ctx.strokeStyle='rgb(95,230,210)';
ctx.moveTo(2656,16264);
ctx.lineTo(2656,16228);
ctx.lineTo(2692,16228);
ctx.lineTo(2692,16264);
ctx.lineTo(2656,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,56,195,0.85)';
ctx.strokeStyle='rgb(60,69,53)';
ctx.moveTo(1696,16456);
ctx.lineTo(1696,16420);
ctx.lineTo(1732,16420);
ctx.lineTo(1732,16456);
ctx.lineTo(1696,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,135,71,0.85)';
ctx.strokeStyle='rgb(31,15,131)';
ctx.moveTo(5476,16360);
ctx.lineTo(5476,16324);
ctx.lineTo(5512,16324);
ctx.lineTo(5512,16360);
ctx.lineTo(5476,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,200,204,0.85)';
ctx.strokeStyle='rgb(81,74,189)';
ctx.moveTo(5476,16264);
ctx.lineTo(5476,16228);
ctx.lineTo(5512,16228);
ctx.lineTo(5512,16264);
ctx.lineTo(5476,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,134,128,0.85)';
ctx.strokeStyle='rgb(146,125,225)';
ctx.moveTo(5572,16456);
ctx.lineTo(5572,16420);
ctx.lineTo(5608,16420);
ctx.lineTo(5608,16456);
ctx.lineTo(5572,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,74,174,0.85)';
ctx.strokeStyle='rgb(236,71,30)';
ctx.moveTo(5572,16360);
ctx.lineTo(5572,16324);
ctx.lineTo(5608,16324);
ctx.lineTo(5608,16360);
ctx.lineTo(5572,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,74,177,0.85)';
ctx.strokeStyle='rgb(84,182,32)';
ctx.moveTo(5572,16264);
ctx.lineTo(5572,16228);
ctx.lineTo(5608,16228);
ctx.lineTo(5608,16264);
ctx.lineTo(5572,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,123,218,0.85)';
ctx.strokeStyle='rgb(55,126,194)';
ctx.moveTo(5668,16456);
ctx.lineTo(5668,16420);
ctx.lineTo(5704,16420);
ctx.lineTo(5704,16456);
ctx.lineTo(5668,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,14,106,0.85)';
ctx.strokeStyle='rgb(68,68,104)';
ctx.moveTo(5668,16360);
ctx.lineTo(5668,16324);
ctx.lineTo(5704,16324);
ctx.lineTo(5704,16360);
ctx.lineTo(5668,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,128,173,0.85)';
ctx.strokeStyle='rgb(71,109,133)';
ctx.moveTo(5668,16264);
ctx.lineTo(5668,16228);
ctx.lineTo(5704,16228);
ctx.lineTo(5704,16264);
ctx.lineTo(5668,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,87,46,0.85)';
ctx.strokeStyle='rgb(117,231,18)';
ctx.moveTo(5764,16456);
ctx.lineTo(5764,16420);
ctx.lineTo(5800,16420);
ctx.lineTo(5800,16456);
ctx.lineTo(5764,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,185,24,0.85)';
ctx.strokeStyle='rgb(148,231,60)';
ctx.moveTo(5764,16360);
ctx.lineTo(5764,16324);
ctx.lineTo(5800,16324);
ctx.lineTo(5800,16360);
ctx.lineTo(5764,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,79,211,0.85)';
ctx.strokeStyle='rgb(21,86,252)';
ctx.moveTo(5764,16264);
ctx.lineTo(5764,16228);
ctx.lineTo(5800,16228);
ctx.lineTo(5800,16264);
ctx.lineTo(5764,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,47,54,0.85)';
ctx.strokeStyle='rgb(190,45,149)';
ctx.moveTo(5860,16456);
ctx.lineTo(5860,16420);
ctx.lineTo(5896,16420);
ctx.lineTo(5896,16456);
ctx.lineTo(5860,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,235,27,0.85)';
ctx.strokeStyle='rgb(79,13,29)';
ctx.moveTo(5860,16360);
ctx.lineTo(5860,16324);
ctx.lineTo(5896,16324);
ctx.lineTo(5896,16360);
ctx.lineTo(5860,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,17,139,0.85)';
ctx.strokeStyle='rgb(217,150,139)';
ctx.moveTo(5860,16264);
ctx.lineTo(5860,16228);
ctx.lineTo(5896,16228);
ctx.lineTo(5896,16264);
ctx.lineTo(5860,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,249,71,0.85)';
ctx.strokeStyle='rgb(243,202,176)';
ctx.moveTo(5956,16456);
ctx.lineTo(5956,16420);
ctx.lineTo(5992,16420);
ctx.lineTo(5992,16456);
ctx.lineTo(5956,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,189,149,0.85)';
ctx.strokeStyle='rgb(49,119,7)';
ctx.moveTo(5956,16360);
ctx.lineTo(5956,16324);
ctx.lineTo(5992,16324);
ctx.lineTo(5992,16360);
ctx.lineTo(5956,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,248,2,0.85)';
ctx.strokeStyle='rgb(62,140,89)';
ctx.moveTo(5956,16264);
ctx.lineTo(5956,16228);
ctx.lineTo(5992,16228);
ctx.lineTo(5992,16264);
ctx.lineTo(5956,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,45,244,0.85)';
ctx.strokeStyle='rgb(236,117,100)';
ctx.moveTo(5476,16456);
ctx.lineTo(5476,16420);
ctx.lineTo(5512,16420);
ctx.lineTo(5512,16456);
ctx.lineTo(5476,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,68,177,0.85)';
ctx.strokeStyle='rgb(226,173,67)';
ctx.moveTo(6148,13336);
ctx.lineTo(6148,13300);
ctx.lineTo(6184,13300);
ctx.lineTo(6184,13336);
ctx.lineTo(6148,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,13,135,0.85)';
ctx.strokeStyle='rgb(81,156,82)';
ctx.moveTo(6148,13240);
ctx.lineTo(6148,13204);
ctx.lineTo(6184,13204);
ctx.lineTo(6184,13240);
ctx.lineTo(6148,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,137,171,0.85)';
ctx.strokeStyle='rgb(52,142,109)';
ctx.moveTo(6244,13432);
ctx.lineTo(6244,13396);
ctx.lineTo(6280,13396);
ctx.lineTo(6280,13432);
ctx.lineTo(6244,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,193,206,0.85)';
ctx.strokeStyle='rgb(136,71,7)';
ctx.moveTo(6244,13336);
ctx.lineTo(6244,13300);
ctx.lineTo(6280,13300);
ctx.lineTo(6280,13336);
ctx.lineTo(6244,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,9,78,0.85)';
ctx.strokeStyle='rgb(223,99,169)';
ctx.moveTo(6244,13240);
ctx.lineTo(6244,13204);
ctx.lineTo(6280,13204);
ctx.lineTo(6280,13240);
ctx.lineTo(6244,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,249,104,0.85)';
ctx.strokeStyle='rgb(242,82,188)';
ctx.moveTo(6340,13432);
ctx.lineTo(6340,13396);
ctx.lineTo(6376,13396);
ctx.lineTo(6376,13432);
ctx.lineTo(6340,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,202,160,0.85)';
ctx.strokeStyle='rgb(73,112,36)';
ctx.moveTo(6340,13336);
ctx.lineTo(6340,13300);
ctx.lineTo(6376,13300);
ctx.lineTo(6376,13336);
ctx.lineTo(6340,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,97,129,0.85)';
ctx.strokeStyle='rgb(106,27,231)';
ctx.moveTo(6340,13240);
ctx.lineTo(6340,13204);
ctx.lineTo(6376,13204);
ctx.lineTo(6376,13240);
ctx.lineTo(6340,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,46,103,0.85)';
ctx.strokeStyle='rgb(107,205,187)';
ctx.moveTo(6436,13432);
ctx.lineTo(6436,13396);
ctx.lineTo(6472,13396);
ctx.lineTo(6472,13432);
ctx.lineTo(6436,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,114,47,0.85)';
ctx.strokeStyle='rgb(69,57,177)';
ctx.moveTo(6436,13336);
ctx.lineTo(6436,13300);
ctx.lineTo(6472,13300);
ctx.lineTo(6472,13336);
ctx.lineTo(6436,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,215,173,0.85)';
ctx.strokeStyle='rgb(27,12,168)';
ctx.moveTo(6436,13240);
ctx.lineTo(6436,13204);
ctx.lineTo(6472,13204);
ctx.lineTo(6472,13240);
ctx.lineTo(6436,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,105,183,0.85)';
ctx.strokeStyle='rgb(68,149,105)';
ctx.moveTo(6148,16456);
ctx.lineTo(6148,16420);
ctx.lineTo(6184,16420);
ctx.lineTo(6184,16456);
ctx.lineTo(6148,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,45,128,0.85)';
ctx.strokeStyle='rgb(132,212,49)';
ctx.moveTo(6148,16360);
ctx.lineTo(6148,16324);
ctx.lineTo(6184,16324);
ctx.lineTo(6184,16360);
ctx.lineTo(6148,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,79,206,0.85)';
ctx.strokeStyle='rgb(124,103,243)';
ctx.moveTo(6148,16264);
ctx.lineTo(6148,16228);
ctx.lineTo(6184,16228);
ctx.lineTo(6184,16264);
ctx.lineTo(6148,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,191,227,0.85)';
ctx.strokeStyle='rgb(86,254,235)';
ctx.moveTo(6244,16456);
ctx.lineTo(6244,16420);
ctx.lineTo(6280,16420);
ctx.lineTo(6280,16456);
ctx.lineTo(6244,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,176,11,0.85)';
ctx.strokeStyle='rgb(71,173,147)';
ctx.moveTo(6244,16360);
ctx.lineTo(6244,16324);
ctx.lineTo(6280,16324);
ctx.lineTo(6280,16360);
ctx.lineTo(6244,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,34,164,0.85)';
ctx.strokeStyle='rgb(234,2,230)';
ctx.moveTo(6244,16264);
ctx.lineTo(6244,16228);
ctx.lineTo(6280,16228);
ctx.lineTo(6280,16264);
ctx.lineTo(6244,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,238,183,0.85)';
ctx.strokeStyle='rgb(138,66,160)';
ctx.moveTo(6340,16456);
ctx.lineTo(6340,16420);
ctx.lineTo(6376,16420);
ctx.lineTo(6376,16456);
ctx.lineTo(6340,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,177,50,0.85)';
ctx.strokeStyle='rgb(133,18,63)';
ctx.moveTo(6340,16360);
ctx.lineTo(6340,16324);
ctx.lineTo(6376,16324);
ctx.lineTo(6376,16360);
ctx.lineTo(6340,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,13,194,0.85)';
ctx.strokeStyle='rgb(214,187,98)';
ctx.moveTo(6340,16264);
ctx.lineTo(6340,16228);
ctx.lineTo(6376,16228);
ctx.lineTo(6376,16264);
ctx.lineTo(6340,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,89,191,0.85)';
ctx.strokeStyle='rgb(20,172,86)';
ctx.moveTo(6436,16456);
ctx.lineTo(6436,16420);
ctx.lineTo(6472,16420);
ctx.lineTo(6472,16456);
ctx.lineTo(6436,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,199,196,0.85)';
ctx.strokeStyle='rgb(55,246,90)';
ctx.moveTo(6436,16360);
ctx.lineTo(6436,16324);
ctx.lineTo(6472,16324);
ctx.lineTo(6472,16360);
ctx.lineTo(6436,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,82,223,0.85)';
ctx.strokeStyle='rgb(18,206,112)';
ctx.moveTo(6436,16264);
ctx.lineTo(6436,16228);
ctx.lineTo(6472,16228);
ctx.lineTo(6472,16264);
ctx.lineTo(6436,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,38,5,0.85)';
ctx.strokeStyle='rgb(207,28,122)';
ctx.moveTo(6052,16456);
ctx.lineTo(6052,16420);
ctx.lineTo(6088,16420);
ctx.lineTo(6088,16456);
ctx.lineTo(6052,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,192,228,0.85)';
ctx.strokeStyle='rgb(181,72,102)';
ctx.moveTo(6052,16360);
ctx.lineTo(6052,16324);
ctx.lineTo(6088,16324);
ctx.lineTo(6088,16360);
ctx.lineTo(6052,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,32,245,0.85)';
ctx.strokeStyle='rgb(138,242,73)';
ctx.moveTo(6052,16264);
ctx.lineTo(6052,16228);
ctx.lineTo(6088,16228);
ctx.lineTo(6088,16264);
ctx.lineTo(6052,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,78,246,0.85)';
ctx.strokeStyle='rgb(180,117,39)';
ctx.moveTo(6052,13432);
ctx.lineTo(6052,13396);
ctx.lineTo(6088,13396);
ctx.lineTo(6088,13432);
ctx.lineTo(6052,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,146,68,0.85)';
ctx.strokeStyle='rgb(243,211,230)';
ctx.moveTo(6052,13336);
ctx.lineTo(6052,13300);
ctx.lineTo(6088,13300);
ctx.lineTo(6088,13336);
ctx.lineTo(6052,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,205,169,0.85)';
ctx.strokeStyle='rgb(44,64,179)';
ctx.moveTo(6052,13240);
ctx.lineTo(6052,13204);
ctx.lineTo(6088,13204);
ctx.lineTo(6088,13240);
ctx.lineTo(6052,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,88,5,0.85)';
ctx.strokeStyle='rgb(100,198,9)';
ctx.moveTo(6148,13432);
ctx.lineTo(6148,13396);
ctx.lineTo(6184,13396);
ctx.lineTo(6184,13432);
ctx.lineTo(6148,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,151,29,0.85)';
ctx.strokeStyle='rgb(129,114,74)';
ctx.moveTo(14950,8896);
ctx.lineTo(14950,8860);
ctx.lineTo(14986,8860);
ctx.lineTo(14986,8896);
ctx.lineTo(14950,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,213,28,0.85)';
ctx.strokeStyle='rgb(133,222,163)';
ctx.moveTo(14950,8800);
ctx.lineTo(14950,8764);
ctx.lineTo(14986,8764);
ctx.lineTo(14986,8800);
ctx.lineTo(14950,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,246,12,0.85)';
ctx.strokeStyle='rgb(186,107,208)';
ctx.moveTo(15046,8896);
ctx.lineTo(15046,8860);
ctx.lineTo(15082,8860);
ctx.lineTo(15082,8896);
ctx.lineTo(15046,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,72,212,0.85)';
ctx.strokeStyle='rgb(204,98,177)';
ctx.moveTo(15046,8800);
ctx.lineTo(15046,8764);
ctx.lineTo(15082,8764);
ctx.lineTo(15082,8800);
ctx.lineTo(15046,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,213,182,0.85)';
ctx.strokeStyle='rgb(40,98,77)';
ctx.moveTo(15142,8896);
ctx.lineTo(15142,8860);
ctx.lineTo(15178,8860);
ctx.lineTo(15178,8896);
ctx.lineTo(15142,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,225,108,0.85)';
ctx.strokeStyle='rgb(33,135,19)';
ctx.moveTo(15142,8800);
ctx.lineTo(15142,8764);
ctx.lineTo(15178,8764);
ctx.lineTo(15178,8800);
ctx.lineTo(15142,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,172,104,0.85)';
ctx.strokeStyle='rgb(168,67,44)';
ctx.moveTo(14758,8896);
ctx.lineTo(14758,8860);
ctx.lineTo(14794,8860);
ctx.lineTo(14794,8896);
ctx.lineTo(14758,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,155,154,0.85)';
ctx.strokeStyle='rgb(72,188,161)';
ctx.moveTo(14758,8800);
ctx.lineTo(14758,8764);
ctx.lineTo(14794,8764);
ctx.lineTo(14794,8800);
ctx.lineTo(14758,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,39,30,0.85)';
ctx.strokeStyle='rgb(247,0,26)';
ctx.moveTo(14854,8896);
ctx.lineTo(14854,8860);
ctx.lineTo(14890,8860);
ctx.lineTo(14890,8896);
ctx.lineTo(14854,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,187,101,0.85)';
ctx.strokeStyle='rgb(87,104,100)';
ctx.moveTo(14758,11920);
ctx.lineTo(14758,11884);
ctx.lineTo(14794,11884);
ctx.lineTo(14794,11920);
ctx.lineTo(14758,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,249,198,0.85)';
ctx.strokeStyle='rgb(38,106,40)';
ctx.moveTo(14758,11824);
ctx.lineTo(14758,11788);
ctx.lineTo(14794,11788);
ctx.lineTo(14794,11824);
ctx.lineTo(14758,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,54,8,0.85)';
ctx.strokeStyle='rgb(237,139,178)';
ctx.moveTo(14758,11728);
ctx.lineTo(14758,11692);
ctx.lineTo(14794,11692);
ctx.lineTo(14794,11728);
ctx.lineTo(14758,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,175,177,0.85)';
ctx.strokeStyle='rgb(198,207,13)';
ctx.moveTo(14854,11920);
ctx.lineTo(14854,11884);
ctx.lineTo(14890,11884);
ctx.lineTo(14890,11920);
ctx.lineTo(14854,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,254,77,0.85)';
ctx.strokeStyle='rgb(68,180,92)';
ctx.moveTo(14854,11824);
ctx.lineTo(14854,11788);
ctx.lineTo(14890,11788);
ctx.lineTo(14890,11824);
ctx.lineTo(14854,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,53,236,0.85)';
ctx.strokeStyle='rgb(95,219,89)';
ctx.moveTo(14854,11728);
ctx.lineTo(14854,11692);
ctx.lineTo(14890,11692);
ctx.lineTo(14890,11728);
ctx.lineTo(14854,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,233,171,0.85)';
ctx.strokeStyle='rgb(30,254,114)';
ctx.moveTo(14950,11920);
ctx.lineTo(14950,11884);
ctx.lineTo(14986,11884);
ctx.lineTo(14986,11920);
ctx.lineTo(14950,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,44,180,0.85)';
ctx.strokeStyle='rgb(84,200,29)';
ctx.moveTo(14950,11824);
ctx.lineTo(14950,11788);
ctx.lineTo(14986,11788);
ctx.lineTo(14986,11824);
ctx.lineTo(14950,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,6,165,0.85)';
ctx.strokeStyle='rgb(241,73,158)';
ctx.moveTo(14950,11728);
ctx.lineTo(14950,11692);
ctx.lineTo(14986,11692);
ctx.lineTo(14986,11728);
ctx.lineTo(14950,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,52,51,0.85)';
ctx.strokeStyle='rgb(26,217,215)';
ctx.moveTo(15046,11920);
ctx.lineTo(15046,11884);
ctx.lineTo(15082,11884);
ctx.lineTo(15082,11920);
ctx.lineTo(15046,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,61,176,0.85)';
ctx.strokeStyle='rgb(146,126,209)';
ctx.moveTo(15046,11824);
ctx.lineTo(15046,11788);
ctx.lineTo(15082,11788);
ctx.lineTo(15082,11824);
ctx.lineTo(15046,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,25,63,0.85)';
ctx.strokeStyle='rgb(163,212,26)';
ctx.moveTo(15046,11728);
ctx.lineTo(15046,11692);
ctx.lineTo(15082,11692);
ctx.lineTo(15082,11728);
ctx.lineTo(15046,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,71,38,0.85)';
ctx.strokeStyle='rgb(108,28,9)';
ctx.moveTo(15142,11920);
ctx.lineTo(15142,11884);
ctx.lineTo(15178,11884);
ctx.lineTo(15178,11920);
ctx.lineTo(15142,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,222,141,0.85)';
ctx.strokeStyle='rgb(116,90,36)';
ctx.moveTo(15142,11824);
ctx.lineTo(15142,11788);
ctx.lineTo(15178,11788);
ctx.lineTo(15178,11824);
ctx.lineTo(15142,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,189,22,0.85)';
ctx.strokeStyle='rgb(5,192,160)';
ctx.moveTo(15142,11728);
ctx.lineTo(15142,11692);
ctx.lineTo(15178,11692);
ctx.lineTo(15178,11728);
ctx.lineTo(15142,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,107,217,0.85)';
ctx.strokeStyle='rgb(135,126,86)';
ctx.moveTo(15478,10408);
ctx.lineTo(15478,10372);
ctx.lineTo(15514,10372);
ctx.lineTo(15514,10408);
ctx.lineTo(15478,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,74,237,0.85)';
ctx.strokeStyle='rgb(179,16,215)';
ctx.moveTo(15478,10312);
ctx.lineTo(15478,10276);
ctx.lineTo(15514,10276);
ctx.lineTo(15514,10312);
ctx.lineTo(15478,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,202,162,0.85)';
ctx.strokeStyle='rgb(167,90,163)';
ctx.moveTo(15478,10216);
ctx.lineTo(15478,10180);
ctx.lineTo(15514,10180);
ctx.lineTo(15514,10216);
ctx.lineTo(15478,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,165,160,0.85)';
ctx.strokeStyle='rgb(225,242,33)';
ctx.moveTo(15574,10408);
ctx.lineTo(15574,10372);
ctx.lineTo(15610,10372);
ctx.lineTo(15610,10408);
ctx.lineTo(15574,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,230,24,0.85)';
ctx.strokeStyle='rgb(168,7,170)';
ctx.moveTo(15574,10312);
ctx.lineTo(15574,10276);
ctx.lineTo(15610,10276);
ctx.lineTo(15610,10312);
ctx.lineTo(15574,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,179,166,0.85)';
ctx.strokeStyle='rgb(208,191,73)';
ctx.moveTo(15574,10216);
ctx.lineTo(15574,10180);
ctx.lineTo(15610,10180);
ctx.lineTo(15610,10216);
ctx.lineTo(15574,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,234,138,0.85)';
ctx.strokeStyle='rgb(123,152,180)';
ctx.moveTo(15670,10408);
ctx.lineTo(15670,10372);
ctx.lineTo(15706,10372);
ctx.lineTo(15706,10408);
ctx.lineTo(15670,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,98,223,0.85)';
ctx.strokeStyle='rgb(100,152,47)';
ctx.moveTo(15670,10312);
ctx.lineTo(15670,10276);
ctx.lineTo(15706,10276);
ctx.lineTo(15706,10312);
ctx.lineTo(15670,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,243,190,0.85)';
ctx.strokeStyle='rgb(121,91,250)';
ctx.moveTo(15670,10216);
ctx.lineTo(15670,10180);
ctx.lineTo(15706,10180);
ctx.lineTo(15706,10216);
ctx.lineTo(15670,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,97,31,0.85)';
ctx.strokeStyle='rgb(170,107,97)';
ctx.moveTo(15766,10408);
ctx.lineTo(15766,10372);
ctx.lineTo(15802,10372);
ctx.lineTo(15802,10408);
ctx.lineTo(15766,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,42,94,0.85)';
ctx.strokeStyle='rgb(8,253,254)';
ctx.moveTo(15766,10312);
ctx.lineTo(15766,10276);
ctx.lineTo(15802,10276);
ctx.lineTo(15802,10312);
ctx.lineTo(15766,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,139,121,0.85)';
ctx.strokeStyle='rgb(113,211,253)';
ctx.moveTo(15766,10216);
ctx.lineTo(15766,10180);
ctx.lineTo(15802,10180);
ctx.lineTo(15802,10216);
ctx.lineTo(15766,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,163,200,0.85)';
ctx.strokeStyle='rgb(223,97,28)';
ctx.moveTo(15862,10408);
ctx.lineTo(15862,10372);
ctx.lineTo(15898,10372);
ctx.lineTo(15898,10408);
ctx.lineTo(15862,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,145,74,0.85)';
ctx.strokeStyle='rgb(62,31,212)';
ctx.moveTo(15862,10312);
ctx.lineTo(15862,10276);
ctx.lineTo(15898,10276);
ctx.lineTo(15898,10312);
ctx.lineTo(15862,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,62,243,0.85)';
ctx.strokeStyle='rgb(206,32,229)';
ctx.moveTo(15862,10216);
ctx.lineTo(15862,10180);
ctx.lineTo(15898,10180);
ctx.lineTo(15898,10216);
ctx.lineTo(15862,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,207,249,0.85)';
ctx.strokeStyle='rgb(71,181,178)';
ctx.moveTo(15958,10408);
ctx.lineTo(15958,10372);
ctx.lineTo(15994,10372);
ctx.lineTo(15994,10408);
ctx.lineTo(15958,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,121,114,0.85)';
ctx.strokeStyle='rgb(97,179,25)';
ctx.moveTo(15958,10312);
ctx.lineTo(15958,10276);
ctx.lineTo(15994,10276);
ctx.lineTo(15994,10312);
ctx.lineTo(15958,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,212,38,0.85)';
ctx.strokeStyle='rgb(57,151,38)';
ctx.moveTo(15958,10216);
ctx.lineTo(15958,10180);
ctx.lineTo(15994,10180);
ctx.lineTo(15994,10216);
ctx.lineTo(15958,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,40,185,0.85)';
ctx.strokeStyle='rgb(218,22,155)';
ctx.moveTo(16054,10408);
ctx.lineTo(16054,10372);
ctx.lineTo(16090,10372);
ctx.lineTo(16090,10408);
ctx.lineTo(16054,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,229,170,0.85)';
ctx.strokeStyle='rgb(93,46,36)';
ctx.moveTo(16054,10312);
ctx.lineTo(16054,10276);
ctx.lineTo(16090,10276);
ctx.lineTo(16090,10312);
ctx.lineTo(16054,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,111,77,0.85)';
ctx.strokeStyle='rgb(126,39,32)';
ctx.moveTo(16054,10216);
ctx.lineTo(16054,10180);
ctx.lineTo(16090,10180);
ctx.lineTo(16090,10216);
ctx.lineTo(16054,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,27,27,0.85)';
ctx.strokeStyle='rgb(73,96,136)';
ctx.moveTo(16150,10408);
ctx.lineTo(16150,10372);
ctx.lineTo(16186,10372);
ctx.lineTo(16186,10408);
ctx.lineTo(16150,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,189,198,0.85)';
ctx.strokeStyle='rgb(78,110,9)';
ctx.moveTo(16150,10312);
ctx.lineTo(16150,10276);
ctx.lineTo(16186,10276);
ctx.lineTo(16186,10312);
ctx.lineTo(16150,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,238,54,0.85)';
ctx.strokeStyle='rgb(176,173,66)';
ctx.moveTo(16150,10216);
ctx.lineTo(16150,10180);
ctx.lineTo(16186,10180);
ctx.lineTo(16186,10216);
ctx.lineTo(16150,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,73,134,0.85)';
ctx.strokeStyle='rgb(46,202,49)';
ctx.moveTo(16246,10408);
ctx.lineTo(16246,10372);
ctx.lineTo(16282,10372);
ctx.lineTo(16282,10408);
ctx.lineTo(16246,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,131,154,0.85)';
ctx.strokeStyle='rgb(146,58,88)';
ctx.moveTo(16246,10312);
ctx.lineTo(16246,10276);
ctx.lineTo(16282,10276);
ctx.lineTo(16282,10312);
ctx.lineTo(16246,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,25,114,0.85)';
ctx.strokeStyle='rgb(116,26,51)';
ctx.moveTo(16246,10216);
ctx.lineTo(16246,10180);
ctx.lineTo(16282,10180);
ctx.lineTo(16282,10216);
ctx.lineTo(16246,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,213,160,0.85)';
ctx.strokeStyle='rgb(166,55,65)';
ctx.moveTo(16342,10408);
ctx.lineTo(16342,10372);
ctx.lineTo(16378,10372);
ctx.lineTo(16378,10408);
ctx.lineTo(16342,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,103,134,0.85)';
ctx.strokeStyle='rgb(97,169,241)';
ctx.moveTo(16342,10312);
ctx.lineTo(16342,10276);
ctx.lineTo(16378,10276);
ctx.lineTo(16378,10312);
ctx.lineTo(16342,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,67,70,0.85)';
ctx.strokeStyle='rgb(38,29,232)';
ctx.moveTo(16342,10216);
ctx.lineTo(16342,10180);
ctx.lineTo(16378,10180);
ctx.lineTo(16378,10216);
ctx.lineTo(16342,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,48,97,0.85)';
ctx.strokeStyle='rgb(142,232,242)';
ctx.moveTo(16438,10408);
ctx.lineTo(16438,10372);
ctx.lineTo(16474,10372);
ctx.lineTo(16474,10408);
ctx.lineTo(16438,10408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,84,187,0.85)';
ctx.strokeStyle='rgb(245,34,168)';
ctx.moveTo(16438,10312);
ctx.lineTo(16438,10276);
ctx.lineTo(16474,10276);
ctx.lineTo(16474,10312);
ctx.lineTo(16438,10312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,25,231,0.85)';
ctx.strokeStyle='rgb(128,42,82)';
ctx.moveTo(16438,10216);
ctx.lineTo(16438,10180);
ctx.lineTo(16474,10180);
ctx.lineTo(16474,10216);
ctx.lineTo(16438,10216);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,236,32,0.85)';
ctx.strokeStyle='rgb(249,127,150)';
ctx.moveTo(14854,8800);
ctx.lineTo(14854,8764);
ctx.lineTo(14890,8764);
ctx.lineTo(14890,8800);
ctx.lineTo(14854,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,40,191,0.85)';
ctx.strokeStyle='rgb(156,104,108)';
ctx.moveTo(14374,11824);
ctx.lineTo(14374,11788);
ctx.lineTo(14410,11788);
ctx.lineTo(14410,11824);
ctx.lineTo(14374,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,196,215,0.85)';
ctx.strokeStyle='rgb(158,158,55)';
ctx.moveTo(14374,11728);
ctx.lineTo(14374,11692);
ctx.lineTo(14410,11692);
ctx.lineTo(14410,11728);
ctx.lineTo(14374,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,7,189,0.85)';
ctx.strokeStyle='rgb(248,119,197)';
ctx.moveTo(14470,11920);
ctx.lineTo(14470,11884);
ctx.lineTo(14506,11884);
ctx.lineTo(14506,11920);
ctx.lineTo(14470,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,114,145,0.85)';
ctx.strokeStyle='rgb(83,108,190)';
ctx.moveTo(14470,11824);
ctx.lineTo(14470,11788);
ctx.lineTo(14506,11788);
ctx.lineTo(14506,11824);
ctx.lineTo(14470,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,50,61,0.85)';
ctx.strokeStyle='rgb(59,126,216)';
ctx.moveTo(14470,11728);
ctx.lineTo(14470,11692);
ctx.lineTo(14506,11692);
ctx.lineTo(14506,11728);
ctx.lineTo(14470,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,2,231,0.85)';
ctx.strokeStyle='rgb(99,27,250)';
ctx.moveTo(14566,11920);
ctx.lineTo(14566,11884);
ctx.lineTo(14602,11884);
ctx.lineTo(14602,11920);
ctx.lineTo(14566,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,174,18,0.85)';
ctx.strokeStyle='rgb(67,1,253)';
ctx.moveTo(14566,11824);
ctx.lineTo(14566,11788);
ctx.lineTo(14602,11788);
ctx.lineTo(14602,11824);
ctx.lineTo(14566,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,196,7,0.85)';
ctx.strokeStyle='rgb(26,169,2)';
ctx.moveTo(14566,11728);
ctx.lineTo(14566,11692);
ctx.lineTo(14602,11692);
ctx.lineTo(14602,11728);
ctx.lineTo(14566,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,218,149,0.85)';
ctx.strokeStyle='rgb(173,105,54)';
ctx.moveTo(14662,11920);
ctx.lineTo(14662,11884);
ctx.lineTo(14698,11884);
ctx.lineTo(14698,11920);
ctx.lineTo(14662,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,162,59,0.85)';
ctx.strokeStyle='rgb(51,145,159)';
ctx.moveTo(14662,11824);
ctx.lineTo(14662,11788);
ctx.lineTo(14698,11788);
ctx.lineTo(14698,11824);
ctx.lineTo(14662,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,141,8,0.85)';
ctx.strokeStyle='rgb(170,84,59)';
ctx.moveTo(14662,11728);
ctx.lineTo(14662,11692);
ctx.lineTo(14698,11692);
ctx.lineTo(14698,11728);
ctx.lineTo(14662,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,149,239,0.85)';
ctx.strokeStyle='rgb(34,250,102)';
ctx.moveTo(14470,8800);
ctx.lineTo(14470,8764);
ctx.lineTo(14506,8764);
ctx.lineTo(14506,8800);
ctx.lineTo(14470,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,21,154,0.85)';
ctx.strokeStyle='rgb(186,165,73)';
ctx.moveTo(14278,8896);
ctx.lineTo(14278,8860);
ctx.lineTo(14314,8860);
ctx.lineTo(14314,8896);
ctx.lineTo(14278,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,122,129,0.85)';
ctx.strokeStyle='rgb(34,81,221)';
ctx.moveTo(14566,8896);
ctx.lineTo(14566,8860);
ctx.lineTo(14602,8860);
ctx.lineTo(14602,8896);
ctx.lineTo(14566,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,159,177,0.85)';
ctx.strokeStyle='rgb(70,168,206)';
ctx.moveTo(14566,8800);
ctx.lineTo(14566,8764);
ctx.lineTo(14602,8764);
ctx.lineTo(14602,8800);
ctx.lineTo(14566,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,200,78,0.85)';
ctx.strokeStyle='rgb(102,20,102)';
ctx.moveTo(14278,8800);
ctx.lineTo(14278,8764);
ctx.lineTo(14314,8764);
ctx.lineTo(14314,8800);
ctx.lineTo(14278,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,248,115,0.85)';
ctx.strokeStyle='rgb(230,23,250)';
ctx.moveTo(14662,8896);
ctx.lineTo(14662,8860);
ctx.lineTo(14698,8860);
ctx.lineTo(14698,8896);
ctx.lineTo(14662,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,39,61,0.85)';
ctx.strokeStyle='rgb(93,106,187)';
ctx.moveTo(14662,8800);
ctx.lineTo(14662,8764);
ctx.lineTo(14698,8764);
ctx.lineTo(14698,8800);
ctx.lineTo(14662,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,134,136,0.85)';
ctx.strokeStyle='rgb(128,200,148)';
ctx.moveTo(14182,8800);
ctx.lineTo(14182,8764);
ctx.lineTo(14218,8764);
ctx.lineTo(14218,8800);
ctx.lineTo(14182,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,34,245,0.85)';
ctx.strokeStyle='rgb(33,162,200)';
ctx.moveTo(14470,8896);
ctx.lineTo(14470,8860);
ctx.lineTo(14506,8860);
ctx.lineTo(14506,8896);
ctx.lineTo(14470,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,74,140,0.85)';
ctx.strokeStyle='rgb(58,109,189)';
ctx.moveTo(14374,8800);
ctx.lineTo(14374,8764);
ctx.lineTo(14410,8764);
ctx.lineTo(14410,8800);
ctx.lineTo(14374,8800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,63,39,0.85)';
ctx.strokeStyle='rgb(78,241,145)';
ctx.moveTo(14374,8896);
ctx.lineTo(14374,8860);
ctx.lineTo(14410,8860);
ctx.lineTo(14410,8896);
ctx.lineTo(14374,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,142,111,0.85)';
ctx.strokeStyle='rgb(206,178,66)';
ctx.moveTo(14182,8896);
ctx.lineTo(14182,8860);
ctx.lineTo(14218,8860);
ctx.lineTo(14218,8896);
ctx.lineTo(14182,8896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,208,190,0.85)';
ctx.strokeStyle='rgb(65,56,118)';
ctx.moveTo(14182,11920);
ctx.lineTo(14182,11884);
ctx.lineTo(14218,11884);
ctx.lineTo(14218,11920);
ctx.lineTo(14182,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,108,171,0.85)';
ctx.strokeStyle='rgb(117,183,183)';
ctx.moveTo(14182,11824);
ctx.lineTo(14182,11788);
ctx.lineTo(14218,11788);
ctx.lineTo(14218,11824);
ctx.lineTo(14182,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,2,208,0.85)';
ctx.strokeStyle='rgb(9,227,33)';
ctx.moveTo(14182,11728);
ctx.lineTo(14182,11692);
ctx.lineTo(14218,11692);
ctx.lineTo(14218,11728);
ctx.lineTo(14182,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,30,136,0.85)';
ctx.strokeStyle='rgb(156,217,100)';
ctx.moveTo(14278,11920);
ctx.lineTo(14278,11884);
ctx.lineTo(14314,11884);
ctx.lineTo(14314,11920);
ctx.lineTo(14278,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,140,114,0.85)';
ctx.strokeStyle='rgb(106,83,60)';
ctx.moveTo(14278,11824);
ctx.lineTo(14278,11788);
ctx.lineTo(14314,11788);
ctx.lineTo(14314,11824);
ctx.lineTo(14278,11824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,24,179,0.85)';
ctx.strokeStyle='rgb(191,244,234)';
ctx.moveTo(14278,11728);
ctx.lineTo(14278,11692);
ctx.lineTo(14314,11692);
ctx.lineTo(14314,11728);
ctx.lineTo(14278,11728);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,185,198,0.85)';
ctx.strokeStyle='rgb(68,183,244)';
ctx.moveTo(14374,11920);
ctx.lineTo(14374,11884);
ctx.lineTo(14410,11884);
ctx.lineTo(14410,11920);
ctx.lineTo(14374,11920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,119,0,0.85)';
ctx.strokeStyle='rgb(138,51,228)';
ctx.moveTo(14566,14848);
ctx.lineTo(14566,14812);
ctx.lineTo(14602,14812);
ctx.lineTo(14602,14848);
ctx.lineTo(14566,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,206,150,0.85)';
ctx.strokeStyle='rgb(33,195,113)';
ctx.moveTo(14566,14752);
ctx.lineTo(14566,14716);
ctx.lineTo(14602,14716);
ctx.lineTo(14602,14752);
ctx.lineTo(14566,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,218,91,0.85)';
ctx.strokeStyle='rgb(46,232,18)';
ctx.moveTo(14662,14944);
ctx.lineTo(14662,14908);
ctx.lineTo(14698,14908);
ctx.lineTo(14698,14944);
ctx.lineTo(14662,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,124,183,0.85)';
ctx.strokeStyle='rgb(151,11,182)';
ctx.moveTo(14662,14848);
ctx.lineTo(14662,14812);
ctx.lineTo(14698,14812);
ctx.lineTo(14698,14848);
ctx.lineTo(14662,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,18,204,0.85)';
ctx.strokeStyle='rgb(98,98,6)';
ctx.moveTo(14662,14752);
ctx.lineTo(14662,14716);
ctx.lineTo(14698,14716);
ctx.lineTo(14698,14752);
ctx.lineTo(14662,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,218,209,0.85)';
ctx.strokeStyle='rgb(76,34,79)';
ctx.moveTo(14182,14944);
ctx.lineTo(14182,14908);
ctx.lineTo(14218,14908);
ctx.lineTo(14218,14944);
ctx.lineTo(14182,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,145,15,0.85)';
ctx.strokeStyle='rgb(130,197,215)';
ctx.moveTo(14182,14848);
ctx.lineTo(14182,14812);
ctx.lineTo(14218,14812);
ctx.lineTo(14218,14848);
ctx.lineTo(14182,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,107,237,0.85)';
ctx.strokeStyle='rgb(33,59,212)';
ctx.moveTo(14182,14752);
ctx.lineTo(14182,14716);
ctx.lineTo(14218,14716);
ctx.lineTo(14218,14752);
ctx.lineTo(14182,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,144,157,0.85)';
ctx.strokeStyle='rgb(55,209,175)';
ctx.moveTo(14278,14944);
ctx.lineTo(14278,14908);
ctx.lineTo(14314,14908);
ctx.lineTo(14314,14944);
ctx.lineTo(14278,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,175,146,0.85)';
ctx.strokeStyle='rgb(85,61,18)';
ctx.moveTo(14278,14848);
ctx.lineTo(14278,14812);
ctx.lineTo(14314,14812);
ctx.lineTo(14314,14848);
ctx.lineTo(14278,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,82,143,0.85)';
ctx.strokeStyle='rgb(224,95,216)';
ctx.moveTo(14278,14752);
ctx.lineTo(14278,14716);
ctx.lineTo(14314,14716);
ctx.lineTo(14314,14752);
ctx.lineTo(14278,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,217,191,0.85)';
ctx.strokeStyle='rgb(253,124,150)';
ctx.moveTo(14374,14944);
ctx.lineTo(14374,14908);
ctx.lineTo(14410,14908);
ctx.lineTo(14410,14944);
ctx.lineTo(14374,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,215,101,0.85)';
ctx.strokeStyle='rgb(66,98,232)';
ctx.moveTo(14374,14848);
ctx.lineTo(14374,14812);
ctx.lineTo(14410,14812);
ctx.lineTo(14410,14848);
ctx.lineTo(14374,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,249,153,0.85)';
ctx.strokeStyle='rgb(153,78,15)';
ctx.moveTo(14374,14752);
ctx.lineTo(14374,14716);
ctx.lineTo(14410,14716);
ctx.lineTo(14410,14752);
ctx.lineTo(14374,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,21,47,0.85)';
ctx.strokeStyle='rgb(114,46,43)';
ctx.moveTo(14470,14944);
ctx.lineTo(14470,14908);
ctx.lineTo(14506,14908);
ctx.lineTo(14506,14944);
ctx.lineTo(14470,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,237,77,0.85)';
ctx.strokeStyle='rgb(158,70,17)';
ctx.moveTo(14470,14848);
ctx.lineTo(14470,14812);
ctx.lineTo(14506,14812);
ctx.lineTo(14506,14848);
ctx.lineTo(14470,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,81,9,0.85)';
ctx.strokeStyle='rgb(62,90,204)';
ctx.moveTo(14470,14752);
ctx.lineTo(14470,14716);
ctx.lineTo(14506,14716);
ctx.lineTo(14506,14752);
ctx.lineTo(14470,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,179,244,0.85)';
ctx.strokeStyle='rgb(123,239,231)';
ctx.moveTo(14566,14944);
ctx.lineTo(14566,14908);
ctx.lineTo(14602,14908);
ctx.lineTo(14602,14944);
ctx.lineTo(14566,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,146,157,0.85)';
ctx.strokeStyle='rgb(155,240,34)';
ctx.moveTo(14950,14848);
ctx.lineTo(14950,14812);
ctx.lineTo(14986,14812);
ctx.lineTo(14986,14848);
ctx.lineTo(14950,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,77,152,0.85)';
ctx.strokeStyle='rgb(182,30,202)';
ctx.moveTo(14950,14752);
ctx.lineTo(14950,14716);
ctx.lineTo(14986,14716);
ctx.lineTo(14986,14752);
ctx.lineTo(14950,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,117,233,0.85)';
ctx.strokeStyle='rgb(67,1,113)';
ctx.moveTo(15046,14944);
ctx.lineTo(15046,14908);
ctx.lineTo(15082,14908);
ctx.lineTo(15082,14944);
ctx.lineTo(15046,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,36,195,0.85)';
ctx.strokeStyle='rgb(193,239,237)';
ctx.moveTo(15046,14848);
ctx.lineTo(15046,14812);
ctx.lineTo(15082,14812);
ctx.lineTo(15082,14848);
ctx.lineTo(15046,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,97,110,0.85)';
ctx.strokeStyle='rgb(195,148,254)';
ctx.moveTo(15046,14752);
ctx.lineTo(15046,14716);
ctx.lineTo(15082,14716);
ctx.lineTo(15082,14752);
ctx.lineTo(15046,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,191,219,0.85)';
ctx.strokeStyle='rgb(38,83,109)';
ctx.moveTo(15142,14944);
ctx.lineTo(15142,14908);
ctx.lineTo(15178,14908);
ctx.lineTo(15178,14944);
ctx.lineTo(15142,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,40,211,0.85)';
ctx.strokeStyle='rgb(83,83,126)';
ctx.moveTo(15142,14848);
ctx.lineTo(15142,14812);
ctx.lineTo(15178,14812);
ctx.lineTo(15178,14848);
ctx.lineTo(15142,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,245,193,0.85)';
ctx.strokeStyle='rgb(115,159,56)';
ctx.moveTo(15142,14752);
ctx.lineTo(15142,14716);
ctx.lineTo(15178,14716);
ctx.lineTo(15178,14752);
ctx.lineTo(15142,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,37,141,0.85)';
ctx.strokeStyle='rgb(27,90,224)';
ctx.moveTo(14758,14944);
ctx.lineTo(14758,14908);
ctx.lineTo(14794,14908);
ctx.lineTo(14794,14944);
ctx.lineTo(14758,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,126,134,0.85)';
ctx.strokeStyle='rgb(3,49,45)';
ctx.moveTo(14758,14848);
ctx.lineTo(14758,14812);
ctx.lineTo(14794,14812);
ctx.lineTo(14794,14848);
ctx.lineTo(14758,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,56,14,0.85)';
ctx.strokeStyle='rgb(224,172,68)';
ctx.moveTo(14758,14752);
ctx.lineTo(14758,14716);
ctx.lineTo(14794,14716);
ctx.lineTo(14794,14752);
ctx.lineTo(14758,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,170,68,0.85)';
ctx.strokeStyle='rgb(119,210,44)';
ctx.moveTo(14854,14944);
ctx.lineTo(14854,14908);
ctx.lineTo(14890,14908);
ctx.lineTo(14890,14944);
ctx.lineTo(14854,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,60,91,0.85)';
ctx.strokeStyle='rgb(93,231,147)';
ctx.moveTo(14854,14848);
ctx.lineTo(14854,14812);
ctx.lineTo(14890,14812);
ctx.lineTo(14890,14848);
ctx.lineTo(14854,14848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,160,210,0.85)';
ctx.strokeStyle='rgb(197,204,172)';
ctx.moveTo(14854,14752);
ctx.lineTo(14854,14716);
ctx.lineTo(14890,14716);
ctx.lineTo(14890,14752);
ctx.lineTo(14854,14752);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,105,58,0.85)';
ctx.strokeStyle='rgb(160,254,32)';
ctx.moveTo(14950,14944);
ctx.lineTo(14950,14908);
ctx.lineTo(14986,14908);
ctx.lineTo(14986,14944);
ctx.lineTo(14950,14944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,70,67,0.85)';
ctx.strokeStyle='rgb(196,30,224)';
ctx.moveTo(18160,15604);
ctx.lineTo(18160,15568);
ctx.lineTo(18196,15568);
ctx.lineTo(18196,15604);
ctx.lineTo(18160,15604);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,58,22,0.85)';
ctx.strokeStyle='rgb(114,58,161)';
ctx.moveTo(18268,16036);
ctx.lineTo(18268,16000);
ctx.lineTo(18304,16000);
ctx.lineTo(18304,16036);
ctx.lineTo(18268,16036);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,225,13,0.85)';
ctx.strokeStyle='rgb(181,14,110)';
ctx.moveTo(15478,16456);
ctx.lineTo(15478,16420);
ctx.lineTo(15514,16420);
ctx.lineTo(15514,16456);
ctx.lineTo(15478,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,73,247,0.85)';
ctx.strokeStyle='rgb(49,113,36)';
ctx.moveTo(15478,16360);
ctx.lineTo(15478,16324);
ctx.lineTo(15514,16324);
ctx.lineTo(15514,16360);
ctx.lineTo(15478,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,118,124,0.85)';
ctx.strokeStyle='rgb(231,218,11)';
ctx.moveTo(15478,16264);
ctx.lineTo(15478,16228);
ctx.lineTo(15514,16228);
ctx.lineTo(15514,16264);
ctx.lineTo(15478,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,47,4,0.85)';
ctx.strokeStyle='rgb(83,37,206)';
ctx.moveTo(15574,16456);
ctx.lineTo(15574,16420);
ctx.lineTo(15610,16420);
ctx.lineTo(15610,16456);
ctx.lineTo(15574,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,155,137,0.85)';
ctx.strokeStyle='rgb(111,181,17)';
ctx.moveTo(15574,16360);
ctx.lineTo(15574,16324);
ctx.lineTo(15610,16324);
ctx.lineTo(15610,16360);
ctx.lineTo(15574,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,1,37,0.85)';
ctx.strokeStyle='rgb(27,73,234)';
ctx.moveTo(15574,16264);
ctx.lineTo(15574,16228);
ctx.lineTo(15610,16228);
ctx.lineTo(15610,16264);
ctx.lineTo(15574,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,251,95,0.85)';
ctx.strokeStyle='rgb(159,137,173)';
ctx.moveTo(15670,16456);
ctx.lineTo(15670,16420);
ctx.lineTo(15706,16420);
ctx.lineTo(15706,16456);
ctx.lineTo(15670,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,83,6,0.85)';
ctx.strokeStyle='rgb(105,65,165)';
ctx.moveTo(15670,16360);
ctx.lineTo(15670,16324);
ctx.lineTo(15706,16324);
ctx.lineTo(15706,16360);
ctx.lineTo(15670,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,144,17,0.85)';
ctx.strokeStyle='rgb(82,211,13)';
ctx.moveTo(15670,16264);
ctx.lineTo(15670,16228);
ctx.lineTo(15706,16228);
ctx.lineTo(15706,16264);
ctx.lineTo(15670,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,9,18,0.85)';
ctx.strokeStyle='rgb(19,171,164)';
ctx.moveTo(15766,16456);
ctx.lineTo(15766,16420);
ctx.lineTo(15802,16420);
ctx.lineTo(15802,16456);
ctx.lineTo(15766,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,41,60,0.85)';
ctx.strokeStyle='rgb(161,80,36)';
ctx.moveTo(15766,16360);
ctx.lineTo(15766,16324);
ctx.lineTo(15802,16324);
ctx.lineTo(15802,16360);
ctx.lineTo(15766,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,124,71,0.85)';
ctx.strokeStyle='rgb(25,224,134)';
ctx.moveTo(15766,16264);
ctx.lineTo(15766,16228);
ctx.lineTo(15802,16228);
ctx.lineTo(15802,16264);
ctx.lineTo(15766,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,148,228,0.85)';
ctx.strokeStyle='rgb(181,194,240)';
ctx.moveTo(15862,16456);
ctx.lineTo(15862,16420);
ctx.lineTo(15898,16420);
ctx.lineTo(15898,16456);
ctx.lineTo(15862,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,212,158,0.85)';
ctx.strokeStyle='rgb(46,99,92)';
ctx.moveTo(15862,16360);
ctx.lineTo(15862,16324);
ctx.lineTo(15898,16324);
ctx.lineTo(15898,16360);
ctx.lineTo(15862,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,1,83,0.85)';
ctx.strokeStyle='rgb(188,168,135)';
ctx.moveTo(15862,16264);
ctx.lineTo(15862,16228);
ctx.lineTo(15898,16228);
ctx.lineTo(15898,16264);
ctx.lineTo(15862,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,135,128,0.85)';
ctx.strokeStyle='rgb(60,102,43)';
ctx.moveTo(15958,16456);
ctx.lineTo(15958,16420);
ctx.lineTo(15994,16420);
ctx.lineTo(15994,16456);
ctx.lineTo(15958,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,27,10,0.85)';
ctx.strokeStyle='rgb(58,35,236)';
ctx.moveTo(15958,16360);
ctx.lineTo(15958,16324);
ctx.lineTo(15994,16324);
ctx.lineTo(15994,16360);
ctx.lineTo(15958,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,59,130,0.85)';
ctx.strokeStyle='rgb(188,243,33)';
ctx.moveTo(15958,16264);
ctx.lineTo(15958,16228);
ctx.lineTo(15994,16228);
ctx.lineTo(15994,16264);
ctx.lineTo(15958,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,242,139,0.85)';
ctx.strokeStyle='rgb(239,215,19)';
ctx.moveTo(16054,16456);
ctx.lineTo(16054,16420);
ctx.lineTo(16090,16420);
ctx.lineTo(16090,16456);
ctx.lineTo(16054,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,89,231,0.85)';
ctx.strokeStyle='rgb(56,127,178)';
ctx.moveTo(16054,16360);
ctx.lineTo(16054,16324);
ctx.lineTo(16090,16324);
ctx.lineTo(16090,16360);
ctx.lineTo(16054,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,205,88,0.85)';
ctx.strokeStyle='rgb(195,243,197)';
ctx.moveTo(16054,16264);
ctx.lineTo(16054,16228);
ctx.lineTo(16090,16228);
ctx.lineTo(16090,16264);
ctx.lineTo(16054,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,61,127,0.85)';
ctx.strokeStyle='rgb(170,157,75)';
ctx.moveTo(16150,16456);
ctx.lineTo(16150,16420);
ctx.lineTo(16186,16420);
ctx.lineTo(16186,16456);
ctx.lineTo(16150,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,8,195,0.85)';
ctx.strokeStyle='rgb(68,24,80)';
ctx.moveTo(16150,16360);
ctx.lineTo(16150,16324);
ctx.lineTo(16186,16324);
ctx.lineTo(16186,16360);
ctx.lineTo(16150,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,211,86,0.85)';
ctx.strokeStyle='rgb(128,185,19)';
ctx.moveTo(16150,16264);
ctx.lineTo(16150,16228);
ctx.lineTo(16186,16228);
ctx.lineTo(16186,16264);
ctx.lineTo(16150,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,48,7,0.85)';
ctx.strokeStyle='rgb(103,104,24)';
ctx.moveTo(16246,16456);
ctx.lineTo(16246,16420);
ctx.lineTo(16282,16420);
ctx.lineTo(16282,16456);
ctx.lineTo(16246,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,57,113,0.85)';
ctx.strokeStyle='rgb(245,106,192)';
ctx.moveTo(16246,16360);
ctx.lineTo(16246,16324);
ctx.lineTo(16282,16324);
ctx.lineTo(16282,16360);
ctx.lineTo(16246,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,43,114,0.85)';
ctx.strokeStyle='rgb(45,5,43)';
ctx.moveTo(16246,16264);
ctx.lineTo(16246,16228);
ctx.lineTo(16282,16228);
ctx.lineTo(16282,16264);
ctx.lineTo(16246,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,91,33,0.85)';
ctx.strokeStyle='rgb(70,44,222)';
ctx.moveTo(16342,16456);
ctx.lineTo(16342,16420);
ctx.lineTo(16378,16420);
ctx.lineTo(16378,16456);
ctx.lineTo(16342,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,215,48,0.85)';
ctx.strokeStyle='rgb(143,125,249)';
ctx.moveTo(16342,16360);
ctx.lineTo(16342,16324);
ctx.lineTo(16378,16324);
ctx.lineTo(16378,16360);
ctx.lineTo(16342,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,136,235,0.85)';
ctx.strokeStyle='rgb(159,36,33)';
ctx.moveTo(16342,16264);
ctx.lineTo(16342,16228);
ctx.lineTo(16378,16228);
ctx.lineTo(16378,16264);
ctx.lineTo(16342,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,248,162,0.85)';
ctx.strokeStyle='rgb(96,202,111)';
ctx.moveTo(16438,16456);
ctx.lineTo(16438,16420);
ctx.lineTo(16474,16420);
ctx.lineTo(16474,16456);
ctx.lineTo(16438,16456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,172,202,0.85)';
ctx.strokeStyle='rgb(11,48,65)';
ctx.moveTo(16438,16360);
ctx.lineTo(16438,16324);
ctx.lineTo(16474,16324);
ctx.lineTo(16474,16360);
ctx.lineTo(16438,16360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,161,190,0.85)';
ctx.strokeStyle='rgb(128,122,183)';
ctx.moveTo(16438,16264);
ctx.lineTo(16438,16228);
ctx.lineTo(16474,16228);
ctx.lineTo(16474,16264);
ctx.lineTo(16438,16264);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,135,207,0.85)';
ctx.strokeStyle='rgb(181,92,190)';
ctx.moveTo(15478,13432);
ctx.lineTo(15478,13396);
ctx.lineTo(15514,13396);
ctx.lineTo(15514,13432);
ctx.lineTo(15478,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,249,131,0.85)';
ctx.strokeStyle='rgb(232,218,3)';
ctx.moveTo(15478,13336);
ctx.lineTo(15478,13300);
ctx.lineTo(15514,13300);
ctx.lineTo(15514,13336);
ctx.lineTo(15478,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,181,177,0.85)';
ctx.strokeStyle='rgb(122,52,34)';
ctx.moveTo(15478,13240);
ctx.lineTo(15478,13204);
ctx.lineTo(15514,13204);
ctx.lineTo(15514,13240);
ctx.lineTo(15478,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,173,51,0.85)';
ctx.strokeStyle='rgb(199,197,39)';
ctx.moveTo(15574,13432);
ctx.lineTo(15574,13396);
ctx.lineTo(15610,13396);
ctx.lineTo(15610,13432);
ctx.lineTo(15574,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,92,219,0.85)';
ctx.strokeStyle='rgb(217,112,201)';
ctx.moveTo(15574,13336);
ctx.lineTo(15574,13300);
ctx.lineTo(15610,13300);
ctx.lineTo(15610,13336);
ctx.lineTo(15574,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,66,68,0.85)';
ctx.strokeStyle='rgb(51,13,199)';
ctx.moveTo(15574,13240);
ctx.lineTo(15574,13204);
ctx.lineTo(15610,13204);
ctx.lineTo(15610,13240);
ctx.lineTo(15574,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,55,238,0.85)';
ctx.strokeStyle='rgb(220,46,222)';
ctx.moveTo(15670,13432);
ctx.lineTo(15670,13396);
ctx.lineTo(15706,13396);
ctx.lineTo(15706,13432);
ctx.lineTo(15670,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,47,67,0.85)';
ctx.strokeStyle='rgb(60,199,84)';
ctx.moveTo(15670,13336);
ctx.lineTo(15670,13300);
ctx.lineTo(15706,13300);
ctx.lineTo(15706,13336);
ctx.lineTo(15670,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,62,244,0.85)';
ctx.strokeStyle='rgb(125,250,158)';
ctx.moveTo(15670,13240);
ctx.lineTo(15670,13204);
ctx.lineTo(15706,13204);
ctx.lineTo(15706,13240);
ctx.lineTo(15670,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,167,5,0.85)';
ctx.strokeStyle='rgb(93,147,168)';
ctx.moveTo(15766,13432);
ctx.lineTo(15766,13396);
ctx.lineTo(15802,13396);
ctx.lineTo(15802,13432);
ctx.lineTo(15766,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,0,61,0.85)';
ctx.strokeStyle='rgb(23,84,187)';
ctx.moveTo(15766,13336);
ctx.lineTo(15766,13300);
ctx.lineTo(15802,13300);
ctx.lineTo(15802,13336);
ctx.lineTo(15766,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,62,74,0.85)';
ctx.strokeStyle='rgb(143,46,70)';
ctx.moveTo(15766,13240);
ctx.lineTo(15766,13204);
ctx.lineTo(15802,13204);
ctx.lineTo(15802,13240);
ctx.lineTo(15766,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,162,125,0.85)';
ctx.strokeStyle='rgb(68,192,28)';
ctx.moveTo(15862,13432);
ctx.lineTo(15862,13396);
ctx.lineTo(15898,13396);
ctx.lineTo(15898,13432);
ctx.lineTo(15862,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,215,122,0.85)';
ctx.strokeStyle='rgb(242,87,180)';
ctx.moveTo(15862,13336);
ctx.lineTo(15862,13300);
ctx.lineTo(15898,13300);
ctx.lineTo(15898,13336);
ctx.lineTo(15862,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,236,246,0.85)';
ctx.strokeStyle='rgb(237,96,122)';
ctx.moveTo(15862,13240);
ctx.lineTo(15862,13204);
ctx.lineTo(15898,13204);
ctx.lineTo(15898,13240);
ctx.lineTo(15862,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,49,243,0.85)';
ctx.strokeStyle='rgb(44,95,21)';
ctx.moveTo(15958,13432);
ctx.lineTo(15958,13396);
ctx.lineTo(15994,13396);
ctx.lineTo(15994,13432);
ctx.lineTo(15958,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,164,196,0.85)';
ctx.strokeStyle='rgb(178,212,27)';
ctx.moveTo(15958,13336);
ctx.lineTo(15958,13300);
ctx.lineTo(15994,13300);
ctx.lineTo(15994,13336);
ctx.lineTo(15958,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,205,23,0.85)';
ctx.strokeStyle='rgb(189,94,108)';
ctx.moveTo(15958,13240);
ctx.lineTo(15958,13204);
ctx.lineTo(15994,13204);
ctx.lineTo(15994,13240);
ctx.lineTo(15958,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,149,103,0.85)';
ctx.strokeStyle='rgb(35,51,146)';
ctx.moveTo(16054,13432);
ctx.lineTo(16054,13396);
ctx.lineTo(16090,13396);
ctx.lineTo(16090,13432);
ctx.lineTo(16054,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,156,17,0.85)';
ctx.strokeStyle='rgb(187,3,121)';
ctx.moveTo(16054,13336);
ctx.lineTo(16054,13300);
ctx.lineTo(16090,13300);
ctx.lineTo(16090,13336);
ctx.lineTo(16054,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,198,92,0.85)';
ctx.strokeStyle='rgb(103,66,81)';
ctx.moveTo(16054,13240);
ctx.lineTo(16054,13204);
ctx.lineTo(16090,13204);
ctx.lineTo(16090,13240);
ctx.lineTo(16054,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,209,70,0.85)';
ctx.strokeStyle='rgb(125,249,112)';
ctx.moveTo(16150,13432);
ctx.lineTo(16150,13396);
ctx.lineTo(16186,13396);
ctx.lineTo(16186,13432);
ctx.lineTo(16150,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,241,127,0.85)';
ctx.strokeStyle='rgb(142,94,153)';
ctx.moveTo(16150,13336);
ctx.lineTo(16150,13300);
ctx.lineTo(16186,13300);
ctx.lineTo(16186,13336);
ctx.lineTo(16150,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,45,25,0.85)';
ctx.strokeStyle='rgb(4,76,37)';
ctx.moveTo(16150,13240);
ctx.lineTo(16150,13204);
ctx.lineTo(16186,13204);
ctx.lineTo(16186,13240);
ctx.lineTo(16150,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,177,238,0.85)';
ctx.strokeStyle='rgb(252,129,168)';
ctx.moveTo(16246,13432);
ctx.lineTo(16246,13396);
ctx.lineTo(16282,13396);
ctx.lineTo(16282,13432);
ctx.lineTo(16246,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,141,42,0.85)';
ctx.strokeStyle='rgb(211,110,55)';
ctx.moveTo(16246,13336);
ctx.lineTo(16246,13300);
ctx.lineTo(16282,13300);
ctx.lineTo(16282,13336);
ctx.lineTo(16246,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,241,78,0.85)';
ctx.strokeStyle='rgb(124,243,160)';
ctx.moveTo(16246,13240);
ctx.lineTo(16246,13204);
ctx.lineTo(16282,13204);
ctx.lineTo(16282,13240);
ctx.lineTo(16246,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,205,6,0.85)';
ctx.strokeStyle='rgb(223,148,48)';
ctx.moveTo(16342,13432);
ctx.lineTo(16342,13396);
ctx.lineTo(16378,13396);
ctx.lineTo(16378,13432);
ctx.lineTo(16342,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,48,135,0.85)';
ctx.strokeStyle='rgb(191,187,210)';
ctx.moveTo(16342,13336);
ctx.lineTo(16342,13300);
ctx.lineTo(16378,13300);
ctx.lineTo(16378,13336);
ctx.lineTo(16342,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,230,40,0.85)';
ctx.strokeStyle='rgb(146,185,194)';
ctx.moveTo(16342,13240);
ctx.lineTo(16342,13204);
ctx.lineTo(16378,13204);
ctx.lineTo(16378,13240);
ctx.lineTo(16342,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,173,20,0.85)';
ctx.strokeStyle='rgb(101,78,250)';
ctx.moveTo(16438,13432);
ctx.lineTo(16438,13396);
ctx.lineTo(16474,13396);
ctx.lineTo(16474,13432);
ctx.lineTo(16438,13432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,45,222,0.85)';
ctx.strokeStyle='rgb(192,137,40)';
ctx.moveTo(16438,13336);
ctx.lineTo(16438,13300);
ctx.lineTo(16474,13300);
ctx.lineTo(16474,13336);
ctx.lineTo(16438,13336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,199,124,0.85)';
ctx.strokeStyle='rgb(3,21,108)';
ctx.moveTo(16438,13240);
ctx.lineTo(16438,13204);
ctx.lineTo(16474,13204);
ctx.lineTo(16474,13240);
ctx.lineTo(16438,13240);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,52,43,0.85)';
ctx.strokeStyle='rgb(15,199,59)';
ctx.moveTo(15478,25528);
ctx.lineTo(15478,25492);
ctx.lineTo(15514,25492);
ctx.lineTo(15514,25528);
ctx.lineTo(15478,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,209,239,0.85)';
ctx.strokeStyle='rgb(67,140,111)';
ctx.moveTo(15574,25528);
ctx.lineTo(15574,25492);
ctx.lineTo(15610,25492);
ctx.lineTo(15610,25528);
ctx.lineTo(15574,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,13,94,0.85)';
ctx.strokeStyle='rgb(139,20,57)';
ctx.moveTo(15670,25528);
ctx.lineTo(15670,25492);
ctx.lineTo(15706,25492);
ctx.lineTo(15706,25528);
ctx.lineTo(15670,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,217,102,0.85)';
ctx.strokeStyle='rgb(104,44,239)';
ctx.moveTo(15766,25528);
ctx.lineTo(15766,25492);
ctx.lineTo(15802,25492);
ctx.lineTo(15802,25528);
ctx.lineTo(15766,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,230,111,0.85)';
ctx.strokeStyle='rgb(92,107,98)';
ctx.moveTo(15862,25528);
ctx.lineTo(15862,25492);
ctx.lineTo(15898,25492);
ctx.lineTo(15898,25528);
ctx.lineTo(15862,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,77,178,0.85)';
ctx.strokeStyle='rgb(46,180,66)';
ctx.moveTo(15958,25528);
ctx.lineTo(15958,25492);
ctx.lineTo(15994,25492);
ctx.lineTo(15994,25528);
ctx.lineTo(15958,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,64,29,0.85)';
ctx.strokeStyle='rgb(233,39,79)';
ctx.moveTo(16054,25528);
ctx.lineTo(16054,25492);
ctx.lineTo(16090,25492);
ctx.lineTo(16090,25528);
ctx.lineTo(16054,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,216,200,0.85)';
ctx.strokeStyle='rgb(144,123,76)';
ctx.moveTo(16150,25528);
ctx.lineTo(16150,25492);
ctx.lineTo(16186,25492);
ctx.lineTo(16186,25528);
ctx.lineTo(16150,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,245,101,0.85)';
ctx.strokeStyle='rgb(219,53,99)';
ctx.moveTo(16246,25528);
ctx.lineTo(16246,25492);
ctx.lineTo(16282,25492);
ctx.lineTo(16282,25528);
ctx.lineTo(16246,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,60,175,0.85)';
ctx.strokeStyle='rgb(153,141,232)';
ctx.moveTo(16342,25528);
ctx.lineTo(16342,25492);
ctx.lineTo(16378,25492);
ctx.lineTo(16378,25528);
ctx.lineTo(16342,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,202,187,0.85)';
ctx.strokeStyle='rgb(164,35,237)';
ctx.moveTo(16438,25528);
ctx.lineTo(16438,25492);
ctx.lineTo(16474,25492);
ctx.lineTo(16474,25528);
ctx.lineTo(16438,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,56,42,0.85)';
ctx.strokeStyle='rgb(36,9,152)';
ctx.moveTo(5476,25528);
ctx.lineTo(5476,25492);
ctx.lineTo(5512,25492);
ctx.lineTo(5512,25528);
ctx.lineTo(5476,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,61,161,0.85)';
ctx.strokeStyle='rgb(67,6,130)';
ctx.moveTo(5572,25528);
ctx.lineTo(5572,25492);
ctx.lineTo(5608,25492);
ctx.lineTo(5608,25528);
ctx.lineTo(5572,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,98,233,0.85)';
ctx.strokeStyle='rgb(94,84,183)';
ctx.moveTo(5668,25528);
ctx.lineTo(5668,25492);
ctx.lineTo(5704,25492);
ctx.lineTo(5704,25528);
ctx.lineTo(5668,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,158,214,0.85)';
ctx.strokeStyle='rgb(9,49,250)';
ctx.moveTo(5764,25528);
ctx.lineTo(5764,25492);
ctx.lineTo(5800,25492);
ctx.lineTo(5800,25528);
ctx.lineTo(5764,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,25,76,0.85)';
ctx.strokeStyle='rgb(162,159,110)';
ctx.moveTo(5860,25528);
ctx.lineTo(5860,25492);
ctx.lineTo(5896,25492);
ctx.lineTo(5896,25528);
ctx.lineTo(5860,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,91,54,0.85)';
ctx.strokeStyle='rgb(225,170,122)';
ctx.moveTo(5956,25528);
ctx.lineTo(5956,25492);
ctx.lineTo(5992,25492);
ctx.lineTo(5992,25528);
ctx.lineTo(5956,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,74,254,0.85)';
ctx.strokeStyle='rgb(205,158,40)';
ctx.moveTo(6052,25528);
ctx.lineTo(6052,25492);
ctx.lineTo(6088,25492);
ctx.lineTo(6088,25528);
ctx.lineTo(6052,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,184,127,0.85)';
ctx.strokeStyle='rgb(25,82,163)';
ctx.moveTo(6148,25528);
ctx.lineTo(6148,25492);
ctx.lineTo(6184,25492);
ctx.lineTo(6184,25528);
ctx.lineTo(6148,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,237,216,0.85)';
ctx.strokeStyle='rgb(49,40,15)';
ctx.moveTo(6244,25528);
ctx.lineTo(6244,25492);
ctx.lineTo(6280,25492);
ctx.lineTo(6280,25528);
ctx.lineTo(6244,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,70,10,0.85)';
ctx.strokeStyle='rgb(222,177,114)';
ctx.moveTo(6340,25528);
ctx.lineTo(6340,25492);
ctx.lineTo(6376,25492);
ctx.lineTo(6376,25528);
ctx.lineTo(6340,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,211,201,0.85)';
ctx.strokeStyle='rgb(112,121,41)';
ctx.moveTo(6436,25528);
ctx.lineTo(6436,25492);
ctx.lineTo(6472,25492);
ctx.lineTo(6472,25528);
ctx.lineTo(6436,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,52,70,0.85)';
ctx.strokeStyle='rgb(44,87,99)';
ctx.moveTo(1696,25528);
ctx.lineTo(1696,25492);
ctx.lineTo(1732,25492);
ctx.lineTo(1732,25528);
ctx.lineTo(1696,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,158,118,0.85)';
ctx.strokeStyle='rgb(241,36,181)';
ctx.moveTo(1792,25528);
ctx.lineTo(1792,25492);
ctx.lineTo(1828,25492);
ctx.lineTo(1828,25528);
ctx.lineTo(1792,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,178,223,0.85)';
ctx.strokeStyle='rgb(83,93,144)';
ctx.moveTo(1888,25528);
ctx.lineTo(1888,25492);
ctx.lineTo(1924,25492);
ctx.lineTo(1924,25528);
ctx.lineTo(1888,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,223,184,0.85)';
ctx.strokeStyle='rgb(20,172,67)';
ctx.moveTo(1984,25528);
ctx.lineTo(1984,25492);
ctx.lineTo(2020,25492);
ctx.lineTo(2020,25528);
ctx.lineTo(1984,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,164,63,0.85)';
ctx.strokeStyle='rgb(38,239,140)';
ctx.moveTo(2080,25528);
ctx.lineTo(2080,25492);
ctx.lineTo(2116,25492);
ctx.lineTo(2116,25528);
ctx.lineTo(2080,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,94,35,0.85)';
ctx.strokeStyle='rgb(70,23,206)';
ctx.moveTo(2176,25528);
ctx.lineTo(2176,25492);
ctx.lineTo(2212,25492);
ctx.lineTo(2212,25528);
ctx.lineTo(2176,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,48,219,0.85)';
ctx.strokeStyle='rgb(207,200,123)';
ctx.moveTo(2272,25528);
ctx.lineTo(2272,25492);
ctx.lineTo(2308,25492);
ctx.lineTo(2308,25528);
ctx.lineTo(2272,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,86,70,0.85)';
ctx.strokeStyle='rgb(6,155,253)';
ctx.moveTo(2368,25528);
ctx.lineTo(2368,25492);
ctx.lineTo(2404,25492);
ctx.lineTo(2404,25528);
ctx.lineTo(2368,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,247,79,0.85)';
ctx.strokeStyle='rgb(218,135,199)';
ctx.moveTo(2464,25528);
ctx.lineTo(2464,25492);
ctx.lineTo(2500,25492);
ctx.lineTo(2500,25528);
ctx.lineTo(2464,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,245,146,0.85)';
ctx.strokeStyle='rgb(249,84,22)';
ctx.moveTo(2560,25528);
ctx.lineTo(2560,25492);
ctx.lineTo(2596,25492);
ctx.lineTo(2596,25528);
ctx.lineTo(2560,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,138,214,0.85)';
ctx.strokeStyle='rgb(206,91,155)';
ctx.moveTo(2656,25528);
ctx.lineTo(2656,25492);
ctx.lineTo(2692,25492);
ctx.lineTo(2692,25528);
ctx.lineTo(2656,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,21,4,0.85)';
ctx.strokeStyle='rgb(159,0,193)';
ctx.moveTo(14758,20992);
ctx.lineTo(14758,20956);
ctx.lineTo(14794,20956);
ctx.lineTo(14794,20992);
ctx.lineTo(14758,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,33,20,0.85)';
ctx.strokeStyle='rgb(60,227,220)';
ctx.moveTo(14758,20896);
ctx.lineTo(14758,20860);
ctx.lineTo(14794,20860);
ctx.lineTo(14794,20896);
ctx.lineTo(14758,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,126,63,0.85)';
ctx.strokeStyle='rgb(157,162,225)';
ctx.moveTo(14758,20800);
ctx.lineTo(14758,20764);
ctx.lineTo(14794,20764);
ctx.lineTo(14794,20800);
ctx.lineTo(14758,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,197,101,0.85)';
ctx.strokeStyle='rgb(3,103,212)';
ctx.moveTo(14854,20992);
ctx.lineTo(14854,20956);
ctx.lineTo(14890,20956);
ctx.lineTo(14890,20992);
ctx.lineTo(14854,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,29,14,0.85)';
ctx.strokeStyle='rgb(230,144,12)';
ctx.moveTo(14854,20896);
ctx.lineTo(14854,20860);
ctx.lineTo(14890,20860);
ctx.lineTo(14890,20896);
ctx.lineTo(14854,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,77,55,0.85)';
ctx.strokeStyle='rgb(13,193,51)';
ctx.moveTo(14854,20800);
ctx.lineTo(14854,20764);
ctx.lineTo(14890,20764);
ctx.lineTo(14890,20800);
ctx.lineTo(14854,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,2,111,0.85)';
ctx.strokeStyle='rgb(166,130,87)';
ctx.moveTo(14950,20992);
ctx.lineTo(14950,20956);
ctx.lineTo(14986,20956);
ctx.lineTo(14986,20992);
ctx.lineTo(14950,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,65,48,0.85)';
ctx.strokeStyle='rgb(247,6,138)';
ctx.moveTo(14950,20896);
ctx.lineTo(14950,20860);
ctx.lineTo(14986,20860);
ctx.lineTo(14986,20896);
ctx.lineTo(14950,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,181,218,0.85)';
ctx.strokeStyle='rgb(240,251,95)';
ctx.moveTo(14950,20800);
ctx.lineTo(14950,20764);
ctx.lineTo(14986,20764);
ctx.lineTo(14986,20800);
ctx.lineTo(14950,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,233,116,0.85)';
ctx.strokeStyle='rgb(84,127,229)';
ctx.moveTo(15046,20992);
ctx.lineTo(15046,20956);
ctx.lineTo(15082,20956);
ctx.lineTo(15082,20992);
ctx.lineTo(15046,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,21,61,0.85)';
ctx.strokeStyle='rgb(172,15,45)';
ctx.moveTo(15046,20896);
ctx.lineTo(15046,20860);
ctx.lineTo(15082,20860);
ctx.lineTo(15082,20896);
ctx.lineTo(15046,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,105,39,0.85)';
ctx.strokeStyle='rgb(58,24,128)';
ctx.moveTo(15046,20800);
ctx.lineTo(15046,20764);
ctx.lineTo(15082,20764);
ctx.lineTo(15082,20800);
ctx.lineTo(15046,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,241,248,0.85)';
ctx.strokeStyle='rgb(102,187,237)';
ctx.moveTo(15142,20992);
ctx.lineTo(15142,20956);
ctx.lineTo(15178,20956);
ctx.lineTo(15178,20992);
ctx.lineTo(15142,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,199,214,0.85)';
ctx.strokeStyle='rgb(43,254,89)';
ctx.moveTo(15142,20896);
ctx.lineTo(15142,20860);
ctx.lineTo(15178,20860);
ctx.lineTo(15178,20896);
ctx.lineTo(15142,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,50,192,0.85)';
ctx.strokeStyle='rgb(35,116,252)';
ctx.moveTo(15142,20800);
ctx.lineTo(15142,20764);
ctx.lineTo(15178,20764);
ctx.lineTo(15178,20800);
ctx.lineTo(15142,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,158,220,0.85)';
ctx.strokeStyle='rgb(58,240,193)';
ctx.moveTo(14758,17968);
ctx.lineTo(14758,17932);
ctx.lineTo(14794,17932);
ctx.lineTo(14794,17968);
ctx.lineTo(14758,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,5,85,0.85)';
ctx.strokeStyle='rgb(150,180,175)';
ctx.moveTo(14758,17872);
ctx.lineTo(14758,17836);
ctx.lineTo(14794,17836);
ctx.lineTo(14794,17872);
ctx.lineTo(14758,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,130,250,0.85)';
ctx.strokeStyle='rgb(11,207,38)';
ctx.moveTo(14758,17776);
ctx.lineTo(14758,17740);
ctx.lineTo(14794,17740);
ctx.lineTo(14794,17776);
ctx.lineTo(14758,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,191,35,0.85)';
ctx.strokeStyle='rgb(187,116,59)';
ctx.moveTo(14854,17968);
ctx.lineTo(14854,17932);
ctx.lineTo(14890,17932);
ctx.lineTo(14890,17968);
ctx.lineTo(14854,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,184,142,0.85)';
ctx.strokeStyle='rgb(74,132,69)';
ctx.moveTo(14854,17872);
ctx.lineTo(14854,17836);
ctx.lineTo(14890,17836);
ctx.lineTo(14890,17872);
ctx.lineTo(14854,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,216,59,0.85)';
ctx.strokeStyle='rgb(152,219,149)';
ctx.moveTo(14854,17776);
ctx.lineTo(14854,17740);
ctx.lineTo(14890,17740);
ctx.lineTo(14890,17776);
ctx.lineTo(14854,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,90,232,0.85)';
ctx.strokeStyle='rgb(184,151,138)';
ctx.moveTo(14950,17968);
ctx.lineTo(14950,17932);
ctx.lineTo(14986,17932);
ctx.lineTo(14986,17968);
ctx.lineTo(14950,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,79,104,0.85)';
ctx.strokeStyle='rgb(24,217,50)';
ctx.moveTo(14950,17872);
ctx.lineTo(14950,17836);
ctx.lineTo(14986,17836);
ctx.lineTo(14986,17872);
ctx.lineTo(14950,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,225,183,0.85)';
ctx.strokeStyle='rgb(145,163,243)';
ctx.moveTo(14950,17776);
ctx.lineTo(14950,17740);
ctx.lineTo(14986,17740);
ctx.lineTo(14986,17776);
ctx.lineTo(14950,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,83,247,0.85)';
ctx.strokeStyle='rgb(243,158,43)';
ctx.moveTo(15046,17968);
ctx.lineTo(15046,17932);
ctx.lineTo(15082,17932);
ctx.lineTo(15082,17968);
ctx.lineTo(15046,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,159,166,0.85)';
ctx.strokeStyle='rgb(125,69,120)';
ctx.moveTo(15046,17872);
ctx.lineTo(15046,17836);
ctx.lineTo(15082,17836);
ctx.lineTo(15082,17872);
ctx.lineTo(15046,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,94,88,0.85)';
ctx.strokeStyle='rgb(157,111,13)';
ctx.moveTo(15046,17776);
ctx.lineTo(15046,17740);
ctx.lineTo(15082,17740);
ctx.lineTo(15082,17776);
ctx.lineTo(15046,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,40,166,0.85)';
ctx.strokeStyle='rgb(100,138,225)';
ctx.moveTo(15142,17968);
ctx.lineTo(15142,17932);
ctx.lineTo(15178,17932);
ctx.lineTo(15178,17968);
ctx.lineTo(15142,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,127,180,0.85)';
ctx.strokeStyle='rgb(159,192,3)';
ctx.moveTo(15142,17872);
ctx.lineTo(15142,17836);
ctx.lineTo(15178,17836);
ctx.lineTo(15178,17872);
ctx.lineTo(15142,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,75,47,0.85)';
ctx.strokeStyle='rgb(146,178,156)';
ctx.moveTo(15142,17776);
ctx.lineTo(15142,17740);
ctx.lineTo(15178,17740);
ctx.lineTo(15178,17776);
ctx.lineTo(15142,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,103,155,0.85)';
ctx.strokeStyle='rgb(8,176,84)';
ctx.moveTo(15478,19480);
ctx.lineTo(15478,19444);
ctx.lineTo(15514,19444);
ctx.lineTo(15514,19480);
ctx.lineTo(15478,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,42,103,0.85)';
ctx.strokeStyle='rgb(68,62,147)';
ctx.moveTo(15478,19384);
ctx.lineTo(15478,19348);
ctx.lineTo(15514,19348);
ctx.lineTo(15514,19384);
ctx.lineTo(15478,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,202,153,0.85)';
ctx.strokeStyle='rgb(201,242,8)';
ctx.moveTo(15478,19288);
ctx.lineTo(15478,19252);
ctx.lineTo(15514,19252);
ctx.lineTo(15514,19288);
ctx.lineTo(15478,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,10,43,0.85)';
ctx.strokeStyle='rgb(36,216,174)';
ctx.moveTo(15574,19480);
ctx.lineTo(15574,19444);
ctx.lineTo(15610,19444);
ctx.lineTo(15610,19480);
ctx.lineTo(15574,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,35,106,0.85)';
ctx.strokeStyle='rgb(48,197,4)';
ctx.moveTo(15574,19384);
ctx.lineTo(15574,19348);
ctx.lineTo(15610,19348);
ctx.lineTo(15610,19384);
ctx.lineTo(15574,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,94,158,0.85)';
ctx.strokeStyle='rgb(191,83,141)';
ctx.moveTo(15574,19288);
ctx.lineTo(15574,19252);
ctx.lineTo(15610,19252);
ctx.lineTo(15610,19288);
ctx.lineTo(15574,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,155,12,0.85)';
ctx.strokeStyle='rgb(53,232,140)';
ctx.moveTo(15670,19480);
ctx.lineTo(15670,19444);
ctx.lineTo(15706,19444);
ctx.lineTo(15706,19480);
ctx.lineTo(15670,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,242,242,0.85)';
ctx.strokeStyle='rgb(84,79,192)';
ctx.moveTo(15670,19384);
ctx.lineTo(15670,19348);
ctx.lineTo(15706,19348);
ctx.lineTo(15706,19384);
ctx.lineTo(15670,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,178,57,0.85)';
ctx.strokeStyle='rgb(144,42,49)';
ctx.moveTo(15670,19288);
ctx.lineTo(15670,19252);
ctx.lineTo(15706,19252);
ctx.lineTo(15706,19288);
ctx.lineTo(15670,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,217,115,0.85)';
ctx.strokeStyle='rgb(173,65,0)';
ctx.moveTo(15766,19480);
ctx.lineTo(15766,19444);
ctx.lineTo(15802,19444);
ctx.lineTo(15802,19480);
ctx.lineTo(15766,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,100,14,0.85)';
ctx.strokeStyle='rgb(245,102,210)';
ctx.moveTo(15766,19384);
ctx.lineTo(15766,19348);
ctx.lineTo(15802,19348);
ctx.lineTo(15802,19384);
ctx.lineTo(15766,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,53,113,0.85)';
ctx.strokeStyle='rgb(42,146,10)';
ctx.moveTo(15766,19288);
ctx.lineTo(15766,19252);
ctx.lineTo(15802,19252);
ctx.lineTo(15802,19288);
ctx.lineTo(15766,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,54,155,0.85)';
ctx.strokeStyle='rgb(8,157,235)';
ctx.moveTo(15862,19480);
ctx.lineTo(15862,19444);
ctx.lineTo(15898,19444);
ctx.lineTo(15898,19480);
ctx.lineTo(15862,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,151,196,0.85)';
ctx.strokeStyle='rgb(64,199,37)';
ctx.moveTo(15862,19384);
ctx.lineTo(15862,19348);
ctx.lineTo(15898,19348);
ctx.lineTo(15898,19384);
ctx.lineTo(15862,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,175,23,0.85)';
ctx.strokeStyle='rgb(154,7,11)';
ctx.moveTo(15862,19288);
ctx.lineTo(15862,19252);
ctx.lineTo(15898,19252);
ctx.lineTo(15898,19288);
ctx.lineTo(15862,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,154,37,0.85)';
ctx.strokeStyle='rgb(116,34,239)';
ctx.moveTo(15958,19480);
ctx.lineTo(15958,19444);
ctx.lineTo(15994,19444);
ctx.lineTo(15994,19480);
ctx.lineTo(15958,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,102,58,0.85)';
ctx.strokeStyle='rgb(220,0,219)';
ctx.moveTo(15958,19384);
ctx.lineTo(15958,19348);
ctx.lineTo(15994,19348);
ctx.lineTo(15994,19384);
ctx.lineTo(15958,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,213,84,0.85)';
ctx.strokeStyle='rgb(59,92,166)';
ctx.moveTo(15958,19288);
ctx.lineTo(15958,19252);
ctx.lineTo(15994,19252);
ctx.lineTo(15994,19288);
ctx.lineTo(15958,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,157,205,0.85)';
ctx.strokeStyle='rgb(73,30,11)';
ctx.moveTo(16054,19480);
ctx.lineTo(16054,19444);
ctx.lineTo(16090,19444);
ctx.lineTo(16090,19480);
ctx.lineTo(16054,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,252,57,0.85)';
ctx.strokeStyle='rgb(222,58,70)';
ctx.moveTo(16054,19384);
ctx.lineTo(16054,19348);
ctx.lineTo(16090,19348);
ctx.lineTo(16090,19384);
ctx.lineTo(16054,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,104,57,0.85)';
ctx.strokeStyle='rgb(167,152,196)';
ctx.moveTo(16054,19288);
ctx.lineTo(16054,19252);
ctx.lineTo(16090,19252);
ctx.lineTo(16090,19288);
ctx.lineTo(16054,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,156,154,0.85)';
ctx.strokeStyle='rgb(130,42,249)';
ctx.moveTo(16150,19480);
ctx.lineTo(16150,19444);
ctx.lineTo(16186,19444);
ctx.lineTo(16186,19480);
ctx.lineTo(16150,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,225,201,0.85)';
ctx.strokeStyle='rgb(125,227,99)';
ctx.moveTo(16150,19384);
ctx.lineTo(16150,19348);
ctx.lineTo(16186,19348);
ctx.lineTo(16186,19384);
ctx.lineTo(16150,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,94,206,0.85)';
ctx.strokeStyle='rgb(48,241,59)';
ctx.moveTo(16150,19288);
ctx.lineTo(16150,19252);
ctx.lineTo(16186,19252);
ctx.lineTo(16186,19288);
ctx.lineTo(16150,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,6,189,0.85)';
ctx.strokeStyle='rgb(167,233,172)';
ctx.moveTo(16246,19480);
ctx.lineTo(16246,19444);
ctx.lineTo(16282,19444);
ctx.lineTo(16282,19480);
ctx.lineTo(16246,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,232,31,0.85)';
ctx.strokeStyle='rgb(172,77,21)';
ctx.moveTo(16246,19384);
ctx.lineTo(16246,19348);
ctx.lineTo(16282,19348);
ctx.lineTo(16282,19384);
ctx.lineTo(16246,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,180,26,0.85)';
ctx.strokeStyle='rgb(196,44,224)';
ctx.moveTo(16246,19288);
ctx.lineTo(16246,19252);
ctx.lineTo(16282,19252);
ctx.lineTo(16282,19288);
ctx.lineTo(16246,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,126,168,0.85)';
ctx.strokeStyle='rgb(223,232,143)';
ctx.moveTo(16342,19480);
ctx.lineTo(16342,19444);
ctx.lineTo(16378,19444);
ctx.lineTo(16378,19480);
ctx.lineTo(16342,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,247,128,0.85)';
ctx.strokeStyle='rgb(59,17,150)';
ctx.moveTo(16342,19384);
ctx.lineTo(16342,19348);
ctx.lineTo(16378,19348);
ctx.lineTo(16378,19384);
ctx.lineTo(16342,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,208,184,0.85)';
ctx.strokeStyle='rgb(189,71,194)';
ctx.moveTo(16342,19288);
ctx.lineTo(16342,19252);
ctx.lineTo(16378,19252);
ctx.lineTo(16378,19288);
ctx.lineTo(16342,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,47,206,0.85)';
ctx.strokeStyle='rgb(58,181,4)';
ctx.moveTo(16438,19480);
ctx.lineTo(16438,19444);
ctx.lineTo(16474,19444);
ctx.lineTo(16474,19480);
ctx.lineTo(16438,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,40,154,0.85)';
ctx.strokeStyle='rgb(248,202,34)';
ctx.moveTo(16438,19384);
ctx.lineTo(16438,19348);
ctx.lineTo(16474,19348);
ctx.lineTo(16474,19384);
ctx.lineTo(16438,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,164,88,0.85)';
ctx.strokeStyle='rgb(33,48,78)';
ctx.moveTo(16438,19288);
ctx.lineTo(16438,19252);
ctx.lineTo(16474,19252);
ctx.lineTo(16474,19288);
ctx.lineTo(16438,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,165,173,0.85)';
ctx.strokeStyle='rgb(79,236,211)';
ctx.moveTo(18376,18628);
ctx.lineTo(18376,18592);
ctx.lineTo(18412,18592);
ctx.lineTo(18412,18628);
ctx.lineTo(18376,18628);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,68,119,0.85)';
ctx.strokeStyle='rgb(163,165,133)';
ctx.moveTo(17512,18736);
ctx.lineTo(17512,18700);
ctx.lineTo(17548,18700);
ctx.lineTo(17548,18736);
ctx.lineTo(17512,18736);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,139,205,0.85)';
ctx.strokeStyle='rgb(201,64,204)';
ctx.moveTo(17296,18844);
ctx.lineTo(17296,18808);
ctx.lineTo(17332,18808);
ctx.lineTo(17332,18844);
ctx.lineTo(17296,18844);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,82,189,0.85)';
ctx.strokeStyle='rgb(96,79,169)';
ctx.moveTo(18160,18520);
ctx.lineTo(18160,18484);
ctx.lineTo(18196,18484);
ctx.lineTo(18196,18520);
ctx.lineTo(18160,18520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,94,210,0.85)';
ctx.strokeStyle='rgb(139,250,235)';
ctx.moveTo(18484,19060);
ctx.lineTo(18484,19024);
ctx.lineTo(18520,19024);
ctx.lineTo(18520,19060);
ctx.lineTo(18484,19060);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,240,133,0.85)';
ctx.strokeStyle='rgb(197,13,50)';
ctx.moveTo(17080,17440);
ctx.lineTo(17080,17404);
ctx.lineTo(17116,17404);
ctx.lineTo(17116,17440);
ctx.lineTo(17080,17440);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,4,184,0.85)';
ctx.strokeStyle='rgb(244,109,113)';
ctx.moveTo(17404,18520);
ctx.lineTo(17404,18484);
ctx.lineTo(17440,18484);
ctx.lineTo(17440,18520);
ctx.lineTo(17404,18520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,44,5,0.85)';
ctx.strokeStyle='rgb(52,107,51)';
ctx.moveTo(17404,17224);
ctx.lineTo(17404,17188);
ctx.lineTo(17440,17188);
ctx.lineTo(17440,17224);
ctx.lineTo(17404,17224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,80,130,0.85)';
ctx.strokeStyle='rgb(165,235,73)';
ctx.moveTo(16864,20248);
ctx.lineTo(16864,20212);
ctx.lineTo(16900,20212);
ctx.lineTo(16900,20248);
ctx.lineTo(16864,20248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,199,3,0.85)';
ctx.strokeStyle='rgb(31,101,187)';
ctx.moveTo(17188,20140);
ctx.lineTo(17188,20104);
ctx.lineTo(17224,20104);
ctx.lineTo(17224,20140);
ctx.lineTo(17188,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,178,38,0.85)';
ctx.strokeStyle='rgb(176,70,120)';
ctx.moveTo(17080,20356);
ctx.lineTo(17080,20320);
ctx.lineTo(17116,20320);
ctx.lineTo(17116,20356);
ctx.lineTo(17080,20356);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,147,237,0.85)';
ctx.strokeStyle='rgb(73,128,170)';
ctx.moveTo(17728,20248);
ctx.lineTo(17728,20212);
ctx.lineTo(17764,20212);
ctx.lineTo(17764,20248);
ctx.lineTo(17728,20248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,125,124,0.85)';
ctx.strokeStyle='rgb(29,115,142)';
ctx.moveTo(17404,20140);
ctx.lineTo(17404,20104);
ctx.lineTo(17440,20104);
ctx.lineTo(17440,20140);
ctx.lineTo(17404,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,132,69,0.85)';
ctx.strokeStyle='rgb(32,234,109)';
ctx.moveTo(14374,17872);
ctx.lineTo(14374,17836);
ctx.lineTo(14410,17836);
ctx.lineTo(14410,17872);
ctx.lineTo(14374,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,244,4,0.85)';
ctx.strokeStyle='rgb(174,36,38)';
ctx.moveTo(14374,17776);
ctx.lineTo(14374,17740);
ctx.lineTo(14410,17740);
ctx.lineTo(14410,17776);
ctx.lineTo(14374,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,11,152,0.85)';
ctx.strokeStyle='rgb(43,143,63)';
ctx.moveTo(14470,17968);
ctx.lineTo(14470,17932);
ctx.lineTo(14506,17932);
ctx.lineTo(14506,17968);
ctx.lineTo(14470,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,189,205,0.85)';
ctx.strokeStyle='rgb(91,245,208)';
ctx.moveTo(14470,17872);
ctx.lineTo(14470,17836);
ctx.lineTo(14506,17836);
ctx.lineTo(14506,17872);
ctx.lineTo(14470,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,161,3,0.85)';
ctx.strokeStyle='rgb(123,72,64)';
ctx.moveTo(14470,17776);
ctx.lineTo(14470,17740);
ctx.lineTo(14506,17740);
ctx.lineTo(14506,17776);
ctx.lineTo(14470,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,88,21,0.85)';
ctx.strokeStyle='rgb(9,35,183)';
ctx.moveTo(14566,17968);
ctx.lineTo(14566,17932);
ctx.lineTo(14602,17932);
ctx.lineTo(14602,17968);
ctx.lineTo(14566,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,227,248,0.85)';
ctx.strokeStyle='rgb(103,132,169)';
ctx.moveTo(14566,17872);
ctx.lineTo(14566,17836);
ctx.lineTo(14602,17836);
ctx.lineTo(14602,17872);
ctx.lineTo(14566,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,103,22,0.85)';
ctx.strokeStyle='rgb(3,174,6)';
ctx.moveTo(14566,17776);
ctx.lineTo(14566,17740);
ctx.lineTo(14602,17740);
ctx.lineTo(14602,17776);
ctx.lineTo(14566,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,134,138,0.85)';
ctx.strokeStyle='rgb(107,236,79)';
ctx.moveTo(14662,17968);
ctx.lineTo(14662,17932);
ctx.lineTo(14698,17932);
ctx.lineTo(14698,17968);
ctx.lineTo(14662,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,97,215,0.85)';
ctx.strokeStyle='rgb(73,87,49)';
ctx.moveTo(14662,17872);
ctx.lineTo(14662,17836);
ctx.lineTo(14698,17836);
ctx.lineTo(14698,17872);
ctx.lineTo(14662,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,75,95,0.85)';
ctx.strokeStyle='rgb(122,224,205)';
ctx.moveTo(14662,17776);
ctx.lineTo(14662,17740);
ctx.lineTo(14698,17740);
ctx.lineTo(14698,17776);
ctx.lineTo(14662,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,182,164,0.85)';
ctx.strokeStyle='rgb(185,153,98)';
ctx.moveTo(14662,20992);
ctx.lineTo(14662,20956);
ctx.lineTo(14698,20956);
ctx.lineTo(14698,20992);
ctx.lineTo(14662,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,140,234,0.85)';
ctx.strokeStyle='rgb(16,75,0)';
ctx.moveTo(14662,20896);
ctx.lineTo(14662,20860);
ctx.lineTo(14698,20860);
ctx.lineTo(14698,20896);
ctx.lineTo(14662,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,42,4,0.85)';
ctx.strokeStyle='rgb(20,247,249)';
ctx.moveTo(14662,20800);
ctx.lineTo(14662,20764);
ctx.lineTo(14698,20764);
ctx.lineTo(14698,20800);
ctx.lineTo(14662,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,134,16,0.85)';
ctx.strokeStyle='rgb(110,152,64)';
ctx.moveTo(14182,20992);
ctx.lineTo(14182,20956);
ctx.lineTo(14218,20956);
ctx.lineTo(14218,20992);
ctx.lineTo(14182,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,134,160,0.85)';
ctx.strokeStyle='rgb(84,68,225)';
ctx.moveTo(14182,20896);
ctx.lineTo(14182,20860);
ctx.lineTo(14218,20860);
ctx.lineTo(14218,20896);
ctx.lineTo(14182,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,234,36,0.85)';
ctx.strokeStyle='rgb(159,169,70)';
ctx.moveTo(14182,20800);
ctx.lineTo(14182,20764);
ctx.lineTo(14218,20764);
ctx.lineTo(14218,20800);
ctx.lineTo(14182,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,4,111,0.85)';
ctx.strokeStyle='rgb(124,96,134)';
ctx.moveTo(14278,20992);
ctx.lineTo(14278,20956);
ctx.lineTo(14314,20956);
ctx.lineTo(14314,20992);
ctx.lineTo(14278,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,33,178,0.85)';
ctx.strokeStyle='rgb(221,158,185)';
ctx.moveTo(14278,20896);
ctx.lineTo(14278,20860);
ctx.lineTo(14314,20860);
ctx.lineTo(14314,20896);
ctx.lineTo(14278,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,139,56,0.85)';
ctx.strokeStyle='rgb(193,78,49)';
ctx.moveTo(14278,20800);
ctx.lineTo(14278,20764);
ctx.lineTo(14314,20764);
ctx.lineTo(14314,20800);
ctx.lineTo(14278,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,28,181,0.85)';
ctx.strokeStyle='rgb(143,65,230)';
ctx.moveTo(14374,20992);
ctx.lineTo(14374,20956);
ctx.lineTo(14410,20956);
ctx.lineTo(14410,20992);
ctx.lineTo(14374,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,106,41,0.85)';
ctx.strokeStyle='rgb(150,48,142)';
ctx.moveTo(14374,20896);
ctx.lineTo(14374,20860);
ctx.lineTo(14410,20860);
ctx.lineTo(14410,20896);
ctx.lineTo(14374,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,221,112,0.85)';
ctx.strokeStyle='rgb(163,187,112)';
ctx.moveTo(14374,20800);
ctx.lineTo(14374,20764);
ctx.lineTo(14410,20764);
ctx.lineTo(14410,20800);
ctx.lineTo(14374,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,68,117,0.85)';
ctx.strokeStyle='rgb(250,90,0)';
ctx.moveTo(14470,20992);
ctx.lineTo(14470,20956);
ctx.lineTo(14506,20956);
ctx.lineTo(14506,20992);
ctx.lineTo(14470,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,99,72,0.85)';
ctx.strokeStyle='rgb(22,25,73)';
ctx.moveTo(14470,20896);
ctx.lineTo(14470,20860);
ctx.lineTo(14506,20860);
ctx.lineTo(14506,20896);
ctx.lineTo(14470,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,83,183,0.85)';
ctx.strokeStyle='rgb(20,147,190)';
ctx.moveTo(14470,20800);
ctx.lineTo(14470,20764);
ctx.lineTo(14506,20764);
ctx.lineTo(14506,20800);
ctx.lineTo(14470,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,210,136,0.85)';
ctx.strokeStyle='rgb(89,72,213)';
ctx.moveTo(14566,20992);
ctx.lineTo(14566,20956);
ctx.lineTo(14602,20956);
ctx.lineTo(14602,20992);
ctx.lineTo(14566,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,75,56,0.85)';
ctx.strokeStyle='rgb(16,164,14)';
ctx.moveTo(14566,20896);
ctx.lineTo(14566,20860);
ctx.lineTo(14602,20860);
ctx.lineTo(14602,20896);
ctx.lineTo(14566,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,70,155,0.85)';
ctx.strokeStyle='rgb(194,191,84)';
ctx.moveTo(14566,20800);
ctx.lineTo(14566,20764);
ctx.lineTo(14602,20764);
ctx.lineTo(14602,20800);
ctx.lineTo(14566,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,35,181,0.85)';
ctx.strokeStyle='rgb(203,19,218)';
ctx.moveTo(14182,17968);
ctx.lineTo(14182,17932);
ctx.lineTo(14218,17932);
ctx.lineTo(14218,17968);
ctx.lineTo(14182,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,231,184,0.85)';
ctx.strokeStyle='rgb(158,42,135)';
ctx.moveTo(14182,17872);
ctx.lineTo(14182,17836);
ctx.lineTo(14218,17836);
ctx.lineTo(14218,17872);
ctx.lineTo(14182,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,227,20,0.85)';
ctx.strokeStyle='rgb(20,22,186)';
ctx.moveTo(14182,17776);
ctx.lineTo(14182,17740);
ctx.lineTo(14218,17740);
ctx.lineTo(14218,17776);
ctx.lineTo(14182,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,118,94,0.85)';
ctx.strokeStyle='rgb(251,35,147)';
ctx.moveTo(14278,17968);
ctx.lineTo(14278,17932);
ctx.lineTo(14314,17932);
ctx.lineTo(14314,17968);
ctx.lineTo(14278,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,61,34,0.85)';
ctx.strokeStyle='rgb(103,225,176)';
ctx.moveTo(14278,17872);
ctx.lineTo(14278,17836);
ctx.lineTo(14314,17836);
ctx.lineTo(14314,17872);
ctx.lineTo(14278,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,182,220,0.85)';
ctx.strokeStyle='rgb(236,118,160)';
ctx.moveTo(14278,17776);
ctx.lineTo(14278,17740);
ctx.lineTo(14314,17740);
ctx.lineTo(14314,17776);
ctx.lineTo(14278,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,88,62,0.85)';
ctx.strokeStyle='rgb(237,109,173)';
ctx.moveTo(14374,17968);
ctx.lineTo(14374,17932);
ctx.lineTo(14410,17932);
ctx.lineTo(14410,17968);
ctx.lineTo(14374,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,187,211,0.85)';
ctx.strokeStyle='rgb(154,88,122)';
ctx.moveTo(12976,18520);
ctx.lineTo(12976,18484);
ctx.lineTo(13012,18484);
ctx.lineTo(13012,18520);
ctx.lineTo(12976,18520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,121,171,0.85)';
ctx.strokeStyle='rgb(17,226,185)';
ctx.moveTo(10600,20140);
ctx.lineTo(10600,20104);
ctx.lineTo(10636,20104);
ctx.lineTo(10636,20140);
ctx.lineTo(10600,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,117,63,0.85)';
ctx.strokeStyle='rgb(137,123,8)';
ctx.moveTo(13408,20248);
ctx.lineTo(13408,20212);
ctx.lineTo(13444,20212);
ctx.lineTo(13444,20248);
ctx.lineTo(13408,20248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,205,83,0.85)';
ctx.strokeStyle='rgb(39,173,21)';
ctx.moveTo(13084,20032);
ctx.lineTo(13084,19996);
ctx.lineTo(13120,19996);
ctx.lineTo(13120,20032);
ctx.lineTo(13084,20032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,239,149,0.85)';
ctx.strokeStyle='rgb(217,214,241)';
ctx.moveTo(12976,19708);
ctx.lineTo(12976,19672);
ctx.lineTo(13012,19672);
ctx.lineTo(13012,19708);
ctx.lineTo(12976,19708);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,219,254,0.85)';
ctx.strokeStyle='rgb(72,202,58)';
ctx.moveTo(13516,20356);
ctx.lineTo(13516,20320);
ctx.lineTo(13552,20320);
ctx.lineTo(13552,20356);
ctx.lineTo(13516,20356);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,129,208,0.85)';
ctx.strokeStyle='rgb(29,135,191)';
ctx.moveTo(13948,20140);
ctx.lineTo(13948,20104);
ctx.lineTo(13984,20104);
ctx.lineTo(13984,20140);
ctx.lineTo(13948,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,226,106,0.85)';
ctx.strokeStyle='rgb(103,86,10)';
ctx.moveTo(13948,23164);
ctx.lineTo(13948,23128);
ctx.lineTo(13984,23128);
ctx.lineTo(13984,23164);
ctx.lineTo(13948,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,229,82,0.85)';
ctx.strokeStyle='rgb(200,224,115)';
ctx.moveTo(13192,23272);
ctx.lineTo(13192,23236);
ctx.lineTo(13228,23236);
ctx.lineTo(13228,23272);
ctx.lineTo(13192,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,81,125,0.85)';
ctx.strokeStyle='rgb(89,179,157)';
ctx.moveTo(13408,22084);
ctx.lineTo(13408,22048);
ctx.lineTo(13444,22048);
ctx.lineTo(13444,22084);
ctx.lineTo(13408,22084);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,142,55,0.85)';
ctx.strokeStyle='rgb(70,87,152)';
ctx.moveTo(12328,23056);
ctx.lineTo(12328,23020);
ctx.lineTo(12364,23020);
ctx.lineTo(12364,23056);
ctx.lineTo(12328,23056);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,109,119,0.85)';
ctx.strokeStyle='rgb(73,225,244)';
ctx.moveTo(13408,24676);
ctx.lineTo(13408,24640);
ctx.lineTo(13444,24640);
ctx.lineTo(13444,24676);
ctx.lineTo(13408,24676);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,134,174,0.85)';
ctx.strokeStyle='rgb(42,34,178)';
ctx.moveTo(12976,23164);
ctx.lineTo(12976,23128);
ctx.lineTo(13012,23128);
ctx.lineTo(13012,23164);
ctx.lineTo(12976,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,122,40,0.85)';
ctx.strokeStyle='rgb(8,109,205)';
ctx.moveTo(13732,23164);
ctx.lineTo(13732,23128);
ctx.lineTo(13768,23128);
ctx.lineTo(13768,23164);
ctx.lineTo(13732,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,115,4,0.85)';
ctx.strokeStyle='rgb(178,70,74)';
ctx.moveTo(13084,21652);
ctx.lineTo(13084,21616);
ctx.lineTo(13120,21616);
ctx.lineTo(13120,21652);
ctx.lineTo(13084,21652);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,99,100,0.85)';
ctx.strokeStyle='rgb(6,247,56)';
ctx.moveTo(13516,23272);
ctx.lineTo(13516,23236);
ctx.lineTo(13552,23236);
ctx.lineTo(13552,23272);
ctx.lineTo(13516,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,0,226,0.85)';
ctx.strokeStyle='rgb(135,211,211)';
ctx.moveTo(14182,24016);
ctx.lineTo(14182,23980);
ctx.lineTo(14218,23980);
ctx.lineTo(14218,24016);
ctx.lineTo(14182,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,70,24,0.85)';
ctx.strokeStyle='rgb(153,233,174)';
ctx.moveTo(14182,23920);
ctx.lineTo(14182,23884);
ctx.lineTo(14218,23884);
ctx.lineTo(14218,23920);
ctx.lineTo(14182,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,240,73,0.85)';
ctx.strokeStyle='rgb(24,141,240)';
ctx.moveTo(14182,23824);
ctx.lineTo(14182,23788);
ctx.lineTo(14218,23788);
ctx.lineTo(14218,23824);
ctx.lineTo(14182,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,243,33,0.85)';
ctx.strokeStyle='rgb(22,238,82)';
ctx.moveTo(14278,24016);
ctx.lineTo(14278,23980);
ctx.lineTo(14314,23980);
ctx.lineTo(14314,24016);
ctx.lineTo(14278,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,196,132,0.85)';
ctx.strokeStyle='rgb(246,199,200)';
ctx.moveTo(14278,23920);
ctx.lineTo(14278,23884);
ctx.lineTo(14314,23884);
ctx.lineTo(14314,23920);
ctx.lineTo(14278,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,120,172,0.85)';
ctx.strokeStyle='rgb(243,20,130)';
ctx.moveTo(14278,23824);
ctx.lineTo(14278,23788);
ctx.lineTo(14314,23788);
ctx.lineTo(14314,23824);
ctx.lineTo(14278,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,110,82,0.85)';
ctx.strokeStyle='rgb(200,47,251)';
ctx.moveTo(14374,24016);
ctx.lineTo(14374,23980);
ctx.lineTo(14410,23980);
ctx.lineTo(14410,24016);
ctx.lineTo(14374,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,239,26,0.85)';
ctx.strokeStyle='rgb(235,152,171)';
ctx.moveTo(14374,23920);
ctx.lineTo(14374,23884);
ctx.lineTo(14410,23884);
ctx.lineTo(14410,23920);
ctx.lineTo(14374,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,53,147,0.85)';
ctx.strokeStyle='rgb(236,189,245)';
ctx.moveTo(14374,23824);
ctx.lineTo(14374,23788);
ctx.lineTo(14410,23788);
ctx.lineTo(14410,23824);
ctx.lineTo(14374,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,174,223,0.85)';
ctx.strokeStyle='rgb(64,164,2)';
ctx.moveTo(14470,24016);
ctx.lineTo(14470,23980);
ctx.lineTo(14506,23980);
ctx.lineTo(14506,24016);
ctx.lineTo(14470,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,90,219,0.85)';
ctx.strokeStyle='rgb(226,20,152)';
ctx.moveTo(14470,23920);
ctx.lineTo(14470,23884);
ctx.lineTo(14506,23884);
ctx.lineTo(14506,23920);
ctx.lineTo(14470,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,72,79,0.85)';
ctx.strokeStyle='rgb(86,180,184)';
ctx.moveTo(14470,23824);
ctx.lineTo(14470,23788);
ctx.lineTo(14506,23788);
ctx.lineTo(14506,23824);
ctx.lineTo(14470,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,174,97,0.85)';
ctx.strokeStyle='rgb(12,16,137)';
ctx.moveTo(14566,24016);
ctx.lineTo(14566,23980);
ctx.lineTo(14602,23980);
ctx.lineTo(14602,24016);
ctx.lineTo(14566,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,91,228,0.85)';
ctx.strokeStyle='rgb(221,234,150)';
ctx.moveTo(14566,23920);
ctx.lineTo(14566,23884);
ctx.lineTo(14602,23884);
ctx.lineTo(14602,23920);
ctx.lineTo(14566,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,37,152,0.85)';
ctx.strokeStyle='rgb(60,127,144)';
ctx.moveTo(14566,23824);
ctx.lineTo(14566,23788);
ctx.lineTo(14602,23788);
ctx.lineTo(14602,23824);
ctx.lineTo(14566,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,213,177,0.85)';
ctx.strokeStyle='rgb(8,127,115)';
ctx.moveTo(14662,24016);
ctx.lineTo(14662,23980);
ctx.lineTo(14698,23980);
ctx.lineTo(14698,24016);
ctx.lineTo(14662,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,144,254,0.85)';
ctx.strokeStyle='rgb(225,252,180)';
ctx.moveTo(14662,23920);
ctx.lineTo(14662,23884);
ctx.lineTo(14698,23884);
ctx.lineTo(14698,23920);
ctx.lineTo(14662,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,8,72,0.85)';
ctx.strokeStyle='rgb(213,78,253)';
ctx.moveTo(14662,23824);
ctx.lineTo(14662,23788);
ctx.lineTo(14698,23788);
ctx.lineTo(14698,23824);
ctx.lineTo(14662,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,6,184,0.85)';
ctx.strokeStyle='rgb(120,248,1)';
ctx.moveTo(15862,25432);
ctx.lineTo(15862,25396);
ctx.lineTo(15898,25396);
ctx.lineTo(15898,25432);
ctx.lineTo(15862,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,97,120,0.85)';
ctx.strokeStyle='rgb(191,101,249)';
ctx.moveTo(15862,25336);
ctx.lineTo(15862,25300);
ctx.lineTo(15898,25300);
ctx.lineTo(15898,25336);
ctx.lineTo(15862,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,18,50,0.85)';
ctx.strokeStyle='rgb(153,81,245)';
ctx.moveTo(18592,24244);
ctx.lineTo(18592,24208);
ctx.lineTo(18628,24208);
ctx.lineTo(18628,24244);
ctx.lineTo(18592,24244);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,211,132,0.85)';
ctx.strokeStyle='rgb(110,248,127)';
ctx.moveTo(15958,25432);
ctx.lineTo(15958,25396);
ctx.lineTo(15994,25396);
ctx.lineTo(15994,25432);
ctx.lineTo(15958,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,77,136,0.85)';
ctx.strokeStyle='rgb(121,232,183)';
ctx.moveTo(15958,25336);
ctx.lineTo(15958,25300);
ctx.lineTo(15994,25300);
ctx.lineTo(15994,25336);
ctx.lineTo(15958,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,213,101,0.85)';
ctx.strokeStyle='rgb(21,183,25)';
ctx.moveTo(15478,25432);
ctx.lineTo(15478,25396);
ctx.lineTo(15514,25396);
ctx.lineTo(15514,25432);
ctx.lineTo(15478,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,213,77,0.85)';
ctx.strokeStyle='rgb(162,183,251)';
ctx.moveTo(16054,25432);
ctx.lineTo(16054,25396);
ctx.lineTo(16090,25396);
ctx.lineTo(16090,25432);
ctx.lineTo(16054,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,216,207,0.85)';
ctx.strokeStyle='rgb(13,68,35)';
ctx.moveTo(16054,25336);
ctx.lineTo(16054,25300);
ctx.lineTo(16090,25300);
ctx.lineTo(16090,25336);
ctx.lineTo(16054,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,71,195,0.85)';
ctx.strokeStyle='rgb(50,45,2)';
ctx.moveTo(15478,25336);
ctx.lineTo(15478,25300);
ctx.lineTo(15514,25300);
ctx.lineTo(15514,25336);
ctx.lineTo(15478,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,2,68,0.85)';
ctx.strokeStyle='rgb(148,119,247)';
ctx.moveTo(16150,25432);
ctx.lineTo(16150,25396);
ctx.lineTo(16186,25396);
ctx.lineTo(16186,25432);
ctx.lineTo(16150,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,167,44,0.85)';
ctx.strokeStyle='rgb(202,10,72)';
ctx.moveTo(16150,25336);
ctx.lineTo(16150,25300);
ctx.lineTo(16186,25300);
ctx.lineTo(16186,25336);
ctx.lineTo(16150,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,123,195,0.85)';
ctx.strokeStyle='rgb(52,249,170)';
ctx.moveTo(18376,24676);
ctx.lineTo(18376,24640);
ctx.lineTo(18412,24640);
ctx.lineTo(18412,24676);
ctx.lineTo(18376,24676);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,66,106,0.85)';
ctx.strokeStyle='rgb(143,29,197)';
ctx.moveTo(16246,25432);
ctx.lineTo(16246,25396);
ctx.lineTo(16282,25396);
ctx.lineTo(16282,25432);
ctx.lineTo(16246,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,3,124,0.85)';
ctx.strokeStyle='rgb(156,178,188)';
ctx.moveTo(16246,25336);
ctx.lineTo(16246,25300);
ctx.lineTo(16282,25300);
ctx.lineTo(16282,25336);
ctx.lineTo(16246,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,13,46,0.85)';
ctx.strokeStyle='rgb(241,218,193)';
ctx.moveTo(15574,25432);
ctx.lineTo(15574,25396);
ctx.lineTo(15610,25396);
ctx.lineTo(15610,25432);
ctx.lineTo(15574,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,219,204,0.85)';
ctx.strokeStyle='rgb(72,180,167)';
ctx.moveTo(16342,25432);
ctx.lineTo(16342,25396);
ctx.lineTo(16378,25396);
ctx.lineTo(16378,25432);
ctx.lineTo(16342,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,28,39,0.85)';
ctx.strokeStyle='rgb(185,16,242)';
ctx.moveTo(16342,25336);
ctx.lineTo(16342,25300);
ctx.lineTo(16378,25300);
ctx.lineTo(16378,25336);
ctx.lineTo(16342,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,49,109,0.85)';
ctx.strokeStyle='rgb(88,22,126)';
ctx.moveTo(15574,25336);
ctx.lineTo(15574,25300);
ctx.lineTo(15610,25300);
ctx.lineTo(15610,25336);
ctx.lineTo(15574,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,247,66,0.85)';
ctx.strokeStyle='rgb(116,159,10)';
ctx.moveTo(16438,25432);
ctx.lineTo(16438,25396);
ctx.lineTo(16474,25396);
ctx.lineTo(16474,25432);
ctx.lineTo(16438,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,34,237,0.85)';
ctx.strokeStyle='rgb(213,191,130)';
ctx.moveTo(16438,25336);
ctx.lineTo(16438,25300);
ctx.lineTo(16474,25300);
ctx.lineTo(16474,25336);
ctx.lineTo(16438,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,154,90,0.85)';
ctx.strokeStyle='rgb(48,109,63)';
ctx.moveTo(15478,22504);
ctx.lineTo(15478,22468);
ctx.lineTo(15514,22468);
ctx.lineTo(15514,22504);
ctx.lineTo(15478,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,199,21,0.85)';
ctx.strokeStyle='rgb(186,41,109)';
ctx.moveTo(15478,22408);
ctx.lineTo(15478,22372);
ctx.lineTo(15514,22372);
ctx.lineTo(15514,22408);
ctx.lineTo(15478,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,34,145,0.85)';
ctx.strokeStyle='rgb(99,92,17)';
ctx.moveTo(15478,22312);
ctx.lineTo(15478,22276);
ctx.lineTo(15514,22276);
ctx.lineTo(15514,22312);
ctx.lineTo(15478,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,184,85,0.85)';
ctx.strokeStyle='rgb(218,100,203)';
ctx.moveTo(15574,22504);
ctx.lineTo(15574,22468);
ctx.lineTo(15610,22468);
ctx.lineTo(15610,22504);
ctx.lineTo(15574,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,196,174,0.85)';
ctx.strokeStyle='rgb(18,217,99)';
ctx.moveTo(15574,22408);
ctx.lineTo(15574,22372);
ctx.lineTo(15610,22372);
ctx.lineTo(15610,22408);
ctx.lineTo(15574,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,7,117,0.85)';
ctx.strokeStyle='rgb(173,122,184)';
ctx.moveTo(15574,22312);
ctx.lineTo(15574,22276);
ctx.lineTo(15610,22276);
ctx.lineTo(15610,22312);
ctx.lineTo(15574,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,232,73,0.85)';
ctx.strokeStyle='rgb(150,4,25)';
ctx.moveTo(15670,22504);
ctx.lineTo(15670,22468);
ctx.lineTo(15706,22468);
ctx.lineTo(15706,22504);
ctx.lineTo(15670,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,90,205,0.85)';
ctx.strokeStyle='rgb(24,198,27)';
ctx.moveTo(15670,22408);
ctx.lineTo(15670,22372);
ctx.lineTo(15706,22372);
ctx.lineTo(15706,22408);
ctx.lineTo(15670,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,240,70,0.85)';
ctx.strokeStyle='rgb(28,94,239)';
ctx.moveTo(15670,22312);
ctx.lineTo(15670,22276);
ctx.lineTo(15706,22276);
ctx.lineTo(15706,22312);
ctx.lineTo(15670,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,13,155,0.85)';
ctx.strokeStyle='rgb(206,64,151)';
ctx.moveTo(15766,22504);
ctx.lineTo(15766,22468);
ctx.lineTo(15802,22468);
ctx.lineTo(15802,22504);
ctx.lineTo(15766,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,8,45,0.85)';
ctx.strokeStyle='rgb(40,178,46)';
ctx.moveTo(15766,22408);
ctx.lineTo(15766,22372);
ctx.lineTo(15802,22372);
ctx.lineTo(15802,22408);
ctx.lineTo(15766,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,139,201,0.85)';
ctx.strokeStyle='rgb(220,207,175)';
ctx.moveTo(15766,22312);
ctx.lineTo(15766,22276);
ctx.lineTo(15802,22276);
ctx.lineTo(15802,22312);
ctx.lineTo(15766,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,50,66,0.85)';
ctx.strokeStyle='rgb(55,199,164)';
ctx.moveTo(15862,22504);
ctx.lineTo(15862,22468);
ctx.lineTo(15898,22468);
ctx.lineTo(15898,22504);
ctx.lineTo(15862,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,66,51,0.85)';
ctx.strokeStyle='rgb(143,246,139)';
ctx.moveTo(15862,22408);
ctx.lineTo(15862,22372);
ctx.lineTo(15898,22372);
ctx.lineTo(15898,22408);
ctx.lineTo(15862,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,168,192,0.85)';
ctx.strokeStyle='rgb(42,211,91)';
ctx.moveTo(15862,22312);
ctx.lineTo(15862,22276);
ctx.lineTo(15898,22276);
ctx.lineTo(15898,22312);
ctx.lineTo(15862,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,234,126,0.85)';
ctx.strokeStyle='rgb(138,172,197)';
ctx.moveTo(15958,22504);
ctx.lineTo(15958,22468);
ctx.lineTo(15994,22468);
ctx.lineTo(15994,22504);
ctx.lineTo(15958,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,89,118,0.85)';
ctx.strokeStyle='rgb(175,8,70)';
ctx.moveTo(15958,22408);
ctx.lineTo(15958,22372);
ctx.lineTo(15994,22372);
ctx.lineTo(15994,22408);
ctx.lineTo(15958,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,102,178,0.85)';
ctx.strokeStyle='rgb(64,214,161)';
ctx.moveTo(15958,22312);
ctx.lineTo(15958,22276);
ctx.lineTo(15994,22276);
ctx.lineTo(15994,22312);
ctx.lineTo(15958,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,87,41,0.85)';
ctx.strokeStyle='rgb(79,133,251)';
ctx.moveTo(16054,22504);
ctx.lineTo(16054,22468);
ctx.lineTo(16090,22468);
ctx.lineTo(16090,22504);
ctx.lineTo(16054,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,206,246,0.85)';
ctx.strokeStyle='rgb(162,237,126)';
ctx.moveTo(16054,22408);
ctx.lineTo(16054,22372);
ctx.lineTo(16090,22372);
ctx.lineTo(16090,22408);
ctx.lineTo(16054,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,170,122,0.85)';
ctx.strokeStyle='rgb(229,95,29)';
ctx.moveTo(16054,22312);
ctx.lineTo(16054,22276);
ctx.lineTo(16090,22276);
ctx.lineTo(16090,22312);
ctx.lineTo(16054,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,42,140,0.85)';
ctx.strokeStyle='rgb(101,238,146)';
ctx.moveTo(16150,22504);
ctx.lineTo(16150,22468);
ctx.lineTo(16186,22468);
ctx.lineTo(16186,22504);
ctx.lineTo(16150,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,154,197,0.85)';
ctx.strokeStyle='rgb(188,138,50)';
ctx.moveTo(16150,22408);
ctx.lineTo(16150,22372);
ctx.lineTo(16186,22372);
ctx.lineTo(16186,22408);
ctx.lineTo(16150,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,236,75,0.85)';
ctx.strokeStyle='rgb(153,43,94)';
ctx.moveTo(16150,22312);
ctx.lineTo(16150,22276);
ctx.lineTo(16186,22276);
ctx.lineTo(16186,22312);
ctx.lineTo(16150,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,242,181,0.85)';
ctx.strokeStyle='rgb(99,128,219)';
ctx.moveTo(16246,22504);
ctx.lineTo(16246,22468);
ctx.lineTo(16282,22468);
ctx.lineTo(16282,22504);
ctx.lineTo(16246,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,33,11,0.85)';
ctx.strokeStyle='rgb(96,53,172)';
ctx.moveTo(16246,22408);
ctx.lineTo(16246,22372);
ctx.lineTo(16282,22372);
ctx.lineTo(16282,22408);
ctx.lineTo(16246,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,161,44,0.85)';
ctx.strokeStyle='rgb(214,41,184)';
ctx.moveTo(16246,22312);
ctx.lineTo(16246,22276);
ctx.lineTo(16282,22276);
ctx.lineTo(16282,22312);
ctx.lineTo(16246,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,192,218,0.85)';
ctx.strokeStyle='rgb(248,168,133)';
ctx.moveTo(16342,22504);
ctx.lineTo(16342,22468);
ctx.lineTo(16378,22468);
ctx.lineTo(16378,22504);
ctx.lineTo(16342,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,223,145,0.85)';
ctx.strokeStyle='rgb(75,211,146)';
ctx.moveTo(16342,22408);
ctx.lineTo(16342,22372);
ctx.lineTo(16378,22372);
ctx.lineTo(16378,22408);
ctx.lineTo(16342,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,224,65,0.85)';
ctx.strokeStyle='rgb(21,57,222)';
ctx.moveTo(16342,22312);
ctx.lineTo(16342,22276);
ctx.lineTo(16378,22276);
ctx.lineTo(16378,22312);
ctx.lineTo(16342,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,235,167,0.85)';
ctx.strokeStyle='rgb(155,162,173)';
ctx.moveTo(16438,22504);
ctx.lineTo(16438,22468);
ctx.lineTo(16474,22468);
ctx.lineTo(16474,22504);
ctx.lineTo(16438,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,170,94,0.85)';
ctx.strokeStyle='rgb(33,4,209)';
ctx.moveTo(16438,22408);
ctx.lineTo(16438,22372);
ctx.lineTo(16474,22372);
ctx.lineTo(16474,22408);
ctx.lineTo(16438,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,236,172,0.85)';
ctx.strokeStyle='rgb(70,99,94)';
ctx.moveTo(16438,22312);
ctx.lineTo(16438,22276);
ctx.lineTo(16474,22276);
ctx.lineTo(16474,22312);
ctx.lineTo(16438,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,240,233,0.85)';
ctx.strokeStyle='rgb(5,181,185)';
ctx.moveTo(17404,24568);
ctx.lineTo(17404,24532);
ctx.lineTo(17440,24532);
ctx.lineTo(17440,24568);
ctx.lineTo(17404,24568);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,66,71,0.85)';
ctx.strokeStyle='rgb(236,13,183)';
ctx.moveTo(18268,21652);
ctx.lineTo(18268,21616);
ctx.lineTo(18304,21616);
ctx.lineTo(18304,21652);
ctx.lineTo(18268,21652);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,94,141,0.85)';
ctx.strokeStyle='rgb(212,29,30)';
ctx.moveTo(18484,21544);
ctx.lineTo(18484,21508);
ctx.lineTo(18520,21508);
ctx.lineTo(18520,21544);
ctx.lineTo(18484,21544);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,172,109,0.85)';
ctx.strokeStyle='rgb(64,135,118)';
ctx.moveTo(17080,22948);
ctx.lineTo(17080,22912);
ctx.lineTo(17116,22912);
ctx.lineTo(17116,22948);
ctx.lineTo(17080,22948);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,245,188,0.85)';
ctx.strokeStyle='rgb(162,41,186)';
ctx.moveTo(15670,25432);
ctx.lineTo(15670,25396);
ctx.lineTo(15706,25396);
ctx.lineTo(15706,25432);
ctx.lineTo(15670,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,251,88,0.85)';
ctx.strokeStyle='rgb(182,173,96)';
ctx.moveTo(15670,25336);
ctx.lineTo(15670,25300);
ctx.lineTo(15706,25300);
ctx.lineTo(15706,25336);
ctx.lineTo(15670,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,246,188,0.85)';
ctx.strokeStyle='rgb(129,135,122)';
ctx.moveTo(17836,23272);
ctx.lineTo(17836,23236);
ctx.lineTo(17872,23236);
ctx.lineTo(17872,23272);
ctx.lineTo(17836,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,17,222,0.85)';
ctx.strokeStyle='rgb(207,49,1)';
ctx.moveTo(15766,25432);
ctx.lineTo(15766,25396);
ctx.lineTo(15802,25396);
ctx.lineTo(15802,25432);
ctx.lineTo(15766,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,251,242,0.85)';
ctx.strokeStyle='rgb(5,163,27)';
ctx.moveTo(15766,25336);
ctx.lineTo(15766,25300);
ctx.lineTo(15802,25300);
ctx.lineTo(15802,25336);
ctx.lineTo(15766,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,73,67,0.85)';
ctx.strokeStyle='rgb(233,215,188)';
ctx.moveTo(17512,23164);
ctx.lineTo(17512,23128);
ctx.lineTo(17548,23128);
ctx.lineTo(17548,23164);
ctx.lineTo(17512,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,161,165,0.85)';
ctx.strokeStyle='rgb(89,130,210)';
ctx.moveTo(14758,24016);
ctx.lineTo(14758,23980);
ctx.lineTo(14794,23980);
ctx.lineTo(14794,24016);
ctx.lineTo(14758,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,8,49,0.85)';
ctx.strokeStyle='rgb(166,194,173)';
ctx.moveTo(14758,23920);
ctx.lineTo(14758,23884);
ctx.lineTo(14794,23884);
ctx.lineTo(14794,23920);
ctx.lineTo(14758,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,156,6,0.85)';
ctx.strokeStyle='rgb(8,220,223)';
ctx.moveTo(14758,23824);
ctx.lineTo(14758,23788);
ctx.lineTo(14794,23788);
ctx.lineTo(14794,23824);
ctx.lineTo(14758,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,130,1,0.85)';
ctx.strokeStyle='rgb(13,180,50)';
ctx.moveTo(14854,24016);
ctx.lineTo(14854,23980);
ctx.lineTo(14890,23980);
ctx.lineTo(14890,24016);
ctx.lineTo(14854,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,78,197,0.85)';
ctx.strokeStyle='rgb(248,16,218)';
ctx.moveTo(14854,23920);
ctx.lineTo(14854,23884);
ctx.lineTo(14890,23884);
ctx.lineTo(14890,23920);
ctx.lineTo(14854,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,227,45,0.85)';
ctx.strokeStyle='rgb(15,236,188)';
ctx.moveTo(14854,23824);
ctx.lineTo(14854,23788);
ctx.lineTo(14890,23788);
ctx.lineTo(14890,23824);
ctx.lineTo(14854,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,220,66,0.85)';
ctx.strokeStyle='rgb(205,24,16)';
ctx.moveTo(14950,24016);
ctx.lineTo(14950,23980);
ctx.lineTo(14986,23980);
ctx.lineTo(14986,24016);
ctx.lineTo(14950,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,210,134,0.85)';
ctx.strokeStyle='rgb(49,153,164)';
ctx.moveTo(14950,23920);
ctx.lineTo(14950,23884);
ctx.lineTo(14986,23884);
ctx.lineTo(14986,23920);
ctx.lineTo(14950,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,32,223,0.85)';
ctx.strokeStyle='rgb(131,19,210)';
ctx.moveTo(14950,23824);
ctx.lineTo(14950,23788);
ctx.lineTo(14986,23788);
ctx.lineTo(14986,23824);
ctx.lineTo(14950,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,211,161,0.85)';
ctx.strokeStyle='rgb(146,78,66)';
ctx.moveTo(15046,24016);
ctx.lineTo(15046,23980);
ctx.lineTo(15082,23980);
ctx.lineTo(15082,24016);
ctx.lineTo(15046,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,240,190,0.85)';
ctx.strokeStyle='rgb(191,161,62)';
ctx.moveTo(15046,23920);
ctx.lineTo(15046,23884);
ctx.lineTo(15082,23884);
ctx.lineTo(15082,23920);
ctx.lineTo(15046,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,254,15,0.85)';
ctx.strokeStyle='rgb(2,164,69)';
ctx.moveTo(15046,23824);
ctx.lineTo(15046,23788);
ctx.lineTo(15082,23788);
ctx.lineTo(15082,23824);
ctx.lineTo(15046,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,190,67,0.85)';
ctx.strokeStyle='rgb(231,174,220)';
ctx.moveTo(15142,24016);
ctx.lineTo(15142,23980);
ctx.lineTo(15178,23980);
ctx.lineTo(15178,24016);
ctx.lineTo(15142,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,127,113,0.85)';
ctx.strokeStyle='rgb(182,176,56)';
ctx.moveTo(15142,23920);
ctx.lineTo(15142,23884);
ctx.lineTo(15178,23884);
ctx.lineTo(15178,23920);
ctx.lineTo(15142,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,80,172,0.85)';
ctx.strokeStyle='rgb(215,201,70)';
ctx.moveTo(15142,23824);
ctx.lineTo(15142,23788);
ctx.lineTo(15178,23788);
ctx.lineTo(15178,23824);
ctx.lineTo(15142,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,50,32,0.85)';
ctx.strokeStyle='rgb(128,219,105)';
ctx.moveTo(6052,19480);
ctx.lineTo(6052,19444);
ctx.lineTo(6088,19444);
ctx.lineTo(6088,19480);
ctx.lineTo(6052,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,52,73,0.85)';
ctx.strokeStyle='rgb(138,20,38)';
ctx.moveTo(6052,19384);
ctx.lineTo(6052,19348);
ctx.lineTo(6088,19348);
ctx.lineTo(6088,19384);
ctx.lineTo(6052,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,192,192,0.85)';
ctx.strokeStyle='rgb(188,166,157)';
ctx.moveTo(6052,19288);
ctx.lineTo(6052,19252);
ctx.lineTo(6088,19252);
ctx.lineTo(6088,19288);
ctx.lineTo(6052,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,146,174,0.85)';
ctx.strokeStyle='rgb(207,121,28)';
ctx.moveTo(6148,19480);
ctx.lineTo(6148,19444);
ctx.lineTo(6184,19444);
ctx.lineTo(6184,19480);
ctx.lineTo(6148,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,88,254,0.85)';
ctx.strokeStyle='rgb(83,25,66)';
ctx.moveTo(6148,19384);
ctx.lineTo(6148,19348);
ctx.lineTo(6184,19348);
ctx.lineTo(6184,19384);
ctx.lineTo(6148,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,104,2,0.85)';
ctx.strokeStyle='rgb(141,180,155)';
ctx.moveTo(6148,19288);
ctx.lineTo(6148,19252);
ctx.lineTo(6184,19252);
ctx.lineTo(6184,19288);
ctx.lineTo(6148,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,91,64,0.85)';
ctx.strokeStyle='rgb(149,121,28)';
ctx.moveTo(6244,19480);
ctx.lineTo(6244,19444);
ctx.lineTo(6280,19444);
ctx.lineTo(6280,19480);
ctx.lineTo(6244,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,9,153,0.85)';
ctx.strokeStyle='rgb(254,187,24)';
ctx.moveTo(6244,19384);
ctx.lineTo(6244,19348);
ctx.lineTo(6280,19348);
ctx.lineTo(6280,19384);
ctx.lineTo(6244,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,27,77,0.85)';
ctx.strokeStyle='rgb(183,35,89)';
ctx.moveTo(6244,19288);
ctx.lineTo(6244,19252);
ctx.lineTo(6280,19252);
ctx.lineTo(6280,19288);
ctx.lineTo(6244,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,170,211,0.85)';
ctx.strokeStyle='rgb(113,254,80)';
ctx.moveTo(6340,19480);
ctx.lineTo(6340,19444);
ctx.lineTo(6376,19444);
ctx.lineTo(6376,19480);
ctx.lineTo(6340,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,53,97,0.85)';
ctx.strokeStyle='rgb(249,11,84)';
ctx.moveTo(6340,19384);
ctx.lineTo(6340,19348);
ctx.lineTo(6376,19348);
ctx.lineTo(6376,19384);
ctx.lineTo(6340,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,25,69,0.85)';
ctx.strokeStyle='rgb(191,96,59)';
ctx.moveTo(6340,19288);
ctx.lineTo(6340,19252);
ctx.lineTo(6376,19252);
ctx.lineTo(6376,19288);
ctx.lineTo(6340,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,231,247,0.85)';
ctx.strokeStyle='rgb(225,58,4)';
ctx.moveTo(6436,19480);
ctx.lineTo(6436,19444);
ctx.lineTo(6472,19444);
ctx.lineTo(6472,19480);
ctx.lineTo(6436,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,142,228,0.85)';
ctx.strokeStyle='rgb(26,5,135)';
ctx.moveTo(6436,19384);
ctx.lineTo(6436,19348);
ctx.lineTo(6472,19348);
ctx.lineTo(6472,19384);
ctx.lineTo(6436,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,217,202,0.85)';
ctx.strokeStyle='rgb(69,174,235)';
ctx.moveTo(6436,19288);
ctx.lineTo(6436,19252);
ctx.lineTo(6472,19252);
ctx.lineTo(6472,19288);
ctx.lineTo(6436,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,22,232,0.85)';
ctx.strokeStyle='rgb(224,167,172)';
ctx.moveTo(3856,20992);
ctx.lineTo(3856,20956);
ctx.lineTo(3892,20956);
ctx.lineTo(3892,20992);
ctx.lineTo(3856,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,145,178,0.85)';
ctx.strokeStyle='rgb(118,52,239)';
ctx.moveTo(3856,20896);
ctx.lineTo(3856,20860);
ctx.lineTo(3892,20860);
ctx.lineTo(3892,20896);
ctx.lineTo(3856,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,231,130,0.85)';
ctx.strokeStyle='rgb(244,81,168)';
ctx.moveTo(3856,20800);
ctx.lineTo(3856,20764);
ctx.lineTo(3892,20764);
ctx.lineTo(3892,20800);
ctx.lineTo(3856,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,186,87,0.85)';
ctx.strokeStyle='rgb(229,160,249)';
ctx.moveTo(3856,17968);
ctx.lineTo(3856,17932);
ctx.lineTo(3892,17932);
ctx.lineTo(3892,17968);
ctx.lineTo(3856,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,246,182,0.85)';
ctx.strokeStyle='rgb(245,254,97)';
ctx.moveTo(3856,17872);
ctx.lineTo(3856,17836);
ctx.lineTo(3892,17836);
ctx.lineTo(3892,17872);
ctx.lineTo(3856,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,190,82,0.85)';
ctx.strokeStyle='rgb(219,93,131)';
ctx.moveTo(3856,17776);
ctx.lineTo(3856,17740);
ctx.lineTo(3892,17740);
ctx.lineTo(3892,17776);
ctx.lineTo(3856,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,104,195,0.85)';
ctx.strokeStyle='rgb(212,119,53)';
ctx.moveTo(3952,17968);
ctx.lineTo(3952,17932);
ctx.lineTo(3988,17932);
ctx.lineTo(3988,17968);
ctx.lineTo(3952,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,93,54,0.85)';
ctx.strokeStyle='rgb(173,74,247)';
ctx.moveTo(3952,17872);
ctx.lineTo(3952,17836);
ctx.lineTo(3988,17836);
ctx.lineTo(3988,17872);
ctx.lineTo(3952,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,111,2,0.85)';
ctx.strokeStyle='rgb(171,206,147)';
ctx.moveTo(3952,17776);
ctx.lineTo(3952,17740);
ctx.lineTo(3988,17740);
ctx.lineTo(3988,17776);
ctx.lineTo(3952,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,136,216,0.85)';
ctx.strokeStyle='rgb(15,61,207)';
ctx.moveTo(3184,17968);
ctx.lineTo(3184,17932);
ctx.lineTo(3220,17932);
ctx.lineTo(3220,17968);
ctx.lineTo(3184,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,240,29,0.85)';
ctx.strokeStyle='rgb(184,134,166)';
ctx.moveTo(3184,17872);
ctx.lineTo(3184,17836);
ctx.lineTo(3220,17836);
ctx.lineTo(3220,17872);
ctx.lineTo(3184,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,227,107,0.85)';
ctx.strokeStyle='rgb(28,194,125)';
ctx.moveTo(3184,17776);
ctx.lineTo(3184,17740);
ctx.lineTo(3220,17740);
ctx.lineTo(3220,17776);
ctx.lineTo(3184,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,61,52,0.85)';
ctx.strokeStyle='rgb(225,240,201)';
ctx.moveTo(3280,17968);
ctx.lineTo(3280,17932);
ctx.lineTo(3316,17932);
ctx.lineTo(3316,17968);
ctx.lineTo(3280,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,69,222,0.85)';
ctx.strokeStyle='rgb(152,62,186)';
ctx.moveTo(3280,17872);
ctx.lineTo(3280,17836);
ctx.lineTo(3316,17836);
ctx.lineTo(3316,17872);
ctx.lineTo(3280,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,188,124,0.85)';
ctx.strokeStyle='rgb(189,180,179)';
ctx.moveTo(3280,17776);
ctx.lineTo(3280,17740);
ctx.lineTo(3316,17740);
ctx.lineTo(3316,17776);
ctx.lineTo(3280,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,222,42,0.85)';
ctx.strokeStyle='rgb(102,122,116)';
ctx.moveTo(3376,17968);
ctx.lineTo(3376,17932);
ctx.lineTo(3412,17932);
ctx.lineTo(3412,17968);
ctx.lineTo(3376,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,249,185,0.85)';
ctx.strokeStyle='rgb(6,251,10)';
ctx.moveTo(3376,17872);
ctx.lineTo(3376,17836);
ctx.lineTo(3412,17836);
ctx.lineTo(3412,17872);
ctx.lineTo(3376,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,190,84,0.85)';
ctx.strokeStyle='rgb(183,69,157)';
ctx.moveTo(3376,17776);
ctx.lineTo(3376,17740);
ctx.lineTo(3412,17740);
ctx.lineTo(3412,17776);
ctx.lineTo(3376,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,132,37,0.85)';
ctx.strokeStyle='rgb(68,130,230)';
ctx.moveTo(3472,17968);
ctx.lineTo(3472,17932);
ctx.lineTo(3508,17932);
ctx.lineTo(3508,17968);
ctx.lineTo(3472,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,216,189,0.85)';
ctx.strokeStyle='rgb(82,8,41)';
ctx.moveTo(3472,17872);
ctx.lineTo(3472,17836);
ctx.lineTo(3508,17836);
ctx.lineTo(3508,17872);
ctx.lineTo(3472,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,9,65,0.85)';
ctx.strokeStyle='rgb(204,15,167)';
ctx.moveTo(3472,17776);
ctx.lineTo(3472,17740);
ctx.lineTo(3508,17740);
ctx.lineTo(3508,17776);
ctx.lineTo(3472,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,146,246,0.85)';
ctx.strokeStyle='rgb(73,218,164)';
ctx.moveTo(3568,17968);
ctx.lineTo(3568,17932);
ctx.lineTo(3604,17932);
ctx.lineTo(3604,17968);
ctx.lineTo(3568,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,122,193,0.85)';
ctx.strokeStyle='rgb(108,120,96)';
ctx.moveTo(3568,17872);
ctx.lineTo(3568,17836);
ctx.lineTo(3604,17836);
ctx.lineTo(3604,17872);
ctx.lineTo(3568,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,28,37,0.85)';
ctx.strokeStyle='rgb(109,66,119)';
ctx.moveTo(3568,17776);
ctx.lineTo(3568,17740);
ctx.lineTo(3604,17740);
ctx.lineTo(3604,17776);
ctx.lineTo(3568,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,162,18,0.85)';
ctx.strokeStyle='rgb(61,152,106)';
ctx.moveTo(3664,17968);
ctx.lineTo(3664,17932);
ctx.lineTo(3700,17932);
ctx.lineTo(3700,17968);
ctx.lineTo(3664,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,4,230,0.85)';
ctx.strokeStyle='rgb(173,247,225)';
ctx.moveTo(3664,17872);
ctx.lineTo(3664,17836);
ctx.lineTo(3700,17836);
ctx.lineTo(3700,17872);
ctx.lineTo(3664,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,224,145,0.85)';
ctx.strokeStyle='rgb(173,117,41)';
ctx.moveTo(3664,17776);
ctx.lineTo(3664,17740);
ctx.lineTo(3700,17740);
ctx.lineTo(3700,17776);
ctx.lineTo(3664,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,61,207,0.85)';
ctx.strokeStyle='rgb(36,52,70)';
ctx.moveTo(3760,17968);
ctx.lineTo(3760,17932);
ctx.lineTo(3796,17932);
ctx.lineTo(3796,17968);
ctx.lineTo(3760,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,107,68,0.85)';
ctx.strokeStyle='rgb(143,210,213)';
ctx.moveTo(3760,17872);
ctx.lineTo(3760,17836);
ctx.lineTo(3796,17836);
ctx.lineTo(3796,17872);
ctx.lineTo(3760,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,52,180,0.85)';
ctx.strokeStyle='rgb(7,3,178)';
ctx.moveTo(3760,17776);
ctx.lineTo(3760,17740);
ctx.lineTo(3796,17740);
ctx.lineTo(3796,17776);
ctx.lineTo(3760,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,182,23,0.85)';
ctx.strokeStyle='rgb(25,6,5)';
ctx.moveTo(2992,17968);
ctx.lineTo(2992,17932);
ctx.lineTo(3028,17932);
ctx.lineTo(3028,17968);
ctx.lineTo(2992,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,3,150,0.85)';
ctx.strokeStyle='rgb(178,58,35)';
ctx.moveTo(2992,17872);
ctx.lineTo(2992,17836);
ctx.lineTo(3028,17836);
ctx.lineTo(3028,17872);
ctx.lineTo(2992,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,131,180,0.85)';
ctx.strokeStyle='rgb(32,105,247)';
ctx.moveTo(2992,17776);
ctx.lineTo(2992,17740);
ctx.lineTo(3028,17740);
ctx.lineTo(3028,17776);
ctx.lineTo(2992,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,46,184,0.85)';
ctx.strokeStyle='rgb(42,136,110)';
ctx.moveTo(3088,17968);
ctx.lineTo(3088,17932);
ctx.lineTo(3124,17932);
ctx.lineTo(3124,17968);
ctx.lineTo(3088,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,83,183,0.85)';
ctx.strokeStyle='rgb(131,253,41)';
ctx.moveTo(3088,17872);
ctx.lineTo(3088,17836);
ctx.lineTo(3124,17836);
ctx.lineTo(3124,17872);
ctx.lineTo(3088,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,221,104,0.85)';
ctx.strokeStyle='rgb(108,166,87)';
ctx.moveTo(3088,17776);
ctx.lineTo(3088,17740);
ctx.lineTo(3124,17740);
ctx.lineTo(3124,17776);
ctx.lineTo(3088,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,83,254,0.85)';
ctx.strokeStyle='rgb(175,193,198)';
ctx.moveTo(3280,20992);
ctx.lineTo(3280,20956);
ctx.lineTo(3316,20956);
ctx.lineTo(3316,20992);
ctx.lineTo(3280,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,59,224,0.85)';
ctx.strokeStyle='rgb(230,171,134)';
ctx.moveTo(3280,20896);
ctx.lineTo(3280,20860);
ctx.lineTo(3316,20860);
ctx.lineTo(3316,20896);
ctx.lineTo(3280,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,174,108,0.85)';
ctx.strokeStyle='rgb(246,133,120)';
ctx.moveTo(3280,20800);
ctx.lineTo(3280,20764);
ctx.lineTo(3316,20764);
ctx.lineTo(3316,20800);
ctx.lineTo(3280,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,14,234,0.85)';
ctx.strokeStyle='rgb(228,126,220)';
ctx.moveTo(3376,20992);
ctx.lineTo(3376,20956);
ctx.lineTo(3412,20956);
ctx.lineTo(3412,20992);
ctx.lineTo(3376,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,113,60,0.85)';
ctx.strokeStyle='rgb(62,165,222)';
ctx.moveTo(3376,20896);
ctx.lineTo(3376,20860);
ctx.lineTo(3412,20860);
ctx.lineTo(3412,20896);
ctx.lineTo(3376,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,35,190,0.85)';
ctx.strokeStyle='rgb(111,125,144)';
ctx.moveTo(3376,20800);
ctx.lineTo(3376,20764);
ctx.lineTo(3412,20764);
ctx.lineTo(3412,20800);
ctx.lineTo(3376,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,55,83,0.85)';
ctx.strokeStyle='rgb(31,202,208)';
ctx.moveTo(3472,20992);
ctx.lineTo(3472,20956);
ctx.lineTo(3508,20956);
ctx.lineTo(3508,20992);
ctx.lineTo(3472,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,190,195,0.85)';
ctx.strokeStyle='rgb(211,250,100)';
ctx.moveTo(3472,20896);
ctx.lineTo(3472,20860);
ctx.lineTo(3508,20860);
ctx.lineTo(3508,20896);
ctx.lineTo(3472,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,134,49,0.85)';
ctx.strokeStyle='rgb(23,59,245)';
ctx.moveTo(3472,20800);
ctx.lineTo(3472,20764);
ctx.lineTo(3508,20764);
ctx.lineTo(3508,20800);
ctx.lineTo(3472,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,42,203,0.85)';
ctx.strokeStyle='rgb(216,32,82)';
ctx.moveTo(3568,20992);
ctx.lineTo(3568,20956);
ctx.lineTo(3604,20956);
ctx.lineTo(3604,20992);
ctx.lineTo(3568,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,9,181,0.85)';
ctx.strokeStyle='rgb(49,249,218)';
ctx.moveTo(3568,20896);
ctx.lineTo(3568,20860);
ctx.lineTo(3604,20860);
ctx.lineTo(3604,20896);
ctx.lineTo(3568,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,212,164,0.85)';
ctx.strokeStyle='rgb(232,243,115)';
ctx.moveTo(3568,20800);
ctx.lineTo(3568,20764);
ctx.lineTo(3604,20764);
ctx.lineTo(3604,20800);
ctx.lineTo(3568,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,215,31,0.85)';
ctx.strokeStyle='rgb(221,24,5)';
ctx.moveTo(3664,20992);
ctx.lineTo(3664,20956);
ctx.lineTo(3700,20956);
ctx.lineTo(3700,20992);
ctx.lineTo(3664,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,63,46,0.85)';
ctx.strokeStyle='rgb(11,189,175)';
ctx.moveTo(3664,20896);
ctx.lineTo(3664,20860);
ctx.lineTo(3700,20860);
ctx.lineTo(3700,20896);
ctx.lineTo(3664,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,25,144,0.85)';
ctx.strokeStyle='rgb(211,30,98)';
ctx.moveTo(3664,20800);
ctx.lineTo(3664,20764);
ctx.lineTo(3700,20764);
ctx.lineTo(3700,20800);
ctx.lineTo(3664,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,1,208,0.85)';
ctx.strokeStyle='rgb(200,239,176)';
ctx.moveTo(3760,20992);
ctx.lineTo(3760,20956);
ctx.lineTo(3796,20956);
ctx.lineTo(3796,20992);
ctx.lineTo(3760,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,77,139,0.85)';
ctx.strokeStyle='rgb(203,162,85)';
ctx.moveTo(3760,20896);
ctx.lineTo(3760,20860);
ctx.lineTo(3796,20860);
ctx.lineTo(3796,20896);
ctx.lineTo(3760,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,66,253,0.85)';
ctx.strokeStyle='rgb(144,22,40)';
ctx.moveTo(3760,20800);
ctx.lineTo(3760,20764);
ctx.lineTo(3796,20764);
ctx.lineTo(3796,20800);
ctx.lineTo(3760,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,126,91,0.85)';
ctx.strokeStyle='rgb(25,49,122)';
ctx.moveTo(2992,20992);
ctx.lineTo(2992,20956);
ctx.lineTo(3028,20956);
ctx.lineTo(3028,20992);
ctx.lineTo(2992,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,93,63,0.85)';
ctx.strokeStyle='rgb(130,206,244)';
ctx.moveTo(2992,20896);
ctx.lineTo(2992,20860);
ctx.lineTo(3028,20860);
ctx.lineTo(3028,20896);
ctx.lineTo(2992,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,52,126,0.85)';
ctx.strokeStyle='rgb(53,228,59)';
ctx.moveTo(2992,20800);
ctx.lineTo(2992,20764);
ctx.lineTo(3028,20764);
ctx.lineTo(3028,20800);
ctx.lineTo(2992,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,76,82,0.85)';
ctx.strokeStyle='rgb(140,192,225)';
ctx.moveTo(3088,20992);
ctx.lineTo(3088,20956);
ctx.lineTo(3124,20956);
ctx.lineTo(3124,20992);
ctx.lineTo(3088,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,72,49,0.85)';
ctx.strokeStyle='rgb(185,122,49)';
ctx.moveTo(3088,20896);
ctx.lineTo(3088,20860);
ctx.lineTo(3124,20860);
ctx.lineTo(3124,20896);
ctx.lineTo(3088,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,28,217,0.85)';
ctx.strokeStyle='rgb(52,25,175)';
ctx.moveTo(3088,20800);
ctx.lineTo(3088,20764);
ctx.lineTo(3124,20764);
ctx.lineTo(3124,20800);
ctx.lineTo(3088,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,208,109,0.85)';
ctx.strokeStyle='rgb(172,93,79)';
ctx.moveTo(3184,20992);
ctx.lineTo(3184,20956);
ctx.lineTo(3220,20956);
ctx.lineTo(3220,20992);
ctx.lineTo(3184,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,17,124,0.85)';
ctx.strokeStyle='rgb(103,170,222)';
ctx.moveTo(3184,20896);
ctx.lineTo(3184,20860);
ctx.lineTo(3220,20860);
ctx.lineTo(3220,20896);
ctx.lineTo(3184,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,234,44,0.85)';
ctx.strokeStyle='rgb(26,212,229)';
ctx.moveTo(3184,20800);
ctx.lineTo(3184,20764);
ctx.lineTo(3220,20764);
ctx.lineTo(3220,20800);
ctx.lineTo(3184,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,227,203,0.85)';
ctx.strokeStyle='rgb(96,109,152)';
ctx.moveTo(1696,19480);
ctx.lineTo(1696,19444);
ctx.lineTo(1732,19444);
ctx.lineTo(1732,19480);
ctx.lineTo(1696,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,55,139,0.85)';
ctx.strokeStyle='rgb(170,137,223)';
ctx.moveTo(1696,19384);
ctx.lineTo(1696,19348);
ctx.lineTo(1732,19348);
ctx.lineTo(1732,19384);
ctx.lineTo(1696,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,59,95,0.85)';
ctx.strokeStyle='rgb(112,210,155)';
ctx.moveTo(1696,19288);
ctx.lineTo(1696,19252);
ctx.lineTo(1732,19252);
ctx.lineTo(1732,19288);
ctx.lineTo(1696,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,73,197,0.85)';
ctx.strokeStyle='rgb(182,170,24)';
ctx.moveTo(1792,19480);
ctx.lineTo(1792,19444);
ctx.lineTo(1828,19444);
ctx.lineTo(1828,19480);
ctx.lineTo(1792,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,84,145,0.85)';
ctx.strokeStyle='rgb(72,254,192)';
ctx.moveTo(1792,19384);
ctx.lineTo(1792,19348);
ctx.lineTo(1828,19348);
ctx.lineTo(1828,19384);
ctx.lineTo(1792,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,59,93,0.85)';
ctx.strokeStyle='rgb(54,105,213)';
ctx.moveTo(1792,19288);
ctx.lineTo(1792,19252);
ctx.lineTo(1828,19252);
ctx.lineTo(1828,19288);
ctx.lineTo(1792,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,252,219,0.85)';
ctx.strokeStyle='rgb(201,78,163)';
ctx.moveTo(1888,19480);
ctx.lineTo(1888,19444);
ctx.lineTo(1924,19444);
ctx.lineTo(1924,19480);
ctx.lineTo(1888,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,239,228,0.85)';
ctx.strokeStyle='rgb(66,253,76)';
ctx.moveTo(1888,19384);
ctx.lineTo(1888,19348);
ctx.lineTo(1924,19348);
ctx.lineTo(1924,19384);
ctx.lineTo(1888,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,235,160,0.85)';
ctx.strokeStyle='rgb(67,86,61)';
ctx.moveTo(1888,19288);
ctx.lineTo(1888,19252);
ctx.lineTo(1924,19252);
ctx.lineTo(1924,19288);
ctx.lineTo(1888,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,138,87,0.85)';
ctx.strokeStyle='rgb(47,118,121)';
ctx.moveTo(1984,19480);
ctx.lineTo(1984,19444);
ctx.lineTo(2020,19444);
ctx.lineTo(2020,19480);
ctx.lineTo(1984,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,32,122,0.85)';
ctx.strokeStyle='rgb(133,243,55)';
ctx.moveTo(1984,19384);
ctx.lineTo(1984,19348);
ctx.lineTo(2020,19348);
ctx.lineTo(2020,19384);
ctx.lineTo(1984,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,111,244,0.85)';
ctx.strokeStyle='rgb(185,43,3)';
ctx.moveTo(1984,19288);
ctx.lineTo(1984,19252);
ctx.lineTo(2020,19252);
ctx.lineTo(2020,19288);
ctx.lineTo(1984,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,243,253,0.85)';
ctx.strokeStyle='rgb(51,37,227)';
ctx.moveTo(2080,19480);
ctx.lineTo(2080,19444);
ctx.lineTo(2116,19444);
ctx.lineTo(2116,19480);
ctx.lineTo(2080,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,207,172,0.85)';
ctx.strokeStyle='rgb(232,14,176)';
ctx.moveTo(2080,19384);
ctx.lineTo(2080,19348);
ctx.lineTo(2116,19348);
ctx.lineTo(2116,19384);
ctx.lineTo(2080,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,77,149,0.85)';
ctx.strokeStyle='rgb(81,24,69)';
ctx.moveTo(2080,19288);
ctx.lineTo(2080,19252);
ctx.lineTo(2116,19252);
ctx.lineTo(2116,19288);
ctx.lineTo(2080,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,115,207,0.85)';
ctx.strokeStyle='rgb(217,46,125)';
ctx.moveTo(2176,19480);
ctx.lineTo(2176,19444);
ctx.lineTo(2212,19444);
ctx.lineTo(2212,19480);
ctx.lineTo(2176,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,50,41,0.85)';
ctx.strokeStyle='rgb(138,95,217)';
ctx.moveTo(2176,19384);
ctx.lineTo(2176,19348);
ctx.lineTo(2212,19348);
ctx.lineTo(2212,19384);
ctx.lineTo(2176,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,239,99,0.85)';
ctx.strokeStyle='rgb(222,135,104)';
ctx.moveTo(2176,19288);
ctx.lineTo(2176,19252);
ctx.lineTo(2212,19252);
ctx.lineTo(2212,19288);
ctx.lineTo(2176,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,225,36,0.85)';
ctx.strokeStyle='rgb(55,145,184)';
ctx.moveTo(2272,19480);
ctx.lineTo(2272,19444);
ctx.lineTo(2308,19444);
ctx.lineTo(2308,19480);
ctx.lineTo(2272,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,243,175,0.85)';
ctx.strokeStyle='rgb(106,149,65)';
ctx.moveTo(2272,19384);
ctx.lineTo(2272,19348);
ctx.lineTo(2308,19348);
ctx.lineTo(2308,19384);
ctx.lineTo(2272,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,215,171,0.85)';
ctx.strokeStyle='rgb(91,124,76)';
ctx.moveTo(2272,19288);
ctx.lineTo(2272,19252);
ctx.lineTo(2308,19252);
ctx.lineTo(2308,19288);
ctx.lineTo(2272,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,12,42,0.85)';
ctx.strokeStyle='rgb(116,229,100)';
ctx.moveTo(2368,19480);
ctx.lineTo(2368,19444);
ctx.lineTo(2404,19444);
ctx.lineTo(2404,19480);
ctx.lineTo(2368,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,83,30,0.85)';
ctx.strokeStyle='rgb(234,172,44)';
ctx.moveTo(2368,19384);
ctx.lineTo(2368,19348);
ctx.lineTo(2404,19348);
ctx.lineTo(2404,19384);
ctx.lineTo(2368,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,182,76,0.85)';
ctx.strokeStyle='rgb(3,122,76)';
ctx.moveTo(2368,19288);
ctx.lineTo(2368,19252);
ctx.lineTo(2404,19252);
ctx.lineTo(2404,19288);
ctx.lineTo(2368,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,245,64,0.85)';
ctx.strokeStyle='rgb(210,72,37)';
ctx.moveTo(2464,19480);
ctx.lineTo(2464,19444);
ctx.lineTo(2500,19444);
ctx.lineTo(2500,19480);
ctx.lineTo(2464,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,26,211,0.85)';
ctx.strokeStyle='rgb(95,16,80)';
ctx.moveTo(2464,19384);
ctx.lineTo(2464,19348);
ctx.lineTo(2500,19348);
ctx.lineTo(2500,19384);
ctx.lineTo(2464,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,125,218,0.85)';
ctx.strokeStyle='rgb(66,38,171)';
ctx.moveTo(2464,19288);
ctx.lineTo(2464,19252);
ctx.lineTo(2500,19252);
ctx.lineTo(2500,19288);
ctx.lineTo(2464,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,113,167,0.85)';
ctx.strokeStyle='rgb(224,237,251)';
ctx.moveTo(2560,19480);
ctx.lineTo(2560,19444);
ctx.lineTo(2596,19444);
ctx.lineTo(2596,19480);
ctx.lineTo(2560,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,234,61,0.85)';
ctx.strokeStyle='rgb(187,200,131)';
ctx.moveTo(2560,19384);
ctx.lineTo(2560,19348);
ctx.lineTo(2596,19348);
ctx.lineTo(2596,19384);
ctx.lineTo(2560,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,68,24,0.85)';
ctx.strokeStyle='rgb(78,189,1)';
ctx.moveTo(2560,19288);
ctx.lineTo(2560,19252);
ctx.lineTo(2596,19252);
ctx.lineTo(2596,19288);
ctx.lineTo(2560,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,251,120,0.85)';
ctx.strokeStyle='rgb(223,60,186)';
ctx.moveTo(2656,19480);
ctx.lineTo(2656,19444);
ctx.lineTo(2692,19444);
ctx.lineTo(2692,19480);
ctx.lineTo(2656,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,91,184,0.85)';
ctx.strokeStyle='rgb(42,219,138)';
ctx.moveTo(2656,19384);
ctx.lineTo(2656,19348);
ctx.lineTo(2692,19348);
ctx.lineTo(2692,19384);
ctx.lineTo(2656,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,27,56,0.85)';
ctx.strokeStyle='rgb(178,73,4)';
ctx.moveTo(2656,19288);
ctx.lineTo(2656,19252);
ctx.lineTo(2692,19252);
ctx.lineTo(2692,19288);
ctx.lineTo(2656,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,113,204,0.85)';
ctx.strokeStyle='rgb(218,78,132)';
ctx.moveTo(5860,19480);
ctx.lineTo(5860,19444);
ctx.lineTo(5896,19444);
ctx.lineTo(5896,19480);
ctx.lineTo(5860,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,235,100,0.85)';
ctx.strokeStyle='rgb(224,200,7)';
ctx.moveTo(5860,19384);
ctx.lineTo(5860,19348);
ctx.lineTo(5896,19348);
ctx.lineTo(5896,19384);
ctx.lineTo(5860,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,19,62,0.85)';
ctx.strokeStyle='rgb(165,47,36)';
ctx.moveTo(5860,19288);
ctx.lineTo(5860,19252);
ctx.lineTo(5896,19252);
ctx.lineTo(5896,19288);
ctx.lineTo(5860,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,65,173,0.85)';
ctx.strokeStyle='rgb(158,51,17)';
ctx.moveTo(5956,19480);
ctx.lineTo(5956,19444);
ctx.lineTo(5992,19444);
ctx.lineTo(5992,19480);
ctx.lineTo(5956,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,159,85,0.85)';
ctx.strokeStyle='rgb(193,59,246)';
ctx.moveTo(5956,19384);
ctx.lineTo(5956,19348);
ctx.lineTo(5992,19348);
ctx.lineTo(5992,19384);
ctx.lineTo(5956,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,91,104,0.85)';
ctx.strokeStyle='rgb(31,47,32)';
ctx.moveTo(5956,19288);
ctx.lineTo(5956,19252);
ctx.lineTo(5992,19252);
ctx.lineTo(5992,19288);
ctx.lineTo(5956,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,47,1,0.85)';
ctx.strokeStyle='rgb(132,65,63)';
ctx.moveTo(5476,19480);
ctx.lineTo(5476,19444);
ctx.lineTo(5512,19444);
ctx.lineTo(5512,19480);
ctx.lineTo(5476,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,201,97,0.85)';
ctx.strokeStyle='rgb(48,40,172)';
ctx.moveTo(5476,19384);
ctx.lineTo(5476,19348);
ctx.lineTo(5512,19348);
ctx.lineTo(5512,19384);
ctx.lineTo(5476,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,220,177,0.85)';
ctx.strokeStyle='rgb(243,57,43)';
ctx.moveTo(5476,19288);
ctx.lineTo(5476,19252);
ctx.lineTo(5512,19252);
ctx.lineTo(5512,19288);
ctx.lineTo(5476,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,54,209,0.85)';
ctx.strokeStyle='rgb(116,47,134)';
ctx.moveTo(5572,19480);
ctx.lineTo(5572,19444);
ctx.lineTo(5608,19444);
ctx.lineTo(5608,19480);
ctx.lineTo(5572,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,196,117,0.85)';
ctx.strokeStyle='rgb(41,101,190)';
ctx.moveTo(5572,19384);
ctx.lineTo(5572,19348);
ctx.lineTo(5608,19348);
ctx.lineTo(5608,19384);
ctx.lineTo(5572,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,210,180,0.85)';
ctx.strokeStyle='rgb(136,167,174)';
ctx.moveTo(5572,19288);
ctx.lineTo(5572,19252);
ctx.lineTo(5608,19252);
ctx.lineTo(5608,19288);
ctx.lineTo(5572,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,11,95,0.85)';
ctx.strokeStyle='rgb(132,76,139)';
ctx.moveTo(5668,19480);
ctx.lineTo(5668,19444);
ctx.lineTo(5704,19444);
ctx.lineTo(5704,19480);
ctx.lineTo(5668,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,232,91,0.85)';
ctx.strokeStyle='rgb(175,245,242)';
ctx.moveTo(5668,19384);
ctx.lineTo(5668,19348);
ctx.lineTo(5704,19348);
ctx.lineTo(5704,19384);
ctx.lineTo(5668,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,155,158,0.85)';
ctx.strokeStyle='rgb(241,58,103)';
ctx.moveTo(5668,19288);
ctx.lineTo(5668,19252);
ctx.lineTo(5704,19252);
ctx.lineTo(5704,19288);
ctx.lineTo(5668,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,170,18,0.85)';
ctx.strokeStyle='rgb(154,225,201)';
ctx.moveTo(3952,20992);
ctx.lineTo(3952,20956);
ctx.lineTo(3988,20956);
ctx.lineTo(3988,20992);
ctx.lineTo(3952,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,233,166,0.85)';
ctx.strokeStyle='rgb(205,43,247)';
ctx.moveTo(3952,20896);
ctx.lineTo(3952,20860);
ctx.lineTo(3988,20860);
ctx.lineTo(3988,20896);
ctx.lineTo(3952,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,1,131,0.85)';
ctx.strokeStyle='rgb(81,13,97)';
ctx.moveTo(3952,20800);
ctx.lineTo(3952,20764);
ctx.lineTo(3988,20764);
ctx.lineTo(3988,20800);
ctx.lineTo(3952,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,157,212,0.85)';
ctx.strokeStyle='rgb(36,247,102)';
ctx.moveTo(5764,19480);
ctx.lineTo(5764,19444);
ctx.lineTo(5800,19444);
ctx.lineTo(5800,19480);
ctx.lineTo(5764,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,49,193,0.85)';
ctx.strokeStyle='rgb(16,7,32)';
ctx.moveTo(5764,19384);
ctx.lineTo(5764,19348);
ctx.lineTo(5800,19348);
ctx.lineTo(5800,19384);
ctx.lineTo(5764,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,91,166,0.85)';
ctx.strokeStyle='rgb(81,161,105)';
ctx.moveTo(5764,19288);
ctx.lineTo(5764,19252);
ctx.lineTo(5800,19252);
ctx.lineTo(5800,19288);
ctx.lineTo(5764,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,15,175,0.85)';
ctx.strokeStyle='rgb(158,109,51)';
ctx.moveTo(3856,24016);
ctx.lineTo(3856,23980);
ctx.lineTo(3892,23980);
ctx.lineTo(3892,24016);
ctx.lineTo(3856,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,7,196,0.85)';
ctx.strokeStyle='rgb(212,8,177)';
ctx.moveTo(3856,23920);
ctx.lineTo(3856,23884);
ctx.lineTo(3892,23884);
ctx.lineTo(3892,23920);
ctx.lineTo(3856,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,118,194,0.85)';
ctx.strokeStyle='rgb(189,78,64)';
ctx.moveTo(3856,23824);
ctx.lineTo(3856,23788);
ctx.lineTo(3892,23788);
ctx.lineTo(3892,23824);
ctx.lineTo(3856,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,188,221,0.85)';
ctx.strokeStyle='rgb(241,198,79)';
ctx.moveTo(5668,22504);
ctx.lineTo(5668,22468);
ctx.lineTo(5704,22468);
ctx.lineTo(5704,22504);
ctx.lineTo(5668,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,118,210,0.85)';
ctx.strokeStyle='rgb(63,55,140)';
ctx.moveTo(5668,22408);
ctx.lineTo(5668,22372);
ctx.lineTo(5704,22372);
ctx.lineTo(5704,22408);
ctx.lineTo(5668,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,193,202,0.85)';
ctx.strokeStyle='rgb(124,93,140)';
ctx.moveTo(5668,22312);
ctx.lineTo(5668,22276);
ctx.lineTo(5704,22276);
ctx.lineTo(5704,22312);
ctx.lineTo(5668,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,13,208,0.85)';
ctx.strokeStyle='rgb(94,141,140)';
ctx.moveTo(5764,22504);
ctx.lineTo(5764,22468);
ctx.lineTo(5800,22468);
ctx.lineTo(5800,22504);
ctx.lineTo(5764,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,187,188,0.85)';
ctx.strokeStyle='rgb(0,217,104)';
ctx.moveTo(5764,22408);
ctx.lineTo(5764,22372);
ctx.lineTo(5800,22372);
ctx.lineTo(5800,22408);
ctx.lineTo(5764,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,212,253,0.85)';
ctx.strokeStyle='rgb(114,38,213)';
ctx.moveTo(5764,22312);
ctx.lineTo(5764,22276);
ctx.lineTo(5800,22276);
ctx.lineTo(5800,22312);
ctx.lineTo(5764,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,206,239,0.85)';
ctx.strokeStyle='rgb(125,224,186)';
ctx.moveTo(5860,22504);
ctx.lineTo(5860,22468);
ctx.lineTo(5896,22468);
ctx.lineTo(5896,22504);
ctx.lineTo(5860,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,116,162,0.85)';
ctx.strokeStyle='rgb(205,209,252)';
ctx.moveTo(5860,22408);
ctx.lineTo(5860,22372);
ctx.lineTo(5896,22372);
ctx.lineTo(5896,22408);
ctx.lineTo(5860,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,69,137,0.85)';
ctx.strokeStyle='rgb(197,28,45)';
ctx.moveTo(5860,22312);
ctx.lineTo(5860,22276);
ctx.lineTo(5896,22276);
ctx.lineTo(5896,22312);
ctx.lineTo(5860,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,98,217,0.85)';
ctx.strokeStyle='rgb(179,32,141)';
ctx.moveTo(5956,22504);
ctx.lineTo(5956,22468);
ctx.lineTo(5992,22468);
ctx.lineTo(5992,22504);
ctx.lineTo(5956,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,204,34,0.85)';
ctx.strokeStyle='rgb(249,26,220)';
ctx.moveTo(5956,22408);
ctx.lineTo(5956,22372);
ctx.lineTo(5992,22372);
ctx.lineTo(5992,22408);
ctx.lineTo(5956,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,69,197,0.85)';
ctx.strokeStyle='rgb(12,150,145)';
ctx.moveTo(5956,22312);
ctx.lineTo(5956,22276);
ctx.lineTo(5992,22276);
ctx.lineTo(5992,22312);
ctx.lineTo(5956,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,104,56,0.85)';
ctx.strokeStyle='rgb(143,95,193)';
ctx.moveTo(5476,22504);
ctx.lineTo(5476,22468);
ctx.lineTo(5512,22468);
ctx.lineTo(5512,22504);
ctx.lineTo(5476,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,107,32,0.85)';
ctx.strokeStyle='rgb(63,51,226)';
ctx.moveTo(5476,22408);
ctx.lineTo(5476,22372);
ctx.lineTo(5512,22372);
ctx.lineTo(5512,22408);
ctx.lineTo(5476,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,26,201,0.85)';
ctx.strokeStyle='rgb(131,152,171)';
ctx.moveTo(5476,22312);
ctx.lineTo(5476,22276);
ctx.lineTo(5512,22276);
ctx.lineTo(5512,22312);
ctx.lineTo(5476,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,209,105,0.85)';
ctx.strokeStyle='rgb(240,26,14)';
ctx.moveTo(5572,22504);
ctx.lineTo(5572,22468);
ctx.lineTo(5608,22468);
ctx.lineTo(5608,22504);
ctx.lineTo(5572,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,64,6,0.85)';
ctx.strokeStyle='rgb(28,62,76)';
ctx.moveTo(5572,22408);
ctx.lineTo(5572,22372);
ctx.lineTo(5608,22372);
ctx.lineTo(5608,22408);
ctx.lineTo(5572,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,174,47,0.85)';
ctx.strokeStyle='rgb(246,5,208)';
ctx.moveTo(5572,22312);
ctx.lineTo(5572,22276);
ctx.lineTo(5608,22276);
ctx.lineTo(5608,22312);
ctx.lineTo(5572,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,224,223,0.85)';
ctx.strokeStyle='rgb(220,185,113)';
ctx.moveTo(1792,22504);
ctx.lineTo(1792,22468);
ctx.lineTo(1828,22468);
ctx.lineTo(1828,22504);
ctx.lineTo(1792,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,81,156,0.85)';
ctx.strokeStyle='rgb(166,173,102)';
ctx.moveTo(1792,22408);
ctx.lineTo(1792,22372);
ctx.lineTo(1828,22372);
ctx.lineTo(1828,22408);
ctx.lineTo(1792,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,28,18,0.85)';
ctx.strokeStyle='rgb(142,193,168)';
ctx.moveTo(1792,22312);
ctx.lineTo(1792,22276);
ctx.lineTo(1828,22276);
ctx.lineTo(1828,22312);
ctx.lineTo(1792,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,239,225,0.85)';
ctx.strokeStyle='rgb(96,106,152)';
ctx.moveTo(1888,22504);
ctx.lineTo(1888,22468);
ctx.lineTo(1924,22468);
ctx.lineTo(1924,22504);
ctx.lineTo(1888,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,246,243,0.85)';
ctx.strokeStyle='rgb(69,181,100)';
ctx.moveTo(1888,22408);
ctx.lineTo(1888,22372);
ctx.lineTo(1924,22372);
ctx.lineTo(1924,22408);
ctx.lineTo(1888,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,27,253,0.85)';
ctx.strokeStyle='rgb(181,109,168)';
ctx.moveTo(1888,22312);
ctx.lineTo(1888,22276);
ctx.lineTo(1924,22276);
ctx.lineTo(1924,22312);
ctx.lineTo(1888,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,246,76,0.85)';
ctx.strokeStyle='rgb(99,91,218)';
ctx.moveTo(1984,22504);
ctx.lineTo(1984,22468);
ctx.lineTo(2020,22468);
ctx.lineTo(2020,22504);
ctx.lineTo(1984,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,46,133,0.85)';
ctx.strokeStyle='rgb(180,100,134)';
ctx.moveTo(1984,22408);
ctx.lineTo(1984,22372);
ctx.lineTo(2020,22372);
ctx.lineTo(2020,22408);
ctx.lineTo(1984,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,114,40,0.85)';
ctx.strokeStyle='rgb(208,120,240)';
ctx.moveTo(1984,22312);
ctx.lineTo(1984,22276);
ctx.lineTo(2020,22276);
ctx.lineTo(2020,22312);
ctx.lineTo(1984,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,192,169,0.85)';
ctx.strokeStyle='rgb(168,217,7)';
ctx.moveTo(2080,22504);
ctx.lineTo(2080,22468);
ctx.lineTo(2116,22468);
ctx.lineTo(2116,22504);
ctx.lineTo(2080,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,245,226,0.85)';
ctx.strokeStyle='rgb(14,202,117)';
ctx.moveTo(2080,22408);
ctx.lineTo(2080,22372);
ctx.lineTo(2116,22372);
ctx.lineTo(2116,22408);
ctx.lineTo(2080,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,97,109,0.85)';
ctx.strokeStyle='rgb(200,201,32)';
ctx.moveTo(2080,22312);
ctx.lineTo(2080,22276);
ctx.lineTo(2116,22276);
ctx.lineTo(2116,22312);
ctx.lineTo(2080,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,233,47,0.85)';
ctx.strokeStyle='rgb(203,190,15)';
ctx.moveTo(2176,22504);
ctx.lineTo(2176,22468);
ctx.lineTo(2212,22468);
ctx.lineTo(2212,22504);
ctx.lineTo(2176,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,36,237,0.85)';
ctx.strokeStyle='rgb(42,29,67)';
ctx.moveTo(2176,22408);
ctx.lineTo(2176,22372);
ctx.lineTo(2212,22372);
ctx.lineTo(2212,22408);
ctx.lineTo(2176,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,202,67,0.85)';
ctx.strokeStyle='rgb(216,53,201)';
ctx.moveTo(2176,22312);
ctx.lineTo(2176,22276);
ctx.lineTo(2212,22276);
ctx.lineTo(2212,22312);
ctx.lineTo(2176,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,70,181,0.85)';
ctx.strokeStyle='rgb(246,5,249)';
ctx.moveTo(2272,22504);
ctx.lineTo(2272,22468);
ctx.lineTo(2308,22468);
ctx.lineTo(2308,22504);
ctx.lineTo(2272,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,251,237,0.85)';
ctx.strokeStyle='rgb(45,184,201)';
ctx.moveTo(2272,22408);
ctx.lineTo(2272,22372);
ctx.lineTo(2308,22372);
ctx.lineTo(2308,22408);
ctx.lineTo(2272,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,204,144,0.85)';
ctx.strokeStyle='rgb(200,73,98)';
ctx.moveTo(2272,22312);
ctx.lineTo(2272,22276);
ctx.lineTo(2308,22276);
ctx.lineTo(2308,22312);
ctx.lineTo(2272,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,38,48,0.85)';
ctx.strokeStyle='rgb(151,233,231)';
ctx.moveTo(2368,22504);
ctx.lineTo(2368,22468);
ctx.lineTo(2404,22468);
ctx.lineTo(2404,22504);
ctx.lineTo(2368,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,78,179,0.85)';
ctx.strokeStyle='rgb(233,243,201)';
ctx.moveTo(2368,22408);
ctx.lineTo(2368,22372);
ctx.lineTo(2404,22372);
ctx.lineTo(2404,22408);
ctx.lineTo(2368,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,77,144,0.85)';
ctx.strokeStyle='rgb(80,91,64)';
ctx.moveTo(2368,22312);
ctx.lineTo(2368,22276);
ctx.lineTo(2404,22276);
ctx.lineTo(2404,22312);
ctx.lineTo(2368,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,94,196,0.85)';
ctx.strokeStyle='rgb(122,80,91)';
ctx.moveTo(2464,22504);
ctx.lineTo(2464,22468);
ctx.lineTo(2500,22468);
ctx.lineTo(2500,22504);
ctx.lineTo(2464,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,33,188,0.85)';
ctx.strokeStyle='rgb(211,83,38)';
ctx.moveTo(2464,22408);
ctx.lineTo(2464,22372);
ctx.lineTo(2500,22372);
ctx.lineTo(2500,22408);
ctx.lineTo(2464,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,17,94,0.85)';
ctx.strokeStyle='rgb(15,93,147)';
ctx.moveTo(2464,22312);
ctx.lineTo(2464,22276);
ctx.lineTo(2500,22276);
ctx.lineTo(2500,22312);
ctx.lineTo(2464,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,175,85,0.85)';
ctx.strokeStyle='rgb(62,188,172)';
ctx.moveTo(2560,22504);
ctx.lineTo(2560,22468);
ctx.lineTo(2596,22468);
ctx.lineTo(2596,22504);
ctx.lineTo(2560,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,10,234,0.85)';
ctx.strokeStyle='rgb(111,245,192)';
ctx.moveTo(2560,22408);
ctx.lineTo(2560,22372);
ctx.lineTo(2596,22372);
ctx.lineTo(2596,22408);
ctx.lineTo(2560,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,29,154,0.85)';
ctx.strokeStyle='rgb(170,108,61)';
ctx.moveTo(2560,22312);
ctx.lineTo(2560,22276);
ctx.lineTo(2596,22276);
ctx.lineTo(2596,22312);
ctx.lineTo(2560,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,204,153,0.85)';
ctx.strokeStyle='rgb(9,16,173)';
ctx.moveTo(2656,22504);
ctx.lineTo(2656,22468);
ctx.lineTo(2692,22468);
ctx.lineTo(2692,22504);
ctx.lineTo(2656,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,143,217,0.85)';
ctx.strokeStyle='rgb(136,187,13)';
ctx.moveTo(2656,22408);
ctx.lineTo(2656,22372);
ctx.lineTo(2692,22372);
ctx.lineTo(2692,22408);
ctx.lineTo(2656,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,223,2,0.85)';
ctx.strokeStyle='rgb(69,0,18)';
ctx.moveTo(2656,22312);
ctx.lineTo(2656,22276);
ctx.lineTo(2692,22276);
ctx.lineTo(2692,22312);
ctx.lineTo(2656,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,150,56,0.85)';
ctx.strokeStyle='rgb(136,80,200)';
ctx.moveTo(1696,22504);
ctx.lineTo(1696,22468);
ctx.lineTo(1732,22468);
ctx.lineTo(1732,22504);
ctx.lineTo(1696,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,24,64,0.85)';
ctx.strokeStyle='rgb(26,227,232)';
ctx.moveTo(1696,22408);
ctx.lineTo(1696,22372);
ctx.lineTo(1732,22372);
ctx.lineTo(1732,22408);
ctx.lineTo(1696,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,203,153,0.85)';
ctx.strokeStyle='rgb(57,148,220)';
ctx.moveTo(1696,22312);
ctx.lineTo(1696,22276);
ctx.lineTo(1732,22276);
ctx.lineTo(1732,22312);
ctx.lineTo(1696,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,224,168,0.85)';
ctx.strokeStyle='rgb(135,135,55)';
ctx.moveTo(2368,25432);
ctx.lineTo(2368,25396);
ctx.lineTo(2404,25396);
ctx.lineTo(2404,25432);
ctx.lineTo(2368,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,27,41,0.85)';
ctx.strokeStyle='rgb(232,108,64)';
ctx.moveTo(2368,25336);
ctx.lineTo(2368,25300);
ctx.lineTo(2404,25300);
ctx.lineTo(2404,25336);
ctx.lineTo(2368,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,76,207,0.85)';
ctx.strokeStyle='rgb(238,0,167)';
ctx.moveTo(2464,25432);
ctx.lineTo(2464,25396);
ctx.lineTo(2500,25396);
ctx.lineTo(2500,25432);
ctx.lineTo(2464,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,23,10,0.85)';
ctx.strokeStyle='rgb(188,5,158)';
ctx.moveTo(2464,25336);
ctx.lineTo(2464,25300);
ctx.lineTo(2500,25300);
ctx.lineTo(2500,25336);
ctx.lineTo(2464,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,101,50,0.85)';
ctx.strokeStyle='rgb(238,220,50)';
ctx.moveTo(2560,25432);
ctx.lineTo(2560,25396);
ctx.lineTo(2596,25396);
ctx.lineTo(2596,25432);
ctx.lineTo(2560,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,147,135,0.85)';
ctx.strokeStyle='rgb(105,162,121)';
ctx.moveTo(2560,25336);
ctx.lineTo(2560,25300);
ctx.lineTo(2596,25300);
ctx.lineTo(2596,25336);
ctx.lineTo(2560,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,233,17,0.85)';
ctx.strokeStyle='rgb(219,97,79)';
ctx.moveTo(2656,25432);
ctx.lineTo(2656,25396);
ctx.lineTo(2692,25396);
ctx.lineTo(2692,25432);
ctx.lineTo(2656,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,166,245,0.85)';
ctx.strokeStyle='rgb(230,16,95)';
ctx.moveTo(2656,25336);
ctx.lineTo(2656,25300);
ctx.lineTo(2692,25300);
ctx.lineTo(2692,25336);
ctx.lineTo(2656,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,45,37,0.85)';
ctx.strokeStyle='rgb(103,200,3)';
ctx.moveTo(1696,25432);
ctx.lineTo(1696,25396);
ctx.lineTo(1732,25396);
ctx.lineTo(1732,25432);
ctx.lineTo(1696,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,190,134,0.85)';
ctx.strokeStyle='rgb(220,77,188)';
ctx.moveTo(1696,25336);
ctx.lineTo(1696,25300);
ctx.lineTo(1732,25300);
ctx.lineTo(1732,25336);
ctx.lineTo(1696,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,216,187,0.85)';
ctx.strokeStyle='rgb(169,142,44)';
ctx.moveTo(1792,25432);
ctx.lineTo(1792,25396);
ctx.lineTo(1828,25396);
ctx.lineTo(1828,25432);
ctx.lineTo(1792,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,138,129,0.85)';
ctx.strokeStyle='rgb(27,33,118)';
ctx.moveTo(1792,25336);
ctx.lineTo(1792,25300);
ctx.lineTo(1828,25300);
ctx.lineTo(1828,25336);
ctx.lineTo(1792,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,180,35,0.85)';
ctx.strokeStyle='rgb(214,144,131)';
ctx.moveTo(1888,25432);
ctx.lineTo(1888,25396);
ctx.lineTo(1924,25396);
ctx.lineTo(1924,25432);
ctx.lineTo(1888,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,57,77,0.85)';
ctx.strokeStyle='rgb(158,28,169)';
ctx.moveTo(1888,25336);
ctx.lineTo(1888,25300);
ctx.lineTo(1924,25300);
ctx.lineTo(1924,25336);
ctx.lineTo(1888,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,151,5,0.85)';
ctx.strokeStyle='rgb(71,10,27)';
ctx.moveTo(1984,25432);
ctx.lineTo(1984,25396);
ctx.lineTo(2020,25396);
ctx.lineTo(2020,25432);
ctx.lineTo(1984,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,228,112,0.85)';
ctx.strokeStyle='rgb(133,246,47)';
ctx.moveTo(1984,25336);
ctx.lineTo(1984,25300);
ctx.lineTo(2020,25300);
ctx.lineTo(2020,25336);
ctx.lineTo(1984,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,22,22,0.85)';
ctx.strokeStyle='rgb(110,56,63)';
ctx.moveTo(2080,25432);
ctx.lineTo(2080,25396);
ctx.lineTo(2116,25396);
ctx.lineTo(2116,25432);
ctx.lineTo(2080,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,59,72,0.85)';
ctx.strokeStyle='rgb(210,157,169)';
ctx.moveTo(2080,25336);
ctx.lineTo(2080,25300);
ctx.lineTo(2116,25300);
ctx.lineTo(2116,25336);
ctx.lineTo(2080,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,168,217,0.85)';
ctx.strokeStyle='rgb(179,209,168)';
ctx.moveTo(2176,25432);
ctx.lineTo(2176,25396);
ctx.lineTo(2212,25396);
ctx.lineTo(2212,25432);
ctx.lineTo(2176,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,134,3,0.85)';
ctx.strokeStyle='rgb(75,149,64)';
ctx.moveTo(2992,24016);
ctx.lineTo(2992,23980);
ctx.lineTo(3028,23980);
ctx.lineTo(3028,24016);
ctx.lineTo(2992,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,122,248,0.85)';
ctx.strokeStyle='rgb(179,143,99)';
ctx.moveTo(2992,23920);
ctx.lineTo(2992,23884);
ctx.lineTo(3028,23884);
ctx.lineTo(3028,23920);
ctx.lineTo(2992,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,178,147,0.85)';
ctx.strokeStyle='rgb(213,241,24)';
ctx.moveTo(2992,23824);
ctx.lineTo(2992,23788);
ctx.lineTo(3028,23788);
ctx.lineTo(3028,23824);
ctx.lineTo(2992,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,221,194,0.85)';
ctx.strokeStyle='rgb(66,149,5)';
ctx.moveTo(3088,24016);
ctx.lineTo(3088,23980);
ctx.lineTo(3124,23980);
ctx.lineTo(3124,24016);
ctx.lineTo(3088,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,100,63,0.85)';
ctx.strokeStyle='rgb(81,124,169)';
ctx.moveTo(3088,23920);
ctx.lineTo(3088,23884);
ctx.lineTo(3124,23884);
ctx.lineTo(3124,23920);
ctx.lineTo(3088,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,188,85,0.85)';
ctx.strokeStyle='rgb(210,118,142)';
ctx.moveTo(3088,23824);
ctx.lineTo(3088,23788);
ctx.lineTo(3124,23788);
ctx.lineTo(3124,23824);
ctx.lineTo(3088,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,180,61,0.85)';
ctx.strokeStyle='rgb(40,138,146)';
ctx.moveTo(3184,24016);
ctx.lineTo(3184,23980);
ctx.lineTo(3220,23980);
ctx.lineTo(3220,24016);
ctx.lineTo(3184,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,229,53,0.85)';
ctx.strokeStyle='rgb(19,158,104)';
ctx.moveTo(3184,23920);
ctx.lineTo(3184,23884);
ctx.lineTo(3220,23884);
ctx.lineTo(3220,23920);
ctx.lineTo(3184,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,239,173,0.85)';
ctx.strokeStyle='rgb(8,220,5)';
ctx.moveTo(3184,23824);
ctx.lineTo(3184,23788);
ctx.lineTo(3220,23788);
ctx.lineTo(3220,23824);
ctx.lineTo(3184,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,123,230,0.85)';
ctx.strokeStyle='rgb(219,248,201)';
ctx.moveTo(3280,24016);
ctx.lineTo(3280,23980);
ctx.lineTo(3316,23980);
ctx.lineTo(3316,24016);
ctx.lineTo(3280,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,120,233,0.85)';
ctx.strokeStyle='rgb(32,57,25)';
ctx.moveTo(3280,23920);
ctx.lineTo(3280,23884);
ctx.lineTo(3316,23884);
ctx.lineTo(3316,23920);
ctx.lineTo(3280,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,252,79,0.85)';
ctx.strokeStyle='rgb(136,72,113)';
ctx.moveTo(3280,23824);
ctx.lineTo(3280,23788);
ctx.lineTo(3316,23788);
ctx.lineTo(3316,23824);
ctx.lineTo(3280,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,120,104,0.85)';
ctx.strokeStyle='rgb(214,53,155)';
ctx.moveTo(3376,24016);
ctx.lineTo(3376,23980);
ctx.lineTo(3412,23980);
ctx.lineTo(3412,24016);
ctx.lineTo(3376,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,227,209,0.85)';
ctx.strokeStyle='rgb(159,55,155)';
ctx.moveTo(3376,23920);
ctx.lineTo(3376,23884);
ctx.lineTo(3412,23884);
ctx.lineTo(3412,23920);
ctx.lineTo(3376,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,224,1,0.85)';
ctx.strokeStyle='rgb(5,10,3)';
ctx.moveTo(3376,23824);
ctx.lineTo(3376,23788);
ctx.lineTo(3412,23788);
ctx.lineTo(3412,23824);
ctx.lineTo(3376,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,111,56,0.85)';
ctx.strokeStyle='rgb(137,110,145)';
ctx.moveTo(3472,24016);
ctx.lineTo(3472,23980);
ctx.lineTo(3508,23980);
ctx.lineTo(3508,24016);
ctx.lineTo(3472,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,25,249,0.85)';
ctx.strokeStyle='rgb(234,98,113)';
ctx.moveTo(3472,23920);
ctx.lineTo(3472,23884);
ctx.lineTo(3508,23884);
ctx.lineTo(3508,23920);
ctx.lineTo(3472,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,216,169,0.85)';
ctx.strokeStyle='rgb(117,33,231)';
ctx.moveTo(3472,23824);
ctx.lineTo(3472,23788);
ctx.lineTo(3508,23788);
ctx.lineTo(3508,23824);
ctx.lineTo(3472,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,103,40,0.85)';
ctx.strokeStyle='rgb(181,155,24)';
ctx.moveTo(3568,24016);
ctx.lineTo(3568,23980);
ctx.lineTo(3604,23980);
ctx.lineTo(3604,24016);
ctx.lineTo(3568,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,175,141,0.85)';
ctx.strokeStyle='rgb(161,150,177)';
ctx.moveTo(3568,23920);
ctx.lineTo(3568,23884);
ctx.lineTo(3604,23884);
ctx.lineTo(3604,23920);
ctx.lineTo(3568,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,217,3,0.85)';
ctx.strokeStyle='rgb(9,22,234)';
ctx.moveTo(3568,23824);
ctx.lineTo(3568,23788);
ctx.lineTo(3604,23788);
ctx.lineTo(3604,23824);
ctx.lineTo(3568,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,71,59,0.85)';
ctx.strokeStyle='rgb(84,48,114)';
ctx.moveTo(3664,24016);
ctx.lineTo(3664,23980);
ctx.lineTo(3700,23980);
ctx.lineTo(3700,24016);
ctx.lineTo(3664,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,136,80,0.85)';
ctx.strokeStyle='rgb(35,138,207)';
ctx.moveTo(3664,23920);
ctx.lineTo(3664,23884);
ctx.lineTo(3700,23884);
ctx.lineTo(3700,23920);
ctx.lineTo(3664,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,249,31,0.85)';
ctx.strokeStyle='rgb(123,51,77)';
ctx.moveTo(3664,23824);
ctx.lineTo(3664,23788);
ctx.lineTo(3700,23788);
ctx.lineTo(3700,23824);
ctx.lineTo(3664,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,234,125,0.85)';
ctx.strokeStyle='rgb(11,173,201)';
ctx.moveTo(3760,24016);
ctx.lineTo(3760,23980);
ctx.lineTo(3796,23980);
ctx.lineTo(3796,24016);
ctx.lineTo(3760,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,253,173,0.85)';
ctx.strokeStyle='rgb(67,41,3)';
ctx.moveTo(3760,23920);
ctx.lineTo(3760,23884);
ctx.lineTo(3796,23884);
ctx.lineTo(3796,23920);
ctx.lineTo(3760,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,24,197,0.85)';
ctx.strokeStyle='rgb(8,31,181)';
ctx.moveTo(3760,23824);
ctx.lineTo(3760,23788);
ctx.lineTo(3796,23788);
ctx.lineTo(3796,23824);
ctx.lineTo(3760,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,80,185,0.85)';
ctx.strokeStyle='rgb(135,235,46)';
ctx.moveTo(2176,25336);
ctx.lineTo(2176,25300);
ctx.lineTo(2212,25300);
ctx.lineTo(2212,25336);
ctx.lineTo(2176,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,134,61,0.85)';
ctx.strokeStyle='rgb(193,80,230)';
ctx.moveTo(2272,25432);
ctx.lineTo(2272,25396);
ctx.lineTo(2308,25396);
ctx.lineTo(2308,25432);
ctx.lineTo(2272,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,13,237,0.85)';
ctx.strokeStyle='rgb(129,32,58)';
ctx.moveTo(2272,25336);
ctx.lineTo(2272,25300);
ctx.lineTo(2308,25300);
ctx.lineTo(2308,25336);
ctx.lineTo(2272,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,140,102,0.85)';
ctx.strokeStyle='rgb(154,5,32)';
ctx.moveTo(5764,25432);
ctx.lineTo(5764,25396);
ctx.lineTo(5800,25396);
ctx.lineTo(5800,25432);
ctx.lineTo(5764,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,250,1,0.85)';
ctx.strokeStyle='rgb(254,46,233)';
ctx.moveTo(5572,25336);
ctx.lineTo(5572,25300);
ctx.lineTo(5608,25300);
ctx.lineTo(5608,25336);
ctx.lineTo(5572,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,5,245,0.85)';
ctx.strokeStyle='rgb(7,156,23)';
ctx.moveTo(5764,25336);
ctx.lineTo(5764,25300);
ctx.lineTo(5800,25300);
ctx.lineTo(5800,25336);
ctx.lineTo(5764,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,31,203,0.85)';
ctx.strokeStyle='rgb(201,18,19)';
ctx.moveTo(5860,25432);
ctx.lineTo(5860,25396);
ctx.lineTo(5896,25396);
ctx.lineTo(5896,25432);
ctx.lineTo(5860,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,71,164,0.85)';
ctx.strokeStyle='rgb(184,194,152)';
ctx.moveTo(5956,25432);
ctx.lineTo(5956,25396);
ctx.lineTo(5992,25396);
ctx.lineTo(5992,25432);
ctx.lineTo(5956,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,73,182,0.85)';
ctx.strokeStyle='rgb(33,27,73)';
ctx.moveTo(5668,25336);
ctx.lineTo(5668,25300);
ctx.lineTo(5704,25300);
ctx.lineTo(5704,25336);
ctx.lineTo(5668,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,93,125,0.85)';
ctx.strokeStyle='rgb(122,213,0)';
ctx.moveTo(5668,25432);
ctx.lineTo(5668,25396);
ctx.lineTo(5704,25396);
ctx.lineTo(5704,25432);
ctx.lineTo(5668,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,227,238,0.85)';
ctx.strokeStyle='rgb(177,111,157)';
ctx.moveTo(5476,25432);
ctx.lineTo(5476,25396);
ctx.lineTo(5512,25396);
ctx.lineTo(5512,25432);
ctx.lineTo(5476,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,129,27,0.85)';
ctx.strokeStyle='rgb(250,160,160)';
ctx.moveTo(5956,25336);
ctx.lineTo(5956,25300);
ctx.lineTo(5992,25300);
ctx.lineTo(5992,25336);
ctx.lineTo(5956,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,113,46,0.85)';
ctx.strokeStyle='rgb(222,196,50)';
ctx.moveTo(5860,25336);
ctx.lineTo(5860,25300);
ctx.lineTo(5896,25300);
ctx.lineTo(5896,25336);
ctx.lineTo(5860,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,217,71,0.85)';
ctx.strokeStyle='rgb(140,23,228)';
ctx.moveTo(5572,25432);
ctx.lineTo(5572,25396);
ctx.lineTo(5608,25396);
ctx.lineTo(5608,25432);
ctx.lineTo(5572,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,208,89,0.85)';
ctx.strokeStyle='rgb(168,237,119)';
ctx.moveTo(5476,25336);
ctx.lineTo(5476,25300);
ctx.lineTo(5512,25300);
ctx.lineTo(5512,25336);
ctx.lineTo(5476,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,188,73,0.85)';
ctx.strokeStyle='rgb(101,213,64)';
ctx.moveTo(3952,24016);
ctx.lineTo(3952,23980);
ctx.lineTo(3988,23980);
ctx.lineTo(3988,24016);
ctx.lineTo(3952,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,54,33,0.85)';
ctx.strokeStyle='rgb(108,88,204)';
ctx.moveTo(3952,23920);
ctx.lineTo(3952,23884);
ctx.lineTo(3988,23884);
ctx.lineTo(3988,23920);
ctx.lineTo(3952,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,233,244,0.85)';
ctx.strokeStyle='rgb(246,99,104)';
ctx.moveTo(3952,23824);
ctx.lineTo(3952,23788);
ctx.lineTo(3988,23788);
ctx.lineTo(3988,23824);
ctx.lineTo(3952,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,243,60,0.85)';
ctx.strokeStyle='rgb(73,207,203)';
ctx.moveTo(6052,25432);
ctx.lineTo(6052,25396);
ctx.lineTo(6088,25396);
ctx.lineTo(6088,25432);
ctx.lineTo(6052,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,214,38,0.85)';
ctx.strokeStyle='rgb(101,165,124)';
ctx.moveTo(6340,22408);
ctx.lineTo(6340,22372);
ctx.lineTo(6376,22372);
ctx.lineTo(6376,22408);
ctx.lineTo(6340,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,250,177,0.85)';
ctx.strokeStyle='rgb(44,0,174)';
ctx.moveTo(6340,22312);
ctx.lineTo(6340,22276);
ctx.lineTo(6376,22276);
ctx.lineTo(6376,22312);
ctx.lineTo(6340,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,9,78,0.85)';
ctx.strokeStyle='rgb(155,180,126)';
ctx.moveTo(6052,25336);
ctx.lineTo(6052,25300);
ctx.lineTo(6088,25300);
ctx.lineTo(6088,25336);
ctx.lineTo(6052,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,0,223,0.85)';
ctx.strokeStyle='rgb(231,228,151)';
ctx.moveTo(6436,22504);
ctx.lineTo(6436,22468);
ctx.lineTo(6472,22468);
ctx.lineTo(6472,22504);
ctx.lineTo(6436,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,124,56,0.85)';
ctx.strokeStyle='rgb(236,202,54)';
ctx.moveTo(6436,22408);
ctx.lineTo(6436,22372);
ctx.lineTo(6472,22372);
ctx.lineTo(6472,22408);
ctx.lineTo(6436,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,189,131,0.85)';
ctx.strokeStyle='rgb(90,1,89)';
ctx.moveTo(6436,22312);
ctx.lineTo(6436,22276);
ctx.lineTo(6472,22276);
ctx.lineTo(6472,22312);
ctx.lineTo(6436,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,200,30,0.85)';
ctx.strokeStyle='rgb(22,114,7)';
ctx.moveTo(6148,25336);
ctx.lineTo(6148,25300);
ctx.lineTo(6184,25300);
ctx.lineTo(6184,25336);
ctx.lineTo(6148,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,245,104,0.85)';
ctx.strokeStyle='rgb(65,83,193)';
ctx.moveTo(6340,25432);
ctx.lineTo(6340,25396);
ctx.lineTo(6376,25396);
ctx.lineTo(6376,25432);
ctx.lineTo(6340,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,160,131,0.85)';
ctx.strokeStyle='rgb(121,6,142)';
ctx.moveTo(6340,25336);
ctx.lineTo(6340,25300);
ctx.lineTo(6376,25300);
ctx.lineTo(6376,25336);
ctx.lineTo(6340,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,232,0,0.85)';
ctx.strokeStyle='rgb(158,252,16)';
ctx.moveTo(6148,25432);
ctx.lineTo(6148,25396);
ctx.lineTo(6184,25396);
ctx.lineTo(6184,25432);
ctx.lineTo(6148,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,135,224,0.85)';
ctx.strokeStyle='rgb(200,77,139)';
ctx.moveTo(6436,25432);
ctx.lineTo(6436,25396);
ctx.lineTo(6472,25396);
ctx.lineTo(6472,25432);
ctx.lineTo(6436,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,66,25,0.85)';
ctx.strokeStyle='rgb(77,62,242)';
ctx.moveTo(6436,25336);
ctx.lineTo(6436,25300);
ctx.lineTo(6472,25300);
ctx.lineTo(6472,25336);
ctx.lineTo(6436,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,13,94,0.85)';
ctx.strokeStyle='rgb(193,217,23)';
ctx.moveTo(6244,25432);
ctx.lineTo(6244,25396);
ctx.lineTo(6280,25396);
ctx.lineTo(6280,25432);
ctx.lineTo(6244,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,13,172,0.85)';
ctx.strokeStyle='rgb(122,231,88)';
ctx.moveTo(6244,25336);
ctx.lineTo(6244,25300);
ctx.lineTo(6280,25300);
ctx.lineTo(6280,25336);
ctx.lineTo(6244,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,32,57,0.85)';
ctx.strokeStyle='rgb(254,218,4)';
ctx.moveTo(6052,22504);
ctx.lineTo(6052,22468);
ctx.lineTo(6088,22468);
ctx.lineTo(6088,22504);
ctx.lineTo(6052,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,253,231,0.85)';
ctx.strokeStyle='rgb(37,57,163)';
ctx.moveTo(6052,22408);
ctx.lineTo(6052,22372);
ctx.lineTo(6088,22372);
ctx.lineTo(6088,22408);
ctx.lineTo(6052,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,65,196,0.85)';
ctx.strokeStyle='rgb(192,88,51)';
ctx.moveTo(6052,22312);
ctx.lineTo(6052,22276);
ctx.lineTo(6088,22276);
ctx.lineTo(6088,22312);
ctx.lineTo(6052,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,78,23,0.85)';
ctx.strokeStyle='rgb(240,3,8)';
ctx.moveTo(6148,22504);
ctx.lineTo(6148,22468);
ctx.lineTo(6184,22468);
ctx.lineTo(6184,22504);
ctx.lineTo(6148,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,226,18,0.85)';
ctx.strokeStyle='rgb(92,208,100)';
ctx.moveTo(6148,22408);
ctx.lineTo(6148,22372);
ctx.lineTo(6184,22372);
ctx.lineTo(6184,22408);
ctx.lineTo(6148,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,221,127,0.85)';
ctx.strokeStyle='rgb(181,222,152)';
ctx.moveTo(6148,22312);
ctx.lineTo(6148,22276);
ctx.lineTo(6184,22276);
ctx.lineTo(6184,22312);
ctx.lineTo(6148,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,248,254,0.85)';
ctx.strokeStyle='rgb(143,175,47)';
ctx.moveTo(6244,22504);
ctx.lineTo(6244,22468);
ctx.lineTo(6280,22468);
ctx.lineTo(6280,22504);
ctx.lineTo(6244,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,252,64,0.85)';
ctx.strokeStyle='rgb(120,39,165)';
ctx.moveTo(6244,22408);
ctx.lineTo(6244,22372);
ctx.lineTo(6280,22372);
ctx.lineTo(6280,22408);
ctx.lineTo(6244,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,91,119,0.85)';
ctx.strokeStyle='rgb(133,87,13)';
ctx.moveTo(6244,22312);
ctx.lineTo(6244,22276);
ctx.lineTo(6280,22276);
ctx.lineTo(6280,22312);
ctx.lineTo(6244,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,3,158,0.85)';
ctx.strokeStyle='rgb(44,98,0)';
ctx.moveTo(6340,22504);
ctx.lineTo(6340,22468);
ctx.lineTo(6376,22468);
ctx.lineTo(6376,22504);
ctx.lineTo(6340,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,54,197,0.85)';
ctx.strokeStyle='rgb(91,89,57)';
ctx.moveTo(6052,28552);
ctx.lineTo(6052,28516);
ctx.lineTo(6088,28516);
ctx.lineTo(6088,28552);
ctx.lineTo(6052,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,58,152,0.85)';
ctx.strokeStyle='rgb(148,62,205)';
ctx.moveTo(6052,28456);
ctx.lineTo(6052,28420);
ctx.lineTo(6088,28420);
ctx.lineTo(6088,28456);
ctx.lineTo(6052,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,234,8,0.85)';
ctx.strokeStyle='rgb(37,232,141)';
ctx.moveTo(6052,28360);
ctx.lineTo(6052,28324);
ctx.lineTo(6088,28324);
ctx.lineTo(6088,28360);
ctx.lineTo(6052,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,50,87,0.85)';
ctx.strokeStyle='rgb(75,56,111)';
ctx.moveTo(6148,28552);
ctx.lineTo(6148,28516);
ctx.lineTo(6184,28516);
ctx.lineTo(6184,28552);
ctx.lineTo(6148,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,19,155,0.85)';
ctx.strokeStyle='rgb(222,66,215)';
ctx.moveTo(6148,28456);
ctx.lineTo(6148,28420);
ctx.lineTo(6184,28420);
ctx.lineTo(6184,28456);
ctx.lineTo(6148,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,206,19,0.85)';
ctx.strokeStyle='rgb(24,115,237)';
ctx.moveTo(6148,28360);
ctx.lineTo(6148,28324);
ctx.lineTo(6184,28324);
ctx.lineTo(6184,28360);
ctx.lineTo(6148,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,91,138,0.85)';
ctx.strokeStyle='rgb(239,187,6)';
ctx.moveTo(6244,28552);
ctx.lineTo(6244,28516);
ctx.lineTo(6280,28516);
ctx.lineTo(6280,28552);
ctx.lineTo(6244,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,182,205,0.85)';
ctx.strokeStyle='rgb(127,195,49)';
ctx.moveTo(6244,28456);
ctx.lineTo(6244,28420);
ctx.lineTo(6280,28420);
ctx.lineTo(6280,28456);
ctx.lineTo(6244,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,251,80,0.85)';
ctx.strokeStyle='rgb(104,4,171)';
ctx.moveTo(6244,28360);
ctx.lineTo(6244,28324);
ctx.lineTo(6280,28324);
ctx.lineTo(6280,28360);
ctx.lineTo(6244,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,199,71,0.85)';
ctx.strokeStyle='rgb(207,220,108)';
ctx.moveTo(6340,28552);
ctx.lineTo(6340,28516);
ctx.lineTo(6376,28516);
ctx.lineTo(6376,28552);
ctx.lineTo(6340,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,19,45,0.85)';
ctx.strokeStyle='rgb(63,99,187)';
ctx.moveTo(6340,28456);
ctx.lineTo(6340,28420);
ctx.lineTo(6376,28420);
ctx.lineTo(6376,28456);
ctx.lineTo(6340,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,172,100,0.85)';
ctx.strokeStyle='rgb(215,12,67)';
ctx.moveTo(6340,28360);
ctx.lineTo(6340,28324);
ctx.lineTo(6376,28324);
ctx.lineTo(6376,28360);
ctx.lineTo(6340,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,65,15,0.85)';
ctx.strokeStyle='rgb(27,184,160)';
ctx.moveTo(6436,28552);
ctx.lineTo(6436,28516);
ctx.lineTo(6472,28516);
ctx.lineTo(6472,28552);
ctx.lineTo(6436,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,18,156,0.85)';
ctx.strokeStyle='rgb(147,147,189)';
ctx.moveTo(6436,28456);
ctx.lineTo(6436,28420);
ctx.lineTo(6472,28420);
ctx.lineTo(6472,28456);
ctx.lineTo(6436,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,19,217,0.85)';
ctx.strokeStyle='rgb(44,108,205)';
ctx.moveTo(6436,28360);
ctx.lineTo(6436,28324);
ctx.lineTo(6472,28324);
ctx.lineTo(6472,28360);
ctx.lineTo(6436,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,153,168,0.85)';
ctx.strokeStyle='rgb(181,193,151)';
ctx.moveTo(5956,28552);
ctx.lineTo(5956,28516);
ctx.lineTo(5992,28516);
ctx.lineTo(5992,28552);
ctx.lineTo(5956,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,14,20,0.85)';
ctx.strokeStyle='rgb(215,146,225)';
ctx.moveTo(5956,28456);
ctx.lineTo(5956,28420);
ctx.lineTo(5992,28420);
ctx.lineTo(5992,28456);
ctx.lineTo(5956,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,138,218,0.85)';
ctx.strokeStyle='rgb(211,84,237)';
ctx.moveTo(5956,28360);
ctx.lineTo(5956,28324);
ctx.lineTo(5992,28324);
ctx.lineTo(5992,28360);
ctx.lineTo(5956,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,39,151,0.85)';
ctx.strokeStyle='rgb(199,47,179)';
ctx.moveTo(5476,28552);
ctx.lineTo(5476,28516);
ctx.lineTo(5512,28516);
ctx.lineTo(5512,28552);
ctx.lineTo(5476,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,210,16,0.85)';
ctx.strokeStyle='rgb(65,101,186)';
ctx.moveTo(5476,28456);
ctx.lineTo(5476,28420);
ctx.lineTo(5512,28420);
ctx.lineTo(5512,28456);
ctx.lineTo(5476,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,150,59,0.85)';
ctx.strokeStyle='rgb(122,180,198)';
ctx.moveTo(5476,28360);
ctx.lineTo(5476,28324);
ctx.lineTo(5512,28324);
ctx.lineTo(5512,28360);
ctx.lineTo(5476,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,30,178,0.85)';
ctx.strokeStyle='rgb(81,159,16)';
ctx.moveTo(5572,28552);
ctx.lineTo(5572,28516);
ctx.lineTo(5608,28516);
ctx.lineTo(5608,28552);
ctx.lineTo(5572,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,89,79,0.85)';
ctx.strokeStyle='rgb(161,50,32)';
ctx.moveTo(5572,28456);
ctx.lineTo(5572,28420);
ctx.lineTo(5608,28420);
ctx.lineTo(5608,28456);
ctx.lineTo(5572,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,198,191,0.85)';
ctx.strokeStyle='rgb(185,193,130)';
ctx.moveTo(5572,28360);
ctx.lineTo(5572,28324);
ctx.lineTo(5608,28324);
ctx.lineTo(5608,28360);
ctx.lineTo(5572,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,124,78,0.85)';
ctx.strokeStyle='rgb(2,201,10)';
ctx.moveTo(5668,28552);
ctx.lineTo(5668,28516);
ctx.lineTo(5704,28516);
ctx.lineTo(5704,28552);
ctx.lineTo(5668,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,242,236,0.85)';
ctx.strokeStyle='rgb(141,53,12)';
ctx.moveTo(5668,28456);
ctx.lineTo(5668,28420);
ctx.lineTo(5704,28420);
ctx.lineTo(5704,28456);
ctx.lineTo(5668,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,12,139,0.85)';
ctx.strokeStyle='rgb(131,253,187)';
ctx.moveTo(5668,28360);
ctx.lineTo(5668,28324);
ctx.lineTo(5704,28324);
ctx.lineTo(5704,28360);
ctx.lineTo(5668,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,143,113,0.85)';
ctx.strokeStyle='rgb(86,91,179)';
ctx.moveTo(5764,28552);
ctx.lineTo(5764,28516);
ctx.lineTo(5800,28516);
ctx.lineTo(5800,28552);
ctx.lineTo(5764,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,66,100,0.85)';
ctx.strokeStyle='rgb(21,117,146)';
ctx.moveTo(5764,28456);
ctx.lineTo(5764,28420);
ctx.lineTo(5800,28420);
ctx.lineTo(5800,28456);
ctx.lineTo(5764,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,154,145,0.85)';
ctx.strokeStyle='rgb(74,137,58)';
ctx.moveTo(5764,28360);
ctx.lineTo(5764,28324);
ctx.lineTo(5800,28324);
ctx.lineTo(5800,28360);
ctx.lineTo(5764,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,36,148,0.85)';
ctx.strokeStyle='rgb(227,104,31)';
ctx.moveTo(5860,28552);
ctx.lineTo(5860,28516);
ctx.lineTo(5896,28516);
ctx.lineTo(5896,28552);
ctx.lineTo(5860,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,245,128,0.85)';
ctx.strokeStyle='rgb(184,106,179)';
ctx.moveTo(5860,28456);
ctx.lineTo(5860,28420);
ctx.lineTo(5896,28420);
ctx.lineTo(5896,28456);
ctx.lineTo(5860,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,244,252,0.85)';
ctx.strokeStyle='rgb(27,160,222)';
ctx.moveTo(5860,28360);
ctx.lineTo(5860,28324);
ctx.lineTo(5896,28324);
ctx.lineTo(5896,28360);
ctx.lineTo(5860,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,208,104,0.85)';
ctx.strokeStyle='rgb(235,176,190)';
ctx.moveTo(2992,27040);
ctx.lineTo(2992,27004);
ctx.lineTo(3028,27004);
ctx.lineTo(3028,27040);
ctx.lineTo(2992,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,186,0,0.85)';
ctx.strokeStyle='rgb(52,115,6)';
ctx.moveTo(2992,26944);
ctx.lineTo(2992,26908);
ctx.lineTo(3028,26908);
ctx.lineTo(3028,26944);
ctx.lineTo(2992,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,114,25,0.85)';
ctx.strokeStyle='rgb(194,100,194)';
ctx.moveTo(2992,26848);
ctx.lineTo(2992,26812);
ctx.lineTo(3028,26812);
ctx.lineTo(3028,26848);
ctx.lineTo(2992,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,1,199,0.85)';
ctx.strokeStyle='rgb(136,150,237)';
ctx.moveTo(3088,27040);
ctx.lineTo(3088,27004);
ctx.lineTo(3124,27004);
ctx.lineTo(3124,27040);
ctx.lineTo(3088,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,247,207,0.85)';
ctx.strokeStyle='rgb(55,17,226)';
ctx.moveTo(3088,26944);
ctx.lineTo(3088,26908);
ctx.lineTo(3124,26908);
ctx.lineTo(3124,26944);
ctx.lineTo(3088,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,170,141,0.85)';
ctx.strokeStyle='rgb(23,220,214)';
ctx.moveTo(3088,26848);
ctx.lineTo(3088,26812);
ctx.lineTo(3124,26812);
ctx.lineTo(3124,26848);
ctx.lineTo(3088,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,226,122,0.85)';
ctx.strokeStyle='rgb(62,232,116)';
ctx.moveTo(3184,27040);
ctx.lineTo(3184,27004);
ctx.lineTo(3220,27004);
ctx.lineTo(3220,27040);
ctx.lineTo(3184,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,125,167,0.85)';
ctx.strokeStyle='rgb(233,119,59)';
ctx.moveTo(3184,26944);
ctx.lineTo(3184,26908);
ctx.lineTo(3220,26908);
ctx.lineTo(3220,26944);
ctx.lineTo(3184,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,25,190,0.85)';
ctx.strokeStyle='rgb(169,125,250)';
ctx.moveTo(3184,26848);
ctx.lineTo(3184,26812);
ctx.lineTo(3220,26812);
ctx.lineTo(3220,26848);
ctx.lineTo(3184,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,91,33,0.85)';
ctx.strokeStyle='rgb(93,146,170)';
ctx.moveTo(3280,27040);
ctx.lineTo(3280,27004);
ctx.lineTo(3316,27004);
ctx.lineTo(3316,27040);
ctx.lineTo(3280,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,163,32,0.85)';
ctx.strokeStyle='rgb(211,11,11)';
ctx.moveTo(3280,26944);
ctx.lineTo(3280,26908);
ctx.lineTo(3316,26908);
ctx.lineTo(3316,26944);
ctx.lineTo(3280,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,157,119,0.85)';
ctx.strokeStyle='rgb(213,192,65)';
ctx.moveTo(3280,26848);
ctx.lineTo(3280,26812);
ctx.lineTo(3316,26812);
ctx.lineTo(3316,26848);
ctx.lineTo(3280,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,7,173,0.85)';
ctx.strokeStyle='rgb(182,176,225)';
ctx.moveTo(3376,27040);
ctx.lineTo(3376,27004);
ctx.lineTo(3412,27004);
ctx.lineTo(3412,27040);
ctx.lineTo(3376,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,110,153,0.85)';
ctx.strokeStyle='rgb(18,58,238)';
ctx.moveTo(3376,26944);
ctx.lineTo(3376,26908);
ctx.lineTo(3412,26908);
ctx.lineTo(3412,26944);
ctx.lineTo(3376,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,252,75,0.85)';
ctx.strokeStyle='rgb(3,229,191)';
ctx.moveTo(3376,26848);
ctx.lineTo(3376,26812);
ctx.lineTo(3412,26812);
ctx.lineTo(3412,26848);
ctx.lineTo(3376,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,58,254,0.85)';
ctx.strokeStyle='rgb(206,25,216)';
ctx.moveTo(3472,27040);
ctx.lineTo(3472,27004);
ctx.lineTo(3508,27004);
ctx.lineTo(3508,27040);
ctx.lineTo(3472,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,130,243,0.85)';
ctx.strokeStyle='rgb(163,163,242)';
ctx.moveTo(3472,26944);
ctx.lineTo(3472,26908);
ctx.lineTo(3508,26908);
ctx.lineTo(3508,26944);
ctx.lineTo(3472,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,254,126,0.85)';
ctx.strokeStyle='rgb(153,125,181)';
ctx.moveTo(3472,26848);
ctx.lineTo(3472,26812);
ctx.lineTo(3508,26812);
ctx.lineTo(3508,26848);
ctx.lineTo(3472,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,151,40,0.85)';
ctx.strokeStyle='rgb(1,61,216)';
ctx.moveTo(3568,27040);
ctx.lineTo(3568,27004);
ctx.lineTo(3604,27004);
ctx.lineTo(3604,27040);
ctx.lineTo(3568,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,216,114,0.85)';
ctx.strokeStyle='rgb(179,2,191)';
ctx.moveTo(3568,26944);
ctx.lineTo(3568,26908);
ctx.lineTo(3604,26908);
ctx.lineTo(3604,26944);
ctx.lineTo(3568,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,142,174,0.85)';
ctx.strokeStyle='rgb(84,61,250)';
ctx.moveTo(3568,26848);
ctx.lineTo(3568,26812);
ctx.lineTo(3604,26812);
ctx.lineTo(3604,26848);
ctx.lineTo(3568,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,127,79,0.85)';
ctx.strokeStyle='rgb(44,215,235)';
ctx.moveTo(3664,27040);
ctx.lineTo(3664,27004);
ctx.lineTo(3700,27004);
ctx.lineTo(3700,27040);
ctx.lineTo(3664,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,5,238,0.85)';
ctx.strokeStyle='rgb(226,63,184)';
ctx.moveTo(3664,26944);
ctx.lineTo(3664,26908);
ctx.lineTo(3700,26908);
ctx.lineTo(3700,26944);
ctx.lineTo(3664,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,51,123,0.85)';
ctx.strokeStyle='rgb(133,15,65)';
ctx.moveTo(3664,26848);
ctx.lineTo(3664,26812);
ctx.lineTo(3700,26812);
ctx.lineTo(3700,26848);
ctx.lineTo(3664,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,201,239,0.85)';
ctx.strokeStyle='rgb(235,195,244)';
ctx.moveTo(3760,27040);
ctx.lineTo(3760,27004);
ctx.lineTo(3796,27004);
ctx.lineTo(3796,27040);
ctx.lineTo(3760,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,178,33,0.85)';
ctx.strokeStyle='rgb(29,178,86)';
ctx.moveTo(3760,26944);
ctx.lineTo(3760,26908);
ctx.lineTo(3796,26908);
ctx.lineTo(3796,26944);
ctx.lineTo(3760,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,182,115,0.85)';
ctx.strokeStyle='rgb(160,208,19)';
ctx.moveTo(3760,26848);
ctx.lineTo(3760,26812);
ctx.lineTo(3796,26812);
ctx.lineTo(3796,26848);
ctx.lineTo(3760,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,167,1,0.85)';
ctx.strokeStyle='rgb(173,179,83)';
ctx.moveTo(3856,27040);
ctx.lineTo(3856,27004);
ctx.lineTo(3892,27004);
ctx.lineTo(3892,27040);
ctx.lineTo(3856,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,62,223,0.85)';
ctx.strokeStyle='rgb(39,137,63)';
ctx.moveTo(3856,26944);
ctx.lineTo(3856,26908);
ctx.lineTo(3892,26908);
ctx.lineTo(3892,26944);
ctx.lineTo(3856,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,240,241,0.85)';
ctx.strokeStyle='rgb(62,156,119)';
ctx.moveTo(3856,26848);
ctx.lineTo(3856,26812);
ctx.lineTo(3892,26812);
ctx.lineTo(3892,26848);
ctx.lineTo(3856,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,146,203,0.85)';
ctx.strokeStyle='rgb(210,134,203)';
ctx.moveTo(3952,27040);
ctx.lineTo(3952,27004);
ctx.lineTo(3988,27004);
ctx.lineTo(3988,27040);
ctx.lineTo(3952,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,251,136,0.85)';
ctx.strokeStyle='rgb(136,244,72)';
ctx.moveTo(3952,26944);
ctx.lineTo(3952,26908);
ctx.lineTo(3988,26908);
ctx.lineTo(3988,26944);
ctx.lineTo(3952,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,115,82,0.85)';
ctx.strokeStyle='rgb(220,109,38)';
ctx.moveTo(3952,26848);
ctx.lineTo(3952,26812);
ctx.lineTo(3988,26812);
ctx.lineTo(3988,26848);
ctx.lineTo(3952,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,158,121,0.85)';
ctx.strokeStyle='rgb(83,136,120)';
ctx.moveTo(1696,28552);
ctx.lineTo(1696,28516);
ctx.lineTo(1732,28516);
ctx.lineTo(1732,28552);
ctx.lineTo(1696,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,59,156,0.85)';
ctx.strokeStyle='rgb(197,250,172)';
ctx.moveTo(1696,28456);
ctx.lineTo(1696,28420);
ctx.lineTo(1732,28420);
ctx.lineTo(1732,28456);
ctx.lineTo(1696,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,73,247,0.85)';
ctx.strokeStyle='rgb(64,194,127)';
ctx.moveTo(1696,28360);
ctx.lineTo(1696,28324);
ctx.lineTo(1732,28324);
ctx.lineTo(1732,28360);
ctx.lineTo(1696,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,34,252,0.85)';
ctx.strokeStyle='rgb(41,151,239)';
ctx.moveTo(1792,28552);
ctx.lineTo(1792,28516);
ctx.lineTo(1828,28516);
ctx.lineTo(1828,28552);
ctx.lineTo(1792,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,31,0,0.85)';
ctx.strokeStyle='rgb(68,227,109)';
ctx.moveTo(1792,28456);
ctx.lineTo(1792,28420);
ctx.lineTo(1828,28420);
ctx.lineTo(1828,28456);
ctx.lineTo(1792,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,137,71,0.85)';
ctx.strokeStyle='rgb(91,50,234)';
ctx.moveTo(1792,28360);
ctx.lineTo(1792,28324);
ctx.lineTo(1828,28324);
ctx.lineTo(1828,28360);
ctx.lineTo(1792,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,191,58,0.85)';
ctx.strokeStyle='rgb(169,152,112)';
ctx.moveTo(1888,28552);
ctx.lineTo(1888,28516);
ctx.lineTo(1924,28516);
ctx.lineTo(1924,28552);
ctx.lineTo(1888,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,231,76,0.85)';
ctx.strokeStyle='rgb(123,120,41)';
ctx.moveTo(1888,28456);
ctx.lineTo(1888,28420);
ctx.lineTo(1924,28420);
ctx.lineTo(1924,28456);
ctx.lineTo(1888,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,71,194,0.85)';
ctx.strokeStyle='rgb(189,65,46)';
ctx.moveTo(1888,28360);
ctx.lineTo(1888,28324);
ctx.lineTo(1924,28324);
ctx.lineTo(1924,28360);
ctx.lineTo(1888,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,14,99,0.85)';
ctx.strokeStyle='rgb(191,202,82)';
ctx.moveTo(1984,28552);
ctx.lineTo(1984,28516);
ctx.lineTo(2020,28516);
ctx.lineTo(2020,28552);
ctx.lineTo(1984,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,28,104,0.85)';
ctx.strokeStyle='rgb(87,67,181)';
ctx.moveTo(1984,28456);
ctx.lineTo(1984,28420);
ctx.lineTo(2020,28420);
ctx.lineTo(2020,28456);
ctx.lineTo(1984,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,49,117,0.85)';
ctx.strokeStyle='rgb(235,98,98)';
ctx.moveTo(1984,28360);
ctx.lineTo(1984,28324);
ctx.lineTo(2020,28324);
ctx.lineTo(2020,28360);
ctx.lineTo(1984,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,225,188,0.85)';
ctx.strokeStyle='rgb(135,221,41)';
ctx.moveTo(2080,28552);
ctx.lineTo(2080,28516);
ctx.lineTo(2116,28516);
ctx.lineTo(2116,28552);
ctx.lineTo(2080,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,82,66,0.85)';
ctx.strokeStyle='rgb(22,7,50)';
ctx.moveTo(2080,28456);
ctx.lineTo(2080,28420);
ctx.lineTo(2116,28420);
ctx.lineTo(2116,28456);
ctx.lineTo(2080,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,153,48,0.85)';
ctx.strokeStyle='rgb(211,188,33)';
ctx.moveTo(2080,28360);
ctx.lineTo(2080,28324);
ctx.lineTo(2116,28324);
ctx.lineTo(2116,28360);
ctx.lineTo(2080,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,201,86,0.85)';
ctx.strokeStyle='rgb(119,176,68)';
ctx.moveTo(2176,28552);
ctx.lineTo(2176,28516);
ctx.lineTo(2212,28516);
ctx.lineTo(2212,28552);
ctx.lineTo(2176,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,78,24,0.85)';
ctx.strokeStyle='rgb(207,140,249)';
ctx.moveTo(2176,28456);
ctx.lineTo(2176,28420);
ctx.lineTo(2212,28420);
ctx.lineTo(2212,28456);
ctx.lineTo(2176,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,86,94,0.85)';
ctx.strokeStyle='rgb(38,165,28)';
ctx.moveTo(2176,28360);
ctx.lineTo(2176,28324);
ctx.lineTo(2212,28324);
ctx.lineTo(2212,28360);
ctx.lineTo(2176,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,160,161,0.85)';
ctx.strokeStyle='rgb(164,158,141)';
ctx.moveTo(2272,28552);
ctx.lineTo(2272,28516);
ctx.lineTo(2308,28516);
ctx.lineTo(2308,28552);
ctx.lineTo(2272,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,44,1,0.85)';
ctx.strokeStyle='rgb(211,151,53)';
ctx.moveTo(2272,28456);
ctx.lineTo(2272,28420);
ctx.lineTo(2308,28420);
ctx.lineTo(2308,28456);
ctx.lineTo(2272,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,212,191,0.85)';
ctx.strokeStyle='rgb(229,101,50)';
ctx.moveTo(2272,28360);
ctx.lineTo(2272,28324);
ctx.lineTo(2308,28324);
ctx.lineTo(2308,28360);
ctx.lineTo(2272,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,30,151,0.85)';
ctx.strokeStyle='rgb(141,37,69)';
ctx.moveTo(2368,28552);
ctx.lineTo(2368,28516);
ctx.lineTo(2404,28516);
ctx.lineTo(2404,28552);
ctx.lineTo(2368,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,110,52,0.85)';
ctx.strokeStyle='rgb(28,70,112)';
ctx.moveTo(2368,28456);
ctx.lineTo(2368,28420);
ctx.lineTo(2404,28420);
ctx.lineTo(2404,28456);
ctx.lineTo(2368,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,170,136,0.85)';
ctx.strokeStyle='rgb(68,162,250)';
ctx.moveTo(2368,28360);
ctx.lineTo(2368,28324);
ctx.lineTo(2404,28324);
ctx.lineTo(2404,28360);
ctx.lineTo(2368,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,61,96,0.85)';
ctx.strokeStyle='rgb(31,100,176)';
ctx.moveTo(2464,28552);
ctx.lineTo(2464,28516);
ctx.lineTo(2500,28516);
ctx.lineTo(2500,28552);
ctx.lineTo(2464,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,73,120,0.85)';
ctx.strokeStyle='rgb(150,63,136)';
ctx.moveTo(2464,28456);
ctx.lineTo(2464,28420);
ctx.lineTo(2500,28420);
ctx.lineTo(2500,28456);
ctx.lineTo(2464,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,231,100,0.85)';
ctx.strokeStyle='rgb(189,88,204)';
ctx.moveTo(2464,28360);
ctx.lineTo(2464,28324);
ctx.lineTo(2500,28324);
ctx.lineTo(2500,28360);
ctx.lineTo(2464,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,19,122,0.85)';
ctx.strokeStyle='rgb(27,244,51)';
ctx.moveTo(2560,28552);
ctx.lineTo(2560,28516);
ctx.lineTo(2596,28516);
ctx.lineTo(2596,28552);
ctx.lineTo(2560,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,194,3,0.85)';
ctx.strokeStyle='rgb(249,1,250)';
ctx.moveTo(2560,28456);
ctx.lineTo(2560,28420);
ctx.lineTo(2596,28420);
ctx.lineTo(2596,28456);
ctx.lineTo(2560,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,204,109,0.85)';
ctx.strokeStyle='rgb(241,49,248)';
ctx.moveTo(2560,28360);
ctx.lineTo(2560,28324);
ctx.lineTo(2596,28324);
ctx.lineTo(2596,28360);
ctx.lineTo(2560,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,121,203,0.85)';
ctx.strokeStyle='rgb(223,156,187)';
ctx.moveTo(2656,28552);
ctx.lineTo(2656,28516);
ctx.lineTo(2692,28516);
ctx.lineTo(2692,28552);
ctx.lineTo(2656,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,110,139,0.85)';
ctx.strokeStyle='rgb(236,139,247)';
ctx.moveTo(2656,28456);
ctx.lineTo(2656,28420);
ctx.lineTo(2692,28420);
ctx.lineTo(2692,28456);
ctx.lineTo(2656,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,80,29,0.85)';
ctx.strokeStyle='rgb(180,167,8)';
ctx.moveTo(2656,28360);
ctx.lineTo(2656,28324);
ctx.lineTo(2692,28324);
ctx.lineTo(2692,28360);
ctx.lineTo(2656,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,87,40,0.85)';
ctx.strokeStyle='rgb(141,23,129)';
ctx.moveTo(3856,30064);
ctx.lineTo(3856,30028);
ctx.lineTo(3892,30028);
ctx.lineTo(3892,30064);
ctx.lineTo(3856,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,179,62,0.85)';
ctx.strokeStyle='rgb(107,6,50)';
ctx.moveTo(3856,29968);
ctx.lineTo(3856,29932);
ctx.lineTo(3892,29932);
ctx.lineTo(3892,29968);
ctx.lineTo(3856,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,222,164,0.85)';
ctx.strokeStyle='rgb(216,221,96)';
ctx.moveTo(3856,29872);
ctx.lineTo(3856,29836);
ctx.lineTo(3892,29836);
ctx.lineTo(3892,29872);
ctx.lineTo(3856,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,155,24,0.85)';
ctx.strokeStyle='rgb(161,30,152)';
ctx.moveTo(3856,32128);
ctx.lineTo(3856,32092);
ctx.lineTo(3892,32092);
ctx.lineTo(3892,32128);
ctx.lineTo(3856,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,152,151,0.85)';
ctx.strokeStyle='rgb(62,94,66)';
ctx.moveTo(3856,32032);
ctx.lineTo(3856,31996);
ctx.lineTo(3892,31996);
ctx.lineTo(3892,32032);
ctx.lineTo(3856,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,204,113,0.85)';
ctx.strokeStyle='rgb(184,161,203)';
ctx.moveTo(3856,31936);
ctx.lineTo(3856,31900);
ctx.lineTo(3892,31900);
ctx.lineTo(3892,31936);
ctx.lineTo(3856,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,207,252,0.85)';
ctx.strokeStyle='rgb(36,137,238)';
ctx.moveTo(3856,31840);
ctx.lineTo(3856,31804);
ctx.lineTo(3892,31804);
ctx.lineTo(3892,31840);
ctx.lineTo(3856,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,115,44,0.85)';
ctx.strokeStyle='rgb(7,59,147)';
ctx.moveTo(3856,31744);
ctx.lineTo(3856,31708);
ctx.lineTo(3892,31708);
ctx.lineTo(3892,31744);
ctx.lineTo(3856,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,179,140,0.85)';
ctx.strokeStyle='rgb(182,24,96)';
ctx.moveTo(3856,31648);
ctx.lineTo(3856,31612);
ctx.lineTo(3892,31612);
ctx.lineTo(3892,31648);
ctx.lineTo(3856,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,158,188,0.85)';
ctx.strokeStyle='rgb(182,179,92)';
ctx.moveTo(3856,32608);
ctx.lineTo(3856,32572);
ctx.lineTo(3892,32572);
ctx.lineTo(3892,32608);
ctx.lineTo(3856,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,240,204,0.85)';
ctx.strokeStyle='rgb(3,247,8)';
ctx.moveTo(3856,32512);
ctx.lineTo(3856,32476);
ctx.lineTo(3892,32476);
ctx.lineTo(3892,32512);
ctx.lineTo(3856,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,102,115,0.85)';
ctx.strokeStyle='rgb(84,91,197)';
ctx.moveTo(3856,32416);
ctx.lineTo(3856,32380);
ctx.lineTo(3892,32380);
ctx.lineTo(3892,32416);
ctx.lineTo(3856,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,123,41,0.85)';
ctx.strokeStyle='rgb(42,20,153)';
ctx.moveTo(3856,32320);
ctx.lineTo(3856,32284);
ctx.lineTo(3892,32284);
ctx.lineTo(3892,32320);
ctx.lineTo(3856,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,74,43,0.85)';
ctx.strokeStyle='rgb(226,153,141)';
ctx.moveTo(3856,32224);
ctx.lineTo(3856,32188);
ctx.lineTo(3892,32188);
ctx.lineTo(3892,32224);
ctx.lineTo(3856,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,51,214,0.85)';
ctx.strokeStyle='rgb(48,108,140)';
ctx.moveTo(3952,29872);
ctx.lineTo(3952,29836);
ctx.lineTo(3988,29836);
ctx.lineTo(3988,29872);
ctx.lineTo(3952,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,6,32,0.85)';
ctx.strokeStyle='rgb(202,146,43)';
ctx.moveTo(5476,31414);
ctx.lineTo(5476,31378);
ctx.lineTo(5512,31378);
ctx.lineTo(5512,31414);
ctx.lineTo(5476,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,200,89,0.85)';
ctx.strokeStyle='rgb(6,211,231)';
ctx.moveTo(5572,31414);
ctx.lineTo(5572,31378);
ctx.lineTo(5608,31378);
ctx.lineTo(5608,31414);
ctx.lineTo(5572,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,77,40,0.85)';
ctx.strokeStyle='rgb(56,29,177)';
ctx.moveTo(5668,31414);
ctx.lineTo(5668,31378);
ctx.lineTo(5704,31378);
ctx.lineTo(5704,31414);
ctx.lineTo(5668,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,177,173,0.85)';
ctx.strokeStyle='rgb(134,49,168)';
ctx.moveTo(3952,31744);
ctx.lineTo(3952,31708);
ctx.lineTo(3988,31708);
ctx.lineTo(3988,31744);
ctx.lineTo(3952,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,87,106,0.85)';
ctx.strokeStyle='rgb(10,166,138)';
ctx.moveTo(3952,31648);
ctx.lineTo(3952,31612);
ctx.lineTo(3988,31612);
ctx.lineTo(3988,31648);
ctx.lineTo(3952,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,163,205,0.85)';
ctx.strokeStyle='rgb(104,143,164)';
ctx.moveTo(5764,31414);
ctx.lineTo(5764,31378);
ctx.lineTo(5800,31378);
ctx.lineTo(5800,31414);
ctx.lineTo(5764,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,245,85,0.85)';
ctx.strokeStyle='rgb(2,81,140)';
ctx.moveTo(5860,31414);
ctx.lineTo(5860,31378);
ctx.lineTo(5896,31378);
ctx.lineTo(5896,31414);
ctx.lineTo(5860,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,118,126,0.85)';
ctx.strokeStyle='rgb(66,75,1)';
ctx.moveTo(5956,31414);
ctx.lineTo(5956,31378);
ctx.lineTo(5992,31378);
ctx.lineTo(5992,31414);
ctx.lineTo(5956,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,132,161,0.85)';
ctx.strokeStyle='rgb(126,46,163)';
ctx.moveTo(3952,30064);
ctx.lineTo(3952,30028);
ctx.lineTo(3988,30028);
ctx.lineTo(3988,30064);
ctx.lineTo(3952,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,144,57,0.85)';
ctx.strokeStyle='rgb(17,238,120)';
ctx.moveTo(3952,29968);
ctx.lineTo(3952,29932);
ctx.lineTo(3988,29932);
ctx.lineTo(3988,29968);
ctx.lineTo(3952,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,59,190,0.85)';
ctx.strokeStyle='rgb(35,172,142)';
ctx.moveTo(3760,29968);
ctx.lineTo(3760,29932);
ctx.lineTo(3796,29932);
ctx.lineTo(3796,29968);
ctx.lineTo(3760,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,237,16,0.85)';
ctx.strokeStyle='rgb(110,165,88)';
ctx.moveTo(3760,29872);
ctx.lineTo(3760,29836);
ctx.lineTo(3796,29836);
ctx.lineTo(3796,29872);
ctx.lineTo(3760,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,250,70,0.85)';
ctx.strokeStyle='rgb(127,55,213)';
ctx.moveTo(2992,30064);
ctx.lineTo(2992,30028);
ctx.lineTo(3028,30028);
ctx.lineTo(3028,30064);
ctx.lineTo(2992,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,143,57,0.85)';
ctx.strokeStyle='rgb(67,202,216)';
ctx.moveTo(2992,29968);
ctx.lineTo(2992,29932);
ctx.lineTo(3028,29932);
ctx.lineTo(3028,29968);
ctx.lineTo(2992,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,236,104,0.85)';
ctx.strokeStyle='rgb(34,216,176)';
ctx.moveTo(2992,29872);
ctx.lineTo(2992,29836);
ctx.lineTo(3028,29836);
ctx.lineTo(3028,29872);
ctx.lineTo(2992,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,47,64,0.85)';
ctx.strokeStyle='rgb(89,169,86)';
ctx.moveTo(3088,30064);
ctx.lineTo(3088,30028);
ctx.lineTo(3124,30028);
ctx.lineTo(3124,30064);
ctx.lineTo(3088,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,157,173,0.85)';
ctx.strokeStyle='rgb(20,53,118)';
ctx.moveTo(3088,29968);
ctx.lineTo(3088,29932);
ctx.lineTo(3124,29932);
ctx.lineTo(3124,29968);
ctx.lineTo(3088,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,241,146,0.85)';
ctx.strokeStyle='rgb(37,202,248)';
ctx.moveTo(3088,29872);
ctx.lineTo(3088,29836);
ctx.lineTo(3124,29836);
ctx.lineTo(3124,29872);
ctx.lineTo(3088,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,200,194,0.85)';
ctx.strokeStyle='rgb(81,143,158)';
ctx.moveTo(3184,30064);
ctx.lineTo(3184,30028);
ctx.lineTo(3220,30028);
ctx.lineTo(3220,30064);
ctx.lineTo(3184,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,240,244,0.85)';
ctx.strokeStyle='rgb(82,159,65)';
ctx.moveTo(3184,29968);
ctx.lineTo(3184,29932);
ctx.lineTo(3220,29932);
ctx.lineTo(3220,29968);
ctx.lineTo(3184,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,178,219,0.85)';
ctx.strokeStyle='rgb(246,210,204)';
ctx.moveTo(3184,29872);
ctx.lineTo(3184,29836);
ctx.lineTo(3220,29836);
ctx.lineTo(3220,29872);
ctx.lineTo(3184,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,27,74,0.85)';
ctx.strokeStyle='rgb(58,26,9)';
ctx.moveTo(3280,30064);
ctx.lineTo(3280,30028);
ctx.lineTo(3316,30028);
ctx.lineTo(3316,30064);
ctx.lineTo(3280,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,171,158,0.85)';
ctx.strokeStyle='rgb(145,143,121)';
ctx.moveTo(3280,29968);
ctx.lineTo(3280,29932);
ctx.lineTo(3316,29932);
ctx.lineTo(3316,29968);
ctx.lineTo(3280,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,140,91,0.85)';
ctx.strokeStyle='rgb(30,209,101)';
ctx.moveTo(3280,29872);
ctx.lineTo(3280,29836);
ctx.lineTo(3316,29836);
ctx.lineTo(3316,29872);
ctx.lineTo(3280,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,63,17,0.85)';
ctx.strokeStyle='rgb(130,89,238)';
ctx.moveTo(3472,31744);
ctx.lineTo(3472,31708);
ctx.lineTo(3508,31708);
ctx.lineTo(3508,31744);
ctx.lineTo(3472,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,75,13,0.85)';
ctx.strokeStyle='rgb(170,209,140)';
ctx.moveTo(3472,31648);
ctx.lineTo(3472,31612);
ctx.lineTo(3508,31612);
ctx.lineTo(3508,31648);
ctx.lineTo(3472,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,85,18,0.85)';
ctx.strokeStyle='rgb(145,164,216)';
ctx.moveTo(3376,30064);
ctx.lineTo(3376,30028);
ctx.lineTo(3412,30028);
ctx.lineTo(3412,30064);
ctx.lineTo(3376,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,8,168,0.85)';
ctx.strokeStyle='rgb(83,23,118)';
ctx.moveTo(3568,31648);
ctx.lineTo(3568,31612);
ctx.lineTo(3604,31612);
ctx.lineTo(3604,31648);
ctx.lineTo(3568,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,39,233,0.85)';
ctx.strokeStyle='rgb(231,25,92)';
ctx.moveTo(3664,31744);
ctx.lineTo(3664,31708);
ctx.lineTo(3700,31708);
ctx.lineTo(3700,31744);
ctx.lineTo(3664,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,167,185,0.85)';
ctx.strokeStyle='rgb(227,238,18)';
ctx.moveTo(3664,31648);
ctx.lineTo(3664,31612);
ctx.lineTo(3700,31612);
ctx.lineTo(3700,31648);
ctx.lineTo(3664,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,117,131,0.85)';
ctx.strokeStyle='rgb(177,13,146)';
ctx.moveTo(3760,31744);
ctx.lineTo(3760,31708);
ctx.lineTo(3796,31708);
ctx.lineTo(3796,31744);
ctx.lineTo(3760,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,55,165,0.85)';
ctx.strokeStyle='rgb(102,30,51)';
ctx.moveTo(3760,31648);
ctx.lineTo(3760,31612);
ctx.lineTo(3796,31612);
ctx.lineTo(3796,31648);
ctx.lineTo(3760,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,166,121,0.85)';
ctx.strokeStyle='rgb(159,9,12)';
ctx.moveTo(3376,29968);
ctx.lineTo(3376,29932);
ctx.lineTo(3412,29932);
ctx.lineTo(3412,29968);
ctx.lineTo(3376,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,69,232,0.85)';
ctx.strokeStyle='rgb(85,142,179)';
ctx.moveTo(3376,29872);
ctx.lineTo(3376,29836);
ctx.lineTo(3412,29836);
ctx.lineTo(3412,29872);
ctx.lineTo(3376,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,133,157,0.85)';
ctx.strokeStyle='rgb(16,159,244)';
ctx.moveTo(3472,30064);
ctx.lineTo(3472,30028);
ctx.lineTo(3508,30028);
ctx.lineTo(3508,30064);
ctx.lineTo(3472,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,21,79,0.85)';
ctx.strokeStyle='rgb(201,159,99)';
ctx.moveTo(3472,29968);
ctx.lineTo(3472,29932);
ctx.lineTo(3508,29932);
ctx.lineTo(3508,29968);
ctx.lineTo(3472,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,57,173,0.85)';
ctx.strokeStyle='rgb(229,79,28)';
ctx.moveTo(3472,29872);
ctx.lineTo(3472,29836);
ctx.lineTo(3508,29836);
ctx.lineTo(3508,29872);
ctx.lineTo(3472,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,43,68,0.85)';
ctx.strokeStyle='rgb(104,82,202)';
ctx.moveTo(3568,31744);
ctx.lineTo(3568,31708);
ctx.lineTo(3604,31708);
ctx.lineTo(3604,31744);
ctx.lineTo(3568,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,101,214,0.85)';
ctx.strokeStyle='rgb(222,177,143)';
ctx.moveTo(3568,30064);
ctx.lineTo(3568,30028);
ctx.lineTo(3604,30028);
ctx.lineTo(3604,30064);
ctx.lineTo(3568,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,113,236,0.85)';
ctx.strokeStyle='rgb(39,46,180)';
ctx.moveTo(3568,29968);
ctx.lineTo(3568,29932);
ctx.lineTo(3604,29932);
ctx.lineTo(3604,29968);
ctx.lineTo(3568,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,60,150,0.85)';
ctx.strokeStyle='rgb(100,40,119)';
ctx.moveTo(3280,31744);
ctx.lineTo(3280,31708);
ctx.lineTo(3316,31708);
ctx.lineTo(3316,31744);
ctx.lineTo(3280,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,121,133,0.85)';
ctx.strokeStyle='rgb(102,168,186)';
ctx.moveTo(3280,31648);
ctx.lineTo(3280,31612);
ctx.lineTo(3316,31612);
ctx.lineTo(3316,31648);
ctx.lineTo(3280,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,65,102,0.85)';
ctx.strokeStyle='rgb(60,191,192)';
ctx.moveTo(2992,31744);
ctx.lineTo(2992,31708);
ctx.lineTo(3028,31708);
ctx.lineTo(3028,31744);
ctx.lineTo(2992,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,112,138,0.85)';
ctx.strokeStyle='rgb(193,65,249)';
ctx.moveTo(3376,31744);
ctx.lineTo(3376,31708);
ctx.lineTo(3412,31708);
ctx.lineTo(3412,31744);
ctx.lineTo(3376,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,202,19,0.85)';
ctx.strokeStyle='rgb(161,16,154)';
ctx.moveTo(3376,31648);
ctx.lineTo(3376,31612);
ctx.lineTo(3412,31612);
ctx.lineTo(3412,31648);
ctx.lineTo(3376,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,232,3,0.85)';
ctx.strokeStyle='rgb(102,76,93)';
ctx.moveTo(2992,31648);
ctx.lineTo(2992,31612);
ctx.lineTo(3028,31612);
ctx.lineTo(3028,31648);
ctx.lineTo(2992,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,8,154,0.85)';
ctx.strokeStyle='rgb(242,6,40)';
ctx.moveTo(3088,31744);
ctx.lineTo(3088,31708);
ctx.lineTo(3124,31708);
ctx.lineTo(3124,31744);
ctx.lineTo(3088,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,108,164,0.85)';
ctx.strokeStyle='rgb(19,84,242)';
ctx.moveTo(3088,31648);
ctx.lineTo(3088,31612);
ctx.lineTo(3124,31612);
ctx.lineTo(3124,31648);
ctx.lineTo(3088,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,43,71,0.85)';
ctx.strokeStyle='rgb(46,43,97)';
ctx.moveTo(3184,31744);
ctx.lineTo(3184,31708);
ctx.lineTo(3220,31708);
ctx.lineTo(3220,31744);
ctx.lineTo(3184,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,83,2,0.85)';
ctx.strokeStyle='rgb(157,134,136)';
ctx.moveTo(3184,31648);
ctx.lineTo(3184,31612);
ctx.lineTo(3220,31612);
ctx.lineTo(3220,31648);
ctx.lineTo(3184,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,72,58,0.85)';
ctx.strokeStyle='rgb(242,17,236)';
ctx.moveTo(3568,29872);
ctx.lineTo(3568,29836);
ctx.lineTo(3604,29836);
ctx.lineTo(3604,29872);
ctx.lineTo(3568,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,154,213,0.85)';
ctx.strokeStyle='rgb(198,190,74)';
ctx.moveTo(3664,30064);
ctx.lineTo(3664,30028);
ctx.lineTo(3700,30028);
ctx.lineTo(3700,30064);
ctx.lineTo(3664,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,3,247,0.85)';
ctx.strokeStyle='rgb(174,174,58)';
ctx.moveTo(3664,29968);
ctx.lineTo(3664,29932);
ctx.lineTo(3700,29932);
ctx.lineTo(3700,29968);
ctx.lineTo(3664,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,29,109,0.85)';
ctx.strokeStyle='rgb(233,218,244)';
ctx.moveTo(3664,29872);
ctx.lineTo(3664,29836);
ctx.lineTo(3700,29836);
ctx.lineTo(3700,29872);
ctx.lineTo(3664,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,153,87,0.85)';
ctx.strokeStyle='rgb(243,107,209)';
ctx.moveTo(3760,30064);
ctx.lineTo(3760,30028);
ctx.lineTo(3796,30028);
ctx.lineTo(3796,30064);
ctx.lineTo(3760,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,90,68,0.85)';
ctx.strokeStyle='rgb(172,225,143)';
ctx.moveTo(1696,31414);
ctx.lineTo(1696,31378);
ctx.lineTo(1732,31378);
ctx.lineTo(1732,31414);
ctx.lineTo(1696,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,214,55,0.85)';
ctx.strokeStyle='rgb(83,192,84)';
ctx.moveTo(1792,31414);
ctx.lineTo(1792,31378);
ctx.lineTo(1828,31378);
ctx.lineTo(1828,31414);
ctx.lineTo(1792,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,3,3,0.85)';
ctx.strokeStyle='rgb(237,181,122)';
ctx.moveTo(1888,31414);
ctx.lineTo(1888,31378);
ctx.lineTo(1924,31378);
ctx.lineTo(1924,31414);
ctx.lineTo(1888,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,126,58,0.85)';
ctx.strokeStyle='rgb(3,181,31)';
ctx.moveTo(1984,31414);
ctx.lineTo(1984,31378);
ctx.lineTo(2020,31378);
ctx.lineTo(2020,31414);
ctx.lineTo(1984,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,149,90,0.85)';
ctx.strokeStyle='rgb(8,146,115)';
ctx.moveTo(2080,31414);
ctx.lineTo(2080,31378);
ctx.lineTo(2116,31378);
ctx.lineTo(2116,31414);
ctx.lineTo(2080,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,33,172,0.85)';
ctx.strokeStyle='rgb(72,105,236)';
ctx.moveTo(2176,31414);
ctx.lineTo(2176,31378);
ctx.lineTo(2212,31378);
ctx.lineTo(2212,31414);
ctx.lineTo(2176,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,68,65,0.85)';
ctx.strokeStyle='rgb(160,12,39)';
ctx.moveTo(2272,31414);
ctx.lineTo(2272,31378);
ctx.lineTo(2308,31378);
ctx.lineTo(2308,31414);
ctx.lineTo(2272,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,156,205,0.85)';
ctx.strokeStyle='rgb(71,203,129)';
ctx.moveTo(2368,31414);
ctx.lineTo(2368,31378);
ctx.lineTo(2404,31378);
ctx.lineTo(2404,31414);
ctx.lineTo(2368,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,150,119,0.85)';
ctx.strokeStyle='rgb(33,218,113)';
ctx.moveTo(2464,31414);
ctx.lineTo(2464,31378);
ctx.lineTo(2500,31378);
ctx.lineTo(2500,31414);
ctx.lineTo(2464,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,168,99,0.85)';
ctx.strokeStyle='rgb(22,179,216)';
ctx.moveTo(2560,31414);
ctx.lineTo(2560,31378);
ctx.lineTo(2596,31378);
ctx.lineTo(2596,31414);
ctx.lineTo(2560,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,8,99,0.85)';
ctx.strokeStyle='rgb(121,56,153)';
ctx.moveTo(2656,31414);
ctx.lineTo(2656,31378);
ctx.lineTo(2692,31378);
ctx.lineTo(2692,31414);
ctx.lineTo(2656,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,120,230,0.85)';
ctx.strokeStyle='rgb(175,253,204)';
ctx.moveTo(3280,31840);
ctx.lineTo(3280,31804);
ctx.lineTo(3316,31804);
ctx.lineTo(3316,31840);
ctx.lineTo(3280,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,11,177,0.85)';
ctx.strokeStyle='rgb(124,219,229)';
ctx.moveTo(3568,32128);
ctx.lineTo(3568,32092);
ctx.lineTo(3604,32092);
ctx.lineTo(3604,32128);
ctx.lineTo(3568,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,147,210,0.85)';
ctx.strokeStyle='rgb(150,144,16)';
ctx.moveTo(3664,32128);
ctx.lineTo(3664,32092);
ctx.lineTo(3700,32092);
ctx.lineTo(3700,32128);
ctx.lineTo(3664,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,232,80,0.85)';
ctx.strokeStyle='rgb(142,4,153)';
ctx.moveTo(3760,32128);
ctx.lineTo(3760,32092);
ctx.lineTo(3796,32092);
ctx.lineTo(3796,32128);
ctx.lineTo(3760,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,176,75,0.85)';
ctx.strokeStyle='rgb(12,178,81)';
ctx.moveTo(3376,32032);
ctx.lineTo(3376,31996);
ctx.lineTo(3412,31996);
ctx.lineTo(3412,32032);
ctx.lineTo(3376,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,225,245,0.85)';
ctx.strokeStyle='rgb(2,99,16)';
ctx.moveTo(3376,31936);
ctx.lineTo(3376,31900);
ctx.lineTo(3412,31900);
ctx.lineTo(3412,31936);
ctx.lineTo(3376,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,80,202,0.85)';
ctx.strokeStyle='rgb(235,114,91)';
ctx.moveTo(3376,31840);
ctx.lineTo(3376,31804);
ctx.lineTo(3412,31804);
ctx.lineTo(3412,31840);
ctx.lineTo(3376,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,211,88,0.85)';
ctx.strokeStyle='rgb(130,148,78)';
ctx.moveTo(3184,32128);
ctx.lineTo(3184,32092);
ctx.lineTo(3220,32092);
ctx.lineTo(3220,32128);
ctx.lineTo(3184,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,217,149,0.85)';
ctx.strokeStyle='rgb(109,45,20)';
ctx.moveTo(3280,32128);
ctx.lineTo(3280,32092);
ctx.lineTo(3316,32092);
ctx.lineTo(3316,32128);
ctx.lineTo(3280,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,204,220,0.85)';
ctx.strokeStyle='rgb(223,229,231)';
ctx.moveTo(3568,32032);
ctx.lineTo(3568,31996);
ctx.lineTo(3604,31996);
ctx.lineTo(3604,32032);
ctx.lineTo(3568,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,120,125,0.85)';
ctx.strokeStyle='rgb(2,163,41)';
ctx.moveTo(2992,32032);
ctx.lineTo(2992,31996);
ctx.lineTo(3028,31996);
ctx.lineTo(3028,32032);
ctx.lineTo(2992,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,33,206,0.85)';
ctx.strokeStyle='rgb(185,179,132)';
ctx.moveTo(3088,32032);
ctx.lineTo(3088,31996);
ctx.lineTo(3124,31996);
ctx.lineTo(3124,32032);
ctx.lineTo(3088,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,113,254,0.85)';
ctx.strokeStyle='rgb(250,186,152)';
ctx.moveTo(3088,31936);
ctx.lineTo(3088,31900);
ctx.lineTo(3124,31900);
ctx.lineTo(3124,31936);
ctx.lineTo(3088,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,171,56,0.85)';
ctx.strokeStyle='rgb(223,96,184)';
ctx.moveTo(3088,31840);
ctx.lineTo(3088,31804);
ctx.lineTo(3124,31804);
ctx.lineTo(3124,31840);
ctx.lineTo(3088,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,77,215,0.85)';
ctx.strokeStyle='rgb(88,117,12)';
ctx.moveTo(3664,32032);
ctx.lineTo(3664,31996);
ctx.lineTo(3700,31996);
ctx.lineTo(3700,32032);
ctx.lineTo(3664,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,122,77,0.85)';
ctx.strokeStyle='rgb(103,128,39)';
ctx.moveTo(3664,31936);
ctx.lineTo(3664,31900);
ctx.lineTo(3700,31900);
ctx.lineTo(3700,31936);
ctx.lineTo(3664,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,199,30,0.85)';
ctx.strokeStyle='rgb(99,153,34)';
ctx.moveTo(2992,31936);
ctx.lineTo(2992,31900);
ctx.lineTo(3028,31900);
ctx.lineTo(3028,31936);
ctx.lineTo(2992,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,189,138,0.85)';
ctx.strokeStyle='rgb(120,102,157)';
ctx.moveTo(3184,32032);
ctx.lineTo(3184,31996);
ctx.lineTo(3220,31996);
ctx.lineTo(3220,32032);
ctx.lineTo(3184,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,96,1,0.85)';
ctx.strokeStyle='rgb(80,61,233)';
ctx.moveTo(3184,31936);
ctx.lineTo(3184,31900);
ctx.lineTo(3220,31900);
ctx.lineTo(3220,31936);
ctx.lineTo(3184,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,214,190,0.85)';
ctx.strokeStyle='rgb(37,184,116)';
ctx.moveTo(3184,31840);
ctx.lineTo(3184,31804);
ctx.lineTo(3220,31804);
ctx.lineTo(3220,31840);
ctx.lineTo(3184,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,44,92,0.85)';
ctx.strokeStyle='rgb(19,17,197)';
ctx.moveTo(3664,31840);
ctx.lineTo(3664,31804);
ctx.lineTo(3700,31804);
ctx.lineTo(3700,31840);
ctx.lineTo(3664,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,185,246,0.85)';
ctx.strokeStyle='rgb(17,104,193)';
ctx.moveTo(3376,32128);
ctx.lineTo(3376,32092);
ctx.lineTo(3412,32092);
ctx.lineTo(3412,32128);
ctx.lineTo(3376,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,31,191,0.85)';
ctx.strokeStyle='rgb(125,168,215)';
ctx.moveTo(2992,31840);
ctx.lineTo(2992,31804);
ctx.lineTo(3028,31804);
ctx.lineTo(3028,31840);
ctx.lineTo(2992,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,67,196,0.85)';
ctx.strokeStyle='rgb(133,9,33)';
ctx.moveTo(3280,32032);
ctx.lineTo(3280,31996);
ctx.lineTo(3316,31996);
ctx.lineTo(3316,32032);
ctx.lineTo(3280,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,121,151,0.85)';
ctx.strokeStyle='rgb(168,71,140)';
ctx.moveTo(3280,31936);
ctx.lineTo(3280,31900);
ctx.lineTo(3316,31900);
ctx.lineTo(3316,31936);
ctx.lineTo(3280,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,40,37,0.85)';
ctx.strokeStyle='rgb(137,240,120)';
ctx.moveTo(3376,32416);
ctx.lineTo(3376,32380);
ctx.lineTo(3412,32380);
ctx.lineTo(3412,32416);
ctx.lineTo(3376,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,199,44,0.85)';
ctx.strokeStyle='rgb(147,38,93)';
ctx.moveTo(3376,32320);
ctx.lineTo(3376,32284);
ctx.lineTo(3412,32284);
ctx.lineTo(3412,32320);
ctx.lineTo(3376,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,59,69,0.85)';
ctx.strokeStyle='rgb(165,180,214)';
ctx.moveTo(3376,32224);
ctx.lineTo(3376,32188);
ctx.lineTo(3412,32188);
ctx.lineTo(3412,32224);
ctx.lineTo(3376,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,204,158,0.85)';
ctx.strokeStyle='rgb(100,137,104)';
ctx.moveTo(3184,32416);
ctx.lineTo(3184,32380);
ctx.lineTo(3220,32380);
ctx.lineTo(3220,32416);
ctx.lineTo(3184,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,105,49,0.85)';
ctx.strokeStyle='rgb(73,108,201)';
ctx.moveTo(3184,32320);
ctx.lineTo(3184,32284);
ctx.lineTo(3220,32284);
ctx.lineTo(3220,32320);
ctx.lineTo(3184,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,216,229,0.85)';
ctx.strokeStyle='rgb(134,94,47)';
ctx.moveTo(3184,32224);
ctx.lineTo(3184,32188);
ctx.lineTo(3220,32188);
ctx.lineTo(3220,32224);
ctx.lineTo(3184,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,159,201,0.85)';
ctx.strokeStyle='rgb(81,213,185)';
ctx.moveTo(3088,32512);
ctx.lineTo(3088,32476);
ctx.lineTo(3124,32476);
ctx.lineTo(3124,32512);
ctx.lineTo(3088,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,248,43,0.85)';
ctx.strokeStyle='rgb(216,207,181)';
ctx.moveTo(3088,32416);
ctx.lineTo(3088,32380);
ctx.lineTo(3124,32380);
ctx.lineTo(3124,32416);
ctx.lineTo(3088,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,92,254,0.85)';
ctx.strokeStyle='rgb(227,100,197)';
ctx.moveTo(3088,32320);
ctx.lineTo(3088,32284);
ctx.lineTo(3124,32284);
ctx.lineTo(3124,32320);
ctx.lineTo(3088,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,8,100,0.85)';
ctx.strokeStyle='rgb(32,219,109)';
ctx.moveTo(3088,32224);
ctx.lineTo(3088,32188);
ctx.lineTo(3124,32188);
ctx.lineTo(3124,32224);
ctx.lineTo(3088,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,103,49,0.85)';
ctx.strokeStyle='rgb(91,20,212)';
ctx.moveTo(2992,32512);
ctx.lineTo(2992,32476);
ctx.lineTo(3028,32476);
ctx.lineTo(3028,32512);
ctx.lineTo(2992,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,60,41,0.85)';
ctx.strokeStyle='rgb(187,193,115)';
ctx.moveTo(2992,32416);
ctx.lineTo(2992,32380);
ctx.lineTo(3028,32380);
ctx.lineTo(3028,32416);
ctx.lineTo(2992,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,117,116,0.85)';
ctx.strokeStyle='rgb(35,149,18)';
ctx.moveTo(3280,32608);
ctx.lineTo(3280,32572);
ctx.lineTo(3316,32572);
ctx.lineTo(3316,32608);
ctx.lineTo(3280,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,179,239,0.85)';
ctx.strokeStyle='rgb(63,17,203)';
ctx.moveTo(3280,32512);
ctx.lineTo(3280,32476);
ctx.lineTo(3316,32476);
ctx.lineTo(3316,32512);
ctx.lineTo(3280,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,90,177,0.85)';
ctx.strokeStyle='rgb(93,238,110)';
ctx.moveTo(3280,32416);
ctx.lineTo(3280,32380);
ctx.lineTo(3316,32380);
ctx.lineTo(3316,32416);
ctx.lineTo(3280,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,147,75,0.85)';
ctx.strokeStyle='rgb(39,191,29)';
ctx.moveTo(3280,32320);
ctx.lineTo(3280,32284);
ctx.lineTo(3316,32284);
ctx.lineTo(3316,32320);
ctx.lineTo(3280,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,75,78,0.85)';
ctx.strokeStyle='rgb(248,197,154)';
ctx.moveTo(3280,32224);
ctx.lineTo(3280,32188);
ctx.lineTo(3316,32188);
ctx.lineTo(3316,32224);
ctx.lineTo(3280,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,77,6,0.85)';
ctx.strokeStyle='rgb(198,136,164)';
ctx.moveTo(2992,32320);
ctx.lineTo(2992,32284);
ctx.lineTo(3028,32284);
ctx.lineTo(3028,32320);
ctx.lineTo(2992,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,117,208,0.85)';
ctx.strokeStyle='rgb(154,157,223)';
ctx.moveTo(2992,32224);
ctx.lineTo(2992,32188);
ctx.lineTo(3028,32188);
ctx.lineTo(3028,32224);
ctx.lineTo(2992,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,76,45,0.85)';
ctx.strokeStyle='rgb(136,115,18)';
ctx.moveTo(2992,32608);
ctx.lineTo(2992,32572);
ctx.lineTo(3028,32572);
ctx.lineTo(3028,32608);
ctx.lineTo(2992,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,216,51,0.85)';
ctx.strokeStyle='rgb(223,233,102)';
ctx.moveTo(3088,32608);
ctx.lineTo(3088,32572);
ctx.lineTo(3124,32572);
ctx.lineTo(3124,32608);
ctx.lineTo(3088,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,235,210,0.85)';
ctx.strokeStyle='rgb(126,233,4)';
ctx.moveTo(3184,32608);
ctx.lineTo(3184,32572);
ctx.lineTo(3220,32572);
ctx.lineTo(3220,32608);
ctx.lineTo(3184,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,136,27,0.85)';
ctx.strokeStyle='rgb(2,61,160)';
ctx.moveTo(3184,32512);
ctx.lineTo(3184,32476);
ctx.lineTo(3220,32476);
ctx.lineTo(3220,32512);
ctx.lineTo(3184,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,151,183,0.85)';
ctx.strokeStyle='rgb(196,102,18)';
ctx.moveTo(3376,32608);
ctx.lineTo(3376,32572);
ctx.lineTo(3412,32572);
ctx.lineTo(3412,32608);
ctx.lineTo(3376,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,169,248,0.85)';
ctx.strokeStyle='rgb(188,86,62)';
ctx.moveTo(3376,32512);
ctx.lineTo(3376,32476);
ctx.lineTo(3412,32476);
ctx.lineTo(3412,32512);
ctx.lineTo(3376,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,241,52,0.85)';
ctx.strokeStyle='rgb(80,101,38)';
ctx.moveTo(3664,32224);
ctx.lineTo(3664,32188);
ctx.lineTo(3700,32188);
ctx.lineTo(3700,32224);
ctx.lineTo(3664,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,179,203,0.85)';
ctx.strokeStyle='rgb(92,220,50)';
ctx.moveTo(3568,32512);
ctx.lineTo(3568,32476);
ctx.lineTo(3604,32476);
ctx.lineTo(3604,32512);
ctx.lineTo(3568,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,118,49,0.85)';
ctx.strokeStyle='rgb(254,235,236)';
ctx.moveTo(3568,32416);
ctx.lineTo(3568,32380);
ctx.lineTo(3604,32380);
ctx.lineTo(3604,32416);
ctx.lineTo(3568,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,158,26,0.85)';
ctx.strokeStyle='rgb(105,165,181)';
ctx.moveTo(3472,32608);
ctx.lineTo(3472,32572);
ctx.lineTo(3508,32572);
ctx.lineTo(3508,32608);
ctx.lineTo(3472,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,70,229,0.85)';
ctx.strokeStyle='rgb(202,18,222)';
ctx.moveTo(3568,31936);
ctx.lineTo(3568,31900);
ctx.lineTo(3604,31900);
ctx.lineTo(3604,31936);
ctx.lineTo(3568,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,107,247,0.85)';
ctx.strokeStyle='rgb(205,148,101)';
ctx.moveTo(3760,32032);
ctx.lineTo(3760,31996);
ctx.lineTo(3796,31996);
ctx.lineTo(3796,32032);
ctx.lineTo(3760,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,171,190,0.85)';
ctx.strokeStyle='rgb(244,118,179)';
ctx.moveTo(3760,31936);
ctx.lineTo(3760,31900);
ctx.lineTo(3796,31900);
ctx.lineTo(3796,31936);
ctx.lineTo(3760,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,69,248,0.85)';
ctx.strokeStyle='rgb(31,5,82)';
ctx.moveTo(3760,31840);
ctx.lineTo(3760,31804);
ctx.lineTo(3796,31804);
ctx.lineTo(3796,31840);
ctx.lineTo(3760,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,31,117,0.85)';
ctx.strokeStyle='rgb(233,230,194)';
ctx.moveTo(3568,32320);
ctx.lineTo(3568,32284);
ctx.lineTo(3604,32284);
ctx.lineTo(3604,32320);
ctx.lineTo(3568,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,25,147,0.85)';
ctx.strokeStyle='rgb(46,106,196)';
ctx.moveTo(3568,32224);
ctx.lineTo(3568,32188);
ctx.lineTo(3604,32188);
ctx.lineTo(3604,32224);
ctx.lineTo(3568,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,209,97,0.85)';
ctx.strokeStyle='rgb(110,169,229)';
ctx.moveTo(3568,32608);
ctx.lineTo(3568,32572);
ctx.lineTo(3604,32572);
ctx.lineTo(3604,32608);
ctx.lineTo(3568,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,5,11,0.85)';
ctx.strokeStyle='rgb(74,209,251)';
ctx.moveTo(3664,32608);
ctx.lineTo(3664,32572);
ctx.lineTo(3700,32572);
ctx.lineTo(3700,32608);
ctx.lineTo(3664,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,172,71,0.85)';
ctx.strokeStyle='rgb(243,190,163)';
ctx.moveTo(3760,32608);
ctx.lineTo(3760,32572);
ctx.lineTo(3796,32572);
ctx.lineTo(3796,32608);
ctx.lineTo(3760,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,91,254,0.85)';
ctx.strokeStyle='rgb(102,136,155)';
ctx.moveTo(3760,32512);
ctx.lineTo(3760,32476);
ctx.lineTo(3796,32476);
ctx.lineTo(3796,32512);
ctx.lineTo(3760,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,169,37,0.85)';
ctx.strokeStyle='rgb(251,184,15)';
ctx.moveTo(3760,32416);
ctx.lineTo(3760,32380);
ctx.lineTo(3796,32380);
ctx.lineTo(3796,32416);
ctx.lineTo(3760,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,44,48,0.85)';
ctx.strokeStyle='rgb(51,112,150)';
ctx.moveTo(3760,32320);
ctx.lineTo(3760,32284);
ctx.lineTo(3796,32284);
ctx.lineTo(3796,32320);
ctx.lineTo(3760,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,224,171,0.85)';
ctx.strokeStyle='rgb(108,141,30)';
ctx.moveTo(3760,32224);
ctx.lineTo(3760,32188);
ctx.lineTo(3796,32188);
ctx.lineTo(3796,32224);
ctx.lineTo(3760,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,98,34,0.85)';
ctx.strokeStyle='rgb(238,146,230)';
ctx.moveTo(3664,32512);
ctx.lineTo(3664,32476);
ctx.lineTo(3700,32476);
ctx.lineTo(3700,32512);
ctx.lineTo(3664,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,17,213,0.85)';
ctx.strokeStyle='rgb(73,103,248)';
ctx.moveTo(3664,32416);
ctx.lineTo(3664,32380);
ctx.lineTo(3700,32380);
ctx.lineTo(3700,32416);
ctx.lineTo(3664,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,198,213,0.85)';
ctx.strokeStyle='rgb(231,135,61)';
ctx.moveTo(3664,32320);
ctx.lineTo(3664,32284);
ctx.lineTo(3700,32284);
ctx.lineTo(3700,32320);
ctx.lineTo(3664,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,85,144,0.85)';
ctx.strokeStyle='rgb(7,169,165)';
ctx.moveTo(3472,32512);
ctx.lineTo(3472,32476);
ctx.lineTo(3508,32476);
ctx.lineTo(3508,32512);
ctx.lineTo(3472,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,25,28,0.85)';
ctx.strokeStyle='rgb(35,180,98)';
ctx.moveTo(3472,32416);
ctx.lineTo(3472,32380);
ctx.lineTo(3508,32380);
ctx.lineTo(3508,32416);
ctx.lineTo(3472,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,5,77,0.85)';
ctx.strokeStyle='rgb(241,10,18)';
ctx.moveTo(3568,31840);
ctx.lineTo(3568,31804);
ctx.lineTo(3604,31804);
ctx.lineTo(3604,31840);
ctx.lineTo(3568,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,35,104,0.85)';
ctx.strokeStyle='rgb(20,175,213)';
ctx.moveTo(3472,32320);
ctx.lineTo(3472,32284);
ctx.lineTo(3508,32284);
ctx.lineTo(3508,32320);
ctx.lineTo(3472,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,21,171,0.85)';
ctx.strokeStyle='rgb(198,6,5)';
ctx.moveTo(3472,32224);
ctx.lineTo(3472,32188);
ctx.lineTo(3508,32188);
ctx.lineTo(3508,32224);
ctx.lineTo(3472,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,19,130,0.85)';
ctx.strokeStyle='rgb(151,94,45)';
ctx.moveTo(3472,32128);
ctx.lineTo(3472,32092);
ctx.lineTo(3508,32092);
ctx.lineTo(3508,32128);
ctx.lineTo(3472,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,187,43,0.85)';
ctx.strokeStyle='rgb(191,20,175)';
ctx.moveTo(3472,32032);
ctx.lineTo(3472,31996);
ctx.lineTo(3508,31996);
ctx.lineTo(3508,32032);
ctx.lineTo(3472,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,78,134,0.85)';
ctx.strokeStyle='rgb(234,111,205)';
ctx.moveTo(3472,31936);
ctx.lineTo(3472,31900);
ctx.lineTo(3508,31900);
ctx.lineTo(3508,31936);
ctx.lineTo(3472,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,25,22,0.85)';
ctx.strokeStyle='rgb(110,191,118)';
ctx.moveTo(3472,31840);
ctx.lineTo(3472,31804);
ctx.lineTo(3508,31804);
ctx.lineTo(3508,31840);
ctx.lineTo(3472,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,139,93,0.85)';
ctx.strokeStyle='rgb(151,113,112)';
ctx.moveTo(2992,32128);
ctx.lineTo(2992,32092);
ctx.lineTo(3028,32092);
ctx.lineTo(3028,32128);
ctx.lineTo(2992,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,169,20,0.85)';
ctx.strokeStyle='rgb(98,192,231)';
ctx.moveTo(3088,32128);
ctx.lineTo(3088,32092);
ctx.lineTo(3124,32092);
ctx.lineTo(3124,32128);
ctx.lineTo(3088,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,242,155,0.85)';
ctx.strokeStyle='rgb(159,3,162)';
ctx.moveTo(2272,32944);
ctx.lineTo(2272,32908);
ctx.lineTo(2308,32908);
ctx.lineTo(2308,32944);
ctx.lineTo(2272,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,58,156,0.85)';
ctx.strokeStyle='rgb(215,140,143)';
ctx.moveTo(2272,33328);
ctx.lineTo(2272,33292);
ctx.lineTo(2308,33292);
ctx.lineTo(2308,33328);
ctx.lineTo(2272,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,43,109,0.85)';
ctx.strokeStyle='rgb(21,115,178)';
ctx.moveTo(2368,33328);
ctx.lineTo(2368,33292);
ctx.lineTo(2404,33292);
ctx.lineTo(2404,33328);
ctx.lineTo(2368,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,206,65,0.85)';
ctx.strokeStyle='rgb(209,8,123)';
ctx.moveTo(2368,33232);
ctx.lineTo(2368,33196);
ctx.lineTo(2404,33196);
ctx.lineTo(2404,33232);
ctx.lineTo(2368,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,83,62,0.85)';
ctx.strokeStyle='rgb(91,199,40)';
ctx.moveTo(2368,33136);
ctx.lineTo(2368,33100);
ctx.lineTo(2404,33100);
ctx.lineTo(2404,33136);
ctx.lineTo(2368,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,150,148,0.85)';
ctx.strokeStyle='rgb(186,61,90)';
ctx.moveTo(2368,33040);
ctx.lineTo(2368,33004);
ctx.lineTo(2404,33004);
ctx.lineTo(2404,33040);
ctx.lineTo(2368,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,6,235,0.85)';
ctx.strokeStyle='rgb(23,243,240)';
ctx.moveTo(2368,32944);
ctx.lineTo(2368,32908);
ctx.lineTo(2404,32908);
ctx.lineTo(2404,32944);
ctx.lineTo(2368,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,215,61,0.85)';
ctx.strokeStyle='rgb(104,16,84)';
ctx.moveTo(2272,33232);
ctx.lineTo(2272,33196);
ctx.lineTo(2308,33196);
ctx.lineTo(2308,33232);
ctx.lineTo(2272,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,165,91,0.85)';
ctx.strokeStyle='rgb(218,181,52)';
ctx.moveTo(2464,33328);
ctx.lineTo(2464,33292);
ctx.lineTo(2500,33292);
ctx.lineTo(2500,33328);
ctx.lineTo(2464,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,2,229,0.85)';
ctx.strokeStyle='rgb(143,155,50)';
ctx.moveTo(2464,33232);
ctx.lineTo(2464,33196);
ctx.lineTo(2500,33196);
ctx.lineTo(2500,33232);
ctx.lineTo(2464,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,111,239,0.85)';
ctx.strokeStyle='rgb(139,69,52)';
ctx.moveTo(2464,33136);
ctx.lineTo(2464,33100);
ctx.lineTo(2500,33100);
ctx.lineTo(2500,33136);
ctx.lineTo(2464,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,84,153,0.85)';
ctx.strokeStyle='rgb(232,86,131)';
ctx.moveTo(2464,33040);
ctx.lineTo(2464,33004);
ctx.lineTo(2500,33004);
ctx.lineTo(2500,33040);
ctx.lineTo(2464,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,159,134,0.85)';
ctx.strokeStyle='rgb(116,169,194)';
ctx.moveTo(2464,32944);
ctx.lineTo(2464,32908);
ctx.lineTo(2500,32908);
ctx.lineTo(2500,32944);
ctx.lineTo(2464,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,184,5,0.85)';
ctx.strokeStyle='rgb(209,223,132)';
ctx.moveTo(2272,33136);
ctx.lineTo(2272,33100);
ctx.lineTo(2308,33100);
ctx.lineTo(2308,33136);
ctx.lineTo(2272,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,9,122,0.85)';
ctx.strokeStyle='rgb(174,114,4)';
ctx.moveTo(2560,33328);
ctx.lineTo(2560,33292);
ctx.lineTo(2596,33292);
ctx.lineTo(2596,33328);
ctx.lineTo(2560,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,229,5,0.85)';
ctx.strokeStyle='rgb(127,198,220)';
ctx.moveTo(2560,33232);
ctx.lineTo(2560,33196);
ctx.lineTo(2596,33196);
ctx.lineTo(2596,33232);
ctx.lineTo(2560,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,172,193,0.85)';
ctx.strokeStyle='rgb(244,236,114)';
ctx.moveTo(2560,33136);
ctx.lineTo(2560,33100);
ctx.lineTo(2596,33100);
ctx.lineTo(2596,33136);
ctx.lineTo(2560,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,245,187,0.85)';
ctx.strokeStyle='rgb(49,98,90)';
ctx.moveTo(2560,33040);
ctx.lineTo(2560,33004);
ctx.lineTo(2596,33004);
ctx.lineTo(2596,33040);
ctx.lineTo(2560,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,199,175,0.85)';
ctx.strokeStyle='rgb(191,113,156)';
ctx.moveTo(2560,32944);
ctx.lineTo(2560,32908);
ctx.lineTo(2596,32908);
ctx.lineTo(2596,32944);
ctx.lineTo(2560,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,46,38,0.85)';
ctx.strokeStyle='rgb(61,246,110)';
ctx.moveTo(2272,33040);
ctx.lineTo(2272,33004);
ctx.lineTo(2308,33004);
ctx.lineTo(2308,33040);
ctx.lineTo(2272,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,211,79,0.85)';
ctx.strokeStyle='rgb(30,114,144)';
ctx.moveTo(2656,33328);
ctx.lineTo(2656,33292);
ctx.lineTo(2692,33292);
ctx.lineTo(2692,33328);
ctx.lineTo(2656,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,75,69,0.85)';
ctx.strokeStyle='rgb(131,135,200)';
ctx.moveTo(2656,33232);
ctx.lineTo(2656,33196);
ctx.lineTo(2692,33196);
ctx.lineTo(2692,33232);
ctx.lineTo(2656,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,113,107,0.85)';
ctx.strokeStyle='rgb(48,182,114)';
ctx.moveTo(2656,33136);
ctx.lineTo(2656,33100);
ctx.lineTo(2692,33100);
ctx.lineTo(2692,33136);
ctx.lineTo(2656,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,232,170,0.85)';
ctx.strokeStyle='rgb(186,133,87)';
ctx.moveTo(2656,33040);
ctx.lineTo(2656,33004);
ctx.lineTo(2692,33004);
ctx.lineTo(2692,33040);
ctx.lineTo(2656,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,43,228,0.85)';
ctx.strokeStyle='rgb(249,211,198)';
ctx.moveTo(2656,32944);
ctx.lineTo(2656,32908);
ctx.lineTo(2692,32908);
ctx.lineTo(2692,32944);
ctx.lineTo(2656,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,165,132,0.85)';
ctx.strokeStyle='rgb(179,229,137)';
ctx.moveTo(2176,33328);
ctx.lineTo(2176,33292);
ctx.lineTo(2212,33292);
ctx.lineTo(2212,33328);
ctx.lineTo(2176,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,167,129,0.85)';
ctx.strokeStyle='rgb(24,128,84)';
ctx.moveTo(2176,33232);
ctx.lineTo(2176,33196);
ctx.lineTo(2212,33196);
ctx.lineTo(2212,33232);
ctx.lineTo(2176,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,114,216,0.85)';
ctx.strokeStyle='rgb(234,53,80)';
ctx.moveTo(2176,33136);
ctx.lineTo(2176,33100);
ctx.lineTo(2212,33100);
ctx.lineTo(2212,33136);
ctx.lineTo(2176,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,60,137,0.85)';
ctx.strokeStyle='rgb(104,144,221)';
ctx.moveTo(2176,33040);
ctx.lineTo(2176,33004);
ctx.lineTo(2212,33004);
ctx.lineTo(2212,33040);
ctx.lineTo(2176,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,148,210,0.85)';
ctx.strokeStyle='rgb(75,212,224)';
ctx.moveTo(2176,32944);
ctx.lineTo(2176,32908);
ctx.lineTo(2212,32908);
ctx.lineTo(2212,32944);
ctx.lineTo(2176,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,170,253,0.85)';
ctx.strokeStyle='rgb(32,223,138)';
ctx.moveTo(1984,33136);
ctx.lineTo(1984,33100);
ctx.lineTo(2020,33100);
ctx.lineTo(2020,33136);
ctx.lineTo(1984,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,200,13,0.85)';
ctx.strokeStyle='rgb(58,52,28)';
ctx.moveTo(1984,33040);
ctx.lineTo(1984,33004);
ctx.lineTo(2020,33004);
ctx.lineTo(2020,33040);
ctx.lineTo(1984,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,50,220,0.85)';
ctx.strokeStyle='rgb(3,27,87)';
ctx.moveTo(1984,32944);
ctx.lineTo(1984,32908);
ctx.lineTo(2020,32908);
ctx.lineTo(2020,32944);
ctx.lineTo(1984,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,11,183,0.85)';
ctx.strokeStyle='rgb(193,133,134)';
ctx.moveTo(1696,33040);
ctx.lineTo(1696,33004);
ctx.lineTo(1732,33004);
ctx.lineTo(1732,33040);
ctx.lineTo(1696,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,250,136,0.85)';
ctx.strokeStyle='rgb(247,72,147)';
ctx.moveTo(2080,33328);
ctx.lineTo(2080,33292);
ctx.lineTo(2116,33292);
ctx.lineTo(2116,33328);
ctx.lineTo(2080,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,227,92,0.85)';
ctx.strokeStyle='rgb(239,156,2)';
ctx.moveTo(2080,33232);
ctx.lineTo(2080,33196);
ctx.lineTo(2116,33196);
ctx.lineTo(2116,33232);
ctx.lineTo(2080,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,37,248,0.85)';
ctx.strokeStyle='rgb(216,226,210)';
ctx.moveTo(2080,33136);
ctx.lineTo(2080,33100);
ctx.lineTo(2116,33100);
ctx.lineTo(2116,33136);
ctx.lineTo(2080,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,102,240,0.85)';
ctx.strokeStyle='rgb(151,140,118)';
ctx.moveTo(2080,33040);
ctx.lineTo(2080,33004);
ctx.lineTo(2116,33004);
ctx.lineTo(2116,33040);
ctx.lineTo(2080,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,29,32,0.85)';
ctx.strokeStyle='rgb(133,252,167)';
ctx.moveTo(2080,32944);
ctx.lineTo(2080,32908);
ctx.lineTo(2116,32908);
ctx.lineTo(2116,32944);
ctx.lineTo(2080,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,38,171,0.85)';
ctx.strokeStyle='rgb(54,9,182)';
ctx.moveTo(1696,32944);
ctx.lineTo(1696,32908);
ctx.lineTo(1732,32908);
ctx.lineTo(1732,32944);
ctx.lineTo(1696,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,243,193,0.85)';
ctx.strokeStyle='rgb(243,94,216)';
ctx.moveTo(1696,33328);
ctx.lineTo(1696,33292);
ctx.lineTo(1732,33292);
ctx.lineTo(1732,33328);
ctx.lineTo(1696,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,48,65,0.85)';
ctx.strokeStyle='rgb(51,9,14)';
ctx.moveTo(1792,33328);
ctx.lineTo(1792,33292);
ctx.lineTo(1828,33292);
ctx.lineTo(1828,33328);
ctx.lineTo(1792,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,65,219,0.85)';
ctx.strokeStyle='rgb(55,215,129)';
ctx.moveTo(1792,33232);
ctx.lineTo(1792,33196);
ctx.lineTo(1828,33196);
ctx.lineTo(1828,33232);
ctx.lineTo(1792,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,207,107,0.85)';
ctx.strokeStyle='rgb(120,207,239)';
ctx.moveTo(1792,33136);
ctx.lineTo(1792,33100);
ctx.lineTo(1828,33100);
ctx.lineTo(1828,33136);
ctx.lineTo(1792,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,125,236,0.85)';
ctx.strokeStyle='rgb(154,96,206)';
ctx.moveTo(1792,33040);
ctx.lineTo(1792,33004);
ctx.lineTo(1828,33004);
ctx.lineTo(1828,33040);
ctx.lineTo(1792,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,173,131,0.85)';
ctx.strokeStyle='rgb(4,141,19)';
ctx.moveTo(1792,32944);
ctx.lineTo(1792,32908);
ctx.lineTo(1828,32908);
ctx.lineTo(1828,32944);
ctx.lineTo(1792,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,233,240,0.85)';
ctx.strokeStyle='rgb(174,46,8)';
ctx.moveTo(1696,33232);
ctx.lineTo(1696,33196);
ctx.lineTo(1732,33196);
ctx.lineTo(1732,33232);
ctx.lineTo(1696,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,211,35,0.85)';
ctx.strokeStyle='rgb(88,177,71)';
ctx.moveTo(1888,33328);
ctx.lineTo(1888,33292);
ctx.lineTo(1924,33292);
ctx.lineTo(1924,33328);
ctx.lineTo(1888,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,245,211,0.85)';
ctx.strokeStyle='rgb(16,23,88)';
ctx.moveTo(1888,33232);
ctx.lineTo(1888,33196);
ctx.lineTo(1924,33196);
ctx.lineTo(1924,33232);
ctx.lineTo(1888,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,229,113,0.85)';
ctx.strokeStyle='rgb(42,128,138)';
ctx.moveTo(1888,33136);
ctx.lineTo(1888,33100);
ctx.lineTo(1924,33100);
ctx.lineTo(1924,33136);
ctx.lineTo(1888,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,148,104,0.85)';
ctx.strokeStyle='rgb(193,185,27)';
ctx.moveTo(1888,33040);
ctx.lineTo(1888,33004);
ctx.lineTo(1924,33004);
ctx.lineTo(1924,33040);
ctx.lineTo(1888,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,74,0,0.85)';
ctx.strokeStyle='rgb(251,188,107)';
ctx.moveTo(1888,32944);
ctx.lineTo(1888,32908);
ctx.lineTo(1924,32908);
ctx.lineTo(1924,32944);
ctx.lineTo(1888,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,245,74,0.85)';
ctx.strokeStyle='rgb(208,133,57)';
ctx.moveTo(1696,33136);
ctx.lineTo(1696,33100);
ctx.lineTo(1732,33100);
ctx.lineTo(1732,33136);
ctx.lineTo(1696,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,63,15,0.85)';
ctx.strokeStyle='rgb(23,181,236)';
ctx.moveTo(1984,33328);
ctx.lineTo(1984,33292);
ctx.lineTo(2020,33292);
ctx.lineTo(2020,33328);
ctx.lineTo(1984,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,43,31,0.85)';
ctx.strokeStyle='rgb(167,150,183)';
ctx.moveTo(1984,33232);
ctx.lineTo(1984,33196);
ctx.lineTo(2020,33196);
ctx.lineTo(2020,33232);
ctx.lineTo(1984,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,162,226,0.85)';
ctx.strokeStyle='rgb(157,160,235)';
ctx.moveTo(1696,33424);
ctx.lineTo(1696,33388);
ctx.lineTo(1732,33388);
ctx.lineTo(1732,33424);
ctx.lineTo(1696,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,207,187,0.85)';
ctx.strokeStyle='rgb(168,143,92)';
ctx.moveTo(1792,33424);
ctx.lineTo(1792,33388);
ctx.lineTo(1828,33388);
ctx.lineTo(1828,33424);
ctx.lineTo(1792,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,250,206,0.85)';
ctx.strokeStyle='rgb(118,44,167)';
ctx.moveTo(1888,33424);
ctx.lineTo(1888,33388);
ctx.lineTo(1924,33388);
ctx.lineTo(1924,33424);
ctx.lineTo(1888,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,237,174,0.85)';
ctx.strokeStyle='rgb(174,247,124)';
ctx.moveTo(1984,33424);
ctx.lineTo(1984,33388);
ctx.lineTo(2020,33388);
ctx.lineTo(2020,33424);
ctx.lineTo(1984,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,42,48,0.85)';
ctx.strokeStyle='rgb(247,250,37)';
ctx.moveTo(2080,33424);
ctx.lineTo(2080,33388);
ctx.lineTo(2116,33388);
ctx.lineTo(2116,33424);
ctx.lineTo(2080,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,86,90,0.85)';
ctx.strokeStyle='rgb(131,245,165)';
ctx.moveTo(2176,33904);
ctx.lineTo(2176,33868);
ctx.lineTo(2212,33868);
ctx.lineTo(2212,33904);
ctx.lineTo(2176,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,245,53,0.85)';
ctx.strokeStyle='rgb(104,205,131)';
ctx.moveTo(2176,33808);
ctx.lineTo(2176,33772);
ctx.lineTo(2212,33772);
ctx.lineTo(2212,33808);
ctx.lineTo(2176,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,66,181,0.85)';
ctx.strokeStyle='rgb(126,170,185)';
ctx.moveTo(2176,33712);
ctx.lineTo(2176,33676);
ctx.lineTo(2212,33676);
ctx.lineTo(2212,33712);
ctx.lineTo(2176,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,167,55,0.85)';
ctx.strokeStyle='rgb(242,187,69)';
ctx.moveTo(2176,33616);
ctx.lineTo(2176,33580);
ctx.lineTo(2212,33580);
ctx.lineTo(2212,33616);
ctx.lineTo(2176,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,113,174,0.85)';
ctx.strokeStyle='rgb(4,5,236)';
ctx.moveTo(2176,33520);
ctx.lineTo(2176,33484);
ctx.lineTo(2212,33484);
ctx.lineTo(2212,33520);
ctx.lineTo(2176,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,184,232,0.85)';
ctx.strokeStyle='rgb(135,25,191)';
ctx.moveTo(2176,33424);
ctx.lineTo(2176,33388);
ctx.lineTo(2212,33388);
ctx.lineTo(2212,33424);
ctx.lineTo(2176,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,13,177,0.85)';
ctx.strokeStyle='rgb(72,136,29)';
ctx.moveTo(2080,33712);
ctx.lineTo(2080,33676);
ctx.lineTo(2116,33676);
ctx.lineTo(2116,33712);
ctx.lineTo(2080,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,183,116,0.85)';
ctx.strokeStyle='rgb(149,220,56)';
ctx.moveTo(2080,33616);
ctx.lineTo(2080,33580);
ctx.lineTo(2116,33580);
ctx.lineTo(2116,33616);
ctx.lineTo(2080,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,71,65,0.85)';
ctx.strokeStyle='rgb(125,143,169)';
ctx.moveTo(2080,33520);
ctx.lineTo(2080,33484);
ctx.lineTo(2116,33484);
ctx.lineTo(2116,33520);
ctx.lineTo(2080,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,233,229,0.85)';
ctx.strokeStyle='rgb(159,193,144)';
ctx.moveTo(1888,33712);
ctx.lineTo(1888,33676);
ctx.lineTo(1924,33676);
ctx.lineTo(1924,33712);
ctx.lineTo(1888,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,15,91,0.85)';
ctx.strokeStyle='rgb(110,22,223)';
ctx.moveTo(1888,33616);
ctx.lineTo(1888,33580);
ctx.lineTo(1924,33580);
ctx.lineTo(1924,33616);
ctx.lineTo(1888,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,173,162,0.85)';
ctx.strokeStyle='rgb(81,26,244)';
ctx.moveTo(1888,33520);
ctx.lineTo(1888,33484);
ctx.lineTo(1924,33484);
ctx.lineTo(1924,33520);
ctx.lineTo(1888,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,189,50,0.85)';
ctx.strokeStyle='rgb(220,214,84)';
ctx.moveTo(1792,33808);
ctx.lineTo(1792,33772);
ctx.lineTo(1828,33772);
ctx.lineTo(1828,33808);
ctx.lineTo(1792,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,147,41,0.85)';
ctx.strokeStyle='rgb(215,28,249)';
ctx.moveTo(1792,33712);
ctx.lineTo(1792,33676);
ctx.lineTo(1828,33676);
ctx.lineTo(1828,33712);
ctx.lineTo(1792,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,132,133,0.85)';
ctx.strokeStyle='rgb(9,22,134)';
ctx.moveTo(1792,33616);
ctx.lineTo(1792,33580);
ctx.lineTo(1828,33580);
ctx.lineTo(1828,33616);
ctx.lineTo(1792,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,139,145,0.85)';
ctx.strokeStyle='rgb(234,159,100)';
ctx.moveTo(1792,33520);
ctx.lineTo(1792,33484);
ctx.lineTo(1828,33484);
ctx.lineTo(1828,33520);
ctx.lineTo(1792,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,64,136,0.85)';
ctx.strokeStyle='rgb(40,247,77)';
ctx.moveTo(1696,33808);
ctx.lineTo(1696,33772);
ctx.lineTo(1732,33772);
ctx.lineTo(1732,33808);
ctx.lineTo(1696,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,18,4,0.85)';
ctx.strokeStyle='rgb(124,172,241)';
ctx.moveTo(1696,33712);
ctx.lineTo(1696,33676);
ctx.lineTo(1732,33676);
ctx.lineTo(1732,33712);
ctx.lineTo(1696,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,59,19,0.85)';
ctx.strokeStyle='rgb(214,183,120)';
ctx.moveTo(1984,33904);
ctx.lineTo(1984,33868);
ctx.lineTo(2020,33868);
ctx.lineTo(2020,33904);
ctx.lineTo(1984,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,241,234,0.85)';
ctx.strokeStyle='rgb(134,227,129)';
ctx.moveTo(1984,33808);
ctx.lineTo(1984,33772);
ctx.lineTo(2020,33772);
ctx.lineTo(2020,33808);
ctx.lineTo(1984,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,235,13,0.85)';
ctx.strokeStyle='rgb(7,181,84)';
ctx.moveTo(1984,33712);
ctx.lineTo(1984,33676);
ctx.lineTo(2020,33676);
ctx.lineTo(2020,33712);
ctx.lineTo(1984,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,164,103,0.85)';
ctx.strokeStyle='rgb(112,208,171)';
ctx.moveTo(1984,33616);
ctx.lineTo(1984,33580);
ctx.lineTo(2020,33580);
ctx.lineTo(2020,33616);
ctx.lineTo(1984,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,200,85,0.85)';
ctx.strokeStyle='rgb(233,25,231)';
ctx.moveTo(1984,33520);
ctx.lineTo(1984,33484);
ctx.lineTo(2020,33484);
ctx.lineTo(2020,33520);
ctx.lineTo(1984,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,84,67,0.85)';
ctx.strokeStyle='rgb(109,226,25)';
ctx.moveTo(1696,33616);
ctx.lineTo(1696,33580);
ctx.lineTo(1732,33580);
ctx.lineTo(1732,33616);
ctx.lineTo(1696,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,172,119,0.85)';
ctx.strokeStyle='rgb(153,228,56)';
ctx.moveTo(1696,33520);
ctx.lineTo(1696,33484);
ctx.lineTo(1732,33484);
ctx.lineTo(1732,33520);
ctx.lineTo(1696,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,126,49,0.85)';
ctx.strokeStyle='rgb(10,42,71)';
ctx.moveTo(1696,33904);
ctx.lineTo(1696,33868);
ctx.lineTo(1732,33868);
ctx.lineTo(1732,33904);
ctx.lineTo(1696,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,46,112,0.85)';
ctx.strokeStyle='rgb(115,173,52)';
ctx.moveTo(1792,33904);
ctx.lineTo(1792,33868);
ctx.lineTo(1828,33868);
ctx.lineTo(1828,33904);
ctx.lineTo(1792,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,186,72,0.85)';
ctx.strokeStyle='rgb(191,153,65)';
ctx.moveTo(1888,33904);
ctx.lineTo(1888,33868);
ctx.lineTo(1924,33868);
ctx.lineTo(1924,33904);
ctx.lineTo(1888,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,192,158,0.85)';
ctx.strokeStyle='rgb(88,17,168)';
ctx.moveTo(1888,33808);
ctx.lineTo(1888,33772);
ctx.lineTo(1924,33772);
ctx.lineTo(1924,33808);
ctx.lineTo(1888,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,42,15,0.85)';
ctx.strokeStyle='rgb(23,64,106)';
ctx.moveTo(2080,33904);
ctx.lineTo(2080,33868);
ctx.lineTo(2116,33868);
ctx.lineTo(2116,33904);
ctx.lineTo(2080,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,41,104,0.85)';
ctx.strokeStyle='rgb(54,103,2)';
ctx.moveTo(2080,33808);
ctx.lineTo(2080,33772);
ctx.lineTo(2116,33772);
ctx.lineTo(2116,33808);
ctx.lineTo(2080,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,184,94,0.85)';
ctx.strokeStyle='rgb(173,241,165)';
ctx.moveTo(2272,33424);
ctx.lineTo(2272,33388);
ctx.lineTo(2308,33388);
ctx.lineTo(2308,33424);
ctx.lineTo(2272,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,101,245,0.85)';
ctx.strokeStyle='rgb(232,86,98)';
ctx.moveTo(2368,33424);
ctx.lineTo(2368,33388);
ctx.lineTo(2404,33388);
ctx.lineTo(2404,33424);
ctx.lineTo(2368,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,101,94,0.85)';
ctx.strokeStyle='rgb(30,163,116)';
ctx.moveTo(2464,33424);
ctx.lineTo(2464,33388);
ctx.lineTo(2500,33388);
ctx.lineTo(2500,33424);
ctx.lineTo(2464,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,36,54,0.85)';
ctx.strokeStyle='rgb(103,218,191)';
ctx.moveTo(2560,33424);
ctx.lineTo(2560,33388);
ctx.lineTo(2596,33388);
ctx.lineTo(2596,33424);
ctx.lineTo(2560,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,70,31,0.85)';
ctx.strokeStyle='rgb(125,219,240)';
ctx.moveTo(2656,33424);
ctx.lineTo(2656,33388);
ctx.lineTo(2692,33388);
ctx.lineTo(2692,33424);
ctx.lineTo(2656,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,205,231,0.85)';
ctx.strokeStyle='rgb(20,20,216)';
ctx.moveTo(2368,33520);
ctx.lineTo(2368,33484);
ctx.lineTo(2404,33484);
ctx.lineTo(2404,33520);
ctx.lineTo(2368,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,208,4,0.85)';
ctx.strokeStyle='rgb(74,61,231)';
ctx.moveTo(2272,33808);
ctx.lineTo(2272,33772);
ctx.lineTo(2308,33772);
ctx.lineTo(2308,33808);
ctx.lineTo(2272,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,157,161,0.85)';
ctx.strokeStyle='rgb(237,234,7)';
ctx.moveTo(2272,33712);
ctx.lineTo(2272,33676);
ctx.lineTo(2308,33676);
ctx.lineTo(2308,33712);
ctx.lineTo(2272,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,213,7,0.85)';
ctx.strokeStyle='rgb(50,38,202)';
ctx.moveTo(2560,33904);
ctx.lineTo(2560,33868);
ctx.lineTo(2596,33868);
ctx.lineTo(2596,33904);
ctx.lineTo(2560,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,235,206,0.85)';
ctx.strokeStyle='rgb(119,35,254)';
ctx.moveTo(2560,33808);
ctx.lineTo(2560,33772);
ctx.lineTo(2596,33772);
ctx.lineTo(2596,33808);
ctx.lineTo(2560,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,126,213,0.85)';
ctx.strokeStyle='rgb(79,169,62)';
ctx.moveTo(2560,33712);
ctx.lineTo(2560,33676);
ctx.lineTo(2596,33676);
ctx.lineTo(2596,33712);
ctx.lineTo(2560,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,208,85,0.85)';
ctx.strokeStyle='rgb(19,169,154)';
ctx.moveTo(2560,33616);
ctx.lineTo(2560,33580);
ctx.lineTo(2596,33580);
ctx.lineTo(2596,33616);
ctx.lineTo(2560,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,112,93,0.85)';
ctx.strokeStyle='rgb(26,116,249)';
ctx.moveTo(2560,33520);
ctx.lineTo(2560,33484);
ctx.lineTo(2596,33484);
ctx.lineTo(2596,33520);
ctx.lineTo(2560,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,91,60,0.85)';
ctx.strokeStyle='rgb(123,227,157)';
ctx.moveTo(2272,33616);
ctx.lineTo(2272,33580);
ctx.lineTo(2308,33580);
ctx.lineTo(2308,33616);
ctx.lineTo(2272,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,98,254,0.85)';
ctx.strokeStyle='rgb(251,227,45)';
ctx.moveTo(2272,33520);
ctx.lineTo(2272,33484);
ctx.lineTo(2308,33484);
ctx.lineTo(2308,33520);
ctx.lineTo(2272,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,205,184,0.85)';
ctx.strokeStyle='rgb(213,227,147)';
ctx.moveTo(2272,33904);
ctx.lineTo(2272,33868);
ctx.lineTo(2308,33868);
ctx.lineTo(2308,33904);
ctx.lineTo(2272,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,128,90,0.85)';
ctx.strokeStyle='rgb(130,136,70)';
ctx.moveTo(2368,33904);
ctx.lineTo(2368,33868);
ctx.lineTo(2404,33868);
ctx.lineTo(2404,33904);
ctx.lineTo(2368,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,31,79,0.85)';
ctx.strokeStyle='rgb(19,117,226)';
ctx.moveTo(2464,33904);
ctx.lineTo(2464,33868);
ctx.lineTo(2500,33868);
ctx.lineTo(2500,33904);
ctx.lineTo(2464,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,9,91,0.85)';
ctx.strokeStyle='rgb(105,250,184)';
ctx.moveTo(2464,33808);
ctx.lineTo(2464,33772);
ctx.lineTo(2500,33772);
ctx.lineTo(2500,33808);
ctx.lineTo(2464,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,175,180,0.85)';
ctx.strokeStyle='rgb(143,20,53)';
ctx.moveTo(2656,33904);
ctx.lineTo(2656,33868);
ctx.lineTo(2692,33868);
ctx.lineTo(2692,33904);
ctx.lineTo(2656,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,160,252,0.85)';
ctx.strokeStyle='rgb(253,55,40)';
ctx.moveTo(2656,33808);
ctx.lineTo(2656,33772);
ctx.lineTo(2692,33772);
ctx.lineTo(2692,33808);
ctx.lineTo(2656,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,241,98,0.85)';
ctx.strokeStyle='rgb(221,161,62)';
ctx.moveTo(2656,33712);
ctx.lineTo(2656,33676);
ctx.lineTo(2692,33676);
ctx.lineTo(2692,33712);
ctx.lineTo(2656,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,13,251,0.85)';
ctx.strokeStyle='rgb(130,184,137)';
ctx.moveTo(2656,33616);
ctx.lineTo(2656,33580);
ctx.lineTo(2692,33580);
ctx.lineTo(2692,33616);
ctx.lineTo(2656,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,74,187,0.85)';
ctx.strokeStyle='rgb(179,139,193)';
ctx.moveTo(2656,33520);
ctx.lineTo(2656,33484);
ctx.lineTo(2692,33484);
ctx.lineTo(2692,33520);
ctx.lineTo(2656,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,154,21,0.85)';
ctx.strokeStyle='rgb(4,143,222)';
ctx.moveTo(2464,33712);
ctx.lineTo(2464,33676);
ctx.lineTo(2500,33676);
ctx.lineTo(2500,33712);
ctx.lineTo(2464,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,208,17,0.85)';
ctx.strokeStyle='rgb(48,1,243)';
ctx.moveTo(2464,33616);
ctx.lineTo(2464,33580);
ctx.lineTo(2500,33580);
ctx.lineTo(2500,33616);
ctx.lineTo(2464,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,226,237,0.85)';
ctx.strokeStyle='rgb(135,53,173)';
ctx.moveTo(2464,33520);
ctx.lineTo(2464,33484);
ctx.lineTo(2500,33484);
ctx.lineTo(2500,33520);
ctx.lineTo(2464,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,57,152,0.85)';
ctx.strokeStyle='rgb(132,179,57)';
ctx.moveTo(2368,33808);
ctx.lineTo(2368,33772);
ctx.lineTo(2404,33772);
ctx.lineTo(2404,33808);
ctx.lineTo(2368,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,149,41,0.85)';
ctx.strokeStyle='rgb(191,229,70)';
ctx.moveTo(2368,33712);
ctx.lineTo(2368,33676);
ctx.lineTo(2404,33676);
ctx.lineTo(2404,33712);
ctx.lineTo(2368,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,177,31,0.85)';
ctx.strokeStyle='rgb(209,62,12)';
ctx.moveTo(2368,33616);
ctx.lineTo(2368,33580);
ctx.lineTo(2404,33580);
ctx.lineTo(2404,33616);
ctx.lineTo(2368,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,206,71,0.85)';
ctx.strokeStyle='rgb(34,136,165)';
ctx.moveTo(5476,33328);
ctx.lineTo(5476,33292);
ctx.lineTo(5512,33292);
ctx.lineTo(5512,33328);
ctx.lineTo(5476,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,146,166,0.85)';
ctx.strokeStyle='rgb(212,229,133)';
ctx.moveTo(5572,33328);
ctx.lineTo(5572,33292);
ctx.lineTo(5608,33292);
ctx.lineTo(5608,33328);
ctx.lineTo(5572,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,98,124,0.85)';
ctx.strokeStyle='rgb(63,92,108)';
ctx.moveTo(5572,33232);
ctx.lineTo(5572,33196);
ctx.lineTo(5608,33196);
ctx.lineTo(5608,33232);
ctx.lineTo(5572,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,132,82,0.85)';
ctx.strokeStyle='rgb(100,69,157)';
ctx.moveTo(5572,33136);
ctx.lineTo(5572,33100);
ctx.lineTo(5608,33100);
ctx.lineTo(5608,33136);
ctx.lineTo(5572,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,83,32,0.85)';
ctx.strokeStyle='rgb(124,113,38)';
ctx.moveTo(5572,33040);
ctx.lineTo(5572,33004);
ctx.lineTo(5608,33004);
ctx.lineTo(5608,33040);
ctx.lineTo(5572,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,136,31,0.85)';
ctx.strokeStyle='rgb(97,143,184)';
ctx.moveTo(5572,32944);
ctx.lineTo(5572,32908);
ctx.lineTo(5608,32908);
ctx.lineTo(5608,32944);
ctx.lineTo(5572,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,77,200,0.85)';
ctx.strokeStyle='rgb(186,32,232)';
ctx.moveTo(5476,33232);
ctx.lineTo(5476,33196);
ctx.lineTo(5512,33196);
ctx.lineTo(5512,33232);
ctx.lineTo(5476,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,32,9,0.85)';
ctx.strokeStyle='rgb(18,91,6)';
ctx.moveTo(3952,32608);
ctx.lineTo(3952,32572);
ctx.lineTo(3988,32572);
ctx.lineTo(3988,32608);
ctx.lineTo(3952,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,239,140,0.85)';
ctx.strokeStyle='rgb(139,239,183)';
ctx.moveTo(3952,32512);
ctx.lineTo(3952,32476);
ctx.lineTo(3988,32476);
ctx.lineTo(3988,32512);
ctx.lineTo(3952,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,136,176,0.85)';
ctx.strokeStyle='rgb(51,169,48)';
ctx.moveTo(3952,32416);
ctx.lineTo(3952,32380);
ctx.lineTo(3988,32380);
ctx.lineTo(3988,32416);
ctx.lineTo(3952,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,40,22,0.85)';
ctx.strokeStyle='rgb(142,40,174)';
ctx.moveTo(3952,32320);
ctx.lineTo(3952,32284);
ctx.lineTo(3988,32284);
ctx.lineTo(3988,32320);
ctx.lineTo(3952,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,229,108,0.85)';
ctx.strokeStyle='rgb(123,190,124)';
ctx.moveTo(3952,32224);
ctx.lineTo(3952,32188);
ctx.lineTo(3988,32188);
ctx.lineTo(3988,32224);
ctx.lineTo(3952,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,40,80,0.85)';
ctx.strokeStyle='rgb(232,171,116)';
ctx.moveTo(5668,33328);
ctx.lineTo(5668,33292);
ctx.lineTo(5704,33292);
ctx.lineTo(5704,33328);
ctx.lineTo(5668,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,184,251,0.85)';
ctx.strokeStyle='rgb(241,211,246)';
ctx.moveTo(3952,32032);
ctx.lineTo(3952,31996);
ctx.lineTo(3988,31996);
ctx.lineTo(3988,32032);
ctx.lineTo(3952,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,148,201,0.85)';
ctx.strokeStyle='rgb(235,26,46)';
ctx.moveTo(3952,31936);
ctx.lineTo(3952,31900);
ctx.lineTo(3988,31900);
ctx.lineTo(3988,31936);
ctx.lineTo(3952,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,98,32,0.85)';
ctx.strokeStyle='rgb(225,73,90)';
ctx.moveTo(3952,31840);
ctx.lineTo(3952,31804);
ctx.lineTo(3988,31804);
ctx.lineTo(3988,31840);
ctx.lineTo(3952,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,13,66,0.85)';
ctx.strokeStyle='rgb(96,94,140)';
ctx.moveTo(5668,33232);
ctx.lineTo(5668,33196);
ctx.lineTo(5704,33196);
ctx.lineTo(5704,33232);
ctx.lineTo(5668,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,198,19,0.85)';
ctx.strokeStyle='rgb(226,210,186)';
ctx.moveTo(5668,33136);
ctx.lineTo(5668,33100);
ctx.lineTo(5704,33100);
ctx.lineTo(5704,33136);
ctx.lineTo(5668,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,30,82,0.85)';
ctx.strokeStyle='rgb(18,6,145)';
ctx.moveTo(5668,33040);
ctx.lineTo(5668,33004);
ctx.lineTo(5704,33004);
ctx.lineTo(5704,33040);
ctx.lineTo(5668,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,186,178,0.85)';
ctx.strokeStyle='rgb(190,219,199)';
ctx.moveTo(5668,32944);
ctx.lineTo(5668,32908);
ctx.lineTo(5704,32908);
ctx.lineTo(5704,32944);
ctx.lineTo(5668,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,89,224,0.85)';
ctx.strokeStyle='rgb(19,190,38)';
ctx.moveTo(5476,33136);
ctx.lineTo(5476,33100);
ctx.lineTo(5512,33100);
ctx.lineTo(5512,33136);
ctx.lineTo(5476,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,46,185,0.85)';
ctx.strokeStyle='rgb(178,164,249)';
ctx.moveTo(5764,33328);
ctx.lineTo(5764,33292);
ctx.lineTo(5800,33292);
ctx.lineTo(5800,33328);
ctx.lineTo(5764,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,196,163,0.85)';
ctx.strokeStyle='rgb(61,185,159)';
ctx.moveTo(5764,33232);
ctx.lineTo(5764,33196);
ctx.lineTo(5800,33196);
ctx.lineTo(5800,33232);
ctx.lineTo(5764,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,165,243,0.85)';
ctx.strokeStyle='rgb(243,72,56)';
ctx.moveTo(5860,33712);
ctx.lineTo(5860,33676);
ctx.lineTo(5896,33676);
ctx.lineTo(5896,33712);
ctx.lineTo(5860,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,210,98,0.85)';
ctx.strokeStyle='rgb(194,236,140)';
ctx.moveTo(5860,33616);
ctx.lineTo(5860,33580);
ctx.lineTo(5896,33580);
ctx.lineTo(5896,33616);
ctx.lineTo(5860,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,42,228,0.85)';
ctx.strokeStyle='rgb(9,101,180)';
ctx.moveTo(5860,33520);
ctx.lineTo(5860,33484);
ctx.lineTo(5896,33484);
ctx.lineTo(5896,33520);
ctx.lineTo(5860,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,57,1,0.85)';
ctx.strokeStyle='rgb(240,147,221)';
ctx.moveTo(5668,33712);
ctx.lineTo(5668,33676);
ctx.lineTo(5704,33676);
ctx.lineTo(5704,33712);
ctx.lineTo(5668,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,181,172,0.85)';
ctx.strokeStyle='rgb(173,228,221)';
ctx.moveTo(5668,33616);
ctx.lineTo(5668,33580);
ctx.lineTo(5704,33580);
ctx.lineTo(5704,33616);
ctx.lineTo(5668,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,72,15,0.85)';
ctx.strokeStyle='rgb(136,75,248)';
ctx.moveTo(5668,33520);
ctx.lineTo(5668,33484);
ctx.lineTo(5704,33484);
ctx.lineTo(5704,33520);
ctx.lineTo(5668,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,216,135,0.85)';
ctx.strokeStyle='rgb(95,38,169)';
ctx.moveTo(5572,33808);
ctx.lineTo(5572,33772);
ctx.lineTo(5608,33772);
ctx.lineTo(5608,33808);
ctx.lineTo(5572,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,124,18,0.85)';
ctx.strokeStyle='rgb(132,201,102)';
ctx.moveTo(5572,33712);
ctx.lineTo(5572,33676);
ctx.lineTo(5608,33676);
ctx.lineTo(5608,33712);
ctx.lineTo(5572,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,152,253,0.85)';
ctx.strokeStyle='rgb(82,177,36)';
ctx.moveTo(5572,33616);
ctx.lineTo(5572,33580);
ctx.lineTo(5608,33580);
ctx.lineTo(5608,33616);
ctx.lineTo(5572,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,221,153,0.85)';
ctx.strokeStyle='rgb(22,223,45)';
ctx.moveTo(5572,33520);
ctx.lineTo(5572,33484);
ctx.lineTo(5608,33484);
ctx.lineTo(5608,33520);
ctx.lineTo(5572,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,102,201,0.85)';
ctx.strokeStyle='rgb(2,200,14)';
ctx.moveTo(5476,33808);
ctx.lineTo(5476,33772);
ctx.lineTo(5512,33772);
ctx.lineTo(5512,33808);
ctx.lineTo(5476,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,127,58,0.85)';
ctx.strokeStyle='rgb(206,198,204)';
ctx.moveTo(5476,33712);
ctx.lineTo(5476,33676);
ctx.lineTo(5512,33676);
ctx.lineTo(5512,33712);
ctx.lineTo(5476,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,28,227,0.85)';
ctx.strokeStyle='rgb(143,108,136)';
ctx.moveTo(5764,33904);
ctx.lineTo(5764,33868);
ctx.lineTo(5800,33868);
ctx.lineTo(5800,33904);
ctx.lineTo(5764,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,48,25,0.85)';
ctx.strokeStyle='rgb(193,143,23)';
ctx.moveTo(5764,33808);
ctx.lineTo(5764,33772);
ctx.lineTo(5800,33772);
ctx.lineTo(5800,33808);
ctx.lineTo(5764,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,126,150,0.85)';
ctx.strokeStyle='rgb(220,231,179)';
ctx.moveTo(5764,33712);
ctx.lineTo(5764,33676);
ctx.lineTo(5800,33676);
ctx.lineTo(5800,33712);
ctx.lineTo(5764,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,71,27,0.85)';
ctx.strokeStyle='rgb(20,76,53)';
ctx.moveTo(5764,33616);
ctx.lineTo(5764,33580);
ctx.lineTo(5800,33580);
ctx.lineTo(5800,33616);
ctx.lineTo(5764,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,41,169,0.85)';
ctx.strokeStyle='rgb(158,233,87)';
ctx.moveTo(5764,33520);
ctx.lineTo(5764,33484);
ctx.lineTo(5800,33484);
ctx.lineTo(5800,33520);
ctx.lineTo(5764,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,141,209,0.85)';
ctx.strokeStyle='rgb(46,92,90)';
ctx.moveTo(5476,33616);
ctx.lineTo(5476,33580);
ctx.lineTo(5512,33580);
ctx.lineTo(5512,33616);
ctx.lineTo(5476,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,100,28,0.85)';
ctx.strokeStyle='rgb(189,67,186)';
ctx.moveTo(5476,33520);
ctx.lineTo(5476,33484);
ctx.lineTo(5512,33484);
ctx.lineTo(5512,33520);
ctx.lineTo(5476,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,239,165,0.85)';
ctx.strokeStyle='rgb(11,54,134)';
ctx.moveTo(5668,33808);
ctx.lineTo(5668,33772);
ctx.lineTo(5704,33772);
ctx.lineTo(5704,33808);
ctx.lineTo(5668,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,27,75,0.85)';
ctx.strokeStyle='rgb(211,157,158)';
ctx.moveTo(5860,33904);
ctx.lineTo(5860,33868);
ctx.lineTo(5896,33868);
ctx.lineTo(5896,33904);
ctx.lineTo(5860,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,27,191,0.85)';
ctx.strokeStyle='rgb(176,109,199)';
ctx.moveTo(5860,33808);
ctx.lineTo(5860,33772);
ctx.lineTo(5896,33772);
ctx.lineTo(5896,33808);
ctx.lineTo(5860,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,143,38,0.85)';
ctx.strokeStyle='rgb(148,233,82)';
ctx.moveTo(5476,33904);
ctx.lineTo(5476,33868);
ctx.lineTo(5512,33868);
ctx.lineTo(5512,33904);
ctx.lineTo(5476,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,46,197,0.85)';
ctx.strokeStyle='rgb(183,225,118)';
ctx.moveTo(5572,33904);
ctx.lineTo(5572,33868);
ctx.lineTo(5608,33868);
ctx.lineTo(5608,33904);
ctx.lineTo(5572,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,144,3,0.85)';
ctx.strokeStyle='rgb(155,149,195)';
ctx.moveTo(5668,33904);
ctx.lineTo(5668,33868);
ctx.lineTo(5704,33868);
ctx.lineTo(5704,33904);
ctx.lineTo(5668,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,200,80,0.85)';
ctx.strokeStyle='rgb(6,28,39)';
ctx.moveTo(5476,33424);
ctx.lineTo(5476,33388);
ctx.lineTo(5512,33388);
ctx.lineTo(5512,33424);
ctx.lineTo(5476,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,90,102,0.85)';
ctx.strokeStyle='rgb(148,45,123)';
ctx.moveTo(5572,33424);
ctx.lineTo(5572,33388);
ctx.lineTo(5608,33388);
ctx.lineTo(5608,33424);
ctx.lineTo(5572,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,190,22,0.85)';
ctx.strokeStyle='rgb(117,175,68)';
ctx.moveTo(5668,33424);
ctx.lineTo(5668,33388);
ctx.lineTo(5704,33388);
ctx.lineTo(5704,33424);
ctx.lineTo(5668,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,210,160,0.85)';
ctx.strokeStyle='rgb(203,23,54)';
ctx.moveTo(5764,33424);
ctx.lineTo(5764,33388);
ctx.lineTo(5800,33388);
ctx.lineTo(5800,33424);
ctx.lineTo(5764,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,73,249,0.85)';
ctx.strokeStyle='rgb(219,136,176)';
ctx.moveTo(5860,33424);
ctx.lineTo(5860,33388);
ctx.lineTo(5896,33388);
ctx.lineTo(5896,33424);
ctx.lineTo(5860,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,218,147,0.85)';
ctx.strokeStyle='rgb(25,153,150)';
ctx.moveTo(5956,33904);
ctx.lineTo(5956,33868);
ctx.lineTo(5992,33868);
ctx.lineTo(5992,33904);
ctx.lineTo(5956,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,239,0,0.85)';
ctx.strokeStyle='rgb(144,214,158)';
ctx.moveTo(5956,33808);
ctx.lineTo(5956,33772);
ctx.lineTo(5992,33772);
ctx.lineTo(5992,33808);
ctx.lineTo(5956,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,163,248,0.85)';
ctx.strokeStyle='rgb(129,100,48)';
ctx.moveTo(5956,33712);
ctx.lineTo(5956,33676);
ctx.lineTo(5992,33676);
ctx.lineTo(5992,33712);
ctx.lineTo(5956,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,164,122,0.85)';
ctx.strokeStyle='rgb(80,10,186)';
ctx.moveTo(5956,33616);
ctx.lineTo(5956,33580);
ctx.lineTo(5992,33580);
ctx.lineTo(5992,33616);
ctx.lineTo(5956,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,188,189,0.85)';
ctx.strokeStyle='rgb(145,205,31)';
ctx.moveTo(5956,33520);
ctx.lineTo(5956,33484);
ctx.lineTo(5992,33484);
ctx.lineTo(5992,33520);
ctx.lineTo(5956,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,113,163,0.85)';
ctx.strokeStyle='rgb(128,142,134)';
ctx.moveTo(5956,33424);
ctx.lineTo(5956,33388);
ctx.lineTo(5992,33388);
ctx.lineTo(5992,33424);
ctx.lineTo(5956,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,65,251,0.85)';
ctx.strokeStyle='rgb(59,198,206)';
ctx.moveTo(5956,33328);
ctx.lineTo(5956,33292);
ctx.lineTo(5992,33292);
ctx.lineTo(5992,33328);
ctx.lineTo(5956,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,156,35,0.85)';
ctx.strokeStyle='rgb(148,99,215)';
ctx.moveTo(5956,33232);
ctx.lineTo(5956,33196);
ctx.lineTo(5992,33196);
ctx.lineTo(5992,33232);
ctx.lineTo(5956,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,174,83,0.85)';
ctx.strokeStyle='rgb(248,44,67)';
ctx.moveTo(5956,33136);
ctx.lineTo(5956,33100);
ctx.lineTo(5992,33100);
ctx.lineTo(5992,33136);
ctx.lineTo(5956,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,213,22,0.85)';
ctx.strokeStyle='rgb(157,203,13)';
ctx.moveTo(3952,32128);
ctx.lineTo(3952,32092);
ctx.lineTo(3988,32092);
ctx.lineTo(3988,32128);
ctx.lineTo(3952,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,200,25,0.85)';
ctx.strokeStyle='rgb(91,219,134)';
ctx.moveTo(5956,33040);
ctx.lineTo(5956,33004);
ctx.lineTo(5992,33004);
ctx.lineTo(5992,33040);
ctx.lineTo(5956,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,215,65,0.85)';
ctx.strokeStyle='rgb(57,234,91)';
ctx.moveTo(5956,32944);
ctx.lineTo(5956,32908);
ctx.lineTo(5992,32908);
ctx.lineTo(5992,32944);
ctx.lineTo(5956,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,147,155,0.85)';
ctx.strokeStyle='rgb(20,128,237)';
ctx.moveTo(5764,33136);
ctx.lineTo(5764,33100);
ctx.lineTo(5800,33100);
ctx.lineTo(5800,33136);
ctx.lineTo(5764,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,67,84,0.85)';
ctx.strokeStyle='rgb(43,79,130)';
ctx.moveTo(5764,33040);
ctx.lineTo(5764,33004);
ctx.lineTo(5800,33004);
ctx.lineTo(5800,33040);
ctx.lineTo(5764,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,208,13,0.85)';
ctx.strokeStyle='rgb(215,232,43)';
ctx.moveTo(5764,32944);
ctx.lineTo(5764,32908);
ctx.lineTo(5800,32908);
ctx.lineTo(5800,32944);
ctx.lineTo(5764,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,10,114,0.85)';
ctx.strokeStyle='rgb(216,181,195)';
ctx.moveTo(5476,33040);
ctx.lineTo(5476,33004);
ctx.lineTo(5512,33004);
ctx.lineTo(5512,33040);
ctx.lineTo(5476,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,13,181,0.85)';
ctx.strokeStyle='rgb(249,77,172)';
ctx.moveTo(5860,33328);
ctx.lineTo(5860,33292);
ctx.lineTo(5896,33292);
ctx.lineTo(5896,33328);
ctx.lineTo(5860,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,6,183,0.85)';
ctx.strokeStyle='rgb(34,253,90)';
ctx.moveTo(5860,33232);
ctx.lineTo(5860,33196);
ctx.lineTo(5896,33196);
ctx.lineTo(5896,33232);
ctx.lineTo(5860,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,228,67,0.85)';
ctx.strokeStyle='rgb(150,120,129)';
ctx.moveTo(5860,33136);
ctx.lineTo(5860,33100);
ctx.lineTo(5896,33100);
ctx.lineTo(5896,33136);
ctx.lineTo(5860,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,219,218,0.85)';
ctx.strokeStyle='rgb(81,196,208)';
ctx.moveTo(5860,33040);
ctx.lineTo(5860,33004);
ctx.lineTo(5896,33004);
ctx.lineTo(5896,33040);
ctx.lineTo(5860,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,251,130,0.85)';
ctx.strokeStyle='rgb(115,222,56)';
ctx.moveTo(5860,32944);
ctx.lineTo(5860,32908);
ctx.lineTo(5896,32908);
ctx.lineTo(5896,32944);
ctx.lineTo(5860,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,86,141,0.85)';
ctx.strokeStyle='rgb(158,135,233)';
ctx.moveTo(5476,32944);
ctx.lineTo(5476,32908);
ctx.lineTo(5512,32908);
ctx.lineTo(5512,32944);
ctx.lineTo(5476,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,10,90,0.85)';
ctx.strokeStyle='rgb(172,78,185)';
ctx.moveTo(6436,33616);
ctx.lineTo(6436,33580);
ctx.lineTo(6472,33580);
ctx.lineTo(6472,33616);
ctx.lineTo(6436,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,201,104,0.85)';
ctx.strokeStyle='rgb(36,154,153)';
ctx.moveTo(6436,33520);
ctx.lineTo(6436,33484);
ctx.lineTo(6472,33484);
ctx.lineTo(6472,33520);
ctx.lineTo(6436,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,215,84,0.85)';
ctx.strokeStyle='rgb(137,129,57)';
ctx.moveTo(6244,33712);
ctx.lineTo(6244,33676);
ctx.lineTo(6280,33676);
ctx.lineTo(6280,33712);
ctx.lineTo(6244,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,75,132,0.85)';
ctx.strokeStyle='rgb(26,162,196)';
ctx.moveTo(6244,33616);
ctx.lineTo(6244,33580);
ctx.lineTo(6280,33580);
ctx.lineTo(6280,33616);
ctx.lineTo(6244,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,19,78,0.85)';
ctx.strokeStyle='rgb(105,207,12)';
ctx.moveTo(6244,33520);
ctx.lineTo(6244,33484);
ctx.lineTo(6280,33484);
ctx.lineTo(6280,33520);
ctx.lineTo(6244,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,8,193,0.85)';
ctx.strokeStyle='rgb(88,153,153)';
ctx.moveTo(6148,33808);
ctx.lineTo(6148,33772);
ctx.lineTo(6184,33772);
ctx.lineTo(6184,33808);
ctx.lineTo(6148,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,64,48,0.85)';
ctx.strokeStyle='rgb(181,41,206)';
ctx.moveTo(6148,33712);
ctx.lineTo(6148,33676);
ctx.lineTo(6184,33676);
ctx.lineTo(6184,33712);
ctx.lineTo(6148,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,150,182,0.85)';
ctx.strokeStyle='rgb(168,166,100)';
ctx.moveTo(6148,33616);
ctx.lineTo(6148,33580);
ctx.lineTo(6184,33580);
ctx.lineTo(6184,33616);
ctx.lineTo(6148,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,207,238,0.85)';
ctx.strokeStyle='rgb(229,171,150)';
ctx.moveTo(6148,33040);
ctx.lineTo(6148,33004);
ctx.lineTo(6184,33004);
ctx.lineTo(6184,33040);
ctx.lineTo(6148,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,252,26,0.85)';
ctx.strokeStyle='rgb(74,90,73)';
ctx.moveTo(6148,32944);
ctx.lineTo(6148,32908);
ctx.lineTo(6184,32908);
ctx.lineTo(6184,32944);
ctx.lineTo(6148,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,162,152,0.85)';
ctx.strokeStyle='rgb(117,114,194)';
ctx.moveTo(6052,33232);
ctx.lineTo(6052,33196);
ctx.lineTo(6088,33196);
ctx.lineTo(6088,33232);
ctx.lineTo(6052,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,151,11,0.85)';
ctx.strokeStyle='rgb(254,126,211)';
ctx.moveTo(6244,33328);
ctx.lineTo(6244,33292);
ctx.lineTo(6280,33292);
ctx.lineTo(6280,33328);
ctx.lineTo(6244,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,170,96,0.85)';
ctx.strokeStyle='rgb(156,204,20)';
ctx.moveTo(6244,33232);
ctx.lineTo(6244,33196);
ctx.lineTo(6280,33196);
ctx.lineTo(6280,33232);
ctx.lineTo(6244,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,184,29,0.85)';
ctx.strokeStyle='rgb(2,39,85)';
ctx.moveTo(6244,33136);
ctx.lineTo(6244,33100);
ctx.lineTo(6280,33100);
ctx.lineTo(6280,33136);
ctx.lineTo(6244,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,82,70,0.85)';
ctx.strokeStyle='rgb(18,1,167)';
ctx.moveTo(6244,33040);
ctx.lineTo(6244,33004);
ctx.lineTo(6280,33004);
ctx.lineTo(6280,33040);
ctx.lineTo(6244,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,147,62,0.85)';
ctx.strokeStyle='rgb(43,112,240)';
ctx.moveTo(6244,32944);
ctx.lineTo(6244,32908);
ctx.lineTo(6280,32908);
ctx.lineTo(6280,32944);
ctx.lineTo(6244,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,24,162,0.85)';
ctx.strokeStyle='rgb(156,25,22)';
ctx.moveTo(6052,33136);
ctx.lineTo(6052,33100);
ctx.lineTo(6088,33100);
ctx.lineTo(6088,33136);
ctx.lineTo(6052,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,207,186,0.85)';
ctx.strokeStyle='rgb(117,196,28)';
ctx.moveTo(6340,33328);
ctx.lineTo(6340,33292);
ctx.lineTo(6376,33292);
ctx.lineTo(6376,33328);
ctx.lineTo(6340,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,115,99,0.85)';
ctx.strokeStyle='rgb(164,248,65)';
ctx.moveTo(6340,33232);
ctx.lineTo(6340,33196);
ctx.lineTo(6376,33196);
ctx.lineTo(6376,33232);
ctx.lineTo(6340,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,14,171,0.85)';
ctx.strokeStyle='rgb(223,232,30)';
ctx.moveTo(6340,33136);
ctx.lineTo(6340,33100);
ctx.lineTo(6376,33100);
ctx.lineTo(6376,33136);
ctx.lineTo(6340,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,193,186,0.85)';
ctx.strokeStyle='rgb(66,189,6)';
ctx.moveTo(6340,33040);
ctx.lineTo(6340,33004);
ctx.lineTo(6376,33004);
ctx.lineTo(6376,33040);
ctx.lineTo(6340,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,124,17,0.85)';
ctx.strokeStyle='rgb(212,42,217)';
ctx.moveTo(6340,32944);
ctx.lineTo(6340,32908);
ctx.lineTo(6376,32908);
ctx.lineTo(6376,32944);
ctx.lineTo(6340,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,194,240,0.85)';
ctx.strokeStyle='rgb(166,52,224)';
ctx.moveTo(6052,33040);
ctx.lineTo(6052,33004);
ctx.lineTo(6088,33004);
ctx.lineTo(6088,33040);
ctx.lineTo(6052,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,170,39,0.85)';
ctx.strokeStyle='rgb(22,200,225)';
ctx.moveTo(6436,33328);
ctx.lineTo(6436,33292);
ctx.lineTo(6472,33292);
ctx.lineTo(6472,33328);
ctx.lineTo(6436,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,213,240,0.85)';
ctx.strokeStyle='rgb(158,164,229)';
ctx.moveTo(6436,33232);
ctx.lineTo(6436,33196);
ctx.lineTo(6472,33196);
ctx.lineTo(6472,33232);
ctx.lineTo(6436,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,144,106,0.85)';
ctx.strokeStyle='rgb(61,136,148)';
ctx.moveTo(6436,33136);
ctx.lineTo(6436,33100);
ctx.lineTo(6472,33100);
ctx.lineTo(6472,33136);
ctx.lineTo(6436,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,182,137,0.85)';
ctx.strokeStyle='rgb(19,112,47)';
ctx.moveTo(6436,33040);
ctx.lineTo(6436,33004);
ctx.lineTo(6472,33004);
ctx.lineTo(6472,33040);
ctx.lineTo(6436,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,70,110,0.85)';
ctx.strokeStyle='rgb(0,119,83)';
ctx.moveTo(6436,32944);
ctx.lineTo(6436,32908);
ctx.lineTo(6472,32908);
ctx.lineTo(6472,32944);
ctx.lineTo(6436,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,101,243,0.85)';
ctx.strokeStyle='rgb(57,136,119)';
ctx.moveTo(6148,31414);
ctx.lineTo(6148,31378);
ctx.lineTo(6184,31378);
ctx.lineTo(6184,31414);
ctx.lineTo(6148,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,84,204,0.85)';
ctx.strokeStyle='rgb(66,29,91)';
ctx.moveTo(6244,31414);
ctx.lineTo(6244,31378);
ctx.lineTo(6280,31378);
ctx.lineTo(6280,31414);
ctx.lineTo(6244,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,214,1,0.85)';
ctx.strokeStyle='rgb(168,235,242)';
ctx.moveTo(6340,31414);
ctx.lineTo(6340,31378);
ctx.lineTo(6376,31378);
ctx.lineTo(6376,31414);
ctx.lineTo(6340,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,210,134,0.85)';
ctx.strokeStyle='rgb(128,56,31)';
ctx.moveTo(6436,31414);
ctx.lineTo(6436,31378);
ctx.lineTo(6472,31378);
ctx.lineTo(6472,31414);
ctx.lineTo(6436,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,66,168,0.85)';
ctx.strokeStyle='rgb(188,234,215)';
ctx.moveTo(6052,31414);
ctx.lineTo(6052,31378);
ctx.lineTo(6088,31378);
ctx.lineTo(6088,31414);
ctx.lineTo(6052,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,120,223,0.85)';
ctx.strokeStyle='rgb(197,201,86)';
ctx.moveTo(6052,33424);
ctx.lineTo(6052,33388);
ctx.lineTo(6088,33388);
ctx.lineTo(6088,33424);
ctx.lineTo(6052,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,215,10,0.85)';
ctx.strokeStyle='rgb(65,186,132)';
ctx.moveTo(6148,33424);
ctx.lineTo(6148,33388);
ctx.lineTo(6184,33388);
ctx.lineTo(6184,33424);
ctx.lineTo(6148,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,124,147,0.85)';
ctx.strokeStyle='rgb(12,102,126)';
ctx.moveTo(6244,33424);
ctx.lineTo(6244,33388);
ctx.lineTo(6280,33388);
ctx.lineTo(6280,33424);
ctx.lineTo(6244,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,20,139,0.85)';
ctx.strokeStyle='rgb(54,39,150)';
ctx.moveTo(6340,33424);
ctx.lineTo(6340,33388);
ctx.lineTo(6376,33388);
ctx.lineTo(6376,33424);
ctx.lineTo(6340,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,221,150,0.85)';
ctx.strokeStyle='rgb(160,26,144)';
ctx.moveTo(6436,33424);
ctx.lineTo(6436,33388);
ctx.lineTo(6472,33388);
ctx.lineTo(6472,33424);
ctx.lineTo(6436,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,105,233,0.85)';
ctx.strokeStyle='rgb(175,251,200)';
ctx.moveTo(6052,32944);
ctx.lineTo(6052,32908);
ctx.lineTo(6088,32908);
ctx.lineTo(6088,32944);
ctx.lineTo(6052,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,84,4,0.85)';
ctx.strokeStyle='rgb(18,211,253)';
ctx.moveTo(6052,33328);
ctx.lineTo(6052,33292);
ctx.lineTo(6088,33292);
ctx.lineTo(6088,33328);
ctx.lineTo(6052,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,211,113,0.85)';
ctx.strokeStyle='rgb(121,7,231)';
ctx.moveTo(6148,33328);
ctx.lineTo(6148,33292);
ctx.lineTo(6184,33292);
ctx.lineTo(6184,33328);
ctx.lineTo(6148,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,180,130,0.85)';
ctx.strokeStyle='rgb(225,118,190)';
ctx.moveTo(6148,33232);
ctx.lineTo(6148,33196);
ctx.lineTo(6184,33196);
ctx.lineTo(6184,33232);
ctx.lineTo(6148,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,94,201,0.85)';
ctx.strokeStyle='rgb(154,3,103)';
ctx.moveTo(6148,33136);
ctx.lineTo(6148,33100);
ctx.lineTo(6184,33100);
ctx.lineTo(6184,33136);
ctx.lineTo(6148,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,51,234,0.85)';
ctx.strokeStyle='rgb(148,191,174)';
ctx.moveTo(6148,33520);
ctx.lineTo(6148,33484);
ctx.lineTo(6184,33484);
ctx.lineTo(6184,33520);
ctx.lineTo(6148,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,183,3,0.85)';
ctx.strokeStyle='rgb(145,13,148)';
ctx.moveTo(6052,33808);
ctx.lineTo(6052,33772);
ctx.lineTo(6088,33772);
ctx.lineTo(6088,33808);
ctx.lineTo(6052,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,115,232,0.85)';
ctx.strokeStyle='rgb(244,126,180)';
ctx.moveTo(6052,33712);
ctx.lineTo(6052,33676);
ctx.lineTo(6088,33676);
ctx.lineTo(6088,33712);
ctx.lineTo(6052,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,29,110,0.85)';
ctx.strokeStyle='rgb(68,13,219)';
ctx.moveTo(6340,33904);
ctx.lineTo(6340,33868);
ctx.lineTo(6376,33868);
ctx.lineTo(6376,33904);
ctx.lineTo(6340,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,205,89,0.85)';
ctx.strokeStyle='rgb(7,99,217)';
ctx.moveTo(6340,33808);
ctx.lineTo(6340,33772);
ctx.lineTo(6376,33772);
ctx.lineTo(6376,33808);
ctx.lineTo(6340,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,58,211,0.85)';
ctx.strokeStyle='rgb(4,43,208)';
ctx.moveTo(6340,33712);
ctx.lineTo(6340,33676);
ctx.lineTo(6376,33676);
ctx.lineTo(6376,33712);
ctx.lineTo(6340,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,43,231,0.85)';
ctx.strokeStyle='rgb(92,158,166)';
ctx.moveTo(6340,33616);
ctx.lineTo(6340,33580);
ctx.lineTo(6376,33580);
ctx.lineTo(6376,33616);
ctx.lineTo(6340,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,95,34,0.85)';
ctx.strokeStyle='rgb(39,207,208)';
ctx.moveTo(6340,33520);
ctx.lineTo(6340,33484);
ctx.lineTo(6376,33484);
ctx.lineTo(6376,33520);
ctx.lineTo(6340,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,181,6,0.85)';
ctx.strokeStyle='rgb(70,171,245)';
ctx.moveTo(6052,33616);
ctx.lineTo(6052,33580);
ctx.lineTo(6088,33580);
ctx.lineTo(6088,33616);
ctx.lineTo(6052,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,246,191,0.85)';
ctx.strokeStyle='rgb(237,185,38)';
ctx.moveTo(6052,33520);
ctx.lineTo(6052,33484);
ctx.lineTo(6088,33484);
ctx.lineTo(6088,33520);
ctx.lineTo(6052,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,150,2,0.85)';
ctx.strokeStyle='rgb(167,31,4)';
ctx.moveTo(6052,33904);
ctx.lineTo(6052,33868);
ctx.lineTo(6088,33868);
ctx.lineTo(6088,33904);
ctx.lineTo(6052,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,110,53,0.85)';
ctx.strokeStyle='rgb(198,31,249)';
ctx.moveTo(6148,33904);
ctx.lineTo(6148,33868);
ctx.lineTo(6184,33868);
ctx.lineTo(6184,33904);
ctx.lineTo(6148,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,170,75,0.85)';
ctx.strokeStyle='rgb(160,190,165)';
ctx.moveTo(6244,33904);
ctx.lineTo(6244,33868);
ctx.lineTo(6280,33868);
ctx.lineTo(6280,33904);
ctx.lineTo(6244,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,136,57,0.85)';
ctx.strokeStyle='rgb(204,229,196)';
ctx.moveTo(6244,33808);
ctx.lineTo(6244,33772);
ctx.lineTo(6280,33772);
ctx.lineTo(6280,33808);
ctx.lineTo(6244,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,117,179,0.85)';
ctx.strokeStyle='rgb(145,195,97)';
ctx.moveTo(6436,33904);
ctx.lineTo(6436,33868);
ctx.lineTo(6472,33868);
ctx.lineTo(6472,33904);
ctx.lineTo(6436,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,183,107,0.85)';
ctx.strokeStyle='rgb(122,1,0)';
ctx.moveTo(6436,33808);
ctx.lineTo(6436,33772);
ctx.lineTo(6472,33772);
ctx.lineTo(6472,33808);
ctx.lineTo(6436,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,97,37,0.85)';
ctx.strokeStyle='rgb(136,23,41)';
ctx.moveTo(6436,33712);
ctx.lineTo(6436,33676);
ctx.lineTo(6472,33676);
ctx.lineTo(6472,33712);
ctx.lineTo(6436,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,246,157,0.85)';
ctx.strokeStyle='rgb(103,154,140)';
ctx.moveTo(14758,27040);
ctx.lineTo(14758,27004);
ctx.lineTo(14794,27004);
ctx.lineTo(14794,27040);
ctx.lineTo(14758,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,40,13,0.85)';
ctx.strokeStyle='rgb(174,60,44)';
ctx.moveTo(14758,26944);
ctx.lineTo(14758,26908);
ctx.lineTo(14794,26908);
ctx.lineTo(14794,26944);
ctx.lineTo(14758,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,207,242,0.85)';
ctx.strokeStyle='rgb(102,70,224)';
ctx.moveTo(14758,26848);
ctx.lineTo(14758,26812);
ctx.lineTo(14794,26812);
ctx.lineTo(14794,26848);
ctx.lineTo(14758,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,196,227,0.85)';
ctx.strokeStyle='rgb(207,12,12)';
ctx.moveTo(14854,27040);
ctx.lineTo(14854,27004);
ctx.lineTo(14890,27004);
ctx.lineTo(14890,27040);
ctx.lineTo(14854,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,133,202,0.85)';
ctx.strokeStyle='rgb(172,204,245)';
ctx.moveTo(14854,26944);
ctx.lineTo(14854,26908);
ctx.lineTo(14890,26908);
ctx.lineTo(14890,26944);
ctx.lineTo(14854,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,29,195,0.85)';
ctx.strokeStyle='rgb(210,37,134)';
ctx.moveTo(14854,26848);
ctx.lineTo(14854,26812);
ctx.lineTo(14890,26812);
ctx.lineTo(14890,26848);
ctx.lineTo(14854,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,175,224,0.85)';
ctx.strokeStyle='rgb(111,226,123)';
ctx.moveTo(14950,27040);
ctx.lineTo(14950,27004);
ctx.lineTo(14986,27004);
ctx.lineTo(14986,27040);
ctx.lineTo(14950,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,113,171,0.85)';
ctx.strokeStyle='rgb(19,139,159)';
ctx.moveTo(14950,26944);
ctx.lineTo(14950,26908);
ctx.lineTo(14986,26908);
ctx.lineTo(14986,26944);
ctx.lineTo(14950,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,189,233,0.85)';
ctx.strokeStyle='rgb(129,237,9)';
ctx.moveTo(14950,26848);
ctx.lineTo(14950,26812);
ctx.lineTo(14986,26812);
ctx.lineTo(14986,26848);
ctx.lineTo(14950,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,96,38,0.85)';
ctx.strokeStyle='rgb(5,122,82)';
ctx.moveTo(15046,27040);
ctx.lineTo(15046,27004);
ctx.lineTo(15082,27004);
ctx.lineTo(15082,27040);
ctx.lineTo(15046,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,197,66,0.85)';
ctx.strokeStyle='rgb(226,239,177)';
ctx.moveTo(15046,26944);
ctx.lineTo(15046,26908);
ctx.lineTo(15082,26908);
ctx.lineTo(15082,26944);
ctx.lineTo(15046,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,233,51,0.85)';
ctx.strokeStyle='rgb(1,109,55)';
ctx.moveTo(15046,26848);
ctx.lineTo(15046,26812);
ctx.lineTo(15082,26812);
ctx.lineTo(15082,26848);
ctx.lineTo(15046,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,117,197,0.85)';
ctx.strokeStyle='rgb(150,12,118)';
ctx.moveTo(15142,27040);
ctx.lineTo(15142,27004);
ctx.lineTo(15178,27004);
ctx.lineTo(15178,27040);
ctx.lineTo(15142,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,18,62,0.85)';
ctx.strokeStyle='rgb(92,112,40)';
ctx.moveTo(15142,26944);
ctx.lineTo(15142,26908);
ctx.lineTo(15178,26908);
ctx.lineTo(15178,26944);
ctx.lineTo(15142,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,137,47,0.85)';
ctx.strokeStyle='rgb(64,103,43)';
ctx.moveTo(15142,26848);
ctx.lineTo(15142,26812);
ctx.lineTo(15178,26812);
ctx.lineTo(15178,26848);
ctx.lineTo(15142,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,57,111,0.85)';
ctx.strokeStyle='rgb(141,9,112)';
ctx.moveTo(18700,26188);
ctx.lineTo(18700,26152);
ctx.lineTo(18736,26152);
ctx.lineTo(18736,26188);
ctx.lineTo(18700,26188);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,233,29,0.85)';
ctx.strokeStyle='rgb(238,55,159)';
ctx.moveTo(18808,25756);
ctx.lineTo(18808,25720);
ctx.lineTo(18844,25720);
ctx.lineTo(18844,25756);
ctx.lineTo(18808,25756);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,3,140,0.85)';
ctx.strokeStyle='rgb(43,132,90)';
ctx.moveTo(15478,28552);
ctx.lineTo(15478,28516);
ctx.lineTo(15514,28516);
ctx.lineTo(15514,28552);
ctx.lineTo(15478,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,245,137,0.85)';
ctx.strokeStyle='rgb(98,242,147)';
ctx.moveTo(15478,28456);
ctx.lineTo(15478,28420);
ctx.lineTo(15514,28420);
ctx.lineTo(15514,28456);
ctx.lineTo(15478,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,93,5,0.85)';
ctx.strokeStyle='rgb(233,145,108)';
ctx.moveTo(15478,28360);
ctx.lineTo(15478,28324);
ctx.lineTo(15514,28324);
ctx.lineTo(15514,28360);
ctx.lineTo(15478,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,50,93,0.85)';
ctx.strokeStyle='rgb(75,213,5)';
ctx.moveTo(15574,28552);
ctx.lineTo(15574,28516);
ctx.lineTo(15610,28516);
ctx.lineTo(15610,28552);
ctx.lineTo(15574,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,148,161,0.85)';
ctx.strokeStyle='rgb(72,31,209)';
ctx.moveTo(15574,28456);
ctx.lineTo(15574,28420);
ctx.lineTo(15610,28420);
ctx.lineTo(15610,28456);
ctx.lineTo(15574,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,92,236,0.85)';
ctx.strokeStyle='rgb(66,14,244)';
ctx.moveTo(15574,28360);
ctx.lineTo(15574,28324);
ctx.lineTo(15610,28324);
ctx.lineTo(15610,28360);
ctx.lineTo(15574,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,59,90,0.85)';
ctx.strokeStyle='rgb(65,140,93)';
ctx.moveTo(15670,28552);
ctx.lineTo(15670,28516);
ctx.lineTo(15706,28516);
ctx.lineTo(15706,28552);
ctx.lineTo(15670,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,211,233,0.85)';
ctx.strokeStyle='rgb(240,133,91)';
ctx.moveTo(15670,28456);
ctx.lineTo(15670,28420);
ctx.lineTo(15706,28420);
ctx.lineTo(15706,28456);
ctx.lineTo(15670,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,17,184,0.85)';
ctx.strokeStyle='rgb(79,192,175)';
ctx.moveTo(15670,28360);
ctx.lineTo(15670,28324);
ctx.lineTo(15706,28324);
ctx.lineTo(15706,28360);
ctx.lineTo(15670,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,247,215,0.85)';
ctx.strokeStyle='rgb(123,149,77)';
ctx.moveTo(15766,28552);
ctx.lineTo(15766,28516);
ctx.lineTo(15802,28516);
ctx.lineTo(15802,28552);
ctx.lineTo(15766,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,246,4,0.85)';
ctx.strokeStyle='rgb(72,4,203)';
ctx.moveTo(15766,28456);
ctx.lineTo(15766,28420);
ctx.lineTo(15802,28420);
ctx.lineTo(15802,28456);
ctx.lineTo(15766,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,227,19,0.85)';
ctx.strokeStyle='rgb(143,87,34)';
ctx.moveTo(15766,28360);
ctx.lineTo(15766,28324);
ctx.lineTo(15802,28324);
ctx.lineTo(15802,28360);
ctx.lineTo(15766,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,109,119,0.85)';
ctx.strokeStyle='rgb(216,111,251)';
ctx.moveTo(15862,28552);
ctx.lineTo(15862,28516);
ctx.lineTo(15898,28516);
ctx.lineTo(15898,28552);
ctx.lineTo(15862,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,230,8,0.85)';
ctx.strokeStyle='rgb(221,127,191)';
ctx.moveTo(15862,28456);
ctx.lineTo(15862,28420);
ctx.lineTo(15898,28420);
ctx.lineTo(15898,28456);
ctx.lineTo(15862,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,169,197,0.85)';
ctx.strokeStyle='rgb(245,179,102)';
ctx.moveTo(15862,28360);
ctx.lineTo(15862,28324);
ctx.lineTo(15898,28324);
ctx.lineTo(15898,28360);
ctx.lineTo(15862,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,191,171,0.85)';
ctx.strokeStyle='rgb(1,119,99)';
ctx.moveTo(15958,28552);
ctx.lineTo(15958,28516);
ctx.lineTo(15994,28516);
ctx.lineTo(15994,28552);
ctx.lineTo(15958,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,18,108,0.85)';
ctx.strokeStyle='rgb(252,123,224)';
ctx.moveTo(15958,28456);
ctx.lineTo(15958,28420);
ctx.lineTo(15994,28420);
ctx.lineTo(15994,28456);
ctx.lineTo(15958,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,172,224,0.85)';
ctx.strokeStyle='rgb(68,121,16)';
ctx.moveTo(15958,28360);
ctx.lineTo(15958,28324);
ctx.lineTo(15994,28324);
ctx.lineTo(15994,28360);
ctx.lineTo(15958,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,250,248,0.85)';
ctx.strokeStyle='rgb(24,181,55)';
ctx.moveTo(16054,28552);
ctx.lineTo(16054,28516);
ctx.lineTo(16090,28516);
ctx.lineTo(16090,28552);
ctx.lineTo(16054,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,30,5,0.85)';
ctx.strokeStyle='rgb(231,241,155)';
ctx.moveTo(16054,28456);
ctx.lineTo(16054,28420);
ctx.lineTo(16090,28420);
ctx.lineTo(16090,28456);
ctx.lineTo(16054,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,91,14,0.85)';
ctx.strokeStyle='rgb(113,185,103)';
ctx.moveTo(16054,28360);
ctx.lineTo(16054,28324);
ctx.lineTo(16090,28324);
ctx.lineTo(16090,28360);
ctx.lineTo(16054,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,2,44,0.85)';
ctx.strokeStyle='rgb(197,82,91)';
ctx.moveTo(16150,28552);
ctx.lineTo(16150,28516);
ctx.lineTo(16186,28516);
ctx.lineTo(16186,28552);
ctx.lineTo(16150,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,203,193,0.85)';
ctx.strokeStyle='rgb(6,243,121)';
ctx.moveTo(16150,28456);
ctx.lineTo(16150,28420);
ctx.lineTo(16186,28420);
ctx.lineTo(16186,28456);
ctx.lineTo(16150,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,78,26,0.85)';
ctx.strokeStyle='rgb(57,182,12)';
ctx.moveTo(16150,28360);
ctx.lineTo(16150,28324);
ctx.lineTo(16186,28324);
ctx.lineTo(16186,28360);
ctx.lineTo(16150,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,36,152,0.85)';
ctx.strokeStyle='rgb(114,129,70)';
ctx.moveTo(16246,28552);
ctx.lineTo(16246,28516);
ctx.lineTo(16282,28516);
ctx.lineTo(16282,28552);
ctx.lineTo(16246,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,112,170,0.85)';
ctx.strokeStyle='rgb(137,144,205)';
ctx.moveTo(16246,28456);
ctx.lineTo(16246,28420);
ctx.lineTo(16282,28420);
ctx.lineTo(16282,28456);
ctx.lineTo(16246,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,215,32,0.85)';
ctx.strokeStyle='rgb(249,156,81)';
ctx.moveTo(16246,28360);
ctx.lineTo(16246,28324);
ctx.lineTo(16282,28324);
ctx.lineTo(16282,28360);
ctx.lineTo(16246,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,107,110,0.85)';
ctx.strokeStyle='rgb(39,226,113)';
ctx.moveTo(16342,28552);
ctx.lineTo(16342,28516);
ctx.lineTo(16378,28516);
ctx.lineTo(16378,28552);
ctx.lineTo(16342,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,82,40,0.85)';
ctx.strokeStyle='rgb(92,96,234)';
ctx.moveTo(16342,28456);
ctx.lineTo(16342,28420);
ctx.lineTo(16378,28420);
ctx.lineTo(16378,28456);
ctx.lineTo(16342,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,39,38,0.85)';
ctx.strokeStyle='rgb(41,169,187)';
ctx.moveTo(16342,28360);
ctx.lineTo(16342,28324);
ctx.lineTo(16378,28324);
ctx.lineTo(16378,28360);
ctx.lineTo(16342,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,218,109,0.85)';
ctx.strokeStyle='rgb(139,42,220)';
ctx.moveTo(16438,28552);
ctx.lineTo(16438,28516);
ctx.lineTo(16474,28516);
ctx.lineTo(16474,28552);
ctx.lineTo(16438,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,198,31,0.85)';
ctx.strokeStyle='rgb(32,189,86)';
ctx.moveTo(16438,28456);
ctx.lineTo(16438,28420);
ctx.lineTo(16474,28420);
ctx.lineTo(16474,28456);
ctx.lineTo(16438,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,45,202,0.85)';
ctx.strokeStyle='rgb(195,68,244)';
ctx.moveTo(16438,28360);
ctx.lineTo(16438,28324);
ctx.lineTo(16474,28324);
ctx.lineTo(16474,28360);
ctx.lineTo(16438,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,245,89,0.85)';
ctx.strokeStyle='rgb(47,130,10)';
ctx.moveTo(14566,26848);
ctx.lineTo(14566,26812);
ctx.lineTo(14602,26812);
ctx.lineTo(14602,26848);
ctx.lineTo(14566,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,205,203,0.85)';
ctx.strokeStyle='rgb(62,80,223)';
ctx.moveTo(14662,27040);
ctx.lineTo(14662,27004);
ctx.lineTo(14698,27004);
ctx.lineTo(14698,27040);
ctx.lineTo(14662,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,244,220,0.85)';
ctx.strokeStyle='rgb(177,90,94)';
ctx.moveTo(14662,26944);
ctx.lineTo(14662,26908);
ctx.lineTo(14698,26908);
ctx.lineTo(14698,26944);
ctx.lineTo(14662,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,113,227,0.85)';
ctx.strokeStyle='rgb(70,228,33)';
ctx.moveTo(14662,26848);
ctx.lineTo(14662,26812);
ctx.lineTo(14698,26812);
ctx.lineTo(14698,26848);
ctx.lineTo(14662,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,5,160,0.85)';
ctx.strokeStyle='rgb(24,207,40)';
ctx.moveTo(14182,27040);
ctx.lineTo(14182,27004);
ctx.lineTo(14218,27004);
ctx.lineTo(14218,27040);
ctx.lineTo(14182,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,100,173,0.85)';
ctx.strokeStyle='rgb(88,24,217)';
ctx.moveTo(14182,26944);
ctx.lineTo(14182,26908);
ctx.lineTo(14218,26908);
ctx.lineTo(14218,26944);
ctx.lineTo(14182,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,211,248,0.85)';
ctx.strokeStyle='rgb(162,135,37)';
ctx.moveTo(14182,26848);
ctx.lineTo(14182,26812);
ctx.lineTo(14218,26812);
ctx.lineTo(14218,26848);
ctx.lineTo(14182,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,145,50,0.85)';
ctx.strokeStyle='rgb(128,227,40)';
ctx.moveTo(14278,27040);
ctx.lineTo(14278,27004);
ctx.lineTo(14314,27004);
ctx.lineTo(14314,27040);
ctx.lineTo(14278,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,240,88,0.85)';
ctx.strokeStyle='rgb(65,57,1)';
ctx.moveTo(14278,26944);
ctx.lineTo(14278,26908);
ctx.lineTo(14314,26908);
ctx.lineTo(14314,26944);
ctx.lineTo(14278,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,184,29,0.85)';
ctx.strokeStyle='rgb(57,83,12)';
ctx.moveTo(14278,26848);
ctx.lineTo(14278,26812);
ctx.lineTo(14314,26812);
ctx.lineTo(14314,26848);
ctx.lineTo(14278,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,98,155,0.85)';
ctx.strokeStyle='rgb(170,25,228)';
ctx.moveTo(14374,27040);
ctx.lineTo(14374,27004);
ctx.lineTo(14410,27004);
ctx.lineTo(14410,27040);
ctx.lineTo(14374,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,196,215,0.85)';
ctx.strokeStyle='rgb(137,130,216)';
ctx.moveTo(14374,26944);
ctx.lineTo(14374,26908);
ctx.lineTo(14410,26908);
ctx.lineTo(14410,26944);
ctx.lineTo(14374,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,0,58,0.85)';
ctx.strokeStyle='rgb(159,25,81)';
ctx.moveTo(14374,26848);
ctx.lineTo(14374,26812);
ctx.lineTo(14410,26812);
ctx.lineTo(14410,26848);
ctx.lineTo(14374,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,191,3,0.85)';
ctx.strokeStyle='rgb(67,211,86)';
ctx.moveTo(14470,27040);
ctx.lineTo(14470,27004);
ctx.lineTo(14506,27004);
ctx.lineTo(14506,27040);
ctx.lineTo(14470,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,20,181,0.85)';
ctx.strokeStyle='rgb(27,246,217)';
ctx.moveTo(14470,26944);
ctx.lineTo(14470,26908);
ctx.lineTo(14506,26908);
ctx.lineTo(14506,26944);
ctx.lineTo(14470,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,207,110,0.85)';
ctx.strokeStyle='rgb(141,121,164)';
ctx.moveTo(14470,26848);
ctx.lineTo(14470,26812);
ctx.lineTo(14506,26812);
ctx.lineTo(14506,26848);
ctx.lineTo(14470,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,123,87,0.85)';
ctx.strokeStyle='rgb(141,147,131)';
ctx.moveTo(14566,27040);
ctx.lineTo(14566,27004);
ctx.lineTo(14602,27004);
ctx.lineTo(14602,27040);
ctx.lineTo(14566,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,147,13,0.85)';
ctx.strokeStyle='rgb(141,207,6)';
ctx.moveTo(14566,26944);
ctx.lineTo(14566,26908);
ctx.lineTo(14602,26908);
ctx.lineTo(14602,26944);
ctx.lineTo(14566,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,173,116,0.85)';
ctx.strokeStyle='rgb(185,46,12)';
ctx.moveTo(14182,29872);
ctx.lineTo(14182,29836);
ctx.lineTo(14218,29836);
ctx.lineTo(14218,29872);
ctx.lineTo(14182,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,203,166,0.85)';
ctx.strokeStyle='rgb(3,97,225)';
ctx.moveTo(14278,30064);
ctx.lineTo(14278,30028);
ctx.lineTo(14314,30028);
ctx.lineTo(14314,30064);
ctx.lineTo(14278,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,85,182,0.85)';
ctx.strokeStyle='rgb(196,48,169)';
ctx.moveTo(14278,29968);
ctx.lineTo(14278,29932);
ctx.lineTo(14314,29932);
ctx.lineTo(14314,29968);
ctx.lineTo(14278,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,25,38,0.85)';
ctx.strokeStyle='rgb(33,211,110)';
ctx.moveTo(14278,29872);
ctx.lineTo(14278,29836);
ctx.lineTo(14314,29836);
ctx.lineTo(14314,29872);
ctx.lineTo(14278,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,109,148,0.85)';
ctx.strokeStyle='rgb(123,48,167)';
ctx.moveTo(14374,30064);
ctx.lineTo(14374,30028);
ctx.lineTo(14410,30028);
ctx.lineTo(14410,30064);
ctx.lineTo(14374,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,58,184,0.85)';
ctx.strokeStyle='rgb(242,6,150)';
ctx.moveTo(14374,29968);
ctx.lineTo(14374,29932);
ctx.lineTo(14410,29932);
ctx.lineTo(14410,29968);
ctx.lineTo(14374,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,230,76,0.85)';
ctx.strokeStyle='rgb(121,179,252)';
ctx.moveTo(14374,29872);
ctx.lineTo(14374,29836);
ctx.lineTo(14410,29836);
ctx.lineTo(14410,29872);
ctx.lineTo(14374,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,231,165,0.85)';
ctx.strokeStyle='rgb(189,189,192)';
ctx.moveTo(14470,30064);
ctx.lineTo(14470,30028);
ctx.lineTo(14506,30028);
ctx.lineTo(14506,30064);
ctx.lineTo(14470,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,132,37,0.85)';
ctx.strokeStyle='rgb(189,21,141)';
ctx.moveTo(14470,29968);
ctx.lineTo(14470,29932);
ctx.lineTo(14506,29932);
ctx.lineTo(14506,29968);
ctx.lineTo(14470,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,140,59,0.85)';
ctx.strokeStyle='rgb(85,108,81)';
ctx.moveTo(14470,29872);
ctx.lineTo(14470,29836);
ctx.lineTo(14506,29836);
ctx.lineTo(14506,29872);
ctx.lineTo(14470,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,31,5,0.85)';
ctx.strokeStyle='rgb(21,164,121)';
ctx.moveTo(14566,30064);
ctx.lineTo(14566,30028);
ctx.lineTo(14602,30028);
ctx.lineTo(14602,30064);
ctx.lineTo(14566,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,98,248,0.85)';
ctx.strokeStyle='rgb(120,93,79)';
ctx.moveTo(14566,29968);
ctx.lineTo(14566,29932);
ctx.lineTo(14602,29932);
ctx.lineTo(14602,29968);
ctx.lineTo(14566,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,49,176,0.85)';
ctx.strokeStyle='rgb(113,135,98)';
ctx.moveTo(14566,29872);
ctx.lineTo(14566,29836);
ctx.lineTo(14602,29836);
ctx.lineTo(14602,29872);
ctx.lineTo(14566,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,211,55,0.85)';
ctx.strokeStyle='rgb(71,243,14)';
ctx.moveTo(14662,30064);
ctx.lineTo(14662,30028);
ctx.lineTo(14698,30028);
ctx.lineTo(14698,30064);
ctx.lineTo(14662,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,142,110,0.85)';
ctx.strokeStyle='rgb(193,59,30)';
ctx.moveTo(14662,29968);
ctx.lineTo(14662,29932);
ctx.lineTo(14698,29932);
ctx.lineTo(14698,29968);
ctx.lineTo(14662,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,113,186,0.85)';
ctx.strokeStyle='rgb(220,184,40)';
ctx.moveTo(14662,29872);
ctx.lineTo(14662,29836);
ctx.lineTo(14698,29836);
ctx.lineTo(14698,29872);
ctx.lineTo(14662,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,72,204,0.85)';
ctx.strokeStyle='rgb(221,68,80)';
ctx.moveTo(14182,32128);
ctx.lineTo(14182,32092);
ctx.lineTo(14218,32092);
ctx.lineTo(14218,32128);
ctx.lineTo(14182,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,19,12,0.85)';
ctx.strokeStyle='rgb(82,254,30)';
ctx.moveTo(14278,32128);
ctx.lineTo(14278,32092);
ctx.lineTo(14314,32092);
ctx.lineTo(14314,32128);
ctx.lineTo(14278,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,40,101,0.85)';
ctx.strokeStyle='rgb(149,153,157)';
ctx.moveTo(14374,32128);
ctx.lineTo(14374,32092);
ctx.lineTo(14410,32092);
ctx.lineTo(14410,32128);
ctx.lineTo(14374,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,12,191,0.85)';
ctx.strokeStyle='rgb(224,201,163)';
ctx.moveTo(14470,32128);
ctx.lineTo(14470,32092);
ctx.lineTo(14506,32092);
ctx.lineTo(14506,32128);
ctx.lineTo(14470,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,226,152,0.85)';
ctx.strokeStyle='rgb(100,53,26)';
ctx.moveTo(14566,32128);
ctx.lineTo(14566,32092);
ctx.lineTo(14602,32092);
ctx.lineTo(14602,32128);
ctx.lineTo(14566,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,244,196,0.85)';
ctx.strokeStyle='rgb(82,224,123)';
ctx.moveTo(14662,32608);
ctx.lineTo(14662,32572);
ctx.lineTo(14698,32572);
ctx.lineTo(14698,32608);
ctx.lineTo(14662,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,15,241,0.85)';
ctx.strokeStyle='rgb(87,243,12)';
ctx.moveTo(14662,32512);
ctx.lineTo(14662,32476);
ctx.lineTo(14698,32476);
ctx.lineTo(14698,32512);
ctx.lineTo(14662,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,233,70,0.85)';
ctx.strokeStyle='rgb(74,247,83)';
ctx.moveTo(14662,32416);
ctx.lineTo(14662,32380);
ctx.lineTo(14698,32380);
ctx.lineTo(14698,32416);
ctx.lineTo(14662,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,193,171,0.85)';
ctx.strokeStyle='rgb(154,199,123)';
ctx.moveTo(14662,32320);
ctx.lineTo(14662,32284);
ctx.lineTo(14698,32284);
ctx.lineTo(14698,32320);
ctx.lineTo(14662,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,98,204,0.85)';
ctx.strokeStyle='rgb(61,147,174)';
ctx.moveTo(14662,32224);
ctx.lineTo(14662,32188);
ctx.lineTo(14698,32188);
ctx.lineTo(14698,32224);
ctx.lineTo(14662,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,142,148,0.85)';
ctx.strokeStyle='rgb(149,164,116)';
ctx.moveTo(14662,32128);
ctx.lineTo(14662,32092);
ctx.lineTo(14698,32092);
ctx.lineTo(14698,32128);
ctx.lineTo(14662,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,80,20,0.85)';
ctx.strokeStyle='rgb(243,66,162)';
ctx.moveTo(14662,32032);
ctx.lineTo(14662,31996);
ctx.lineTo(14698,31996);
ctx.lineTo(14698,32032);
ctx.lineTo(14662,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,19,102,0.85)';
ctx.strokeStyle='rgb(93,38,82)';
ctx.moveTo(14662,31936);
ctx.lineTo(14662,31900);
ctx.lineTo(14698,31900);
ctx.lineTo(14698,31936);
ctx.lineTo(14662,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,57,144,0.85)';
ctx.strokeStyle='rgb(92,247,226)';
ctx.moveTo(14662,31840);
ctx.lineTo(14662,31804);
ctx.lineTo(14698,31804);
ctx.lineTo(14698,31840);
ctx.lineTo(14662,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,157,4,0.85)';
ctx.strokeStyle='rgb(236,145,93)';
ctx.moveTo(14662,31744);
ctx.lineTo(14662,31708);
ctx.lineTo(14698,31708);
ctx.lineTo(14698,31744);
ctx.lineTo(14662,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,163,21,0.85)';
ctx.strokeStyle='rgb(55,44,135)';
ctx.moveTo(14662,31648);
ctx.lineTo(14662,31612);
ctx.lineTo(14698,31612);
ctx.lineTo(14698,31648);
ctx.lineTo(14662,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,12,114,0.85)';
ctx.strokeStyle='rgb(181,105,160)';
ctx.moveTo(14470,31840);
ctx.lineTo(14470,31804);
ctx.lineTo(14506,31804);
ctx.lineTo(14506,31840);
ctx.lineTo(14470,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,245,194,0.85)';
ctx.strokeStyle='rgb(246,62,214)';
ctx.moveTo(14470,31744);
ctx.lineTo(14470,31708);
ctx.lineTo(14506,31708);
ctx.lineTo(14506,31744);
ctx.lineTo(14470,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,88,62,0.85)';
ctx.strokeStyle='rgb(26,70,238)';
ctx.moveTo(14470,31648);
ctx.lineTo(14470,31612);
ctx.lineTo(14506,31612);
ctx.lineTo(14506,31648);
ctx.lineTo(14470,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,58,141,0.85)';
ctx.strokeStyle='rgb(253,192,20)';
ctx.moveTo(14182,31744);
ctx.lineTo(14182,31708);
ctx.lineTo(14218,31708);
ctx.lineTo(14218,31744);
ctx.lineTo(14182,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,68,6,0.85)';
ctx.strokeStyle='rgb(12,190,129)';
ctx.moveTo(14566,32032);
ctx.lineTo(14566,31996);
ctx.lineTo(14602,31996);
ctx.lineTo(14602,32032);
ctx.lineTo(14566,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,100,87,0.85)';
ctx.strokeStyle='rgb(57,193,112)';
ctx.moveTo(14566,31936);
ctx.lineTo(14566,31900);
ctx.lineTo(14602,31900);
ctx.lineTo(14602,31936);
ctx.lineTo(14566,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,39,66,0.85)';
ctx.strokeStyle='rgb(252,46,227)';
ctx.moveTo(14566,31840);
ctx.lineTo(14566,31804);
ctx.lineTo(14602,31804);
ctx.lineTo(14602,31840);
ctx.lineTo(14566,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,151,46,0.85)';
ctx.strokeStyle='rgb(143,194,237)';
ctx.moveTo(14566,31744);
ctx.lineTo(14566,31708);
ctx.lineTo(14602,31708);
ctx.lineTo(14602,31744);
ctx.lineTo(14566,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,42,106,0.85)';
ctx.strokeStyle='rgb(170,240,116)';
ctx.moveTo(14566,31648);
ctx.lineTo(14566,31612);
ctx.lineTo(14602,31612);
ctx.lineTo(14602,31648);
ctx.lineTo(14566,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,186,225,0.85)';
ctx.strokeStyle='rgb(79,170,223)';
ctx.moveTo(14182,31648);
ctx.lineTo(14182,31612);
ctx.lineTo(14218,31612);
ctx.lineTo(14218,31648);
ctx.lineTo(14182,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,80,101,0.85)';
ctx.strokeStyle='rgb(15,137,148)';
ctx.moveTo(14182,32032);
ctx.lineTo(14182,31996);
ctx.lineTo(14218,31996);
ctx.lineTo(14218,32032);
ctx.lineTo(14182,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,147,120,0.85)';
ctx.strokeStyle='rgb(83,169,229)';
ctx.moveTo(14278,32032);
ctx.lineTo(14278,31996);
ctx.lineTo(14314,31996);
ctx.lineTo(14314,32032);
ctx.lineTo(14278,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,196,46,0.85)';
ctx.strokeStyle='rgb(234,164,161)';
ctx.moveTo(14278,31936);
ctx.lineTo(14278,31900);
ctx.lineTo(14314,31900);
ctx.lineTo(14314,31936);
ctx.lineTo(14278,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,133,154,0.85)';
ctx.strokeStyle='rgb(236,175,178)';
ctx.moveTo(14278,31840);
ctx.lineTo(14278,31804);
ctx.lineTo(14314,31804);
ctx.lineTo(14314,31840);
ctx.lineTo(14278,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,92,5,0.85)';
ctx.strokeStyle='rgb(29,56,17)';
ctx.moveTo(14278,31744);
ctx.lineTo(14278,31708);
ctx.lineTo(14314,31708);
ctx.lineTo(14314,31744);
ctx.lineTo(14278,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,67,186,0.85)';
ctx.strokeStyle='rgb(232,82,254)';
ctx.moveTo(14278,31648);
ctx.lineTo(14278,31612);
ctx.lineTo(14314,31612);
ctx.lineTo(14314,31648);
ctx.lineTo(14278,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,234,42,0.85)';
ctx.strokeStyle='rgb(232,162,72)';
ctx.moveTo(14182,31936);
ctx.lineTo(14182,31900);
ctx.lineTo(14218,31900);
ctx.lineTo(14218,31936);
ctx.lineTo(14182,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,55,154,0.85)';
ctx.strokeStyle='rgb(96,141,169)';
ctx.moveTo(14374,32032);
ctx.lineTo(14374,31996);
ctx.lineTo(14410,31996);
ctx.lineTo(14410,32032);
ctx.lineTo(14374,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,37,235,0.85)';
ctx.strokeStyle='rgb(12,3,237)';
ctx.moveTo(14374,31936);
ctx.lineTo(14374,31900);
ctx.lineTo(14410,31900);
ctx.lineTo(14410,31936);
ctx.lineTo(14374,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,37,187,0.85)';
ctx.strokeStyle='rgb(108,106,219)';
ctx.moveTo(14374,31840);
ctx.lineTo(14374,31804);
ctx.lineTo(14410,31804);
ctx.lineTo(14410,31840);
ctx.lineTo(14374,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,69,124,0.85)';
ctx.strokeStyle='rgb(134,107,51)';
ctx.moveTo(14374,31744);
ctx.lineTo(14374,31708);
ctx.lineTo(14410,31708);
ctx.lineTo(14410,31744);
ctx.lineTo(14374,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,56,18,0.85)';
ctx.strokeStyle='rgb(40,145,11)';
ctx.moveTo(14374,31648);
ctx.lineTo(14374,31612);
ctx.lineTo(14410,31612);
ctx.lineTo(14410,31648);
ctx.lineTo(14374,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,18,75,0.85)';
ctx.strokeStyle='rgb(126,251,183)';
ctx.moveTo(14182,31840);
ctx.lineTo(14182,31804);
ctx.lineTo(14218,31804);
ctx.lineTo(14218,31840);
ctx.lineTo(14182,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,31,149,0.85)';
ctx.strokeStyle='rgb(43,249,212)';
ctx.moveTo(14470,32032);
ctx.lineTo(14470,31996);
ctx.lineTo(14506,31996);
ctx.lineTo(14506,32032);
ctx.lineTo(14470,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,138,64,0.85)';
ctx.strokeStyle='rgb(99,157,69)';
ctx.moveTo(14470,31936);
ctx.lineTo(14470,31900);
ctx.lineTo(14506,31900);
ctx.lineTo(14506,31936);
ctx.lineTo(14470,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,175,108,0.85)';
ctx.strokeStyle='rgb(152,150,59)';
ctx.moveTo(14566,32416);
ctx.lineTo(14566,32380);
ctx.lineTo(14602,32380);
ctx.lineTo(14602,32416);
ctx.lineTo(14566,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,89,2,0.85)';
ctx.strokeStyle='rgb(100,101,199)';
ctx.moveTo(14566,32320);
ctx.lineTo(14566,32284);
ctx.lineTo(14602,32284);
ctx.lineTo(14602,32320);
ctx.lineTo(14566,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,205,42,0.85)';
ctx.strokeStyle='rgb(149,234,170)';
ctx.moveTo(14566,32224);
ctx.lineTo(14566,32188);
ctx.lineTo(14602,32188);
ctx.lineTo(14602,32224);
ctx.lineTo(14566,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,188,108,0.85)';
ctx.strokeStyle='rgb(39,183,12)';
ctx.moveTo(14374,32416);
ctx.lineTo(14374,32380);
ctx.lineTo(14410,32380);
ctx.lineTo(14410,32416);
ctx.lineTo(14374,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,248,210,0.85)';
ctx.strokeStyle='rgb(51,241,249)';
ctx.moveTo(14374,32320);
ctx.lineTo(14374,32284);
ctx.lineTo(14410,32284);
ctx.lineTo(14410,32320);
ctx.lineTo(14374,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,144,171,0.85)';
ctx.strokeStyle='rgb(165,59,144)';
ctx.moveTo(14374,32224);
ctx.lineTo(14374,32188);
ctx.lineTo(14410,32188);
ctx.lineTo(14410,32224);
ctx.lineTo(14374,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,92,249,0.85)';
ctx.strokeStyle='rgb(132,219,208)';
ctx.moveTo(14278,32512);
ctx.lineTo(14278,32476);
ctx.lineTo(14314,32476);
ctx.lineTo(14314,32512);
ctx.lineTo(14278,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,123,157,0.85)';
ctx.strokeStyle='rgb(140,149,96)';
ctx.moveTo(14278,32416);
ctx.lineTo(14278,32380);
ctx.lineTo(14314,32380);
ctx.lineTo(14314,32416);
ctx.lineTo(14278,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,238,141,0.85)';
ctx.strokeStyle='rgb(5,250,129)';
ctx.moveTo(14278,32320);
ctx.lineTo(14278,32284);
ctx.lineTo(14314,32284);
ctx.lineTo(14314,32320);
ctx.lineTo(14278,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,42,53,0.85)';
ctx.strokeStyle='rgb(228,129,104)';
ctx.moveTo(14278,32224);
ctx.lineTo(14278,32188);
ctx.lineTo(14314,32188);
ctx.lineTo(14314,32224);
ctx.lineTo(14278,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,134,181,0.85)';
ctx.strokeStyle='rgb(150,79,54)';
ctx.moveTo(14182,32512);
ctx.lineTo(14182,32476);
ctx.lineTo(14218,32476);
ctx.lineTo(14218,32512);
ctx.lineTo(14182,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,154,145,0.85)';
ctx.strokeStyle='rgb(153,93,164)';
ctx.moveTo(14182,32416);
ctx.lineTo(14182,32380);
ctx.lineTo(14218,32380);
ctx.lineTo(14218,32416);
ctx.lineTo(14182,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,86,55,0.85)';
ctx.strokeStyle='rgb(200,251,238)';
ctx.moveTo(14470,32608);
ctx.lineTo(14470,32572);
ctx.lineTo(14506,32572);
ctx.lineTo(14506,32608);
ctx.lineTo(14470,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,115,167,0.85)';
ctx.strokeStyle='rgb(127,133,68)';
ctx.moveTo(14470,32512);
ctx.lineTo(14470,32476);
ctx.lineTo(14506,32476);
ctx.lineTo(14506,32512);
ctx.lineTo(14470,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,191,23,0.85)';
ctx.strokeStyle='rgb(101,171,83)';
ctx.moveTo(14470,32416);
ctx.lineTo(14470,32380);
ctx.lineTo(14506,32380);
ctx.lineTo(14506,32416);
ctx.lineTo(14470,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,41,23,0.85)';
ctx.strokeStyle='rgb(82,176,219)';
ctx.moveTo(14470,32320);
ctx.lineTo(14470,32284);
ctx.lineTo(14506,32284);
ctx.lineTo(14506,32320);
ctx.lineTo(14470,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,175,177,0.85)';
ctx.strokeStyle='rgb(14,209,182)';
ctx.moveTo(14470,32224);
ctx.lineTo(14470,32188);
ctx.lineTo(14506,32188);
ctx.lineTo(14506,32224);
ctx.lineTo(14470,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,189,58,0.85)';
ctx.strokeStyle='rgb(2,204,120)';
ctx.moveTo(14182,32320);
ctx.lineTo(14182,32284);
ctx.lineTo(14218,32284);
ctx.lineTo(14218,32320);
ctx.lineTo(14182,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,169,232,0.85)';
ctx.strokeStyle='rgb(11,165,143)';
ctx.moveTo(14182,32224);
ctx.lineTo(14182,32188);
ctx.lineTo(14218,32188);
ctx.lineTo(14218,32224);
ctx.lineTo(14182,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,68,66,0.85)';
ctx.strokeStyle='rgb(225,191,182)';
ctx.moveTo(14182,32608);
ctx.lineTo(14182,32572);
ctx.lineTo(14218,32572);
ctx.lineTo(14218,32608);
ctx.lineTo(14182,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,158,66,0.85)';
ctx.strokeStyle='rgb(143,62,81)';
ctx.moveTo(14278,32608);
ctx.lineTo(14278,32572);
ctx.lineTo(14314,32572);
ctx.lineTo(14314,32608);
ctx.lineTo(14278,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,83,58,0.85)';
ctx.strokeStyle='rgb(242,45,254)';
ctx.moveTo(14374,32608);
ctx.lineTo(14374,32572);
ctx.lineTo(14410,32572);
ctx.lineTo(14410,32608);
ctx.lineTo(14374,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,240,71,0.85)';
ctx.strokeStyle='rgb(141,198,104)';
ctx.moveTo(14374,32512);
ctx.lineTo(14374,32476);
ctx.lineTo(14410,32476);
ctx.lineTo(14410,32512);
ctx.lineTo(14374,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,143,111,0.85)';
ctx.strokeStyle='rgb(124,61,168)';
ctx.moveTo(14566,32608);
ctx.lineTo(14566,32572);
ctx.lineTo(14602,32572);
ctx.lineTo(14602,32608);
ctx.lineTo(14566,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,210,67,0.85)';
ctx.strokeStyle='rgb(246,165,225)';
ctx.moveTo(14566,32512);
ctx.lineTo(14566,32476);
ctx.lineTo(14602,32476);
ctx.lineTo(14602,32512);
ctx.lineTo(14566,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,171,39,0.85)';
ctx.strokeStyle='rgb(242,144,6)';
ctx.moveTo(14182,30064);
ctx.lineTo(14182,30028);
ctx.lineTo(14218,30028);
ctx.lineTo(14218,30064);
ctx.lineTo(14182,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,118,122,0.85)';
ctx.strokeStyle='rgb(241,166,146)';
ctx.moveTo(14182,29968);
ctx.lineTo(14182,29932);
ctx.lineTo(14218,29932);
ctx.lineTo(14218,29968);
ctx.lineTo(14182,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,105,65,0.85)';
ctx.strokeStyle='rgb(119,201,178)';
ctx.moveTo(15142,29968);
ctx.lineTo(15142,29932);
ctx.lineTo(15178,29932);
ctx.lineTo(15178,29968);
ctx.lineTo(15142,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,43,178,0.85)';
ctx.strokeStyle='rgb(183,32,216)';
ctx.moveTo(15142,29872);
ctx.lineTo(15142,29836);
ctx.lineTo(15178,29836);
ctx.lineTo(15178,29872);
ctx.lineTo(15142,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,53,162,0.85)';
ctx.strokeStyle='rgb(151,19,153)';
ctx.moveTo(14854,31744);
ctx.lineTo(14854,31708);
ctx.lineTo(14890,31708);
ctx.lineTo(14890,31744);
ctx.lineTo(14854,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,194,81,0.85)';
ctx.strokeStyle='rgb(24,175,58)';
ctx.moveTo(14854,31648);
ctx.lineTo(14854,31612);
ctx.lineTo(14890,31612);
ctx.lineTo(14890,31648);
ctx.lineTo(14854,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,64,232,0.85)';
ctx.strokeStyle='rgb(169,29,34)';
ctx.moveTo(14950,31744);
ctx.lineTo(14950,31708);
ctx.lineTo(14986,31708);
ctx.lineTo(14986,31744);
ctx.lineTo(14950,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,254,100,0.85)';
ctx.strokeStyle='rgb(5,252,122)';
ctx.moveTo(14950,31648);
ctx.lineTo(14950,31612);
ctx.lineTo(14986,31612);
ctx.lineTo(14986,31648);
ctx.lineTo(14950,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,176,36,0.85)';
ctx.strokeStyle='rgb(127,6,211)';
ctx.moveTo(15046,31744);
ctx.lineTo(15046,31708);
ctx.lineTo(15082,31708);
ctx.lineTo(15082,31744);
ctx.lineTo(15046,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,253,137,0.85)';
ctx.strokeStyle='rgb(125,236,15)';
ctx.moveTo(15046,31648);
ctx.lineTo(15046,31612);
ctx.lineTo(15082,31612);
ctx.lineTo(15082,31648);
ctx.lineTo(15046,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,123,181,0.85)';
ctx.strokeStyle='rgb(148,75,152)';
ctx.moveTo(14758,31744);
ctx.lineTo(14758,31708);
ctx.lineTo(14794,31708);
ctx.lineTo(14794,31744);
ctx.lineTo(14758,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,23,8,0.85)';
ctx.strokeStyle='rgb(162,253,191)';
ctx.moveTo(15142,31744);
ctx.lineTo(15142,31708);
ctx.lineTo(15178,31708);
ctx.lineTo(15178,31744);
ctx.lineTo(15142,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,116,65,0.85)';
ctx.strokeStyle='rgb(162,128,196)';
ctx.moveTo(15142,31648);
ctx.lineTo(15142,31612);
ctx.lineTo(15178,31612);
ctx.lineTo(15178,31648);
ctx.lineTo(15142,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,17,176,0.85)';
ctx.strokeStyle='rgb(101,130,96)';
ctx.moveTo(14758,31648);
ctx.lineTo(14758,31612);
ctx.lineTo(14794,31612);
ctx.lineTo(14794,31648);
ctx.lineTo(14758,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,237,84,0.85)';
ctx.strokeStyle='rgb(2,12,210)';
ctx.moveTo(14758,30064);
ctx.lineTo(14758,30028);
ctx.lineTo(14794,30028);
ctx.lineTo(14794,30064);
ctx.lineTo(14758,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,88,22,0.85)';
ctx.strokeStyle='rgb(66,172,244)';
ctx.moveTo(14758,29968);
ctx.lineTo(14758,29932);
ctx.lineTo(14794,29932);
ctx.lineTo(14794,29968);
ctx.lineTo(14758,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,197,167,0.85)';
ctx.strokeStyle='rgb(245,209,63)';
ctx.moveTo(14758,29872);
ctx.lineTo(14758,29836);
ctx.lineTo(14794,29836);
ctx.lineTo(14794,29872);
ctx.lineTo(14758,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,145,219,0.85)';
ctx.strokeStyle='rgb(0,95,20)';
ctx.moveTo(14854,30064);
ctx.lineTo(14854,30028);
ctx.lineTo(14890,30028);
ctx.lineTo(14890,30064);
ctx.lineTo(14854,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,253,113,0.85)';
ctx.strokeStyle='rgb(15,49,22)';
ctx.moveTo(14854,29968);
ctx.lineTo(14854,29932);
ctx.lineTo(14890,29932);
ctx.lineTo(14890,29968);
ctx.lineTo(14854,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,204,54,0.85)';
ctx.strokeStyle='rgb(113,159,227)';
ctx.moveTo(14854,29872);
ctx.lineTo(14854,29836);
ctx.lineTo(14890,29836);
ctx.lineTo(14890,29872);
ctx.lineTo(14854,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,123,147,0.85)';
ctx.strokeStyle='rgb(239,36,18)';
ctx.moveTo(14950,30064);
ctx.lineTo(14950,30028);
ctx.lineTo(14986,30028);
ctx.lineTo(14986,30064);
ctx.lineTo(14950,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,49,175,0.85)';
ctx.strokeStyle='rgb(76,112,52)';
ctx.moveTo(14950,29968);
ctx.lineTo(14950,29932);
ctx.lineTo(14986,29932);
ctx.lineTo(14986,29968);
ctx.lineTo(14950,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,84,13,0.85)';
ctx.strokeStyle='rgb(52,145,218)';
ctx.moveTo(14950,29872);
ctx.lineTo(14950,29836);
ctx.lineTo(14986,29836);
ctx.lineTo(14986,29872);
ctx.lineTo(14950,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,239,4,0.85)';
ctx.strokeStyle='rgb(169,179,154)';
ctx.moveTo(15046,30064);
ctx.lineTo(15046,30028);
ctx.lineTo(15082,30028);
ctx.lineTo(15082,30064);
ctx.lineTo(15046,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,75,23,0.85)';
ctx.strokeStyle='rgb(228,129,154)';
ctx.moveTo(15046,29968);
ctx.lineTo(15046,29932);
ctx.lineTo(15082,29932);
ctx.lineTo(15082,29968);
ctx.lineTo(15046,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,63,146,0.85)';
ctx.strokeStyle='rgb(59,117,146)';
ctx.moveTo(15046,29872);
ctx.lineTo(15046,29836);
ctx.lineTo(15082,29836);
ctx.lineTo(15082,29872);
ctx.lineTo(15046,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,62,45,0.85)';
ctx.strokeStyle='rgb(171,14,150)';
ctx.moveTo(15142,30064);
ctx.lineTo(15142,30028);
ctx.lineTo(15178,30028);
ctx.lineTo(15178,30064);
ctx.lineTo(15142,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,126,4,0.85)';
ctx.strokeStyle='rgb(139,249,216)';
ctx.moveTo(15478,31414);
ctx.lineTo(15478,31378);
ctx.lineTo(15514,31378);
ctx.lineTo(15514,31414);
ctx.lineTo(15478,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,223,131,0.85)';
ctx.strokeStyle='rgb(144,16,207)';
ctx.moveTo(15574,31414);
ctx.lineTo(15574,31378);
ctx.lineTo(15610,31378);
ctx.lineTo(15610,31414);
ctx.lineTo(15574,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,173,76,0.85)';
ctx.strokeStyle='rgb(119,133,226)';
ctx.moveTo(15670,31414);
ctx.lineTo(15670,31378);
ctx.lineTo(15706,31378);
ctx.lineTo(15706,31414);
ctx.lineTo(15670,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,119,83,0.85)';
ctx.strokeStyle='rgb(122,36,214)';
ctx.moveTo(15766,31414);
ctx.lineTo(15766,31378);
ctx.lineTo(15802,31378);
ctx.lineTo(15802,31414);
ctx.lineTo(15766,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,64,34,0.85)';
ctx.strokeStyle='rgb(133,114,63)';
ctx.moveTo(15862,31414);
ctx.lineTo(15862,31378);
ctx.lineTo(15898,31378);
ctx.lineTo(15898,31414);
ctx.lineTo(15862,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,191,20,0.85)';
ctx.strokeStyle='rgb(44,161,35)';
ctx.moveTo(15958,31414);
ctx.lineTo(15958,31378);
ctx.lineTo(15994,31378);
ctx.lineTo(15994,31414);
ctx.lineTo(15958,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,110,74,0.85)';
ctx.strokeStyle='rgb(48,42,99)';
ctx.moveTo(16054,31414);
ctx.lineTo(16054,31378);
ctx.lineTo(16090,31378);
ctx.lineTo(16090,31414);
ctx.lineTo(16054,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,64,5,0.85)';
ctx.strokeStyle='rgb(227,237,140)';
ctx.moveTo(16150,31414);
ctx.lineTo(16150,31378);
ctx.lineTo(16186,31378);
ctx.lineTo(16186,31414);
ctx.lineTo(16150,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,226,160,0.85)';
ctx.strokeStyle='rgb(227,182,122)';
ctx.moveTo(16246,31414);
ctx.lineTo(16246,31378);
ctx.lineTo(16282,31378);
ctx.lineTo(16282,31414);
ctx.lineTo(16246,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,254,47,0.85)';
ctx.strokeStyle='rgb(172,186,218)';
ctx.moveTo(16342,31414);
ctx.lineTo(16342,31378);
ctx.lineTo(16378,31378);
ctx.lineTo(16378,31414);
ctx.lineTo(16342,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,139,182,0.85)';
ctx.strokeStyle='rgb(131,5,171)';
ctx.moveTo(16438,31414);
ctx.lineTo(16438,31378);
ctx.lineTo(16474,31378);
ctx.lineTo(16474,31414);
ctx.lineTo(16438,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,214,224,0.85)';
ctx.strokeStyle='rgb(187,58,249)';
ctx.moveTo(14854,32512);
ctx.lineTo(14854,32476);
ctx.lineTo(14890,32476);
ctx.lineTo(14890,32512);
ctx.lineTo(14854,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,80,170,0.85)';
ctx.strokeStyle='rgb(101,154,225)';
ctx.moveTo(14854,32416);
ctx.lineTo(14854,32380);
ctx.lineTo(14890,32380);
ctx.lineTo(14890,32416);
ctx.lineTo(14854,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,196,249,0.85)';
ctx.strokeStyle='rgb(122,242,109)';
ctx.moveTo(14854,32320);
ctx.lineTo(14854,32284);
ctx.lineTo(14890,32284);
ctx.lineTo(14890,32320);
ctx.lineTo(14854,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,31,167,0.85)';
ctx.strokeStyle='rgb(99,168,29)';
ctx.moveTo(15046,31936);
ctx.lineTo(15046,31900);
ctx.lineTo(15082,31900);
ctx.lineTo(15082,31936);
ctx.lineTo(15046,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,253,127,0.85)';
ctx.strokeStyle='rgb(181,121,128)';
ctx.moveTo(15046,31840);
ctx.lineTo(15046,31804);
ctx.lineTo(15082,31804);
ctx.lineTo(15082,31840);
ctx.lineTo(15046,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,104,125,0.85)';
ctx.strokeStyle='rgb(106,10,228)';
ctx.moveTo(14758,31936);
ctx.lineTo(14758,31900);
ctx.lineTo(14794,31900);
ctx.lineTo(14794,31936);
ctx.lineTo(14758,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,172,2,0.85)';
ctx.strokeStyle='rgb(61,141,78)';
ctx.moveTo(14950,32032);
ctx.lineTo(14950,31996);
ctx.lineTo(14986,31996);
ctx.lineTo(14986,32032);
ctx.lineTo(14950,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,69,43,0.85)';
ctx.strokeStyle='rgb(166,117,144)';
ctx.moveTo(14950,31936);
ctx.lineTo(14950,31900);
ctx.lineTo(14986,31900);
ctx.lineTo(14986,31936);
ctx.lineTo(14950,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,13,197,0.85)';
ctx.strokeStyle='rgb(0,204,187)';
ctx.moveTo(15142,32032);
ctx.lineTo(15142,31996);
ctx.lineTo(15178,31996);
ctx.lineTo(15178,32032);
ctx.lineTo(15142,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,121,126,0.85)';
ctx.strokeStyle='rgb(43,73,113)';
ctx.moveTo(15142,31936);
ctx.lineTo(15142,31900);
ctx.lineTo(15178,31900);
ctx.lineTo(15178,31936);
ctx.lineTo(15142,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,147,97,0.85)';
ctx.strokeStyle='rgb(114,63,64)';
ctx.moveTo(15142,31840);
ctx.lineTo(15142,31804);
ctx.lineTo(15178,31804);
ctx.lineTo(15178,31840);
ctx.lineTo(15142,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,174,232,0.85)';
ctx.strokeStyle='rgb(164,196,210)';
ctx.moveTo(14950,31840);
ctx.lineTo(14950,31804);
ctx.lineTo(14986,31804);
ctx.lineTo(14986,31840);
ctx.lineTo(14950,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,216,201,0.85)';
ctx.strokeStyle='rgb(38,29,102)';
ctx.moveTo(14854,31936);
ctx.lineTo(14854,31900);
ctx.lineTo(14890,31900);
ctx.lineTo(14890,31936);
ctx.lineTo(14854,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,189,176,0.85)';
ctx.strokeStyle='rgb(91,119,3)';
ctx.moveTo(14758,32128);
ctx.lineTo(14758,32092);
ctx.lineTo(14794,32092);
ctx.lineTo(14794,32128);
ctx.lineTo(14758,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,175,90,0.85)';
ctx.strokeStyle='rgb(190,118,83)';
ctx.moveTo(14854,32128);
ctx.lineTo(14854,32092);
ctx.lineTo(14890,32092);
ctx.lineTo(14890,32128);
ctx.lineTo(14854,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,222,249,0.85)';
ctx.strokeStyle='rgb(21,7,15)';
ctx.moveTo(14950,32128);
ctx.lineTo(14950,32092);
ctx.lineTo(14986,32092);
ctx.lineTo(14986,32128);
ctx.lineTo(14950,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,169,29,0.85)';
ctx.strokeStyle='rgb(214,185,86)';
ctx.moveTo(15046,32128);
ctx.lineTo(15046,32092);
ctx.lineTo(15082,32092);
ctx.lineTo(15082,32128);
ctx.lineTo(15046,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,124,211,0.85)';
ctx.strokeStyle='rgb(53,1,110)';
ctx.moveTo(15142,32128);
ctx.lineTo(15142,32092);
ctx.lineTo(15178,32092);
ctx.lineTo(15178,32128);
ctx.lineTo(15142,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(237,84,197,0.85)';
ctx.strokeStyle='rgb(123,78,71)';
ctx.moveTo(14854,31840);
ctx.lineTo(14854,31804);
ctx.lineTo(14890,31804);
ctx.lineTo(14890,31840);
ctx.lineTo(14854,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,83,69,0.85)';
ctx.strokeStyle='rgb(98,106,111)';
ctx.moveTo(14758,32032);
ctx.lineTo(14758,31996);
ctx.lineTo(14794,31996);
ctx.lineTo(14794,32032);
ctx.lineTo(14758,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,192,199,0.85)';
ctx.strokeStyle='rgb(68,30,214)';
ctx.moveTo(14854,32032);
ctx.lineTo(14854,31996);
ctx.lineTo(14890,31996);
ctx.lineTo(14890,32032);
ctx.lineTo(14854,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,171,118,0.85)';
ctx.strokeStyle='rgb(236,202,87)';
ctx.moveTo(14758,31840);
ctx.lineTo(14758,31804);
ctx.lineTo(14794,31804);
ctx.lineTo(14794,31840);
ctx.lineTo(14758,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,145,33,0.85)';
ctx.strokeStyle='rgb(13,219,57)';
ctx.moveTo(15046,32032);
ctx.lineTo(15046,31996);
ctx.lineTo(15082,31996);
ctx.lineTo(15082,32032);
ctx.lineTo(15046,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,29,31,0.85)';
ctx.strokeStyle='rgb(96,203,23)';
ctx.moveTo(14854,32224);
ctx.lineTo(14854,32188);
ctx.lineTo(14890,32188);
ctx.lineTo(14890,32224);
ctx.lineTo(14854,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,17,74,0.85)';
ctx.strokeStyle='rgb(161,85,92)';
ctx.moveTo(14758,32512);
ctx.lineTo(14758,32476);
ctx.lineTo(14794,32476);
ctx.lineTo(14794,32512);
ctx.lineTo(14758,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,128,7,0.85)';
ctx.strokeStyle='rgb(158,129,28)';
ctx.moveTo(14758,32416);
ctx.lineTo(14758,32380);
ctx.lineTo(14794,32380);
ctx.lineTo(14794,32416);
ctx.lineTo(14758,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,184,143,0.85)';
ctx.strokeStyle='rgb(123,32,157)';
ctx.moveTo(15046,32608);
ctx.lineTo(15046,32572);
ctx.lineTo(15082,32572);
ctx.lineTo(15082,32608);
ctx.lineTo(15046,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,113,40,0.85)';
ctx.strokeStyle='rgb(50,83,218)';
ctx.moveTo(15046,32512);
ctx.lineTo(15046,32476);
ctx.lineTo(15082,32476);
ctx.lineTo(15082,32512);
ctx.lineTo(15046,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,86,179,0.85)';
ctx.strokeStyle='rgb(6,13,209)';
ctx.moveTo(15046,32416);
ctx.lineTo(15046,32380);
ctx.lineTo(15082,32380);
ctx.lineTo(15082,32416);
ctx.lineTo(15046,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,165,221,0.85)';
ctx.strokeStyle='rgb(227,174,50)';
ctx.moveTo(15046,32320);
ctx.lineTo(15046,32284);
ctx.lineTo(15082,32284);
ctx.lineTo(15082,32320);
ctx.lineTo(15046,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,127,180,0.85)';
ctx.strokeStyle='rgb(241,228,8)';
ctx.moveTo(15046,32224);
ctx.lineTo(15046,32188);
ctx.lineTo(15082,32188);
ctx.lineTo(15082,32224);
ctx.lineTo(15046,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,35,33,0.85)';
ctx.strokeStyle='rgb(90,231,142)';
ctx.moveTo(14758,32320);
ctx.lineTo(14758,32284);
ctx.lineTo(14794,32284);
ctx.lineTo(14794,32320);
ctx.lineTo(14758,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,95,97,0.85)';
ctx.strokeStyle='rgb(71,151,20)';
ctx.moveTo(14758,32224);
ctx.lineTo(14758,32188);
ctx.lineTo(14794,32188);
ctx.lineTo(14794,32224);
ctx.lineTo(14758,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,125,47,0.85)';
ctx.strokeStyle='rgb(142,121,248)';
ctx.moveTo(14758,32608);
ctx.lineTo(14758,32572);
ctx.lineTo(14794,32572);
ctx.lineTo(14794,32608);
ctx.lineTo(14758,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,254,149,0.85)';
ctx.strokeStyle='rgb(174,240,80)';
ctx.moveTo(14854,32608);
ctx.lineTo(14854,32572);
ctx.lineTo(14890,32572);
ctx.lineTo(14890,32608);
ctx.lineTo(14854,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,110,11,0.85)';
ctx.strokeStyle='rgb(127,49,200)';
ctx.moveTo(14950,32608);
ctx.lineTo(14950,32572);
ctx.lineTo(14986,32572);
ctx.lineTo(14986,32608);
ctx.lineTo(14950,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,229,128,0.85)';
ctx.strokeStyle='rgb(70,112,134)';
ctx.moveTo(14950,32512);
ctx.lineTo(14950,32476);
ctx.lineTo(14986,32476);
ctx.lineTo(14986,32512);
ctx.lineTo(14950,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,71,216,0.85)';
ctx.strokeStyle='rgb(117,127,153)';
ctx.moveTo(15142,32608);
ctx.lineTo(15142,32572);
ctx.lineTo(15178,32572);
ctx.lineTo(15178,32608);
ctx.lineTo(15142,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,52,115,0.85)';
ctx.strokeStyle='rgb(221,74,156)';
ctx.moveTo(15142,32512);
ctx.lineTo(15142,32476);
ctx.lineTo(15178,32476);
ctx.lineTo(15178,32512);
ctx.lineTo(15142,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,28,27,0.85)';
ctx.strokeStyle='rgb(25,182,98)';
ctx.moveTo(15142,32416);
ctx.lineTo(15142,32380);
ctx.lineTo(15178,32380);
ctx.lineTo(15178,32416);
ctx.lineTo(15142,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,31,33,0.85)';
ctx.strokeStyle='rgb(23,178,200)';
ctx.moveTo(15142,32320);
ctx.lineTo(15142,32284);
ctx.lineTo(15178,32284);
ctx.lineTo(15178,32320);
ctx.lineTo(15142,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,191,125,0.85)';
ctx.strokeStyle='rgb(145,56,55)';
ctx.moveTo(15142,32224);
ctx.lineTo(15142,32188);
ctx.lineTo(15178,32188);
ctx.lineTo(15178,32224);
ctx.lineTo(15142,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,153,227,0.85)';
ctx.strokeStyle='rgb(167,108,80)';
ctx.moveTo(14950,32416);
ctx.lineTo(14950,32380);
ctx.lineTo(14986,32380);
ctx.lineTo(14986,32416);
ctx.lineTo(14950,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,165,158,0.85)';
ctx.strokeStyle='rgb(213,69,188)';
ctx.moveTo(14950,32320);
ctx.lineTo(14950,32284);
ctx.lineTo(14986,32284);
ctx.lineTo(14986,32320);
ctx.lineTo(14950,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,221,187,0.85)';
ctx.strokeStyle='rgb(194,202,37)';
ctx.moveTo(14950,32224);
ctx.lineTo(14950,32188);
ctx.lineTo(14986,32188);
ctx.lineTo(14986,32224);
ctx.lineTo(14950,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,140,142,0.85)';
ctx.strokeStyle='rgb(23,125,170)';
ctx.moveTo(15478,33424);
ctx.lineTo(15478,33388);
ctx.lineTo(15514,33388);
ctx.lineTo(15514,33424);
ctx.lineTo(15478,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,14,98,0.85)';
ctx.strokeStyle='rgb(153,206,177)';
ctx.moveTo(15574,33424);
ctx.lineTo(15574,33388);
ctx.lineTo(15610,33388);
ctx.lineTo(15610,33424);
ctx.lineTo(15574,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,117,113,0.85)';
ctx.strokeStyle='rgb(235,12,168)';
ctx.moveTo(15670,33424);
ctx.lineTo(15670,33388);
ctx.lineTo(15706,33388);
ctx.lineTo(15706,33424);
ctx.lineTo(15670,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,47,213,0.85)';
ctx.strokeStyle='rgb(113,201,14)';
ctx.moveTo(15766,33424);
ctx.lineTo(15766,33388);
ctx.lineTo(15802,33388);
ctx.lineTo(15802,33424);
ctx.lineTo(15766,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,236,242,0.85)';
ctx.strokeStyle='rgb(84,252,146)';
ctx.moveTo(15766,33136);
ctx.lineTo(15766,33100);
ctx.lineTo(15802,33100);
ctx.lineTo(15802,33136);
ctx.lineTo(15766,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,187,189,0.85)';
ctx.strokeStyle='rgb(185,232,37)';
ctx.moveTo(15766,33040);
ctx.lineTo(15766,33004);
ctx.lineTo(15802,33004);
ctx.lineTo(15802,33040);
ctx.lineTo(15766,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,129,142,0.85)';
ctx.strokeStyle='rgb(201,65,146)';
ctx.moveTo(15766,32944);
ctx.lineTo(15766,32908);
ctx.lineTo(15802,32908);
ctx.lineTo(15802,32944);
ctx.lineTo(15766,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,96,214,0.85)';
ctx.strokeStyle='rgb(120,209,221)';
ctx.moveTo(15478,33040);
ctx.lineTo(15478,33004);
ctx.lineTo(15514,33004);
ctx.lineTo(15514,33040);
ctx.lineTo(15478,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,36,244,0.85)';
ctx.strokeStyle='rgb(208,149,128)';
ctx.moveTo(15478,32944);
ctx.lineTo(15478,32908);
ctx.lineTo(15514,32908);
ctx.lineTo(15514,32944);
ctx.lineTo(15478,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,46,66,0.85)';
ctx.strokeStyle='rgb(145,201,165)';
ctx.moveTo(15478,33328);
ctx.lineTo(15478,33292);
ctx.lineTo(15514,33292);
ctx.lineTo(15514,33328);
ctx.lineTo(15478,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,241,86,0.85)';
ctx.strokeStyle='rgb(25,97,169)';
ctx.moveTo(15574,33328);
ctx.lineTo(15574,33292);
ctx.lineTo(15610,33292);
ctx.lineTo(15610,33328);
ctx.lineTo(15574,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,194,165,0.85)';
ctx.strokeStyle='rgb(172,200,0)';
ctx.moveTo(15574,33232);
ctx.lineTo(15574,33196);
ctx.lineTo(15610,33196);
ctx.lineTo(15610,33232);
ctx.lineTo(15574,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,214,167,0.85)';
ctx.strokeStyle='rgb(131,35,127)';
ctx.moveTo(15574,33136);
ctx.lineTo(15574,33100);
ctx.lineTo(15610,33100);
ctx.lineTo(15610,33136);
ctx.lineTo(15574,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,164,228,0.85)';
ctx.strokeStyle='rgb(218,173,45)';
ctx.moveTo(15574,33040);
ctx.lineTo(15574,33004);
ctx.lineTo(15610,33004);
ctx.lineTo(15610,33040);
ctx.lineTo(15574,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,56,102,0.85)';
ctx.strokeStyle='rgb(245,129,154)';
ctx.moveTo(15574,32944);
ctx.lineTo(15574,32908);
ctx.lineTo(15610,32908);
ctx.lineTo(15610,32944);
ctx.lineTo(15574,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,175,133,0.85)';
ctx.strokeStyle='rgb(170,104,5)';
ctx.moveTo(15478,33232);
ctx.lineTo(15478,33196);
ctx.lineTo(15514,33196);
ctx.lineTo(15514,33232);
ctx.lineTo(15478,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,246,247,0.85)';
ctx.strokeStyle='rgb(105,75,131)';
ctx.moveTo(15670,33328);
ctx.lineTo(15670,33292);
ctx.lineTo(15706,33292);
ctx.lineTo(15706,33328);
ctx.lineTo(15670,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,183,119,0.85)';
ctx.strokeStyle='rgb(41,58,55)';
ctx.moveTo(15670,33232);
ctx.lineTo(15670,33196);
ctx.lineTo(15706,33196);
ctx.lineTo(15706,33232);
ctx.lineTo(15670,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,235,28,0.85)';
ctx.strokeStyle='rgb(150,194,25)';
ctx.moveTo(15670,33136);
ctx.lineTo(15670,33100);
ctx.lineTo(15706,33100);
ctx.lineTo(15706,33136);
ctx.lineTo(15670,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,37,4,0.85)';
ctx.strokeStyle='rgb(181,234,124)';
ctx.moveTo(15670,33040);
ctx.lineTo(15670,33004);
ctx.lineTo(15706,33004);
ctx.lineTo(15706,33040);
ctx.lineTo(15670,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,25,179,0.85)';
ctx.strokeStyle='rgb(193,85,212)';
ctx.moveTo(15670,32944);
ctx.lineTo(15670,32908);
ctx.lineTo(15706,32908);
ctx.lineTo(15706,32944);
ctx.lineTo(15670,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,55,208,0.85)';
ctx.strokeStyle='rgb(68,113,182)';
ctx.moveTo(15478,33136);
ctx.lineTo(15478,33100);
ctx.lineTo(15514,33100);
ctx.lineTo(15514,33136);
ctx.lineTo(15478,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,114,195,0.85)';
ctx.strokeStyle='rgb(0,54,73)';
ctx.moveTo(15766,33328);
ctx.lineTo(15766,33292);
ctx.lineTo(15802,33292);
ctx.lineTo(15802,33328);
ctx.lineTo(15766,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,203,231,0.85)';
ctx.strokeStyle='rgb(174,166,29)';
ctx.moveTo(15766,33232);
ctx.lineTo(15766,33196);
ctx.lineTo(15802,33196);
ctx.lineTo(15802,33232);
ctx.lineTo(15766,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,25,79,0.85)';
ctx.strokeStyle='rgb(44,129,110)';
ctx.moveTo(15670,33712);
ctx.lineTo(15670,33676);
ctx.lineTo(15706,33676);
ctx.lineTo(15706,33712);
ctx.lineTo(15670,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,46,159,0.85)';
ctx.strokeStyle='rgb(0,97,198)';
ctx.moveTo(15670,33616);
ctx.lineTo(15670,33580);
ctx.lineTo(15706,33580);
ctx.lineTo(15706,33616);
ctx.lineTo(15670,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,26,192,0.85)';
ctx.strokeStyle='rgb(146,89,85)';
ctx.moveTo(15670,33520);
ctx.lineTo(15670,33484);
ctx.lineTo(15706,33484);
ctx.lineTo(15706,33520);
ctx.lineTo(15670,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,135,190,0.85)';
ctx.strokeStyle='rgb(176,23,173)';
ctx.moveTo(15574,33808);
ctx.lineTo(15574,33772);
ctx.lineTo(15610,33772);
ctx.lineTo(15610,33808);
ctx.lineTo(15574,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,102,145,0.85)';
ctx.strokeStyle='rgb(252,219,212)';
ctx.moveTo(15574,33712);
ctx.lineTo(15574,33676);
ctx.lineTo(15610,33676);
ctx.lineTo(15610,33712);
ctx.lineTo(15574,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,171,102,0.85)';
ctx.strokeStyle='rgb(111,12,72)';
ctx.moveTo(15574,33616);
ctx.lineTo(15574,33580);
ctx.lineTo(15610,33580);
ctx.lineTo(15610,33616);
ctx.lineTo(15574,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,232,110,0.85)';
ctx.strokeStyle='rgb(172,238,204)';
ctx.moveTo(15574,33520);
ctx.lineTo(15574,33484);
ctx.lineTo(15610,33484);
ctx.lineTo(15610,33520);
ctx.lineTo(15574,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,217,149,0.85)';
ctx.strokeStyle='rgb(224,112,145)';
ctx.moveTo(15478,33808);
ctx.lineTo(15478,33772);
ctx.lineTo(15514,33772);
ctx.lineTo(15514,33808);
ctx.lineTo(15478,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,195,159,0.85)';
ctx.strokeStyle='rgb(117,63,244)';
ctx.moveTo(15478,33712);
ctx.lineTo(15478,33676);
ctx.lineTo(15514,33676);
ctx.lineTo(15514,33712);
ctx.lineTo(15478,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,129,71,0.85)';
ctx.strokeStyle='rgb(158,95,66)';
ctx.moveTo(15766,33904);
ctx.lineTo(15766,33868);
ctx.lineTo(15802,33868);
ctx.lineTo(15802,33904);
ctx.lineTo(15766,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,34,190,0.85)';
ctx.strokeStyle='rgb(232,146,22)';
ctx.moveTo(15766,33808);
ctx.lineTo(15766,33772);
ctx.lineTo(15802,33772);
ctx.lineTo(15802,33808);
ctx.lineTo(15766,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,254,187,0.85)';
ctx.strokeStyle='rgb(71,203,214)';
ctx.moveTo(15766,33712);
ctx.lineTo(15766,33676);
ctx.lineTo(15802,33676);
ctx.lineTo(15802,33712);
ctx.lineTo(15766,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,61,230,0.85)';
ctx.strokeStyle='rgb(165,76,189)';
ctx.moveTo(15766,33616);
ctx.lineTo(15766,33580);
ctx.lineTo(15802,33580);
ctx.lineTo(15802,33616);
ctx.lineTo(15766,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,54,163,0.85)';
ctx.strokeStyle='rgb(175,35,46)';
ctx.moveTo(15766,33520);
ctx.lineTo(15766,33484);
ctx.lineTo(15802,33484);
ctx.lineTo(15802,33520);
ctx.lineTo(15766,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,68,188,0.85)';
ctx.strokeStyle='rgb(209,154,139)';
ctx.moveTo(15478,33616);
ctx.lineTo(15478,33580);
ctx.lineTo(15514,33580);
ctx.lineTo(15514,33616);
ctx.lineTo(15478,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,18,251,0.85)';
ctx.strokeStyle='rgb(204,107,174)';
ctx.moveTo(15478,33520);
ctx.lineTo(15478,33484);
ctx.lineTo(15514,33484);
ctx.lineTo(15514,33520);
ctx.lineTo(15478,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,244,229,0.85)';
ctx.strokeStyle='rgb(114,36,175)';
ctx.moveTo(15478,33904);
ctx.lineTo(15478,33868);
ctx.lineTo(15514,33868);
ctx.lineTo(15514,33904);
ctx.lineTo(15478,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,210,190,0.85)';
ctx.strokeStyle='rgb(82,126,98)';
ctx.moveTo(15574,33904);
ctx.lineTo(15574,33868);
ctx.lineTo(15610,33868);
ctx.lineTo(15610,33904);
ctx.lineTo(15574,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,88,167,0.85)';
ctx.strokeStyle='rgb(53,206,93)';
ctx.moveTo(15670,33904);
ctx.lineTo(15670,33868);
ctx.lineTo(15706,33868);
ctx.lineTo(15706,33904);
ctx.lineTo(15670,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,189,24,0.85)';
ctx.strokeStyle='rgb(85,209,37)';
ctx.moveTo(15670,33808);
ctx.lineTo(15670,33772);
ctx.lineTo(15706,33772);
ctx.lineTo(15706,33808);
ctx.lineTo(15670,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,219,75,0.85)';
ctx.strokeStyle='rgb(236,203,53)';
ctx.moveTo(16438,33040);
ctx.lineTo(16438,33004);
ctx.lineTo(16474,33004);
ctx.lineTo(16474,33040);
ctx.lineTo(16438,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,36,39,0.85)';
ctx.strokeStyle='rgb(77,9,129)';
ctx.moveTo(16438,32944);
ctx.lineTo(16438,32908);
ctx.lineTo(16474,32908);
ctx.lineTo(16474,32944);
ctx.lineTo(16438,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,253,0,0.85)';
ctx.strokeStyle='rgb(70,235,32)';
ctx.moveTo(15862,33424);
ctx.lineTo(15862,33388);
ctx.lineTo(15898,33388);
ctx.lineTo(15898,33424);
ctx.lineTo(15862,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,215,46,0.85)';
ctx.strokeStyle='rgb(173,92,154)';
ctx.moveTo(15958,33904);
ctx.lineTo(15958,33868);
ctx.lineTo(15994,33868);
ctx.lineTo(15994,33904);
ctx.lineTo(15958,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,72,120,0.85)';
ctx.strokeStyle='rgb(197,17,243)';
ctx.moveTo(15958,33808);
ctx.lineTo(15958,33772);
ctx.lineTo(15994,33772);
ctx.lineTo(15994,33808);
ctx.lineTo(15958,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,78,21,0.85)';
ctx.strokeStyle='rgb(172,250,251)';
ctx.moveTo(15958,33712);
ctx.lineTo(15958,33676);
ctx.lineTo(15994,33676);
ctx.lineTo(15994,33712);
ctx.lineTo(15958,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,36,134,0.85)';
ctx.strokeStyle='rgb(109,23,76)';
ctx.moveTo(15862,33328);
ctx.lineTo(15862,33292);
ctx.lineTo(15898,33292);
ctx.lineTo(15898,33328);
ctx.lineTo(15862,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,229,80,0.85)';
ctx.strokeStyle='rgb(96,157,89)';
ctx.moveTo(15862,33232);
ctx.lineTo(15862,33196);
ctx.lineTo(15898,33196);
ctx.lineTo(15898,33232);
ctx.lineTo(15862,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,19,174,0.85)';
ctx.strokeStyle='rgb(22,217,24)';
ctx.moveTo(15862,33136);
ctx.lineTo(15862,33100);
ctx.lineTo(15898,33100);
ctx.lineTo(15898,33136);
ctx.lineTo(15862,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,233,23,0.85)';
ctx.strokeStyle='rgb(24,28,211)';
ctx.moveTo(15862,33040);
ctx.lineTo(15862,33004);
ctx.lineTo(15898,33004);
ctx.lineTo(15898,33040);
ctx.lineTo(15862,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,97,85,0.85)';
ctx.strokeStyle='rgb(119,126,233)';
ctx.moveTo(15862,32944);
ctx.lineTo(15862,32908);
ctx.lineTo(15898,32908);
ctx.lineTo(15898,32944);
ctx.lineTo(15862,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,184,182,0.85)';
ctx.strokeStyle='rgb(86,114,96)';
ctx.moveTo(15958,33616);
ctx.lineTo(15958,33580);
ctx.lineTo(15994,33580);
ctx.lineTo(15994,33616);
ctx.lineTo(15958,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,128,165,0.85)';
ctx.strokeStyle='rgb(79,148,218)';
ctx.moveTo(15958,33520);
ctx.lineTo(15958,33484);
ctx.lineTo(15994,33484);
ctx.lineTo(15994,33520);
ctx.lineTo(15958,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,41,181,0.85)';
ctx.strokeStyle='rgb(131,26,89)';
ctx.moveTo(15958,33424);
ctx.lineTo(15958,33388);
ctx.lineTo(15994,33388);
ctx.lineTo(15994,33424);
ctx.lineTo(15958,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,115,170,0.85)';
ctx.strokeStyle='rgb(65,72,91)';
ctx.moveTo(15958,33328);
ctx.lineTo(15958,33292);
ctx.lineTo(15994,33292);
ctx.lineTo(15994,33328);
ctx.lineTo(15958,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,208,180,0.85)';
ctx.strokeStyle='rgb(237,80,88)';
ctx.moveTo(15958,33232);
ctx.lineTo(15958,33196);
ctx.lineTo(15994,33196);
ctx.lineTo(15994,33232);
ctx.lineTo(15958,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,34,64,0.85)';
ctx.strokeStyle='rgb(85,105,177)';
ctx.moveTo(15958,33136);
ctx.lineTo(15958,33100);
ctx.lineTo(15994,33100);
ctx.lineTo(15994,33136);
ctx.lineTo(15958,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,53,179,0.85)';
ctx.strokeStyle='rgb(141,36,27)';
ctx.moveTo(15958,33040);
ctx.lineTo(15958,33004);
ctx.lineTo(15994,33004);
ctx.lineTo(15994,33040);
ctx.lineTo(15958,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,147,164,0.85)';
ctx.strokeStyle='rgb(250,137,131)';
ctx.moveTo(15958,32944);
ctx.lineTo(15958,32908);
ctx.lineTo(15994,32908);
ctx.lineTo(15994,32944);
ctx.lineTo(15958,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,41,56,0.85)';
ctx.strokeStyle='rgb(224,166,198)';
ctx.moveTo(16054,33424);
ctx.lineTo(16054,33388);
ctx.lineTo(16090,33388);
ctx.lineTo(16090,33424);
ctx.lineTo(16054,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,79,86,0.85)';
ctx.strokeStyle='rgb(239,169,25)';
ctx.moveTo(16150,33424);
ctx.lineTo(16150,33388);
ctx.lineTo(16186,33388);
ctx.lineTo(16186,33424);
ctx.lineTo(16150,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,153,109,0.85)';
ctx.strokeStyle='rgb(88,182,129)';
ctx.moveTo(16246,33424);
ctx.lineTo(16246,33388);
ctx.lineTo(16282,33388);
ctx.lineTo(16282,33424);
ctx.lineTo(16246,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,195,245,0.85)';
ctx.strokeStyle='rgb(96,3,32)';
ctx.moveTo(16342,33424);
ctx.lineTo(16342,33388);
ctx.lineTo(16378,33388);
ctx.lineTo(16378,33424);
ctx.lineTo(16342,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,91,231,0.85)';
ctx.strokeStyle='rgb(88,107,152)';
ctx.moveTo(16438,33424);
ctx.lineTo(16438,33388);
ctx.lineTo(16474,33388);
ctx.lineTo(16474,33424);
ctx.lineTo(16438,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,228,175,0.85)';
ctx.strokeStyle='rgb(201,21,68)';
ctx.moveTo(16054,32944);
ctx.lineTo(16054,32908);
ctx.lineTo(16090,32908);
ctx.lineTo(16090,32944);
ctx.lineTo(16054,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,192,78,0.85)';
ctx.strokeStyle='rgb(71,101,162)';
ctx.moveTo(16054,33328);
ctx.lineTo(16054,33292);
ctx.lineTo(16090,33292);
ctx.lineTo(16090,33328);
ctx.lineTo(16054,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,61,117,0.85)';
ctx.strokeStyle='rgb(46,190,170)';
ctx.moveTo(16150,33328);
ctx.lineTo(16150,33292);
ctx.lineTo(16186,33292);
ctx.lineTo(16186,33328);
ctx.lineTo(16150,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,129,221,0.85)';
ctx.strokeStyle='rgb(171,222,254)';
ctx.moveTo(15862,33712);
ctx.lineTo(15862,33676);
ctx.lineTo(15898,33676);
ctx.lineTo(15898,33712);
ctx.lineTo(15862,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,83,240,0.85)';
ctx.strokeStyle='rgb(3,86,20)';
ctx.moveTo(15862,33616);
ctx.lineTo(15862,33580);
ctx.lineTo(15898,33580);
ctx.lineTo(15898,33616);
ctx.lineTo(15862,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,70,111,0.85)';
ctx.strokeStyle='rgb(8,86,152)';
ctx.moveTo(15862,33520);
ctx.lineTo(15862,33484);
ctx.lineTo(15898,33484);
ctx.lineTo(15898,33520);
ctx.lineTo(15862,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,120,187,0.85)';
ctx.strokeStyle='rgb(12,254,12)';
ctx.moveTo(16150,33232);
ctx.lineTo(16150,33196);
ctx.lineTo(16186,33196);
ctx.lineTo(16186,33232);
ctx.lineTo(16150,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,20,95,0.85)';
ctx.strokeStyle='rgb(209,165,41)';
ctx.moveTo(16150,33136);
ctx.lineTo(16150,33100);
ctx.lineTo(16186,33100);
ctx.lineTo(16186,33136);
ctx.lineTo(16150,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,207,239,0.85)';
ctx.strokeStyle='rgb(77,149,178)';
ctx.moveTo(16150,33040);
ctx.lineTo(16150,33004);
ctx.lineTo(16186,33004);
ctx.lineTo(16186,33040);
ctx.lineTo(16150,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,110,44,0.85)';
ctx.strokeStyle='rgb(184,53,132)';
ctx.moveTo(16150,32944);
ctx.lineTo(16150,32908);
ctx.lineTo(16186,32908);
ctx.lineTo(16186,32944);
ctx.lineTo(16150,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,144,221,0.85)';
ctx.strokeStyle='rgb(110,172,123)';
ctx.moveTo(16054,33232);
ctx.lineTo(16054,33196);
ctx.lineTo(16090,33196);
ctx.lineTo(16090,33232);
ctx.lineTo(16054,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,33,120,0.85)';
ctx.strokeStyle='rgb(1,73,228)';
ctx.moveTo(16246,33328);
ctx.lineTo(16246,33292);
ctx.lineTo(16282,33292);
ctx.lineTo(16282,33328);
ctx.lineTo(16246,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,166,32,0.85)';
ctx.strokeStyle='rgb(96,110,225)';
ctx.moveTo(16246,33232);
ctx.lineTo(16246,33196);
ctx.lineTo(16282,33196);
ctx.lineTo(16282,33232);
ctx.lineTo(16246,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,88,66,0.85)';
ctx.strokeStyle='rgb(216,252,93)';
ctx.moveTo(16246,33136);
ctx.lineTo(16246,33100);
ctx.lineTo(16282,33100);
ctx.lineTo(16282,33136);
ctx.lineTo(16246,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,231,91,0.85)';
ctx.strokeStyle='rgb(172,198,168)';
ctx.moveTo(16246,33040);
ctx.lineTo(16246,33004);
ctx.lineTo(16282,33004);
ctx.lineTo(16282,33040);
ctx.lineTo(16246,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,163,119,0.85)';
ctx.strokeStyle='rgb(139,200,229)';
ctx.moveTo(16246,32944);
ctx.lineTo(16246,32908);
ctx.lineTo(16282,32908);
ctx.lineTo(16282,32944);
ctx.lineTo(16246,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,83,26,0.85)';
ctx.strokeStyle='rgb(195,18,206)';
ctx.moveTo(16054,33136);
ctx.lineTo(16054,33100);
ctx.lineTo(16090,33100);
ctx.lineTo(16090,33136);
ctx.lineTo(16054,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,214,70,0.85)';
ctx.strokeStyle='rgb(144,214,225)';
ctx.moveTo(16342,33328);
ctx.lineTo(16342,33292);
ctx.lineTo(16378,33292);
ctx.lineTo(16378,33328);
ctx.lineTo(16342,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,185,129,0.85)';
ctx.strokeStyle='rgb(191,93,179)';
ctx.moveTo(16342,33232);
ctx.lineTo(16342,33196);
ctx.lineTo(16378,33196);
ctx.lineTo(16378,33232);
ctx.lineTo(16342,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,43,252,0.85)';
ctx.strokeStyle='rgb(226,245,70)';
ctx.moveTo(16342,33136);
ctx.lineTo(16342,33100);
ctx.lineTo(16378,33100);
ctx.lineTo(16378,33136);
ctx.lineTo(16342,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,192,148,0.85)';
ctx.strokeStyle='rgb(138,67,219)';
ctx.moveTo(16342,33040);
ctx.lineTo(16342,33004);
ctx.lineTo(16378,33004);
ctx.lineTo(16378,33040);
ctx.lineTo(16342,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,198,218,0.85)';
ctx.strokeStyle='rgb(113,219,94)';
ctx.moveTo(16342,32944);
ctx.lineTo(16342,32908);
ctx.lineTo(16378,32908);
ctx.lineTo(16378,32944);
ctx.lineTo(16342,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,240,12,0.85)';
ctx.strokeStyle='rgb(10,189,4)';
ctx.moveTo(16054,33040);
ctx.lineTo(16054,33004);
ctx.lineTo(16090,33004);
ctx.lineTo(16090,33040);
ctx.lineTo(16054,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,90,251,0.85)';
ctx.strokeStyle='rgb(186,17,85)';
ctx.moveTo(16438,33328);
ctx.lineTo(16438,33292);
ctx.lineTo(16474,33292);
ctx.lineTo(16474,33328);
ctx.lineTo(16438,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,19,124,0.85)';
ctx.strokeStyle='rgb(164,120,69)';
ctx.moveTo(16438,33232);
ctx.lineTo(16438,33196);
ctx.lineTo(16474,33196);
ctx.lineTo(16474,33232);
ctx.lineTo(16438,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,214,219,0.85)';
ctx.strokeStyle='rgb(59,172,76)';
ctx.moveTo(16438,33136);
ctx.lineTo(16438,33100);
ctx.lineTo(16474,33100);
ctx.lineTo(16474,33136);
ctx.lineTo(16438,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,214,73,0.85)';
ctx.strokeStyle='rgb(13,85,130)';
ctx.moveTo(15862,33904);
ctx.lineTo(15862,33868);
ctx.lineTo(15898,33868);
ctx.lineTo(15898,33904);
ctx.lineTo(15862,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,217,158,0.85)';
ctx.strokeStyle='rgb(212,171,152)';
ctx.moveTo(15862,33808);
ctx.lineTo(15862,33772);
ctx.lineTo(15898,33772);
ctx.lineTo(15898,33808);
ctx.lineTo(15862,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,15,59,0.85)';
ctx.strokeStyle='rgb(134,45,105)';
ctx.moveTo(16150,33520);
ctx.lineTo(16150,33484);
ctx.lineTo(16186,33484);
ctx.lineTo(16186,33520);
ctx.lineTo(16150,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,135,227,0.85)';
ctx.strokeStyle='rgb(159,80,201)';
ctx.moveTo(16054,33808);
ctx.lineTo(16054,33772);
ctx.lineTo(16090,33772);
ctx.lineTo(16090,33808);
ctx.lineTo(16054,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,82,198,0.85)';
ctx.strokeStyle='rgb(174,91,213)';
ctx.moveTo(16054,33712);
ctx.lineTo(16054,33676);
ctx.lineTo(16090,33676);
ctx.lineTo(16090,33712);
ctx.lineTo(16054,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,7,77,0.85)';
ctx.strokeStyle='rgb(96,187,10)';
ctx.moveTo(16342,33904);
ctx.lineTo(16342,33868);
ctx.lineTo(16378,33868);
ctx.lineTo(16378,33904);
ctx.lineTo(16342,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,82,252,0.85)';
ctx.strokeStyle='rgb(143,71,65)';
ctx.moveTo(16342,33808);
ctx.lineTo(16342,33772);
ctx.lineTo(16378,33772);
ctx.lineTo(16378,33808);
ctx.lineTo(16342,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,156,7,0.85)';
ctx.strokeStyle='rgb(117,160,85)';
ctx.moveTo(16342,33712);
ctx.lineTo(16342,33676);
ctx.lineTo(16378,33676);
ctx.lineTo(16378,33712);
ctx.lineTo(16342,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,163,223,0.85)';
ctx.strokeStyle='rgb(251,138,245)';
ctx.moveTo(16342,33616);
ctx.lineTo(16342,33580);
ctx.lineTo(16378,33580);
ctx.lineTo(16378,33616);
ctx.lineTo(16342,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,66,104,0.85)';
ctx.strokeStyle='rgb(169,89,208)';
ctx.moveTo(16342,33520);
ctx.lineTo(16342,33484);
ctx.lineTo(16378,33484);
ctx.lineTo(16378,33520);
ctx.lineTo(16342,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,52,27,0.85)';
ctx.strokeStyle='rgb(97,107,96)';
ctx.moveTo(16054,33616);
ctx.lineTo(16054,33580);
ctx.lineTo(16090,33580);
ctx.lineTo(16090,33616);
ctx.lineTo(16054,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,240,11,0.85)';
ctx.strokeStyle='rgb(126,15,22)';
ctx.moveTo(16054,33520);
ctx.lineTo(16054,33484);
ctx.lineTo(16090,33484);
ctx.lineTo(16090,33520);
ctx.lineTo(16054,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,206,239,0.85)';
ctx.strokeStyle='rgb(193,198,147)';
ctx.moveTo(16054,33904);
ctx.lineTo(16054,33868);
ctx.lineTo(16090,33868);
ctx.lineTo(16090,33904);
ctx.lineTo(16054,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,119,73,0.85)';
ctx.strokeStyle='rgb(180,99,120)';
ctx.moveTo(16150,33904);
ctx.lineTo(16150,33868);
ctx.lineTo(16186,33868);
ctx.lineTo(16186,33904);
ctx.lineTo(16150,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,136,201,0.85)';
ctx.strokeStyle='rgb(31,182,195)';
ctx.moveTo(16246,33904);
ctx.lineTo(16246,33868);
ctx.lineTo(16282,33868);
ctx.lineTo(16282,33904);
ctx.lineTo(16246,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,147,216,0.85)';
ctx.strokeStyle='rgb(106,3,140)';
ctx.moveTo(16246,33808);
ctx.lineTo(16246,33772);
ctx.lineTo(16282,33772);
ctx.lineTo(16282,33808);
ctx.lineTo(16246,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,17,137,0.85)';
ctx.strokeStyle='rgb(18,253,82)';
ctx.moveTo(16438,33904);
ctx.lineTo(16438,33868);
ctx.lineTo(16474,33868);
ctx.lineTo(16474,33904);
ctx.lineTo(16438,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,86,184,0.85)';
ctx.strokeStyle='rgb(149,28,72)';
ctx.moveTo(16438,33808);
ctx.lineTo(16438,33772);
ctx.lineTo(16474,33772);
ctx.lineTo(16474,33808);
ctx.lineTo(16438,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,216,114,0.85)';
ctx.strokeStyle='rgb(62,125,206)';
ctx.moveTo(16438,33712);
ctx.lineTo(16438,33676);
ctx.lineTo(16474,33676);
ctx.lineTo(16474,33712);
ctx.lineTo(16438,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,207,194,0.85)';
ctx.strokeStyle='rgb(207,14,101)';
ctx.moveTo(16438,33616);
ctx.lineTo(16438,33580);
ctx.lineTo(16474,33580);
ctx.lineTo(16474,33616);
ctx.lineTo(16438,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,37,109,0.85)';
ctx.strokeStyle='rgb(248,219,25)';
ctx.moveTo(16438,33520);
ctx.lineTo(16438,33484);
ctx.lineTo(16474,33484);
ctx.lineTo(16474,33520);
ctx.lineTo(16438,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,84,168,0.85)';
ctx.strokeStyle='rgb(22,134,106)';
ctx.moveTo(16246,33712);
ctx.lineTo(16246,33676);
ctx.lineTo(16282,33676);
ctx.lineTo(16282,33712);
ctx.lineTo(16246,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,6,72,0.85)';
ctx.strokeStyle='rgb(27,141,245)';
ctx.moveTo(16246,33616);
ctx.lineTo(16246,33580);
ctx.lineTo(16282,33580);
ctx.lineTo(16282,33616);
ctx.lineTo(16246,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,22,229,0.85)';
ctx.strokeStyle='rgb(165,80,26)';
ctx.moveTo(16246,33520);
ctx.lineTo(16246,33484);
ctx.lineTo(16282,33484);
ctx.lineTo(16282,33520);
ctx.lineTo(16246,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,106,173,0.85)';
ctx.strokeStyle='rgb(126,101,92)';
ctx.moveTo(16150,33808);
ctx.lineTo(16150,33772);
ctx.lineTo(16186,33772);
ctx.lineTo(16186,33808);
ctx.lineTo(16150,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,47,171,0.85)';
ctx.strokeStyle='rgb(109,238,24)';
ctx.moveTo(16150,33712);
ctx.lineTo(16150,33676);
ctx.lineTo(16186,33676);
ctx.lineTo(16186,33712);
ctx.lineTo(16150,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,49,110,0.85)';
ctx.strokeStyle='rgb(143,90,251)';
ctx.moveTo(16150,33616);
ctx.lineTo(16150,33580);
ctx.lineTo(16186,33580);
ctx.lineTo(16186,33616);
ctx.lineTo(16150,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,195,21,0.85)';
ctx.strokeStyle='rgb(30,35,19)';
ctx.moveTo(35500,25528);
ctx.lineTo(35500,25492);
ctx.lineTo(35536,25492);
ctx.lineTo(35536,25528);
ctx.lineTo(35500,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,232,251,0.85)';
ctx.strokeStyle='rgb(124,154,115)';
ctx.moveTo(35596,25528);
ctx.lineTo(35596,25492);
ctx.lineTo(35632,25492);
ctx.lineTo(35632,25528);
ctx.lineTo(35596,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,194,142,0.85)';
ctx.strokeStyle='rgb(126,175,242)';
ctx.moveTo(35692,25528);
ctx.lineTo(35692,25492);
ctx.lineTo(35728,25492);
ctx.lineTo(35728,25528);
ctx.lineTo(35692,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,148,238,0.85)';
ctx.strokeStyle='rgb(180,79,101)';
ctx.moveTo(35788,25528);
ctx.lineTo(35788,25492);
ctx.lineTo(35824,25492);
ctx.lineTo(35824,25528);
ctx.lineTo(35788,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,107,226,0.85)';
ctx.strokeStyle='rgb(203,95,102)';
ctx.moveTo(35884,25528);
ctx.lineTo(35884,25492);
ctx.lineTo(35920,25492);
ctx.lineTo(35920,25528);
ctx.lineTo(35884,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,165,202,0.85)';
ctx.strokeStyle='rgb(241,189,251)';
ctx.moveTo(35980,25528);
ctx.lineTo(35980,25492);
ctx.lineTo(36016,25492);
ctx.lineTo(36016,25528);
ctx.lineTo(35980,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,93,64,0.85)';
ctx.strokeStyle='rgb(158,15,194)';
ctx.moveTo(36076,25528);
ctx.lineTo(36076,25492);
ctx.lineTo(36112,25492);
ctx.lineTo(36112,25528);
ctx.lineTo(36076,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,86,140,0.85)';
ctx.strokeStyle='rgb(204,125,209)';
ctx.moveTo(36172,25528);
ctx.lineTo(36172,25492);
ctx.lineTo(36208,25492);
ctx.lineTo(36208,25528);
ctx.lineTo(36172,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,165,95,0.85)';
ctx.strokeStyle='rgb(167,60,73)';
ctx.moveTo(36268,25528);
ctx.lineTo(36268,25492);
ctx.lineTo(36304,25492);
ctx.lineTo(36304,25528);
ctx.lineTo(36268,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,43,137,0.85)';
ctx.strokeStyle='rgb(63,166,38)';
ctx.moveTo(36364,25528);
ctx.lineTo(36364,25492);
ctx.lineTo(36400,25492);
ctx.lineTo(36400,25528);
ctx.lineTo(36364,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,76,230,0.85)';
ctx.strokeStyle='rgb(7,242,127)';
ctx.moveTo(36460,25528);
ctx.lineTo(36460,25492);
ctx.lineTo(36496,25492);
ctx.lineTo(36496,25528);
ctx.lineTo(36460,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,166,120,0.85)';
ctx.strokeStyle='rgb(53,26,55)';
ctx.moveTo(25480,25528);
ctx.lineTo(25480,25492);
ctx.lineTo(25516,25492);
ctx.lineTo(25516,25528);
ctx.lineTo(25480,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,152,247,0.85)';
ctx.strokeStyle='rgb(239,188,0)';
ctx.moveTo(25576,25528);
ctx.lineTo(25576,25492);
ctx.lineTo(25612,25492);
ctx.lineTo(25612,25528);
ctx.lineTo(25576,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,15,181,0.85)';
ctx.strokeStyle='rgb(243,51,104)';
ctx.moveTo(25672,25528);
ctx.lineTo(25672,25492);
ctx.lineTo(25708,25492);
ctx.lineTo(25708,25528);
ctx.lineTo(25672,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,194,22,0.85)';
ctx.strokeStyle='rgb(202,73,251)';
ctx.moveTo(25768,25528);
ctx.lineTo(25768,25492);
ctx.lineTo(25804,25492);
ctx.lineTo(25804,25528);
ctx.lineTo(25768,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,173,224,0.85)';
ctx.strokeStyle='rgb(47,58,221)';
ctx.moveTo(25864,25528);
ctx.lineTo(25864,25492);
ctx.lineTo(25900,25492);
ctx.lineTo(25900,25528);
ctx.lineTo(25864,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,160,220,0.85)';
ctx.strokeStyle='rgb(186,137,38)';
ctx.moveTo(25960,25528);
ctx.lineTo(25960,25492);
ctx.lineTo(25996,25492);
ctx.lineTo(25996,25528);
ctx.lineTo(25960,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,173,138,0.85)';
ctx.strokeStyle='rgb(116,183,130)';
ctx.moveTo(26056,25528);
ctx.lineTo(26056,25492);
ctx.lineTo(26092,25492);
ctx.lineTo(26092,25528);
ctx.lineTo(26056,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,221,122,0.85)';
ctx.strokeStyle='rgb(199,73,167)';
ctx.moveTo(26152,25528);
ctx.lineTo(26152,25492);
ctx.lineTo(26188,25492);
ctx.lineTo(26188,25528);
ctx.lineTo(26152,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,140,151,0.85)';
ctx.strokeStyle='rgb(120,72,198)';
ctx.moveTo(26248,25528);
ctx.lineTo(26248,25492);
ctx.lineTo(26284,25492);
ctx.lineTo(26284,25528);
ctx.lineTo(26248,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,206,233,0.85)';
ctx.strokeStyle='rgb(156,218,165)';
ctx.moveTo(26344,25528);
ctx.lineTo(26344,25492);
ctx.lineTo(26380,25492);
ctx.lineTo(26380,25528);
ctx.lineTo(26344,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,251,135,0.85)';
ctx.strokeStyle='rgb(70,193,101)';
ctx.moveTo(26440,25528);
ctx.lineTo(26440,25492);
ctx.lineTo(26476,25492);
ctx.lineTo(26476,25528);
ctx.lineTo(26440,25528);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,3,88,0.85)';
ctx.strokeStyle='rgb(243,14,225)';
ctx.moveTo(34876,20896);
ctx.lineTo(34876,20860);
ctx.lineTo(34912,20860);
ctx.lineTo(34912,20896);
ctx.lineTo(34876,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,226,156,0.85)';
ctx.strokeStyle='rgb(29,242,14)';
ctx.moveTo(34876,20800);
ctx.lineTo(34876,20764);
ctx.lineTo(34912,20764);
ctx.lineTo(34912,20800);
ctx.lineTo(34876,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,250,15,0.85)';
ctx.strokeStyle='rgb(32,44,135)';
ctx.moveTo(34972,20992);
ctx.lineTo(34972,20956);
ctx.lineTo(35008,20956);
ctx.lineTo(35008,20992);
ctx.lineTo(34972,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,96,160,0.85)';
ctx.strokeStyle='rgb(185,244,86)';
ctx.moveTo(34972,20896);
ctx.lineTo(34972,20860);
ctx.lineTo(35008,20860);
ctx.lineTo(35008,20896);
ctx.lineTo(34972,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,77,95,0.85)';
ctx.strokeStyle='rgb(234,121,2)';
ctx.moveTo(34972,20800);
ctx.lineTo(34972,20764);
ctx.lineTo(35008,20764);
ctx.lineTo(35008,20800);
ctx.lineTo(34972,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,214,9,0.85)';
ctx.strokeStyle='rgb(16,98,187)';
ctx.moveTo(35068,20992);
ctx.lineTo(35068,20956);
ctx.lineTo(35104,20956);
ctx.lineTo(35104,20992);
ctx.lineTo(35068,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,249,254,0.85)';
ctx.strokeStyle='rgb(6,122,110)';
ctx.moveTo(35068,20896);
ctx.lineTo(35068,20860);
ctx.lineTo(35104,20860);
ctx.lineTo(35104,20896);
ctx.lineTo(35068,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,64,96,0.85)';
ctx.strokeStyle='rgb(158,4,6)';
ctx.moveTo(35068,20800);
ctx.lineTo(35068,20764);
ctx.lineTo(35104,20764);
ctx.lineTo(35104,20800);
ctx.lineTo(35068,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,176,163,0.85)';
ctx.strokeStyle='rgb(156,189,63)';
ctx.moveTo(35164,20992);
ctx.lineTo(35164,20956);
ctx.lineTo(35200,20956);
ctx.lineTo(35200,20992);
ctx.lineTo(35164,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,14,143,0.85)';
ctx.strokeStyle='rgb(47,43,181)';
ctx.moveTo(35164,20896);
ctx.lineTo(35164,20860);
ctx.lineTo(35200,20860);
ctx.lineTo(35200,20896);
ctx.lineTo(35164,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,8,158,0.85)';
ctx.strokeStyle='rgb(253,70,206)';
ctx.moveTo(35164,20800);
ctx.lineTo(35164,20764);
ctx.lineTo(35200,20764);
ctx.lineTo(35200,20800);
ctx.lineTo(35164,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,240,173,0.85)';
ctx.strokeStyle='rgb(113,172,147)';
ctx.moveTo(34204,17968);
ctx.lineTo(34204,17932);
ctx.lineTo(34240,17932);
ctx.lineTo(34240,17968);
ctx.lineTo(34204,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,202,117,0.85)';
ctx.strokeStyle='rgb(182,36,177)';
ctx.moveTo(34204,17872);
ctx.lineTo(34204,17836);
ctx.lineTo(34240,17836);
ctx.lineTo(34240,17872);
ctx.lineTo(34204,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,237,160,0.85)';
ctx.strokeStyle='rgb(65,178,156)';
ctx.moveTo(34204,17776);
ctx.lineTo(34204,17740);
ctx.lineTo(34240,17740);
ctx.lineTo(34240,17776);
ctx.lineTo(34204,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,172,51,0.85)';
ctx.strokeStyle='rgb(137,104,8)';
ctx.moveTo(34300,17968);
ctx.lineTo(34300,17932);
ctx.lineTo(34336,17932);
ctx.lineTo(34336,17968);
ctx.lineTo(34300,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,231,66,0.85)';
ctx.strokeStyle='rgb(17,177,125)';
ctx.moveTo(34300,17872);
ctx.lineTo(34300,17836);
ctx.lineTo(34336,17836);
ctx.lineTo(34336,17872);
ctx.lineTo(34300,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,27,95,0.85)';
ctx.strokeStyle='rgb(116,50,181)';
ctx.moveTo(34300,17776);
ctx.lineTo(34300,17740);
ctx.lineTo(34336,17740);
ctx.lineTo(34336,17776);
ctx.lineTo(34300,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,44,99,0.85)';
ctx.strokeStyle='rgb(95,28,189)';
ctx.moveTo(34396,17968);
ctx.lineTo(34396,17932);
ctx.lineTo(34432,17932);
ctx.lineTo(34432,17968);
ctx.lineTo(34396,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,0,122,0.85)';
ctx.strokeStyle='rgb(158,216,47)';
ctx.moveTo(34396,17872);
ctx.lineTo(34396,17836);
ctx.lineTo(34432,17836);
ctx.lineTo(34432,17872);
ctx.lineTo(34396,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,126,21,0.85)';
ctx.strokeStyle='rgb(225,109,70)';
ctx.moveTo(34396,17776);
ctx.lineTo(34396,17740);
ctx.lineTo(34432,17740);
ctx.lineTo(34432,17776);
ctx.lineTo(34396,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,9,9,0.85)';
ctx.strokeStyle='rgb(121,203,222)';
ctx.moveTo(34492,17968);
ctx.lineTo(34492,17932);
ctx.lineTo(34528,17932);
ctx.lineTo(34528,17968);
ctx.lineTo(34492,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,110,221,0.85)';
ctx.strokeStyle='rgb(167,231,70)';
ctx.moveTo(34492,17872);
ctx.lineTo(34492,17836);
ctx.lineTo(34528,17836);
ctx.lineTo(34528,17872);
ctx.lineTo(34492,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,221,204,0.85)';
ctx.strokeStyle='rgb(213,198,126)';
ctx.moveTo(34492,17776);
ctx.lineTo(34492,17740);
ctx.lineTo(34528,17740);
ctx.lineTo(34528,17776);
ctx.lineTo(34492,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,39,25,0.85)';
ctx.strokeStyle='rgb(89,151,83)';
ctx.moveTo(34588,17968);
ctx.lineTo(34588,17932);
ctx.lineTo(34624,17932);
ctx.lineTo(34624,17968);
ctx.lineTo(34588,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,59,42,0.85)';
ctx.strokeStyle='rgb(82,220,75)';
ctx.moveTo(34588,17872);
ctx.lineTo(34588,17836);
ctx.lineTo(34624,17836);
ctx.lineTo(34624,17872);
ctx.lineTo(34588,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,1,180,0.85)';
ctx.strokeStyle='rgb(38,12,54)';
ctx.moveTo(34588,17776);
ctx.lineTo(34588,17740);
ctx.lineTo(34624,17740);
ctx.lineTo(34624,17776);
ctx.lineTo(34588,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,229,163,0.85)';
ctx.strokeStyle='rgb(232,149,47)';
ctx.moveTo(34684,17968);
ctx.lineTo(34684,17932);
ctx.lineTo(34720,17932);
ctx.lineTo(34720,17968);
ctx.lineTo(34684,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,158,133,0.85)';
ctx.strokeStyle='rgb(54,133,203)';
ctx.moveTo(34684,17872);
ctx.lineTo(34684,17836);
ctx.lineTo(34720,17836);
ctx.lineTo(34720,17872);
ctx.lineTo(34684,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,78,43,0.85)';
ctx.strokeStyle='rgb(15,140,217)';
ctx.moveTo(34684,17776);
ctx.lineTo(34684,17740);
ctx.lineTo(34720,17740);
ctx.lineTo(34720,17776);
ctx.lineTo(34684,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,21,57,0.85)';
ctx.strokeStyle='rgb(39,132,101)';
ctx.moveTo(34780,17968);
ctx.lineTo(34780,17932);
ctx.lineTo(34816,17932);
ctx.lineTo(34816,17968);
ctx.lineTo(34780,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,243,29,0.85)';
ctx.strokeStyle='rgb(102,238,253)';
ctx.moveTo(34780,17872);
ctx.lineTo(34780,17836);
ctx.lineTo(34816,17836);
ctx.lineTo(34816,17872);
ctx.lineTo(34780,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,145,39,0.85)';
ctx.strokeStyle='rgb(200,201,54)';
ctx.moveTo(34780,17776);
ctx.lineTo(34780,17740);
ctx.lineTo(34816,17740);
ctx.lineTo(34816,17776);
ctx.lineTo(34780,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,241,229,0.85)';
ctx.strokeStyle='rgb(171,142,22)';
ctx.moveTo(34876,17968);
ctx.lineTo(34876,17932);
ctx.lineTo(34912,17932);
ctx.lineTo(34912,17968);
ctx.lineTo(34876,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,206,76,0.85)';
ctx.strokeStyle='rgb(11,20,228)';
ctx.moveTo(34876,17872);
ctx.lineTo(34876,17836);
ctx.lineTo(34912,17836);
ctx.lineTo(34912,17872);
ctx.lineTo(34876,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,39,242,0.85)';
ctx.strokeStyle='rgb(37,250,47)';
ctx.moveTo(34876,17776);
ctx.lineTo(34876,17740);
ctx.lineTo(34912,17740);
ctx.lineTo(34912,17776);
ctx.lineTo(34876,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,23,221,0.85)';
ctx.strokeStyle='rgb(192,54,253)';
ctx.moveTo(34972,17968);
ctx.lineTo(34972,17932);
ctx.lineTo(35008,17932);
ctx.lineTo(35008,17968);
ctx.lineTo(34972,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,197,55,0.85)';
ctx.strokeStyle='rgb(239,200,62)';
ctx.moveTo(34972,17872);
ctx.lineTo(34972,17836);
ctx.lineTo(35008,17836);
ctx.lineTo(35008,17872);
ctx.lineTo(34972,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,134,72,0.85)';
ctx.strokeStyle='rgb(95,201,160)';
ctx.moveTo(34972,17776);
ctx.lineTo(34972,17740);
ctx.lineTo(35008,17740);
ctx.lineTo(35008,17776);
ctx.lineTo(34972,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,160,41,0.85)';
ctx.strokeStyle='rgb(170,194,214)';
ctx.moveTo(35068,17968);
ctx.lineTo(35068,17932);
ctx.lineTo(35104,17932);
ctx.lineTo(35104,17968);
ctx.lineTo(35068,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,183,39,0.85)';
ctx.strokeStyle='rgb(142,49,228)';
ctx.moveTo(35068,17872);
ctx.lineTo(35068,17836);
ctx.lineTo(35104,17836);
ctx.lineTo(35104,17872);
ctx.lineTo(35068,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,35,157,0.85)';
ctx.strokeStyle='rgb(225,58,25)';
ctx.moveTo(35068,17776);
ctx.lineTo(35068,17740);
ctx.lineTo(35104,17740);
ctx.lineTo(35104,17776);
ctx.lineTo(35068,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,187,167,0.85)';
ctx.strokeStyle='rgb(203,65,80)';
ctx.moveTo(35164,17968);
ctx.lineTo(35164,17932);
ctx.lineTo(35200,17932);
ctx.lineTo(35200,17968);
ctx.lineTo(35164,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,202,118,0.85)';
ctx.strokeStyle='rgb(39,103,55)';
ctx.moveTo(35164,17872);
ctx.lineTo(35164,17836);
ctx.lineTo(35200,17836);
ctx.lineTo(35200,17872);
ctx.lineTo(35164,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,194,198,0.85)';
ctx.strokeStyle='rgb(71,122,112)';
ctx.moveTo(35164,17776);
ctx.lineTo(35164,17740);
ctx.lineTo(35200,17740);
ctx.lineTo(35200,17776);
ctx.lineTo(35164,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,241,45,0.85)';
ctx.strokeStyle='rgb(184,230,173)';
ctx.moveTo(35500,19480);
ctx.lineTo(35500,19444);
ctx.lineTo(35536,19444);
ctx.lineTo(35536,19480);
ctx.lineTo(35500,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,97,200,0.85)';
ctx.strokeStyle='rgb(38,67,20)';
ctx.moveTo(35500,19384);
ctx.lineTo(35500,19348);
ctx.lineTo(35536,19348);
ctx.lineTo(35536,19384);
ctx.lineTo(35500,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,141,187,0.85)';
ctx.strokeStyle='rgb(48,123,223)';
ctx.moveTo(35500,19288);
ctx.lineTo(35500,19252);
ctx.lineTo(35536,19252);
ctx.lineTo(35536,19288);
ctx.lineTo(35500,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,95,129,0.85)';
ctx.strokeStyle='rgb(175,199,72)';
ctx.moveTo(35596,19480);
ctx.lineTo(35596,19444);
ctx.lineTo(35632,19444);
ctx.lineTo(35632,19480);
ctx.lineTo(35596,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,158,183,0.85)';
ctx.strokeStyle='rgb(162,161,83)';
ctx.moveTo(35596,19384);
ctx.lineTo(35596,19348);
ctx.lineTo(35632,19348);
ctx.lineTo(35632,19384);
ctx.lineTo(35596,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,208,166,0.85)';
ctx.strokeStyle='rgb(221,92,196)';
ctx.moveTo(35596,19288);
ctx.lineTo(35596,19252);
ctx.lineTo(35632,19252);
ctx.lineTo(35632,19288);
ctx.lineTo(35596,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,47,33,0.85)';
ctx.strokeStyle='rgb(105,114,101)';
ctx.moveTo(35692,19480);
ctx.lineTo(35692,19444);
ctx.lineTo(35728,19444);
ctx.lineTo(35728,19480);
ctx.lineTo(35692,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,166,83,0.85)';
ctx.strokeStyle='rgb(221,108,121)';
ctx.moveTo(35692,19384);
ctx.lineTo(35692,19348);
ctx.lineTo(35728,19348);
ctx.lineTo(35728,19384);
ctx.lineTo(35692,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,53,49,0.85)';
ctx.strokeStyle='rgb(129,43,197)';
ctx.moveTo(35692,19288);
ctx.lineTo(35692,19252);
ctx.lineTo(35728,19252);
ctx.lineTo(35728,19288);
ctx.lineTo(35692,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,12,107,0.85)';
ctx.strokeStyle='rgb(70,211,25)';
ctx.moveTo(35788,19480);
ctx.lineTo(35788,19444);
ctx.lineTo(35824,19444);
ctx.lineTo(35824,19480);
ctx.lineTo(35788,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,195,65,0.85)';
ctx.strokeStyle='rgb(150,159,21)';
ctx.moveTo(35788,19384);
ctx.lineTo(35788,19348);
ctx.lineTo(35824,19348);
ctx.lineTo(35824,19384);
ctx.lineTo(35788,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,201,183,0.85)';
ctx.strokeStyle='rgb(60,160,196)';
ctx.moveTo(35788,19288);
ctx.lineTo(35788,19252);
ctx.lineTo(35824,19252);
ctx.lineTo(35824,19288);
ctx.lineTo(35788,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,237,25,0.85)';
ctx.strokeStyle='rgb(73,35,176)';
ctx.moveTo(35884,19480);
ctx.lineTo(35884,19444);
ctx.lineTo(35920,19444);
ctx.lineTo(35920,19480);
ctx.lineTo(35884,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,215,202,0.85)';
ctx.strokeStyle='rgb(222,22,118)';
ctx.moveTo(35884,19384);
ctx.lineTo(35884,19348);
ctx.lineTo(35920,19348);
ctx.lineTo(35920,19384);
ctx.lineTo(35884,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,100,207,0.85)';
ctx.strokeStyle='rgb(125,0,132)';
ctx.moveTo(35884,19288);
ctx.lineTo(35884,19252);
ctx.lineTo(35920,19252);
ctx.lineTo(35920,19288);
ctx.lineTo(35884,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,64,159,0.85)';
ctx.strokeStyle='rgb(248,78,29)';
ctx.moveTo(35980,19480);
ctx.lineTo(35980,19444);
ctx.lineTo(36016,19444);
ctx.lineTo(36016,19480);
ctx.lineTo(35980,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,49,88,0.85)';
ctx.strokeStyle='rgb(195,125,238)';
ctx.moveTo(35980,19384);
ctx.lineTo(35980,19348);
ctx.lineTo(36016,19348);
ctx.lineTo(36016,19384);
ctx.lineTo(35980,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,247,224,0.85)';
ctx.strokeStyle='rgb(150,38,144)';
ctx.moveTo(35980,19288);
ctx.lineTo(35980,19252);
ctx.lineTo(36016,19252);
ctx.lineTo(36016,19288);
ctx.lineTo(35980,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(9,207,36,0.85)';
ctx.strokeStyle='rgb(24,161,95)';
ctx.moveTo(36076,19480);
ctx.lineTo(36076,19444);
ctx.lineTo(36112,19444);
ctx.lineTo(36112,19480);
ctx.lineTo(36076,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,98,253,0.85)';
ctx.strokeStyle='rgb(139,48,120)';
ctx.moveTo(36076,19384);
ctx.lineTo(36076,19348);
ctx.lineTo(36112,19348);
ctx.lineTo(36112,19384);
ctx.lineTo(36076,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,252,21,0.85)';
ctx.strokeStyle='rgb(124,252,146)';
ctx.moveTo(36076,19288);
ctx.lineTo(36076,19252);
ctx.lineTo(36112,19252);
ctx.lineTo(36112,19288);
ctx.lineTo(36076,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,222,21,0.85)';
ctx.strokeStyle='rgb(206,117,29)';
ctx.moveTo(36172,19480);
ctx.lineTo(36172,19444);
ctx.lineTo(36208,19444);
ctx.lineTo(36208,19480);
ctx.lineTo(36172,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,168,202,0.85)';
ctx.strokeStyle='rgb(24,16,182)';
ctx.moveTo(36172,19384);
ctx.lineTo(36172,19348);
ctx.lineTo(36208,19348);
ctx.lineTo(36208,19384);
ctx.lineTo(36172,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,5,46,0.85)';
ctx.strokeStyle='rgb(61,170,91)';
ctx.moveTo(36172,19288);
ctx.lineTo(36172,19252);
ctx.lineTo(36208,19252);
ctx.lineTo(36208,19288);
ctx.lineTo(36172,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,236,88,0.85)';
ctx.strokeStyle='rgb(186,170,112)';
ctx.moveTo(36268,19480);
ctx.lineTo(36268,19444);
ctx.lineTo(36304,19444);
ctx.lineTo(36304,19480);
ctx.lineTo(36268,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,132,78,0.85)';
ctx.strokeStyle='rgb(120,129,47)';
ctx.moveTo(36268,19384);
ctx.lineTo(36268,19348);
ctx.lineTo(36304,19348);
ctx.lineTo(36304,19384);
ctx.lineTo(36268,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,165,57,0.85)';
ctx.strokeStyle='rgb(245,156,113)';
ctx.moveTo(36268,19288);
ctx.lineTo(36268,19252);
ctx.lineTo(36304,19252);
ctx.lineTo(36304,19288);
ctx.lineTo(36268,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,24,162,0.85)';
ctx.strokeStyle='rgb(179,26,235)';
ctx.moveTo(36364,19480);
ctx.lineTo(36364,19444);
ctx.lineTo(36400,19444);
ctx.lineTo(36400,19480);
ctx.lineTo(36364,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,208,103,0.85)';
ctx.strokeStyle='rgb(251,245,23)';
ctx.moveTo(36364,19384);
ctx.lineTo(36364,19348);
ctx.lineTo(36400,19348);
ctx.lineTo(36400,19384);
ctx.lineTo(36364,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,54,201,0.85)';
ctx.strokeStyle='rgb(160,192,67)';
ctx.moveTo(36364,19288);
ctx.lineTo(36364,19252);
ctx.lineTo(36400,19252);
ctx.lineTo(36400,19288);
ctx.lineTo(36364,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,136,201,0.85)';
ctx.strokeStyle='rgb(249,252,188)';
ctx.moveTo(36460,19480);
ctx.lineTo(36460,19444);
ctx.lineTo(36496,19444);
ctx.lineTo(36496,19480);
ctx.lineTo(36460,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,198,11,0.85)';
ctx.strokeStyle='rgb(184,65,13)';
ctx.moveTo(36460,19384);
ctx.lineTo(36460,19348);
ctx.lineTo(36496,19348);
ctx.lineTo(36496,19384);
ctx.lineTo(36460,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,244,169,0.85)';
ctx.strokeStyle='rgb(87,22,248)';
ctx.moveTo(36460,19288);
ctx.lineTo(36460,19252);
ctx.lineTo(36496,19252);
ctx.lineTo(36496,19288);
ctx.lineTo(36460,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,120,224,0.85)';
ctx.strokeStyle='rgb(60,7,202)';
ctx.moveTo(34204,20992);
ctx.lineTo(34204,20956);
ctx.lineTo(34240,20956);
ctx.lineTo(34240,20992);
ctx.lineTo(34204,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,172,126,0.85)';
ctx.strokeStyle='rgb(201,54,101)';
ctx.moveTo(34204,20896);
ctx.lineTo(34204,20860);
ctx.lineTo(34240,20860);
ctx.lineTo(34240,20896);
ctx.lineTo(34204,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,141,91,0.85)';
ctx.strokeStyle='rgb(127,200,209)';
ctx.moveTo(34204,20800);
ctx.lineTo(34204,20764);
ctx.lineTo(34240,20764);
ctx.lineTo(34240,20800);
ctx.lineTo(34204,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,251,254,0.85)';
ctx.strokeStyle='rgb(210,120,93)';
ctx.moveTo(34300,20992);
ctx.lineTo(34300,20956);
ctx.lineTo(34336,20956);
ctx.lineTo(34336,20992);
ctx.lineTo(34300,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,106,85,0.85)';
ctx.strokeStyle='rgb(177,159,89)';
ctx.moveTo(34300,20896);
ctx.lineTo(34300,20860);
ctx.lineTo(34336,20860);
ctx.lineTo(34336,20896);
ctx.lineTo(34300,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,40,99,0.85)';
ctx.strokeStyle='rgb(137,198,36)';
ctx.moveTo(34300,20800);
ctx.lineTo(34300,20764);
ctx.lineTo(34336,20764);
ctx.lineTo(34336,20800);
ctx.lineTo(34300,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,237,212,0.85)';
ctx.strokeStyle='rgb(126,76,132)';
ctx.moveTo(34396,20992);
ctx.lineTo(34396,20956);
ctx.lineTo(34432,20956);
ctx.lineTo(34432,20992);
ctx.lineTo(34396,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,100,111,0.85)';
ctx.strokeStyle='rgb(110,178,54)';
ctx.moveTo(34396,20896);
ctx.lineTo(34396,20860);
ctx.lineTo(34432,20860);
ctx.lineTo(34432,20896);
ctx.lineTo(34396,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,55,245,0.85)';
ctx.strokeStyle='rgb(28,150,144)';
ctx.moveTo(34396,20800);
ctx.lineTo(34396,20764);
ctx.lineTo(34432,20764);
ctx.lineTo(34432,20800);
ctx.lineTo(34396,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,46,194,0.85)';
ctx.strokeStyle='rgb(138,236,84)';
ctx.moveTo(34492,20992);
ctx.lineTo(34492,20956);
ctx.lineTo(34528,20956);
ctx.lineTo(34528,20992);
ctx.lineTo(34492,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,148,58,0.85)';
ctx.strokeStyle='rgb(82,218,38)';
ctx.moveTo(34492,20896);
ctx.lineTo(34492,20860);
ctx.lineTo(34528,20860);
ctx.lineTo(34528,20896);
ctx.lineTo(34492,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,125,37,0.85)';
ctx.strokeStyle='rgb(44,134,191)';
ctx.moveTo(34492,20800);
ctx.lineTo(34492,20764);
ctx.lineTo(34528,20764);
ctx.lineTo(34528,20800);
ctx.lineTo(34492,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,169,122,0.85)';
ctx.strokeStyle='rgb(23,234,130)';
ctx.moveTo(34588,20992);
ctx.lineTo(34588,20956);
ctx.lineTo(34624,20956);
ctx.lineTo(34624,20992);
ctx.lineTo(34588,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,162,166,0.85)';
ctx.strokeStyle='rgb(34,102,68)';
ctx.moveTo(34588,20896);
ctx.lineTo(34588,20860);
ctx.lineTo(34624,20860);
ctx.lineTo(34624,20896);
ctx.lineTo(34588,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,183,4,0.85)';
ctx.strokeStyle='rgb(76,194,188)';
ctx.moveTo(34588,20800);
ctx.lineTo(34588,20764);
ctx.lineTo(34624,20764);
ctx.lineTo(34624,20800);
ctx.lineTo(34588,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,90,72,0.85)';
ctx.strokeStyle='rgb(247,77,6)';
ctx.moveTo(34684,20992);
ctx.lineTo(34684,20956);
ctx.lineTo(34720,20956);
ctx.lineTo(34720,20992);
ctx.lineTo(34684,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,242,238,0.85)';
ctx.strokeStyle='rgb(162,224,95)';
ctx.moveTo(34684,20896);
ctx.lineTo(34684,20860);
ctx.lineTo(34720,20860);
ctx.lineTo(34720,20896);
ctx.lineTo(34684,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,102,77,0.85)';
ctx.strokeStyle='rgb(107,146,28)';
ctx.moveTo(34684,20800);
ctx.lineTo(34684,20764);
ctx.lineTo(34720,20764);
ctx.lineTo(34720,20800);
ctx.lineTo(34684,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,162,54,0.85)';
ctx.strokeStyle='rgb(27,77,192)';
ctx.moveTo(34780,20992);
ctx.lineTo(34780,20956);
ctx.lineTo(34816,20956);
ctx.lineTo(34816,20992);
ctx.lineTo(34780,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,209,189,0.85)';
ctx.strokeStyle='rgb(56,242,206)';
ctx.moveTo(34780,20896);
ctx.lineTo(34780,20860);
ctx.lineTo(34816,20860);
ctx.lineTo(34816,20896);
ctx.lineTo(34780,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,238,85,0.85)';
ctx.strokeStyle='rgb(102,209,117)';
ctx.moveTo(34780,20800);
ctx.lineTo(34780,20764);
ctx.lineTo(34816,20764);
ctx.lineTo(34816,20800);
ctx.lineTo(34780,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,162,142,0.85)';
ctx.strokeStyle='rgb(86,120,27)';
ctx.moveTo(34876,20992);
ctx.lineTo(34876,20956);
ctx.lineTo(34912,20956);
ctx.lineTo(34912,20992);
ctx.lineTo(34876,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,247,37,0.85)';
ctx.strokeStyle='rgb(78,93,131)';
ctx.moveTo(34876,23920);
ctx.lineTo(34876,23884);
ctx.lineTo(34912,23884);
ctx.lineTo(34912,23920);
ctx.lineTo(34876,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,5,139,0.85)';
ctx.strokeStyle='rgb(250,38,122)';
ctx.moveTo(34876,23824);
ctx.lineTo(34876,23788);
ctx.lineTo(34912,23788);
ctx.lineTo(34912,23824);
ctx.lineTo(34876,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,99,246,0.85)';
ctx.strokeStyle='rgb(14,103,158)';
ctx.moveTo(34972,24016);
ctx.lineTo(34972,23980);
ctx.lineTo(35008,23980);
ctx.lineTo(35008,24016);
ctx.lineTo(34972,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,23,58,0.85)';
ctx.strokeStyle='rgb(112,71,106)';
ctx.moveTo(34972,23920);
ctx.lineTo(34972,23884);
ctx.lineTo(35008,23884);
ctx.lineTo(35008,23920);
ctx.lineTo(34972,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,180,11,0.85)';
ctx.strokeStyle='rgb(123,102,78)';
ctx.moveTo(34972,23824);
ctx.lineTo(34972,23788);
ctx.lineTo(35008,23788);
ctx.lineTo(35008,23824);
ctx.lineTo(34972,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,223,177,0.85)';
ctx.strokeStyle='rgb(245,54,206)';
ctx.moveTo(35068,24016);
ctx.lineTo(35068,23980);
ctx.lineTo(35104,23980);
ctx.lineTo(35104,24016);
ctx.lineTo(35068,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,47,213,0.85)';
ctx.strokeStyle='rgb(209,26,139)';
ctx.moveTo(35068,23920);
ctx.lineTo(35068,23884);
ctx.lineTo(35104,23884);
ctx.lineTo(35104,23920);
ctx.lineTo(35068,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,240,109,0.85)';
ctx.strokeStyle='rgb(78,15,235)';
ctx.moveTo(35068,23824);
ctx.lineTo(35068,23788);
ctx.lineTo(35104,23788);
ctx.lineTo(35104,23824);
ctx.lineTo(35068,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,244,86,0.85)';
ctx.strokeStyle='rgb(103,116,155)';
ctx.moveTo(35164,24016);
ctx.lineTo(35164,23980);
ctx.lineTo(35200,23980);
ctx.lineTo(35200,24016);
ctx.lineTo(35164,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,103,41,0.85)';
ctx.strokeStyle='rgb(253,210,247)';
ctx.moveTo(35164,23920);
ctx.lineTo(35164,23884);
ctx.lineTo(35200,23884);
ctx.lineTo(35200,23920);
ctx.lineTo(35164,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,15,75,0.85)';
ctx.strokeStyle='rgb(226,99,18)';
ctx.moveTo(35164,23824);
ctx.lineTo(35164,23788);
ctx.lineTo(35200,23788);
ctx.lineTo(35200,23824);
ctx.lineTo(35164,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,131,152,0.85)';
ctx.strokeStyle='rgb(47,58,26)';
ctx.moveTo(34204,24016);
ctx.lineTo(34204,23980);
ctx.lineTo(34240,23980);
ctx.lineTo(34240,24016);
ctx.lineTo(34204,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,164,196,0.85)';
ctx.strokeStyle='rgb(247,150,7)';
ctx.moveTo(35500,25432);
ctx.lineTo(35500,25396);
ctx.lineTo(35536,25396);
ctx.lineTo(35536,25432);
ctx.lineTo(35500,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,244,13,0.85)';
ctx.strokeStyle='rgb(214,254,173)';
ctx.moveTo(35500,25336);
ctx.lineTo(35500,25300);
ctx.lineTo(35536,25300);
ctx.lineTo(35536,25336);
ctx.lineTo(35500,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,191,13,0.85)';
ctx.strokeStyle='rgb(86,219,221)';
ctx.moveTo(34204,23920);
ctx.lineTo(34204,23884);
ctx.lineTo(34240,23884);
ctx.lineTo(34240,23920);
ctx.lineTo(34204,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,161,191,0.85)';
ctx.strokeStyle='rgb(98,8,230)';
ctx.moveTo(35596,25432);
ctx.lineTo(35596,25396);
ctx.lineTo(35632,25396);
ctx.lineTo(35632,25432);
ctx.lineTo(35596,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,60,216,0.85)';
ctx.strokeStyle='rgb(86,63,142)';
ctx.moveTo(35596,25336);
ctx.lineTo(35596,25300);
ctx.lineTo(35632,25300);
ctx.lineTo(35632,25336);
ctx.lineTo(35596,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,113,209,0.85)';
ctx.strokeStyle='rgb(0,116,79)';
ctx.moveTo(34204,23824);
ctx.lineTo(34204,23788);
ctx.lineTo(34240,23788);
ctx.lineTo(34240,23824);
ctx.lineTo(34204,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,123,113,0.85)';
ctx.strokeStyle='rgb(24,103,214)';
ctx.moveTo(35692,25432);
ctx.lineTo(35692,25396);
ctx.lineTo(35728,25396);
ctx.lineTo(35728,25432);
ctx.lineTo(35692,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,111,12,0.85)';
ctx.strokeStyle='rgb(230,15,16)';
ctx.moveTo(35692,25336);
ctx.lineTo(35692,25300);
ctx.lineTo(35728,25300);
ctx.lineTo(35728,25336);
ctx.lineTo(35692,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,47,180,0.85)';
ctx.strokeStyle='rgb(121,36,252)';
ctx.moveTo(34300,24016);
ctx.lineTo(34300,23980);
ctx.lineTo(34336,23980);
ctx.lineTo(34336,24016);
ctx.lineTo(34300,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,60,245,0.85)';
ctx.strokeStyle='rgb(93,103,148)';
ctx.moveTo(35788,25432);
ctx.lineTo(35788,25396);
ctx.lineTo(35824,25396);
ctx.lineTo(35824,25432);
ctx.lineTo(35788,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,111,159,0.85)';
ctx.strokeStyle='rgb(195,142,22)';
ctx.moveTo(35788,25336);
ctx.lineTo(35788,25300);
ctx.lineTo(35824,25300);
ctx.lineTo(35824,25336);
ctx.lineTo(35788,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,230,71,0.85)';
ctx.strokeStyle='rgb(106,245,110)';
ctx.moveTo(34300,23920);
ctx.lineTo(34300,23884);
ctx.lineTo(34336,23884);
ctx.lineTo(34336,23920);
ctx.lineTo(34300,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,174,13,0.85)';
ctx.strokeStyle='rgb(23,128,10)';
ctx.moveTo(35884,25432);
ctx.lineTo(35884,25396);
ctx.lineTo(35920,25396);
ctx.lineTo(35920,25432);
ctx.lineTo(35884,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,81,11,0.85)';
ctx.strokeStyle='rgb(7,66,106)';
ctx.moveTo(35884,25336);
ctx.lineTo(35884,25300);
ctx.lineTo(35920,25300);
ctx.lineTo(35920,25336);
ctx.lineTo(35884,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,99,135,0.85)';
ctx.strokeStyle='rgb(49,38,188)';
ctx.moveTo(34300,23824);
ctx.lineTo(34300,23788);
ctx.lineTo(34336,23788);
ctx.lineTo(34336,23824);
ctx.lineTo(34300,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,36,159,0.85)';
ctx.strokeStyle='rgb(87,81,30)';
ctx.moveTo(35980,25432);
ctx.lineTo(35980,25396);
ctx.lineTo(36016,25396);
ctx.lineTo(36016,25432);
ctx.lineTo(35980,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,51,230,0.85)';
ctx.strokeStyle='rgb(235,166,44)';
ctx.moveTo(35980,25336);
ctx.lineTo(35980,25300);
ctx.lineTo(36016,25300);
ctx.lineTo(36016,25336);
ctx.lineTo(35980,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,153,133,0.85)';
ctx.strokeStyle='rgb(72,177,107)';
ctx.moveTo(34396,24016);
ctx.lineTo(34396,23980);
ctx.lineTo(34432,23980);
ctx.lineTo(34432,24016);
ctx.lineTo(34396,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,133,200,0.85)';
ctx.strokeStyle='rgb(77,93,148)';
ctx.moveTo(36076,25432);
ctx.lineTo(36076,25396);
ctx.lineTo(36112,25396);
ctx.lineTo(36112,25432);
ctx.lineTo(36076,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,222,235,0.85)';
ctx.strokeStyle='rgb(198,74,123)';
ctx.moveTo(36076,25336);
ctx.lineTo(36076,25300);
ctx.lineTo(36112,25300);
ctx.lineTo(36112,25336);
ctx.lineTo(36076,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,39,158,0.85)';
ctx.strokeStyle='rgb(143,47,78)';
ctx.moveTo(34396,23920);
ctx.lineTo(34396,23884);
ctx.lineTo(34432,23884);
ctx.lineTo(34432,23920);
ctx.lineTo(34396,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,229,167,0.85)';
ctx.strokeStyle='rgb(67,175,248)';
ctx.moveTo(36172,25432);
ctx.lineTo(36172,25396);
ctx.lineTo(36208,25396);
ctx.lineTo(36208,25432);
ctx.lineTo(36172,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,104,196,0.85)';
ctx.strokeStyle='rgb(226,125,249)';
ctx.moveTo(36172,25336);
ctx.lineTo(36172,25300);
ctx.lineTo(36208,25300);
ctx.lineTo(36208,25336);
ctx.lineTo(36172,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,84,13,0.85)';
ctx.strokeStyle='rgb(86,84,141)';
ctx.moveTo(34396,23824);
ctx.lineTo(34396,23788);
ctx.lineTo(34432,23788);
ctx.lineTo(34432,23824);
ctx.lineTo(34396,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,196,26,0.85)';
ctx.strokeStyle='rgb(229,30,106)';
ctx.moveTo(36268,25432);
ctx.lineTo(36268,25396);
ctx.lineTo(36304,25396);
ctx.lineTo(36304,25432);
ctx.lineTo(36268,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,113,213,0.85)';
ctx.strokeStyle='rgb(86,101,46)';
ctx.moveTo(36268,25336);
ctx.lineTo(36268,25300);
ctx.lineTo(36304,25300);
ctx.lineTo(36304,25336);
ctx.lineTo(36268,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,234,122,0.85)';
ctx.strokeStyle='rgb(29,61,150)';
ctx.moveTo(34492,24016);
ctx.lineTo(34492,23980);
ctx.lineTo(34528,23980);
ctx.lineTo(34528,24016);
ctx.lineTo(34492,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,99,223,0.85)';
ctx.strokeStyle='rgb(237,1,170)';
ctx.moveTo(36364,25432);
ctx.lineTo(36364,25396);
ctx.lineTo(36400,25396);
ctx.lineTo(36400,25432);
ctx.lineTo(36364,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,93,25,0.85)';
ctx.strokeStyle='rgb(49,18,234)';
ctx.moveTo(36364,25336);
ctx.lineTo(36364,25300);
ctx.lineTo(36400,25300);
ctx.lineTo(36400,25336);
ctx.lineTo(36364,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,241,4,0.85)';
ctx.strokeStyle='rgb(206,153,21)';
ctx.moveTo(34492,23920);
ctx.lineTo(34492,23884);
ctx.lineTo(34528,23884);
ctx.lineTo(34528,23920);
ctx.lineTo(34492,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,63,250,0.85)';
ctx.strokeStyle='rgb(123,87,142)';
ctx.moveTo(36460,25432);
ctx.lineTo(36460,25396);
ctx.lineTo(36496,25396);
ctx.lineTo(36496,25432);
ctx.lineTo(36460,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,103,221,0.85)';
ctx.strokeStyle='rgb(54,169,82)';
ctx.moveTo(36460,25336);
ctx.lineTo(36460,25300);
ctx.lineTo(36496,25300);
ctx.lineTo(36496,25336);
ctx.lineTo(36460,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,173,164,0.85)';
ctx.strokeStyle='rgb(184,179,29)';
ctx.moveTo(35500,22504);
ctx.lineTo(35500,22468);
ctx.lineTo(35536,22468);
ctx.lineTo(35536,22504);
ctx.lineTo(35500,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,33,177,0.85)';
ctx.strokeStyle='rgb(8,82,243)';
ctx.moveTo(35500,22408);
ctx.lineTo(35500,22372);
ctx.lineTo(35536,22372);
ctx.lineTo(35536,22408);
ctx.lineTo(35500,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,93,56,0.85)';
ctx.strokeStyle='rgb(170,37,171)';
ctx.moveTo(35500,22312);
ctx.lineTo(35500,22276);
ctx.lineTo(35536,22276);
ctx.lineTo(35536,22312);
ctx.lineTo(35500,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,60,206,0.85)';
ctx.strokeStyle='rgb(209,118,167)';
ctx.moveTo(35596,22504);
ctx.lineTo(35596,22468);
ctx.lineTo(35632,22468);
ctx.lineTo(35632,22504);
ctx.lineTo(35596,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,85,165,0.85)';
ctx.strokeStyle='rgb(230,112,132)';
ctx.moveTo(35596,22408);
ctx.lineTo(35596,22372);
ctx.lineTo(35632,22372);
ctx.lineTo(35632,22408);
ctx.lineTo(35596,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,31,205,0.85)';
ctx.strokeStyle='rgb(225,118,94)';
ctx.moveTo(35596,22312);
ctx.lineTo(35596,22276);
ctx.lineTo(35632,22276);
ctx.lineTo(35632,22312);
ctx.lineTo(35596,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,187,49,0.85)';
ctx.strokeStyle='rgb(158,177,151)';
ctx.moveTo(35692,22504);
ctx.lineTo(35692,22468);
ctx.lineTo(35728,22468);
ctx.lineTo(35728,22504);
ctx.lineTo(35692,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,80,233,0.85)';
ctx.strokeStyle='rgb(197,55,93)';
ctx.moveTo(35692,22408);
ctx.lineTo(35692,22372);
ctx.lineTo(35728,22372);
ctx.lineTo(35728,22408);
ctx.lineTo(35692,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,100,93,0.85)';
ctx.strokeStyle='rgb(123,242,244)';
ctx.moveTo(35692,22312);
ctx.lineTo(35692,22276);
ctx.lineTo(35728,22276);
ctx.lineTo(35728,22312);
ctx.lineTo(35692,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,46,212,0.85)';
ctx.strokeStyle='rgb(88,156,76)';
ctx.moveTo(35788,22504);
ctx.lineTo(35788,22468);
ctx.lineTo(35824,22468);
ctx.lineTo(35824,22504);
ctx.lineTo(35788,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,208,39,0.85)';
ctx.strokeStyle='rgb(131,32,166)';
ctx.moveTo(35788,22408);
ctx.lineTo(35788,22372);
ctx.lineTo(35824,22372);
ctx.lineTo(35824,22408);
ctx.lineTo(35788,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,35,36,0.85)';
ctx.strokeStyle='rgb(88,72,9)';
ctx.moveTo(35788,22312);
ctx.lineTo(35788,22276);
ctx.lineTo(35824,22276);
ctx.lineTo(35824,22312);
ctx.lineTo(35788,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,215,58,0.85)';
ctx.strokeStyle='rgb(11,7,209)';
ctx.moveTo(35884,22504);
ctx.lineTo(35884,22468);
ctx.lineTo(35920,22468);
ctx.lineTo(35920,22504);
ctx.lineTo(35884,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,245,37,0.85)';
ctx.strokeStyle='rgb(169,55,40)';
ctx.moveTo(35884,22408);
ctx.lineTo(35884,22372);
ctx.lineTo(35920,22372);
ctx.lineTo(35920,22408);
ctx.lineTo(35884,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,140,225,0.85)';
ctx.strokeStyle='rgb(231,54,211)';
ctx.moveTo(35884,22312);
ctx.lineTo(35884,22276);
ctx.lineTo(35920,22276);
ctx.lineTo(35920,22312);
ctx.lineTo(35884,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,44,128,0.85)';
ctx.strokeStyle='rgb(101,27,129)';
ctx.moveTo(35980,22504);
ctx.lineTo(35980,22468);
ctx.lineTo(36016,22468);
ctx.lineTo(36016,22504);
ctx.lineTo(35980,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,116,4,0.85)';
ctx.strokeStyle='rgb(65,145,77)';
ctx.moveTo(35980,22408);
ctx.lineTo(35980,22372);
ctx.lineTo(36016,22372);
ctx.lineTo(36016,22408);
ctx.lineTo(35980,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,2,165,0.85)';
ctx.strokeStyle='rgb(44,206,59)';
ctx.moveTo(35980,22312);
ctx.lineTo(35980,22276);
ctx.lineTo(36016,22276);
ctx.lineTo(36016,22312);
ctx.lineTo(35980,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,145,174,0.85)';
ctx.strokeStyle='rgb(11,190,243)';
ctx.moveTo(36076,22504);
ctx.lineTo(36076,22468);
ctx.lineTo(36112,22468);
ctx.lineTo(36112,22504);
ctx.lineTo(36076,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,180,143,0.85)';
ctx.strokeStyle='rgb(13,177,135)';
ctx.moveTo(36076,22408);
ctx.lineTo(36076,22372);
ctx.lineTo(36112,22372);
ctx.lineTo(36112,22408);
ctx.lineTo(36076,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,27,103,0.85)';
ctx.strokeStyle='rgb(216,243,244)';
ctx.moveTo(36076,22312);
ctx.lineTo(36076,22276);
ctx.lineTo(36112,22276);
ctx.lineTo(36112,22312);
ctx.lineTo(36076,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,18,200,0.85)';
ctx.strokeStyle='rgb(157,198,185)';
ctx.moveTo(36172,22504);
ctx.lineTo(36172,22468);
ctx.lineTo(36208,22468);
ctx.lineTo(36208,22504);
ctx.lineTo(36172,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,212,138,0.85)';
ctx.strokeStyle='rgb(104,208,253)';
ctx.moveTo(36172,22408);
ctx.lineTo(36172,22372);
ctx.lineTo(36208,22372);
ctx.lineTo(36208,22408);
ctx.lineTo(36172,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,185,84,0.85)';
ctx.strokeStyle='rgb(250,199,113)';
ctx.moveTo(36172,22312);
ctx.lineTo(36172,22276);
ctx.lineTo(36208,22276);
ctx.lineTo(36208,22312);
ctx.lineTo(36172,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,142,129,0.85)';
ctx.strokeStyle='rgb(115,213,5)';
ctx.moveTo(36268,22504);
ctx.lineTo(36268,22468);
ctx.lineTo(36304,22468);
ctx.lineTo(36304,22504);
ctx.lineTo(36268,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,6,25,0.85)';
ctx.strokeStyle='rgb(100,134,235)';
ctx.moveTo(36268,22408);
ctx.lineTo(36268,22372);
ctx.lineTo(36304,22372);
ctx.lineTo(36304,22408);
ctx.lineTo(36268,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,59,166,0.85)';
ctx.strokeStyle='rgb(163,142,143)';
ctx.moveTo(36268,22312);
ctx.lineTo(36268,22276);
ctx.lineTo(36304,22276);
ctx.lineTo(36304,22312);
ctx.lineTo(36268,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,11,119,0.85)';
ctx.strokeStyle='rgb(114,45,71)';
ctx.moveTo(36364,22504);
ctx.lineTo(36364,22468);
ctx.lineTo(36400,22468);
ctx.lineTo(36400,22504);
ctx.lineTo(36364,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,74,94,0.85)';
ctx.strokeStyle='rgb(50,115,252)';
ctx.moveTo(36364,22408);
ctx.lineTo(36364,22372);
ctx.lineTo(36400,22372);
ctx.lineTo(36400,22408);
ctx.lineTo(36364,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,10,190,0.85)';
ctx.strokeStyle='rgb(63,141,150)';
ctx.moveTo(36364,22312);
ctx.lineTo(36364,22276);
ctx.lineTo(36400,22276);
ctx.lineTo(36400,22312);
ctx.lineTo(36364,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,0,254,0.85)';
ctx.strokeStyle='rgb(243,178,226)';
ctx.moveTo(36460,22504);
ctx.lineTo(36460,22468);
ctx.lineTo(36496,22468);
ctx.lineTo(36496,22504);
ctx.lineTo(36460,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,159,117,0.85)';
ctx.strokeStyle='rgb(107,96,126)';
ctx.moveTo(36460,22408);
ctx.lineTo(36460,22372);
ctx.lineTo(36496,22372);
ctx.lineTo(36496,22408);
ctx.lineTo(36460,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,135,126,0.85)';
ctx.strokeStyle='rgb(151,126,204)';
ctx.moveTo(36460,22312);
ctx.lineTo(36460,22276);
ctx.lineTo(36496,22276);
ctx.lineTo(36496,22312);
ctx.lineTo(36460,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,55,215,0.85)';
ctx.strokeStyle='rgb(62,73,136)';
ctx.moveTo(34492,23824);
ctx.lineTo(34492,23788);
ctx.lineTo(34528,23788);
ctx.lineTo(34528,23824);
ctx.lineTo(34492,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,240,179,0.85)';
ctx.strokeStyle='rgb(215,114,128)';
ctx.moveTo(34588,24016);
ctx.lineTo(34588,23980);
ctx.lineTo(34624,23980);
ctx.lineTo(34624,24016);
ctx.lineTo(34588,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,186,43,0.85)';
ctx.strokeStyle='rgb(89,55,94)';
ctx.moveTo(34588,23920);
ctx.lineTo(34588,23884);
ctx.lineTo(34624,23884);
ctx.lineTo(34624,23920);
ctx.lineTo(34588,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,114,232,0.85)';
ctx.strokeStyle='rgb(133,195,75)';
ctx.moveTo(34588,23824);
ctx.lineTo(34588,23788);
ctx.lineTo(34624,23788);
ctx.lineTo(34624,23824);
ctx.lineTo(34588,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,24,74,0.85)';
ctx.strokeStyle='rgb(87,163,65)';
ctx.moveTo(34684,24016);
ctx.lineTo(34684,23980);
ctx.lineTo(34720,23980);
ctx.lineTo(34720,24016);
ctx.lineTo(34684,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,171,230,0.85)';
ctx.strokeStyle='rgb(219,144,192)';
ctx.moveTo(34684,23920);
ctx.lineTo(34684,23884);
ctx.lineTo(34720,23884);
ctx.lineTo(34720,23920);
ctx.lineTo(34684,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(205,17,189,0.85)';
ctx.strokeStyle='rgb(1,55,124)';
ctx.moveTo(34684,23824);
ctx.lineTo(34684,23788);
ctx.lineTo(34720,23788);
ctx.lineTo(34720,23824);
ctx.lineTo(34684,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,87,45,0.85)';
ctx.strokeStyle='rgb(131,53,72)';
ctx.moveTo(34780,24016);
ctx.lineTo(34780,23980);
ctx.lineTo(34816,23980);
ctx.lineTo(34816,24016);
ctx.lineTo(34780,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,111,69,0.85)';
ctx.strokeStyle='rgb(104,201,49)';
ctx.moveTo(34780,23920);
ctx.lineTo(34780,23884);
ctx.lineTo(34816,23884);
ctx.lineTo(34816,23920);
ctx.lineTo(34780,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,190,136,0.85)';
ctx.strokeStyle='rgb(64,142,156)';
ctx.moveTo(34780,23824);
ctx.lineTo(34780,23788);
ctx.lineTo(34816,23788);
ctx.lineTo(34816,23824);
ctx.lineTo(34780,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,120,237,0.85)';
ctx.strokeStyle='rgb(248,114,91)';
ctx.moveTo(34876,24016);
ctx.lineTo(34876,23980);
ctx.lineTo(34912,23980);
ctx.lineTo(34912,24016);
ctx.lineTo(34876,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,108,175,0.85)';
ctx.strokeStyle='rgb(37,1,183)';
ctx.moveTo(25768,19288);
ctx.lineTo(25768,19252);
ctx.lineTo(25804,19252);
ctx.lineTo(25804,19288);
ctx.lineTo(25768,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,24,10,0.85)';
ctx.strokeStyle='rgb(63,114,85)';
ctx.moveTo(25864,19480);
ctx.lineTo(25864,19444);
ctx.lineTo(25900,19444);
ctx.lineTo(25900,19480);
ctx.lineTo(25864,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,69,36,0.85)';
ctx.strokeStyle='rgb(112,246,162)';
ctx.moveTo(25864,19384);
ctx.lineTo(25864,19348);
ctx.lineTo(25900,19348);
ctx.lineTo(25900,19384);
ctx.lineTo(25864,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,62,95,0.85)';
ctx.strokeStyle='rgb(130,145,219)';
ctx.moveTo(25864,19288);
ctx.lineTo(25864,19252);
ctx.lineTo(25900,19252);
ctx.lineTo(25900,19288);
ctx.lineTo(25864,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,44,124,0.85)';
ctx.strokeStyle='rgb(200,118,111)';
ctx.moveTo(25960,19480);
ctx.lineTo(25960,19444);
ctx.lineTo(25996,19444);
ctx.lineTo(25996,19480);
ctx.lineTo(25960,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,10,5,0.85)';
ctx.strokeStyle='rgb(207,38,59)';
ctx.moveTo(25960,19384);
ctx.lineTo(25960,19348);
ctx.lineTo(25996,19348);
ctx.lineTo(25996,19384);
ctx.lineTo(25960,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,98,99,0.85)';
ctx.strokeStyle='rgb(137,236,104)';
ctx.moveTo(25960,19288);
ctx.lineTo(25960,19252);
ctx.lineTo(25996,19252);
ctx.lineTo(25996,19288);
ctx.lineTo(25960,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,79,216,0.85)';
ctx.strokeStyle='rgb(154,182,147)';
ctx.moveTo(26056,19480);
ctx.lineTo(26056,19444);
ctx.lineTo(26092,19444);
ctx.lineTo(26092,19480);
ctx.lineTo(26056,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,171,132,0.85)';
ctx.strokeStyle='rgb(172,135,131)';
ctx.moveTo(26056,19384);
ctx.lineTo(26056,19348);
ctx.lineTo(26092,19348);
ctx.lineTo(26092,19384);
ctx.lineTo(26056,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,48,153,0.85)';
ctx.strokeStyle='rgb(117,154,26)';
ctx.moveTo(26056,19288);
ctx.lineTo(26056,19252);
ctx.lineTo(26092,19252);
ctx.lineTo(26092,19288);
ctx.lineTo(26056,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,61,37,0.85)';
ctx.strokeStyle='rgb(130,152,63)';
ctx.moveTo(26152,19480);
ctx.lineTo(26152,19444);
ctx.lineTo(26188,19444);
ctx.lineTo(26188,19480);
ctx.lineTo(26152,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,142,141,0.85)';
ctx.strokeStyle='rgb(41,39,5)';
ctx.moveTo(26152,19384);
ctx.lineTo(26152,19348);
ctx.lineTo(26188,19348);
ctx.lineTo(26188,19384);
ctx.lineTo(26152,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,139,152,0.85)';
ctx.strokeStyle='rgb(119,100,159)';
ctx.moveTo(26152,19288);
ctx.lineTo(26152,19252);
ctx.lineTo(26188,19252);
ctx.lineTo(26188,19288);
ctx.lineTo(26152,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,144,163,0.85)';
ctx.strokeStyle='rgb(188,178,86)';
ctx.moveTo(26248,19480);
ctx.lineTo(26248,19444);
ctx.lineTo(26284,19444);
ctx.lineTo(26284,19480);
ctx.lineTo(26248,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,56,58,0.85)';
ctx.strokeStyle='rgb(129,10,112)';
ctx.moveTo(26248,19384);
ctx.lineTo(26248,19348);
ctx.lineTo(26284,19348);
ctx.lineTo(26284,19384);
ctx.lineTo(26248,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,102,154,0.85)';
ctx.strokeStyle='rgb(239,8,136)';
ctx.moveTo(26248,19288);
ctx.lineTo(26248,19252);
ctx.lineTo(26284,19252);
ctx.lineTo(26284,19288);
ctx.lineTo(26248,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,13,21,0.85)';
ctx.strokeStyle='rgb(91,6,33)';
ctx.moveTo(26344,19480);
ctx.lineTo(26344,19444);
ctx.lineTo(26380,19444);
ctx.lineTo(26380,19480);
ctx.lineTo(26344,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,122,81,0.85)';
ctx.strokeStyle='rgb(231,33,93)';
ctx.moveTo(26344,19384);
ctx.lineTo(26344,19348);
ctx.lineTo(26380,19348);
ctx.lineTo(26380,19384);
ctx.lineTo(26344,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,154,185,0.85)';
ctx.strokeStyle='rgb(186,192,30)';
ctx.moveTo(26344,19288);
ctx.lineTo(26344,19252);
ctx.lineTo(26380,19252);
ctx.lineTo(26380,19288);
ctx.lineTo(26344,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,162,241,0.85)';
ctx.strokeStyle='rgb(2,67,226)';
ctx.moveTo(26440,19480);
ctx.lineTo(26440,19444);
ctx.lineTo(26476,19444);
ctx.lineTo(26476,19480);
ctx.lineTo(26440,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,128,181,0.85)';
ctx.strokeStyle='rgb(55,84,148)';
ctx.moveTo(26440,19384);
ctx.lineTo(26440,19348);
ctx.lineTo(26476,19348);
ctx.lineTo(26476,19384);
ctx.lineTo(26440,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,56,49,0.85)';
ctx.strokeStyle='rgb(214,136,155)';
ctx.moveTo(26440,19288);
ctx.lineTo(26440,19252);
ctx.lineTo(26476,19252);
ctx.lineTo(26476,19288);
ctx.lineTo(26440,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,85,136,0.85)';
ctx.strokeStyle='rgb(33,103,42)';
ctx.moveTo(24184,17968);
ctx.lineTo(24184,17932);
ctx.lineTo(24220,17932);
ctx.lineTo(24220,17968);
ctx.lineTo(24184,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,90,200,0.85)';
ctx.strokeStyle='rgb(216,69,181)';
ctx.moveTo(24184,17872);
ctx.lineTo(24184,17836);
ctx.lineTo(24220,17836);
ctx.lineTo(24220,17872);
ctx.lineTo(24184,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,117,98,0.85)';
ctx.strokeStyle='rgb(36,253,250)';
ctx.moveTo(24184,17776);
ctx.lineTo(24184,17740);
ctx.lineTo(24220,17740);
ctx.lineTo(24220,17776);
ctx.lineTo(24184,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,59,113,0.85)';
ctx.strokeStyle='rgb(43,57,180)';
ctx.moveTo(24280,17968);
ctx.lineTo(24280,17932);
ctx.lineTo(24316,17932);
ctx.lineTo(24316,17968);
ctx.lineTo(24280,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,127,12,0.85)';
ctx.strokeStyle='rgb(18,43,131)';
ctx.moveTo(24280,17872);
ctx.lineTo(24280,17836);
ctx.lineTo(24316,17836);
ctx.lineTo(24316,17872);
ctx.lineTo(24280,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(143,72,81,0.85)';
ctx.strokeStyle='rgb(115,92,118)';
ctx.moveTo(24280,17776);
ctx.lineTo(24280,17740);
ctx.lineTo(24316,17740);
ctx.lineTo(24316,17776);
ctx.lineTo(24280,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,164,149,0.85)';
ctx.strokeStyle='rgb(75,188,74)';
ctx.moveTo(24376,17968);
ctx.lineTo(24376,17932);
ctx.lineTo(24412,17932);
ctx.lineTo(24412,17968);
ctx.lineTo(24376,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,8,185,0.85)';
ctx.strokeStyle='rgb(218,105,211)';
ctx.moveTo(24376,17872);
ctx.lineTo(24376,17836);
ctx.lineTo(24412,17836);
ctx.lineTo(24412,17872);
ctx.lineTo(24376,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,25,95,0.85)';
ctx.strokeStyle='rgb(117,236,159)';
ctx.moveTo(24376,17776);
ctx.lineTo(24376,17740);
ctx.lineTo(24412,17740);
ctx.lineTo(24412,17776);
ctx.lineTo(24376,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,21,26,0.85)';
ctx.strokeStyle='rgb(163,107,214)';
ctx.moveTo(24472,17968);
ctx.lineTo(24472,17932);
ctx.lineTo(24508,17932);
ctx.lineTo(24508,17968);
ctx.lineTo(24472,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,111,115,0.85)';
ctx.strokeStyle='rgb(124,43,114)';
ctx.moveTo(24472,17872);
ctx.lineTo(24472,17836);
ctx.lineTo(24508,17836);
ctx.lineTo(24508,17872);
ctx.lineTo(24472,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,247,102,0.85)';
ctx.strokeStyle='rgb(96,135,45)';
ctx.moveTo(24472,17776);
ctx.lineTo(24472,17740);
ctx.lineTo(24508,17740);
ctx.lineTo(24508,17776);
ctx.lineTo(24472,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,36,55,0.85)';
ctx.strokeStyle='rgb(171,91,193)';
ctx.moveTo(24568,17968);
ctx.lineTo(24568,17932);
ctx.lineTo(24604,17932);
ctx.lineTo(24604,17968);
ctx.lineTo(24568,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,145,115,0.85)';
ctx.strokeStyle='rgb(245,55,241)';
ctx.moveTo(24568,17872);
ctx.lineTo(24568,17836);
ctx.lineTo(24604,17836);
ctx.lineTo(24604,17872);
ctx.lineTo(24568,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,139,44,0.85)';
ctx.strokeStyle='rgb(192,138,18)';
ctx.moveTo(24568,17776);
ctx.lineTo(24568,17740);
ctx.lineTo(24604,17740);
ctx.lineTo(24604,17776);
ctx.lineTo(24568,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,38,42,0.85)';
ctx.strokeStyle='rgb(248,225,82)';
ctx.moveTo(24664,17968);
ctx.lineTo(24664,17932);
ctx.lineTo(24700,17932);
ctx.lineTo(24700,17968);
ctx.lineTo(24664,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,199,28,0.85)';
ctx.strokeStyle='rgb(142,232,107)';
ctx.moveTo(24664,17872);
ctx.lineTo(24664,17836);
ctx.lineTo(24700,17836);
ctx.lineTo(24700,17872);
ctx.lineTo(24664,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,70,129,0.85)';
ctx.strokeStyle='rgb(4,7,240)';
ctx.moveTo(24664,17776);
ctx.lineTo(24664,17740);
ctx.lineTo(24700,17740);
ctx.lineTo(24700,17776);
ctx.lineTo(24664,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,167,196,0.85)';
ctx.strokeStyle='rgb(130,228,203)';
ctx.moveTo(24760,17968);
ctx.lineTo(24760,17932);
ctx.lineTo(24796,17932);
ctx.lineTo(24796,17968);
ctx.lineTo(24760,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,6,178,0.85)';
ctx.strokeStyle='rgb(131,130,199)';
ctx.moveTo(24760,17872);
ctx.lineTo(24760,17836);
ctx.lineTo(24796,17836);
ctx.lineTo(24796,17872);
ctx.lineTo(24760,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,92,178,0.85)';
ctx.strokeStyle='rgb(67,237,116)';
ctx.moveTo(24760,17776);
ctx.lineTo(24760,17740);
ctx.lineTo(24796,17740);
ctx.lineTo(24796,17776);
ctx.lineTo(24760,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,29,95,0.85)';
ctx.strokeStyle='rgb(174,247,212)';
ctx.moveTo(24856,17968);
ctx.lineTo(24856,17932);
ctx.lineTo(24892,17932);
ctx.lineTo(24892,17968);
ctx.lineTo(24856,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,226,66,0.85)';
ctx.strokeStyle='rgb(86,86,187)';
ctx.moveTo(24856,17872);
ctx.lineTo(24856,17836);
ctx.lineTo(24892,17836);
ctx.lineTo(24892,17872);
ctx.lineTo(24856,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,5,189,0.85)';
ctx.strokeStyle='rgb(49,138,241)';
ctx.moveTo(24856,17776);
ctx.lineTo(24856,17740);
ctx.lineTo(24892,17740);
ctx.lineTo(24892,17776);
ctx.lineTo(24856,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,140,247,0.85)';
ctx.strokeStyle='rgb(161,24,153)';
ctx.moveTo(24952,17968);
ctx.lineTo(24952,17932);
ctx.lineTo(24988,17932);
ctx.lineTo(24988,17968);
ctx.lineTo(24952,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,110,240,0.85)';
ctx.strokeStyle='rgb(114,2,189)';
ctx.moveTo(24952,17872);
ctx.lineTo(24952,17836);
ctx.lineTo(24988,17836);
ctx.lineTo(24988,17872);
ctx.lineTo(24952,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,72,43,0.85)';
ctx.strokeStyle='rgb(14,244,118)';
ctx.moveTo(24952,17776);
ctx.lineTo(24952,17740);
ctx.lineTo(24988,17740);
ctx.lineTo(24988,17776);
ctx.lineTo(24952,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,198,209,0.85)';
ctx.strokeStyle='rgb(190,52,128)';
ctx.moveTo(25048,17968);
ctx.lineTo(25048,17932);
ctx.lineTo(25084,17932);
ctx.lineTo(25084,17968);
ctx.lineTo(25048,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,124,202,0.85)';
ctx.strokeStyle='rgb(42,228,246)';
ctx.moveTo(25048,17872);
ctx.lineTo(25048,17836);
ctx.lineTo(25084,17836);
ctx.lineTo(25084,17872);
ctx.lineTo(25048,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,188,7,0.85)';
ctx.strokeStyle='rgb(3,249,221)';
ctx.moveTo(25048,17776);
ctx.lineTo(25048,17740);
ctx.lineTo(25084,17740);
ctx.lineTo(25084,17776);
ctx.lineTo(25048,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,194,28,0.85)';
ctx.strokeStyle='rgb(33,228,219)';
ctx.moveTo(25144,17968);
ctx.lineTo(25144,17932);
ctx.lineTo(25180,17932);
ctx.lineTo(25180,17968);
ctx.lineTo(25144,17968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,102,101,0.85)';
ctx.strokeStyle='rgb(8,205,58)';
ctx.moveTo(25144,17872);
ctx.lineTo(25144,17836);
ctx.lineTo(25180,17836);
ctx.lineTo(25180,17872);
ctx.lineTo(25144,17872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,66,144,0.85)';
ctx.strokeStyle='rgb(57,19,177)';
ctx.moveTo(25144,17776);
ctx.lineTo(25144,17740);
ctx.lineTo(25180,17740);
ctx.lineTo(25180,17776);
ctx.lineTo(25144,17776);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,38,88,0.85)';
ctx.strokeStyle='rgb(203,243,150)';
ctx.moveTo(24184,20992);
ctx.lineTo(24184,20956);
ctx.lineTo(24220,20956);
ctx.lineTo(24220,20992);
ctx.lineTo(24184,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,236,57,0.85)';
ctx.strokeStyle='rgb(8,197,123)';
ctx.moveTo(24184,20896);
ctx.lineTo(24184,20860);
ctx.lineTo(24220,20860);
ctx.lineTo(24220,20896);
ctx.lineTo(24184,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,28,10,0.85)';
ctx.strokeStyle='rgb(121,157,0)';
ctx.moveTo(24184,20800);
ctx.lineTo(24184,20764);
ctx.lineTo(24220,20764);
ctx.lineTo(24220,20800);
ctx.lineTo(24184,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,89,17,0.85)';
ctx.strokeStyle='rgb(173,180,143)';
ctx.moveTo(24280,20992);
ctx.lineTo(24280,20956);
ctx.lineTo(24316,20956);
ctx.lineTo(24316,20992);
ctx.lineTo(24280,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,69,165,0.85)';
ctx.strokeStyle='rgb(208,50,248)';
ctx.moveTo(24280,20896);
ctx.lineTo(24280,20860);
ctx.lineTo(24316,20860);
ctx.lineTo(24316,20896);
ctx.lineTo(24280,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,254,197,0.85)';
ctx.strokeStyle='rgb(162,31,54)';
ctx.moveTo(24280,20800);
ctx.lineTo(24280,20764);
ctx.lineTo(24316,20764);
ctx.lineTo(24316,20800);
ctx.lineTo(24280,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(104,5,73,0.85)';
ctx.strokeStyle='rgb(177,230,35)';
ctx.moveTo(24376,20992);
ctx.lineTo(24376,20956);
ctx.lineTo(24412,20956);
ctx.lineTo(24412,20992);
ctx.lineTo(24376,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,185,188,0.85)';
ctx.strokeStyle='rgb(221,173,116)';
ctx.moveTo(24376,20896);
ctx.lineTo(24376,20860);
ctx.lineTo(24412,20860);
ctx.lineTo(24412,20896);
ctx.lineTo(24376,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,17,88,0.85)';
ctx.strokeStyle='rgb(171,246,19)';
ctx.moveTo(24376,20800);
ctx.lineTo(24376,20764);
ctx.lineTo(24412,20764);
ctx.lineTo(24412,20800);
ctx.lineTo(24376,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,79,104,0.85)';
ctx.strokeStyle='rgb(57,39,109)';
ctx.moveTo(24472,20992);
ctx.lineTo(24472,20956);
ctx.lineTo(24508,20956);
ctx.lineTo(24508,20992);
ctx.lineTo(24472,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,83,118,0.85)';
ctx.strokeStyle='rgb(117,10,16)';
ctx.moveTo(24472,20896);
ctx.lineTo(24472,20860);
ctx.lineTo(24508,20860);
ctx.lineTo(24508,20896);
ctx.lineTo(24472,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,155,224,0.85)';
ctx.strokeStyle='rgb(184,112,61)';
ctx.moveTo(24472,20800);
ctx.lineTo(24472,20764);
ctx.lineTo(24508,20764);
ctx.lineTo(24508,20800);
ctx.lineTo(24472,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,147,52,0.85)';
ctx.strokeStyle='rgb(110,189,37)';
ctx.moveTo(24568,20992);
ctx.lineTo(24568,20956);
ctx.lineTo(24604,20956);
ctx.lineTo(24604,20992);
ctx.lineTo(24568,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,141,116,0.85)';
ctx.strokeStyle='rgb(47,121,43)';
ctx.moveTo(24568,20896);
ctx.lineTo(24568,20860);
ctx.lineTo(24604,20860);
ctx.lineTo(24604,20896);
ctx.lineTo(24568,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,49,7,0.85)';
ctx.strokeStyle='rgb(176,59,186)';
ctx.moveTo(24568,20800);
ctx.lineTo(24568,20764);
ctx.lineTo(24604,20764);
ctx.lineTo(24604,20800);
ctx.lineTo(24568,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,160,18,0.85)';
ctx.strokeStyle='rgb(106,12,233)';
ctx.moveTo(24664,20992);
ctx.lineTo(24664,20956);
ctx.lineTo(24700,20956);
ctx.lineTo(24700,20992);
ctx.lineTo(24664,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,158,245,0.85)';
ctx.strokeStyle='rgb(35,135,155)';
ctx.moveTo(24664,20896);
ctx.lineTo(24664,20860);
ctx.lineTo(24700,20860);
ctx.lineTo(24700,20896);
ctx.lineTo(24664,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,193,196,0.85)';
ctx.strokeStyle='rgb(240,142,251)';
ctx.moveTo(24664,20800);
ctx.lineTo(24664,20764);
ctx.lineTo(24700,20764);
ctx.lineTo(24700,20800);
ctx.lineTo(24664,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,112,205,0.85)';
ctx.strokeStyle='rgb(27,147,254)';
ctx.moveTo(24760,20992);
ctx.lineTo(24760,20956);
ctx.lineTo(24796,20956);
ctx.lineTo(24796,20992);
ctx.lineTo(24760,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,14,178,0.85)';
ctx.strokeStyle='rgb(161,253,143)';
ctx.moveTo(24760,20896);
ctx.lineTo(24760,20860);
ctx.lineTo(24796,20860);
ctx.lineTo(24796,20896);
ctx.lineTo(24760,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(55,42,209,0.85)';
ctx.strokeStyle='rgb(43,159,7)';
ctx.moveTo(24760,20800);
ctx.lineTo(24760,20764);
ctx.lineTo(24796,20764);
ctx.lineTo(24796,20800);
ctx.lineTo(24760,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,185,28,0.85)';
ctx.strokeStyle='rgb(128,78,178)';
ctx.moveTo(24856,20992);
ctx.lineTo(24856,20956);
ctx.lineTo(24892,20956);
ctx.lineTo(24892,20992);
ctx.lineTo(24856,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,213,177,0.85)';
ctx.strokeStyle='rgb(61,166,15)';
ctx.moveTo(24856,20896);
ctx.lineTo(24856,20860);
ctx.lineTo(24892,20860);
ctx.lineTo(24892,20896);
ctx.lineTo(24856,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,24,186,0.85)';
ctx.strokeStyle='rgb(52,151,21)';
ctx.moveTo(24856,20800);
ctx.lineTo(24856,20764);
ctx.lineTo(24892,20764);
ctx.lineTo(24892,20800);
ctx.lineTo(24856,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,53,63,0.85)';
ctx.strokeStyle='rgb(57,167,99)';
ctx.moveTo(24952,20992);
ctx.lineTo(24952,20956);
ctx.lineTo(24988,20956);
ctx.lineTo(24988,20992);
ctx.lineTo(24952,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,49,67,0.85)';
ctx.strokeStyle='rgb(125,242,205)';
ctx.moveTo(24952,20896);
ctx.lineTo(24952,20860);
ctx.lineTo(24988,20860);
ctx.lineTo(24988,20896);
ctx.lineTo(24952,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(175,109,112,0.85)';
ctx.strokeStyle='rgb(28,240,136)';
ctx.moveTo(24952,20800);
ctx.lineTo(24952,20764);
ctx.lineTo(24988,20764);
ctx.lineTo(24988,20800);
ctx.lineTo(24952,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,103,50,0.85)';
ctx.strokeStyle='rgb(135,96,237)';
ctx.moveTo(25048,20992);
ctx.lineTo(25048,20956);
ctx.lineTo(25084,20956);
ctx.lineTo(25084,20992);
ctx.lineTo(25048,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,42,228,0.85)';
ctx.strokeStyle='rgb(219,73,219)';
ctx.moveTo(25048,20896);
ctx.lineTo(25048,20860);
ctx.lineTo(25084,20860);
ctx.lineTo(25084,20896);
ctx.lineTo(25048,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,142,2,0.85)';
ctx.strokeStyle='rgb(234,66,26)';
ctx.moveTo(25048,20800);
ctx.lineTo(25048,20764);
ctx.lineTo(25084,20764);
ctx.lineTo(25084,20800);
ctx.lineTo(25048,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,142,199,0.85)';
ctx.strokeStyle='rgb(214,104,77)';
ctx.moveTo(25144,20992);
ctx.lineTo(25144,20956);
ctx.lineTo(25180,20956);
ctx.lineTo(25180,20992);
ctx.lineTo(25144,20992);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,224,111,0.85)';
ctx.strokeStyle='rgb(187,55,234)';
ctx.moveTo(25144,20896);
ctx.lineTo(25144,20860);
ctx.lineTo(25180,20860);
ctx.lineTo(25180,20896);
ctx.lineTo(25144,20896);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,219,206,0.85)';
ctx.strokeStyle='rgb(220,108,158)';
ctx.moveTo(25144,20800);
ctx.lineTo(25144,20764);
ctx.lineTo(25180,20764);
ctx.lineTo(25180,20800);
ctx.lineTo(25144,20800);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,10,194,0.85)';
ctx.strokeStyle='rgb(200,43,182)';
ctx.moveTo(25480,19480);
ctx.lineTo(25480,19444);
ctx.lineTo(25516,19444);
ctx.lineTo(25516,19480);
ctx.lineTo(25480,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,233,139,0.85)';
ctx.strokeStyle='rgb(48,85,69)';
ctx.moveTo(25480,19384);
ctx.lineTo(25480,19348);
ctx.lineTo(25516,19348);
ctx.lineTo(25516,19384);
ctx.lineTo(25480,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,143,1,0.85)';
ctx.strokeStyle='rgb(83,218,169)';
ctx.moveTo(25480,19288);
ctx.lineTo(25480,19252);
ctx.lineTo(25516,19252);
ctx.lineTo(25516,19288);
ctx.lineTo(25480,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,191,24,0.85)';
ctx.strokeStyle='rgb(222,224,82)';
ctx.moveTo(25576,19480);
ctx.lineTo(25576,19444);
ctx.lineTo(25612,19444);
ctx.lineTo(25612,19480);
ctx.lineTo(25576,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,209,32,0.85)';
ctx.strokeStyle='rgb(67,138,101)';
ctx.moveTo(25576,19384);
ctx.lineTo(25576,19348);
ctx.lineTo(25612,19348);
ctx.lineTo(25612,19384);
ctx.lineTo(25576,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,117,43,0.85)';
ctx.strokeStyle='rgb(190,165,151)';
ctx.moveTo(25576,19288);
ctx.lineTo(25576,19252);
ctx.lineTo(25612,19252);
ctx.lineTo(25612,19288);
ctx.lineTo(25576,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,18,160,0.85)';
ctx.strokeStyle='rgb(36,36,231)';
ctx.moveTo(25672,19480);
ctx.lineTo(25672,19444);
ctx.lineTo(25708,19444);
ctx.lineTo(25708,19480);
ctx.lineTo(25672,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,38,30,0.85)';
ctx.strokeStyle='rgb(118,25,7)';
ctx.moveTo(25672,19384);
ctx.lineTo(25672,19348);
ctx.lineTo(25708,19348);
ctx.lineTo(25708,19384);
ctx.lineTo(25672,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,172,115,0.85)';
ctx.strokeStyle='rgb(177,216,154)';
ctx.moveTo(25672,19288);
ctx.lineTo(25672,19252);
ctx.lineTo(25708,19252);
ctx.lineTo(25708,19288);
ctx.lineTo(25672,19288);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,59,97,0.85)';
ctx.strokeStyle='rgb(170,202,199)';
ctx.moveTo(25768,19480);
ctx.lineTo(25768,19444);
ctx.lineTo(25804,19444);
ctx.lineTo(25804,19480);
ctx.lineTo(25768,19480);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,4,11,0.85)';
ctx.strokeStyle='rgb(131,219,253)';
ctx.moveTo(25768,19384);
ctx.lineTo(25768,19348);
ctx.lineTo(25804,19348);
ctx.lineTo(25804,19384);
ctx.lineTo(25768,19384);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,144,127,0.85)';
ctx.strokeStyle='rgb(34,84,97)';
ctx.moveTo(20320,20248);
ctx.lineTo(20320,20212);
ctx.lineTo(20356,20212);
ctx.lineTo(20356,20248);
ctx.lineTo(20320,20248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,207,240,0.85)';
ctx.strokeStyle='rgb(134,166,217)';
ctx.moveTo(23020,19708);
ctx.lineTo(23020,19672);
ctx.lineTo(23056,19672);
ctx.lineTo(23056,19708);
ctx.lineTo(23020,19708);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,38,178,0.85)';
ctx.strokeStyle='rgb(236,184,230)';
ctx.moveTo(21832,21220);
ctx.lineTo(21832,21184);
ctx.lineTo(21868,21184);
ctx.lineTo(21868,21220);
ctx.lineTo(21832,21220);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(5,162,54,0.85)';
ctx.strokeStyle='rgb(254,72,164)';
ctx.moveTo(21724,19060);
ctx.lineTo(21724,19024);
ctx.lineTo(21760,19024);
ctx.lineTo(21760,19060);
ctx.lineTo(21724,19060);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,99,119,0.85)';
ctx.strokeStyle='rgb(89,108,182)';
ctx.moveTo(20752,20032);
ctx.lineTo(20752,19996);
ctx.lineTo(20788,19996);
ctx.lineTo(20788,20032);
ctx.lineTo(20752,20032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,35,231,0.85)';
ctx.strokeStyle='rgb(245,139,114)';
ctx.moveTo(19564,19708);
ctx.lineTo(19564,19672);
ctx.lineTo(19600,19672);
ctx.lineTo(19600,19708);
ctx.lineTo(19564,19708);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,148,56,0.85)';
ctx.strokeStyle='rgb(207,35,191)';
ctx.moveTo(20536,20248);
ctx.lineTo(20536,20212);
ctx.lineTo(20572,20212);
ctx.lineTo(20572,20248);
ctx.lineTo(20536,20248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,189,25,0.85)';
ctx.strokeStyle='rgb(159,25,15)';
ctx.moveTo(19456,24568);
ctx.lineTo(19456,24532);
ctx.lineTo(19492,24532);
ctx.lineTo(19492,24568);
ctx.lineTo(19456,24568);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,99,0,0.85)';
ctx.strokeStyle='rgb(91,185,50)';
ctx.moveTo(19456,24676);
ctx.lineTo(19456,24640);
ctx.lineTo(19492,24640);
ctx.lineTo(19492,24676);
ctx.lineTo(19456,24676);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,160,237,0.85)';
ctx.strokeStyle='rgb(230,182,49)';
ctx.moveTo(21400,23272);
ctx.lineTo(21400,23236);
ctx.lineTo(21436,23236);
ctx.lineTo(21436,23272);
ctx.lineTo(21400,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,233,3,0.85)';
ctx.strokeStyle='rgb(67,243,45)';
ctx.moveTo(20212,24676);
ctx.lineTo(20212,24640);
ctx.lineTo(20248,24640);
ctx.lineTo(20248,24676);
ctx.lineTo(20212,24676);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,113,241,0.85)';
ctx.strokeStyle='rgb(168,17,144)';
ctx.moveTo(19996,22084);
ctx.lineTo(19996,22048);
ctx.lineTo(20032,22048);
ctx.lineTo(20032,22084);
ctx.lineTo(19996,22084);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,116,124,0.85)';
ctx.strokeStyle='rgb(137,247,111)';
ctx.moveTo(19996,23056);
ctx.lineTo(19996,23020);
ctx.lineTo(20032,23020);
ctx.lineTo(20032,23056);
ctx.lineTo(19996,23056);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,157,21,0.85)';
ctx.strokeStyle='rgb(38,246,53)';
ctx.moveTo(20428,21760);
ctx.lineTo(20428,21724);
ctx.lineTo(20464,21724);
ctx.lineTo(20464,21760);
ctx.lineTo(20428,21760);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,186,100,0.85)';
ctx.strokeStyle='rgb(198,111,84)';
ctx.moveTo(20428,22732);
ctx.lineTo(20428,22696);
ctx.lineTo(20464,22696);
ctx.lineTo(20464,22732);
ctx.lineTo(20428,22732);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,164,31,0.85)';
ctx.strokeStyle='rgb(70,154,152)';
ctx.moveTo(20212,23164);
ctx.lineTo(20212,23128);
ctx.lineTo(20248,23128);
ctx.lineTo(20248,23164);
ctx.lineTo(20212,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,254,222,0.85)';
ctx.strokeStyle='rgb(240,220,94)';
ctx.moveTo(21400,23164);
ctx.lineTo(21400,23128);
ctx.lineTo(21436,23128);
ctx.lineTo(21436,23164);
ctx.lineTo(21400,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,189,117,0.85)';
ctx.strokeStyle='rgb(195,75,148)';
ctx.moveTo(21076,24676);
ctx.lineTo(21076,24640);
ctx.lineTo(21112,24640);
ctx.lineTo(21112,24676);
ctx.lineTo(21076,24676);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,191,124,0.85)';
ctx.strokeStyle='rgb(120,27,138)';
ctx.moveTo(23236,23272);
ctx.lineTo(23236,23236);
ctx.lineTo(23272,23236);
ctx.lineTo(23272,23272);
ctx.lineTo(23236,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,58,11,0.85)';
ctx.strokeStyle='rgb(68,105,46)';
ctx.moveTo(19672,23596);
ctx.lineTo(19672,23560);
ctx.lineTo(19708,23560);
ctx.lineTo(19708,23596);
ctx.lineTo(19672,23596);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,66,177,0.85)';
ctx.strokeStyle='rgb(158,162,159)';
ctx.moveTo(19888,23272);
ctx.lineTo(19888,23236);
ctx.lineTo(19924,23236);
ctx.lineTo(19924,23272);
ctx.lineTo(19888,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,86,209,0.85)';
ctx.strokeStyle='rgb(188,209,29)';
ctx.moveTo(21184,21652);
ctx.lineTo(21184,21616);
ctx.lineTo(21220,21616);
ctx.lineTo(21220,21652);
ctx.lineTo(21184,21652);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,2,87,0.85)';
ctx.strokeStyle='rgb(211,174,140)';
ctx.moveTo(21184,22732);
ctx.lineTo(21184,22696);
ctx.lineTo(21220,22696);
ctx.lineTo(21220,22732);
ctx.lineTo(21184,22732);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,161,18,0.85)';
ctx.strokeStyle='rgb(105,26,49)';
ctx.moveTo(20968,23164);
ctx.lineTo(20968,23128);
ctx.lineTo(21004,23128);
ctx.lineTo(21004,23164);
ctx.lineTo(20968,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,80,24,0.85)';
ctx.strokeStyle='rgb(5,137,33)';
ctx.moveTo(19996,24244);
ctx.lineTo(19996,24208);
ctx.lineTo(20032,24208);
ctx.lineTo(20032,24244);
ctx.lineTo(19996,24244);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,75,231,0.85)';
ctx.strokeStyle='rgb(209,72,149)';
ctx.moveTo(21184,23272);
ctx.lineTo(21184,23236);
ctx.lineTo(21220,23236);
ctx.lineTo(21220,23272);
ctx.lineTo(21184,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,202,202,0.85)';
ctx.strokeStyle='rgb(40,148,68)';
ctx.moveTo(21184,24244);
ctx.lineTo(21184,24208);
ctx.lineTo(21220,24208);
ctx.lineTo(21220,24244);
ctx.lineTo(21184,24244);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,185,47,0.85)';
ctx.strokeStyle='rgb(37,178,67)';
ctx.moveTo(19672,24460);
ctx.lineTo(19672,24424);
ctx.lineTo(19708,24424);
ctx.lineTo(19708,24460);
ctx.lineTo(19672,24460);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,141,34,0.85)';
ctx.strokeStyle='rgb(174,56,181)';
ctx.moveTo(24472,23824);
ctx.lineTo(24472,23788);
ctx.lineTo(24508,23788);
ctx.lineTo(24508,23824);
ctx.lineTo(24472,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,79,188,0.85)';
ctx.strokeStyle='rgb(6,174,20)';
ctx.moveTo(24568,24016);
ctx.lineTo(24568,23980);
ctx.lineTo(24604,23980);
ctx.lineTo(24604,24016);
ctx.lineTo(24568,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,16,119,0.85)';
ctx.strokeStyle='rgb(162,96,221)';
ctx.moveTo(24568,23920);
ctx.lineTo(24568,23884);
ctx.lineTo(24604,23884);
ctx.lineTo(24604,23920);
ctx.lineTo(24568,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,129,250,0.85)';
ctx.strokeStyle='rgb(174,213,63)';
ctx.moveTo(24568,23824);
ctx.lineTo(24568,23788);
ctx.lineTo(24604,23788);
ctx.lineTo(24604,23824);
ctx.lineTo(24568,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,157,56,0.85)';
ctx.strokeStyle='rgb(95,142,138)';
ctx.moveTo(24664,24016);
ctx.lineTo(24664,23980);
ctx.lineTo(24700,23980);
ctx.lineTo(24700,24016);
ctx.lineTo(24664,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,20,51,0.85)';
ctx.strokeStyle='rgb(40,126,150)';
ctx.moveTo(24664,23920);
ctx.lineTo(24664,23884);
ctx.lineTo(24700,23884);
ctx.lineTo(24700,23920);
ctx.lineTo(24664,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,157,148,0.85)';
ctx.strokeStyle='rgb(72,199,40)';
ctx.moveTo(24664,23824);
ctx.lineTo(24664,23788);
ctx.lineTo(24700,23788);
ctx.lineTo(24700,23824);
ctx.lineTo(24664,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,249,143,0.85)';
ctx.strokeStyle='rgb(69,248,229)';
ctx.moveTo(24760,24016);
ctx.lineTo(24760,23980);
ctx.lineTo(24796,23980);
ctx.lineTo(24796,24016);
ctx.lineTo(24760,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,253,170,0.85)';
ctx.strokeStyle='rgb(176,141,214)';
ctx.moveTo(24760,23920);
ctx.lineTo(24760,23884);
ctx.lineTo(24796,23884);
ctx.lineTo(24796,23920);
ctx.lineTo(24760,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,19,244,0.85)';
ctx.strokeStyle='rgb(109,68,106)';
ctx.moveTo(24760,23824);
ctx.lineTo(24760,23788);
ctx.lineTo(24796,23788);
ctx.lineTo(24796,23824);
ctx.lineTo(24760,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,34,136,0.85)';
ctx.strokeStyle='rgb(114,157,136)';
ctx.moveTo(24856,24016);
ctx.lineTo(24856,23980);
ctx.lineTo(24892,23980);
ctx.lineTo(24892,24016);
ctx.lineTo(24856,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,6,193,0.85)';
ctx.strokeStyle='rgb(2,34,102)';
ctx.moveTo(24856,23920);
ctx.lineTo(24856,23884);
ctx.lineTo(24892,23884);
ctx.lineTo(24892,23920);
ctx.lineTo(24856,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,143,153,0.85)';
ctx.strokeStyle='rgb(230,149,36)';
ctx.moveTo(24856,23824);
ctx.lineTo(24856,23788);
ctx.lineTo(24892,23788);
ctx.lineTo(24892,23824);
ctx.lineTo(24856,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,196,23,0.85)';
ctx.strokeStyle='rgb(42,16,8)';
ctx.moveTo(24952,24016);
ctx.lineTo(24952,23980);
ctx.lineTo(24988,23980);
ctx.lineTo(24988,24016);
ctx.lineTo(24952,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,10,155,0.85)';
ctx.strokeStyle='rgb(68,200,174)';
ctx.moveTo(24952,23920);
ctx.lineTo(24952,23884);
ctx.lineTo(24988,23884);
ctx.lineTo(24988,23920);
ctx.lineTo(24952,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,155,98,0.85)';
ctx.strokeStyle='rgb(18,215,145)';
ctx.moveTo(24952,23824);
ctx.lineTo(24952,23788);
ctx.lineTo(24988,23788);
ctx.lineTo(24988,23824);
ctx.lineTo(24952,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,197,243,0.85)';
ctx.strokeStyle='rgb(170,98,220)';
ctx.moveTo(25048,24016);
ctx.lineTo(25048,23980);
ctx.lineTo(25084,23980);
ctx.lineTo(25084,24016);
ctx.lineTo(25048,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,251,37,0.85)';
ctx.strokeStyle='rgb(23,157,151)';
ctx.moveTo(25048,23920);
ctx.lineTo(25048,23884);
ctx.lineTo(25084,23884);
ctx.lineTo(25084,23920);
ctx.lineTo(25048,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,9,213,0.85)';
ctx.strokeStyle='rgb(163,8,137)';
ctx.moveTo(25048,23824);
ctx.lineTo(25048,23788);
ctx.lineTo(25084,23788);
ctx.lineTo(25084,23824);
ctx.lineTo(25048,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,111,160,0.85)';
ctx.strokeStyle='rgb(107,227,206)';
ctx.moveTo(25144,24016);
ctx.lineTo(25144,23980);
ctx.lineTo(25180,23980);
ctx.lineTo(25180,24016);
ctx.lineTo(25144,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,204,131,0.85)';
ctx.strokeStyle='rgb(136,243,108)';
ctx.moveTo(25144,23920);
ctx.lineTo(25144,23884);
ctx.lineTo(25180,23884);
ctx.lineTo(25180,23920);
ctx.lineTo(25144,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,1,253,0.85)';
ctx.strokeStyle='rgb(240,232,187)';
ctx.moveTo(25144,23824);
ctx.lineTo(25144,23788);
ctx.lineTo(25180,23788);
ctx.lineTo(25180,23824);
ctx.lineTo(25144,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,235,183,0.85)';
ctx.strokeStyle='rgb(19,13,113)';
ctx.moveTo(24184,24016);
ctx.lineTo(24184,23980);
ctx.lineTo(24220,23980);
ctx.lineTo(24220,24016);
ctx.lineTo(24184,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,46,119,0.85)';
ctx.strokeStyle='rgb(136,27,41)';
ctx.moveTo(25480,25432);
ctx.lineTo(25480,25396);
ctx.lineTo(25516,25396);
ctx.lineTo(25516,25432);
ctx.lineTo(25480,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(108,145,115,0.85)';
ctx.strokeStyle='rgb(105,195,227)';
ctx.moveTo(25480,25336);
ctx.lineTo(25480,25300);
ctx.lineTo(25516,25300);
ctx.lineTo(25516,25336);
ctx.lineTo(25480,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,124,119,0.85)';
ctx.strokeStyle='rgb(16,24,11)';
ctx.moveTo(24184,23920);
ctx.lineTo(24184,23884);
ctx.lineTo(24220,23884);
ctx.lineTo(24220,23920);
ctx.lineTo(24184,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,148,253,0.85)';
ctx.strokeStyle='rgb(177,178,123)';
ctx.moveTo(25576,25432);
ctx.lineTo(25576,25396);
ctx.lineTo(25612,25396);
ctx.lineTo(25612,25432);
ctx.lineTo(25576,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,173,57,0.85)';
ctx.strokeStyle='rgb(237,93,114)';
ctx.moveTo(25576,25336);
ctx.lineTo(25576,25300);
ctx.lineTo(25612,25300);
ctx.lineTo(25612,25336);
ctx.lineTo(25576,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,34,231,0.85)';
ctx.strokeStyle='rgb(196,32,119)';
ctx.moveTo(24184,23824);
ctx.lineTo(24184,23788);
ctx.lineTo(24220,23788);
ctx.lineTo(24220,23824);
ctx.lineTo(24184,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,59,94,0.85)';
ctx.strokeStyle='rgb(245,57,48)';
ctx.moveTo(25672,25432);
ctx.lineTo(25672,25396);
ctx.lineTo(25708,25396);
ctx.lineTo(25708,25432);
ctx.lineTo(25672,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,247,30,0.85)';
ctx.strokeStyle='rgb(61,31,77)';
ctx.moveTo(25672,25336);
ctx.lineTo(25672,25300);
ctx.lineTo(25708,25300);
ctx.lineTo(25708,25336);
ctx.lineTo(25672,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,145,11,0.85)';
ctx.strokeStyle='rgb(123,132,176)';
ctx.moveTo(24280,24016);
ctx.lineTo(24280,23980);
ctx.lineTo(24316,23980);
ctx.lineTo(24316,24016);
ctx.lineTo(24280,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,162,211,0.85)';
ctx.strokeStyle='rgb(151,152,245)';
ctx.moveTo(25768,25432);
ctx.lineTo(25768,25396);
ctx.lineTo(25804,25396);
ctx.lineTo(25804,25432);
ctx.lineTo(25768,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,92,69,0.85)';
ctx.strokeStyle='rgb(203,66,128)';
ctx.moveTo(25768,25336);
ctx.lineTo(25768,25300);
ctx.lineTo(25804,25300);
ctx.lineTo(25804,25336);
ctx.lineTo(25768,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,154,60,0.85)';
ctx.strokeStyle='rgb(248,241,108)';
ctx.moveTo(24280,23920);
ctx.lineTo(24280,23884);
ctx.lineTo(24316,23884);
ctx.lineTo(24316,23920);
ctx.lineTo(24280,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,219,142,0.85)';
ctx.strokeStyle='rgb(38,18,16)';
ctx.moveTo(25864,25432);
ctx.lineTo(25864,25396);
ctx.lineTo(25900,25396);
ctx.lineTo(25900,25432);
ctx.lineTo(25864,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,79,226,0.85)';
ctx.strokeStyle='rgb(73,220,6)';
ctx.moveTo(25864,25336);
ctx.lineTo(25864,25300);
ctx.lineTo(25900,25300);
ctx.lineTo(25900,25336);
ctx.lineTo(25864,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,73,48,0.85)';
ctx.strokeStyle='rgb(6,252,112)';
ctx.moveTo(24280,23824);
ctx.lineTo(24280,23788);
ctx.lineTo(24316,23788);
ctx.lineTo(24316,23824);
ctx.lineTo(24280,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,57,253,0.85)';
ctx.strokeStyle='rgb(212,16,44)';
ctx.moveTo(25960,25432);
ctx.lineTo(25960,25396);
ctx.lineTo(25996,25396);
ctx.lineTo(25996,25432);
ctx.lineTo(25960,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,120,38,0.85)';
ctx.strokeStyle='rgb(107,84,73)';
ctx.moveTo(25960,25336);
ctx.lineTo(25960,25300);
ctx.lineTo(25996,25300);
ctx.lineTo(25996,25336);
ctx.lineTo(25960,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,109,196,0.85)';
ctx.strokeStyle='rgb(105,151,185)';
ctx.moveTo(24376,24016);
ctx.lineTo(24376,23980);
ctx.lineTo(24412,23980);
ctx.lineTo(24412,24016);
ctx.lineTo(24376,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,7,123,0.85)';
ctx.strokeStyle='rgb(12,226,155)';
ctx.moveTo(26056,25432);
ctx.lineTo(26056,25396);
ctx.lineTo(26092,25396);
ctx.lineTo(26092,25432);
ctx.lineTo(26056,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,41,72,0.85)';
ctx.strokeStyle='rgb(97,7,54)';
ctx.moveTo(26056,25336);
ctx.lineTo(26056,25300);
ctx.lineTo(26092,25300);
ctx.lineTo(26092,25336);
ctx.lineTo(26056,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,11,129,0.85)';
ctx.strokeStyle='rgb(247,97,178)';
ctx.moveTo(24376,23920);
ctx.lineTo(24376,23884);
ctx.lineTo(24412,23884);
ctx.lineTo(24412,23920);
ctx.lineTo(24376,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,192,57,0.85)';
ctx.strokeStyle='rgb(235,46,238)';
ctx.moveTo(26152,25432);
ctx.lineTo(26152,25396);
ctx.lineTo(26188,25396);
ctx.lineTo(26188,25432);
ctx.lineTo(26152,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,130,181,0.85)';
ctx.strokeStyle='rgb(195,75,2)';
ctx.moveTo(26152,25336);
ctx.lineTo(26152,25300);
ctx.lineTo(26188,25300);
ctx.lineTo(26188,25336);
ctx.lineTo(26152,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,253,188,0.85)';
ctx.strokeStyle='rgb(87,122,234)';
ctx.moveTo(24376,23824);
ctx.lineTo(24376,23788);
ctx.lineTo(24412,23788);
ctx.lineTo(24412,23824);
ctx.lineTo(24376,23824);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,220,176,0.85)';
ctx.strokeStyle='rgb(160,160,13)';
ctx.moveTo(26248,25432);
ctx.lineTo(26248,25396);
ctx.lineTo(26284,25396);
ctx.lineTo(26284,25432);
ctx.lineTo(26248,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,209,146,0.85)';
ctx.strokeStyle='rgb(50,102,208)';
ctx.moveTo(26248,25336);
ctx.lineTo(26248,25300);
ctx.lineTo(26284,25300);
ctx.lineTo(26284,25336);
ctx.lineTo(26248,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,85,98,0.85)';
ctx.strokeStyle='rgb(223,97,102)';
ctx.moveTo(24472,24016);
ctx.lineTo(24472,23980);
ctx.lineTo(24508,23980);
ctx.lineTo(24508,24016);
ctx.lineTo(24472,24016);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,69,42,0.85)';
ctx.strokeStyle='rgb(156,3,19)';
ctx.moveTo(26344,25432);
ctx.lineTo(26344,25396);
ctx.lineTo(26380,25396);
ctx.lineTo(26380,25432);
ctx.lineTo(26344,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,97,239,0.85)';
ctx.strokeStyle='rgb(159,22,217)';
ctx.moveTo(26344,25336);
ctx.lineTo(26344,25300);
ctx.lineTo(26380,25300);
ctx.lineTo(26380,25336);
ctx.lineTo(26344,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,178,223,0.85)';
ctx.strokeStyle='rgb(191,220,3)';
ctx.moveTo(24472,23920);
ctx.lineTo(24472,23884);
ctx.lineTo(24508,23884);
ctx.lineTo(24508,23920);
ctx.lineTo(24472,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,117,90,0.85)';
ctx.strokeStyle='rgb(199,232,181)';
ctx.moveTo(26440,25432);
ctx.lineTo(26440,25396);
ctx.lineTo(26476,25396);
ctx.lineTo(26476,25432);
ctx.lineTo(26440,25432);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,34,39,0.85)';
ctx.strokeStyle='rgb(10,93,85)';
ctx.moveTo(26440,25336);
ctx.lineTo(26440,25300);
ctx.lineTo(26476,25300);
ctx.lineTo(26476,25336);
ctx.lineTo(26440,25336);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,151,127,0.85)';
ctx.strokeStyle='rgb(73,251,159)';
ctx.moveTo(25480,22504);
ctx.lineTo(25480,22468);
ctx.lineTo(25516,22468);
ctx.lineTo(25516,22504);
ctx.lineTo(25480,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,169,58,0.85)';
ctx.strokeStyle='rgb(87,107,105)';
ctx.moveTo(25480,22408);
ctx.lineTo(25480,22372);
ctx.lineTo(25516,22372);
ctx.lineTo(25516,22408);
ctx.lineTo(25480,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,192,24,0.85)';
ctx.strokeStyle='rgb(95,175,62)';
ctx.moveTo(25480,22312);
ctx.lineTo(25480,22276);
ctx.lineTo(25516,22276);
ctx.lineTo(25516,22312);
ctx.lineTo(25480,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,80,32,0.85)';
ctx.strokeStyle='rgb(48,247,103)';
ctx.moveTo(25576,22504);
ctx.lineTo(25576,22468);
ctx.lineTo(25612,22468);
ctx.lineTo(25612,22504);
ctx.lineTo(25576,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,76,189,0.85)';
ctx.strokeStyle='rgb(199,114,98)';
ctx.moveTo(25576,22408);
ctx.lineTo(25576,22372);
ctx.lineTo(25612,22372);
ctx.lineTo(25612,22408);
ctx.lineTo(25576,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,162,98,0.85)';
ctx.strokeStyle='rgb(140,5,140)';
ctx.moveTo(25576,22312);
ctx.lineTo(25576,22276);
ctx.lineTo(25612,22276);
ctx.lineTo(25612,22312);
ctx.lineTo(25576,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,158,225,0.85)';
ctx.strokeStyle='rgb(119,237,118)';
ctx.moveTo(25672,22504);
ctx.lineTo(25672,22468);
ctx.lineTo(25708,22468);
ctx.lineTo(25708,22504);
ctx.lineTo(25672,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,176,202,0.85)';
ctx.strokeStyle='rgb(26,93,35)';
ctx.moveTo(25672,22408);
ctx.lineTo(25672,22372);
ctx.lineTo(25708,22372);
ctx.lineTo(25708,22408);
ctx.lineTo(25672,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,150,221,0.85)';
ctx.strokeStyle='rgb(144,69,89)';
ctx.moveTo(25672,22312);
ctx.lineTo(25672,22276);
ctx.lineTo(25708,22276);
ctx.lineTo(25708,22312);
ctx.lineTo(25672,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,80,146,0.85)';
ctx.strokeStyle='rgb(225,221,11)';
ctx.moveTo(25768,22504);
ctx.lineTo(25768,22468);
ctx.lineTo(25804,22468);
ctx.lineTo(25804,22504);
ctx.lineTo(25768,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,230,212,0.85)';
ctx.strokeStyle='rgb(186,240,135)';
ctx.moveTo(25768,22408);
ctx.lineTo(25768,22372);
ctx.lineTo(25804,22372);
ctx.lineTo(25804,22408);
ctx.lineTo(25768,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(246,100,42,0.85)';
ctx.strokeStyle='rgb(246,58,141)';
ctx.moveTo(25768,22312);
ctx.lineTo(25768,22276);
ctx.lineTo(25804,22276);
ctx.lineTo(25804,22312);
ctx.lineTo(25768,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,246,135,0.85)';
ctx.strokeStyle='rgb(113,55,207)';
ctx.moveTo(25864,22504);
ctx.lineTo(25864,22468);
ctx.lineTo(25900,22468);
ctx.lineTo(25900,22504);
ctx.lineTo(25864,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,199,133,0.85)';
ctx.strokeStyle='rgb(194,63,63)';
ctx.moveTo(25864,22408);
ctx.lineTo(25864,22372);
ctx.lineTo(25900,22372);
ctx.lineTo(25900,22408);
ctx.lineTo(25864,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,51,202,0.85)';
ctx.strokeStyle='rgb(253,153,204)';
ctx.moveTo(25864,22312);
ctx.lineTo(25864,22276);
ctx.lineTo(25900,22276);
ctx.lineTo(25900,22312);
ctx.lineTo(25864,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,31,63,0.85)';
ctx.strokeStyle='rgb(71,149,128)';
ctx.moveTo(25960,22504);
ctx.lineTo(25960,22468);
ctx.lineTo(25996,22468);
ctx.lineTo(25996,22504);
ctx.lineTo(25960,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(45,216,88,0.85)';
ctx.strokeStyle='rgb(239,104,217)';
ctx.moveTo(25960,22408);
ctx.lineTo(25960,22372);
ctx.lineTo(25996,22372);
ctx.lineTo(25996,22408);
ctx.lineTo(25960,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,111,180,0.85)';
ctx.strokeStyle='rgb(227,183,64)';
ctx.moveTo(25960,22312);
ctx.lineTo(25960,22276);
ctx.lineTo(25996,22276);
ctx.lineTo(25996,22312);
ctx.lineTo(25960,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,73,75,0.85)';
ctx.strokeStyle='rgb(159,187,147)';
ctx.moveTo(26056,22504);
ctx.lineTo(26056,22468);
ctx.lineTo(26092,22468);
ctx.lineTo(26092,22504);
ctx.lineTo(26056,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,176,203,0.85)';
ctx.strokeStyle='rgb(157,148,118)';
ctx.moveTo(26056,22408);
ctx.lineTo(26056,22372);
ctx.lineTo(26092,22372);
ctx.lineTo(26092,22408);
ctx.lineTo(26056,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,195,156,0.85)';
ctx.strokeStyle='rgb(171,159,181)';
ctx.moveTo(26056,22312);
ctx.lineTo(26056,22276);
ctx.lineTo(26092,22276);
ctx.lineTo(26092,22312);
ctx.lineTo(26056,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,195,56,0.85)';
ctx.strokeStyle='rgb(224,178,59)';
ctx.moveTo(26152,22504);
ctx.lineTo(26152,22468);
ctx.lineTo(26188,22468);
ctx.lineTo(26188,22504);
ctx.lineTo(26152,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,253,162,0.85)';
ctx.strokeStyle='rgb(220,225,42)';
ctx.moveTo(26152,22408);
ctx.lineTo(26152,22372);
ctx.lineTo(26188,22372);
ctx.lineTo(26188,22408);
ctx.lineTo(26152,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,14,124,0.85)';
ctx.strokeStyle='rgb(41,7,163)';
ctx.moveTo(26152,22312);
ctx.lineTo(26152,22276);
ctx.lineTo(26188,22276);
ctx.lineTo(26188,22312);
ctx.lineTo(26152,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,111,224,0.85)';
ctx.strokeStyle='rgb(158,90,86)';
ctx.moveTo(26248,22504);
ctx.lineTo(26248,22468);
ctx.lineTo(26284,22468);
ctx.lineTo(26284,22504);
ctx.lineTo(26248,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,52,118,0.85)';
ctx.strokeStyle='rgb(163,141,229)';
ctx.moveTo(26248,22408);
ctx.lineTo(26248,22372);
ctx.lineTo(26284,22372);
ctx.lineTo(26284,22408);
ctx.lineTo(26248,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,164,209,0.85)';
ctx.strokeStyle='rgb(2,191,177)';
ctx.moveTo(26248,22312);
ctx.lineTo(26248,22276);
ctx.lineTo(26284,22276);
ctx.lineTo(26284,22312);
ctx.lineTo(26248,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,192,88,0.85)';
ctx.strokeStyle='rgb(206,142,135)';
ctx.moveTo(26344,22504);
ctx.lineTo(26344,22468);
ctx.lineTo(26380,22468);
ctx.lineTo(26380,22504);
ctx.lineTo(26344,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,173,15,0.85)';
ctx.strokeStyle='rgb(169,249,228)';
ctx.moveTo(26344,22408);
ctx.lineTo(26344,22372);
ctx.lineTo(26380,22372);
ctx.lineTo(26380,22408);
ctx.lineTo(26344,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,158,76,0.85)';
ctx.strokeStyle='rgb(230,138,61)';
ctx.moveTo(26344,22312);
ctx.lineTo(26344,22276);
ctx.lineTo(26380,22276);
ctx.lineTo(26380,22312);
ctx.lineTo(26344,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,207,27,0.85)';
ctx.strokeStyle='rgb(152,126,125)';
ctx.moveTo(26440,22504);
ctx.lineTo(26440,22468);
ctx.lineTo(26476,22468);
ctx.lineTo(26476,22504);
ctx.lineTo(26440,22504);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,13,26,0.85)';
ctx.strokeStyle='rgb(216,116,161)';
ctx.moveTo(26440,22408);
ctx.lineTo(26440,22372);
ctx.lineTo(26476,22372);
ctx.lineTo(26476,22408);
ctx.lineTo(26440,22408);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,189,84,0.85)';
ctx.strokeStyle='rgb(73,101,130)';
ctx.moveTo(26440,22312);
ctx.lineTo(26440,22276);
ctx.lineTo(26476,22276);
ctx.lineTo(26476,22312);
ctx.lineTo(26440,22312);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,134,142,0.85)';
ctx.strokeStyle='rgb(149,101,226)';
ctx.moveTo(24184,27040);
ctx.lineTo(24184,27004);
ctx.lineTo(24220,27004);
ctx.lineTo(24220,27040);
ctx.lineTo(24184,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,154,213,0.85)';
ctx.strokeStyle='rgb(151,197,170)';
ctx.moveTo(24184,26944);
ctx.lineTo(24184,26908);
ctx.lineTo(24220,26908);
ctx.lineTo(24220,26944);
ctx.lineTo(24184,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,96,76,0.85)';
ctx.strokeStyle='rgb(115,159,149)';
ctx.moveTo(24184,26848);
ctx.lineTo(24184,26812);
ctx.lineTo(24220,26812);
ctx.lineTo(24220,26848);
ctx.lineTo(24184,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,180,44,0.85)';
ctx.strokeStyle='rgb(221,127,4)';
ctx.moveTo(24280,27040);
ctx.lineTo(24280,27004);
ctx.lineTo(24316,27004);
ctx.lineTo(24316,27040);
ctx.lineTo(24280,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(142,248,198,0.85)';
ctx.strokeStyle='rgb(41,2,215)';
ctx.moveTo(24280,26944);
ctx.lineTo(24280,26908);
ctx.lineTo(24316,26908);
ctx.lineTo(24316,26944);
ctx.lineTo(24280,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,207,250,0.85)';
ctx.strokeStyle='rgb(25,229,134)';
ctx.moveTo(24280,26848);
ctx.lineTo(24280,26812);
ctx.lineTo(24316,26812);
ctx.lineTo(24316,26848);
ctx.lineTo(24280,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,151,189,0.85)';
ctx.strokeStyle='rgb(19,123,120)';
ctx.moveTo(24376,27040);
ctx.lineTo(24376,27004);
ctx.lineTo(24412,27004);
ctx.lineTo(24412,27040);
ctx.lineTo(24376,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(158,156,229,0.85)';
ctx.strokeStyle='rgb(75,68,227)';
ctx.moveTo(24376,26944);
ctx.lineTo(24376,26908);
ctx.lineTo(24412,26908);
ctx.lineTo(24412,26944);
ctx.lineTo(24376,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,128,95,0.85)';
ctx.strokeStyle='rgb(167,243,138)';
ctx.moveTo(24376,26848);
ctx.lineTo(24376,26812);
ctx.lineTo(24412,26812);
ctx.lineTo(24412,26848);
ctx.lineTo(24376,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,22,14,0.85)';
ctx.strokeStyle='rgb(37,228,155)';
ctx.moveTo(24472,27040);
ctx.lineTo(24472,27004);
ctx.lineTo(24508,27004);
ctx.lineTo(24508,27040);
ctx.lineTo(24472,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,75,90,0.85)';
ctx.strokeStyle='rgb(10,187,56)';
ctx.moveTo(24472,26944);
ctx.lineTo(24472,26908);
ctx.lineTo(24508,26908);
ctx.lineTo(24508,26944);
ctx.lineTo(24472,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,48,1,0.85)';
ctx.strokeStyle='rgb(22,143,148)';
ctx.moveTo(24472,26848);
ctx.lineTo(24472,26812);
ctx.lineTo(24508,26812);
ctx.lineTo(24508,26848);
ctx.lineTo(24472,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,127,202,0.85)';
ctx.strokeStyle='rgb(79,31,213)';
ctx.moveTo(24568,27040);
ctx.lineTo(24568,27004);
ctx.lineTo(24604,27004);
ctx.lineTo(24604,27040);
ctx.lineTo(24568,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,121,93,0.85)';
ctx.strokeStyle='rgb(233,197,199)';
ctx.moveTo(24568,26944);
ctx.lineTo(24568,26908);
ctx.lineTo(24604,26908);
ctx.lineTo(24604,26944);
ctx.lineTo(24568,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,31,165,0.85)';
ctx.strokeStyle='rgb(248,8,31)';
ctx.moveTo(24568,26848);
ctx.lineTo(24568,26812);
ctx.lineTo(24604,26812);
ctx.lineTo(24604,26848);
ctx.lineTo(24568,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,129,117,0.85)';
ctx.strokeStyle='rgb(91,73,188)';
ctx.moveTo(24664,27040);
ctx.lineTo(24664,27004);
ctx.lineTo(24700,27004);
ctx.lineTo(24700,27040);
ctx.lineTo(24664,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(216,246,244,0.85)';
ctx.strokeStyle='rgb(213,203,103)';
ctx.moveTo(24664,26944);
ctx.lineTo(24664,26908);
ctx.lineTo(24700,26908);
ctx.lineTo(24700,26944);
ctx.lineTo(24664,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,102,183,0.85)';
ctx.strokeStyle='rgb(245,3,207)';
ctx.moveTo(24664,26848);
ctx.lineTo(24664,26812);
ctx.lineTo(24700,26812);
ctx.lineTo(24700,26848);
ctx.lineTo(24664,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,148,136,0.85)';
ctx.strokeStyle='rgb(29,254,113)';
ctx.moveTo(24760,27040);
ctx.lineTo(24760,27004);
ctx.lineTo(24796,27004);
ctx.lineTo(24796,27040);
ctx.lineTo(24760,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,211,33,0.85)';
ctx.strokeStyle='rgb(45,123,114)';
ctx.moveTo(24760,26944);
ctx.lineTo(24760,26908);
ctx.lineTo(24796,26908);
ctx.lineTo(24796,26944);
ctx.lineTo(24760,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(217,36,129,0.85)';
ctx.strokeStyle='rgb(69,15,11)';
ctx.moveTo(24760,26848);
ctx.lineTo(24760,26812);
ctx.lineTo(24796,26812);
ctx.lineTo(24796,26848);
ctx.lineTo(24760,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,146,201,0.85)';
ctx.strokeStyle='rgb(194,236,134)';
ctx.moveTo(24856,27040);
ctx.lineTo(24856,27004);
ctx.lineTo(24892,27004);
ctx.lineTo(24892,27040);
ctx.lineTo(24856,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,98,148,0.85)';
ctx.strokeStyle='rgb(51,246,210)';
ctx.moveTo(24856,26944);
ctx.lineTo(24856,26908);
ctx.lineTo(24892,26908);
ctx.lineTo(24892,26944);
ctx.lineTo(24856,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,186,101,0.85)';
ctx.strokeStyle='rgb(239,106,57)';
ctx.moveTo(24856,26848);
ctx.lineTo(24856,26812);
ctx.lineTo(24892,26812);
ctx.lineTo(24892,26848);
ctx.lineTo(24856,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,69,182,0.85)';
ctx.strokeStyle='rgb(247,233,139)';
ctx.moveTo(24952,27040);
ctx.lineTo(24952,27004);
ctx.lineTo(24988,27004);
ctx.lineTo(24988,27040);
ctx.lineTo(24952,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,57,60,0.85)';
ctx.strokeStyle='rgb(15,211,131)';
ctx.moveTo(24952,26944);
ctx.lineTo(24952,26908);
ctx.lineTo(24988,26908);
ctx.lineTo(24988,26944);
ctx.lineTo(24952,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,19,4,0.85)';
ctx.strokeStyle='rgb(85,117,100)';
ctx.moveTo(24952,26848);
ctx.lineTo(24952,26812);
ctx.lineTo(24988,26812);
ctx.lineTo(24988,26848);
ctx.lineTo(24952,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,25,211,0.85)';
ctx.strokeStyle='rgb(100,112,129)';
ctx.moveTo(25048,27040);
ctx.lineTo(25048,27004);
ctx.lineTo(25084,27004);
ctx.lineTo(25084,27040);
ctx.lineTo(25048,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,174,88,0.85)';
ctx.strokeStyle='rgb(44,47,98)';
ctx.moveTo(25048,26944);
ctx.lineTo(25048,26908);
ctx.lineTo(25084,26908);
ctx.lineTo(25084,26944);
ctx.lineTo(25048,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(174,201,221,0.85)';
ctx.strokeStyle='rgb(171,233,221)';
ctx.moveTo(25048,26848);
ctx.lineTo(25048,26812);
ctx.lineTo(25084,26812);
ctx.lineTo(25084,26848);
ctx.lineTo(25048,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,109,113,0.85)';
ctx.strokeStyle='rgb(161,204,11)';
ctx.moveTo(25144,27040);
ctx.lineTo(25144,27004);
ctx.lineTo(25180,27004);
ctx.lineTo(25180,27040);
ctx.lineTo(25144,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,9,130,0.85)';
ctx.strokeStyle='rgb(77,222,199)';
ctx.moveTo(25144,26944);
ctx.lineTo(25144,26908);
ctx.lineTo(25180,26908);
ctx.lineTo(25180,26944);
ctx.lineTo(25144,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,137,161,0.85)';
ctx.strokeStyle='rgb(238,15,80)';
ctx.moveTo(25144,26848);
ctx.lineTo(25144,26812);
ctx.lineTo(25180,26812);
ctx.lineTo(25180,26848);
ctx.lineTo(25144,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,193,124,0.85)';
ctx.strokeStyle='rgb(241,204,82)';
ctx.moveTo(25480,28552);
ctx.lineTo(25480,28516);
ctx.lineTo(25516,28516);
ctx.lineTo(25516,28552);
ctx.lineTo(25480,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,196,12,0.85)';
ctx.strokeStyle='rgb(245,226,126)';
ctx.moveTo(25480,28456);
ctx.lineTo(25480,28420);
ctx.lineTo(25516,28420);
ctx.lineTo(25516,28456);
ctx.lineTo(25480,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,16,65,0.85)';
ctx.strokeStyle='rgb(164,68,225)';
ctx.moveTo(25480,28360);
ctx.lineTo(25480,28324);
ctx.lineTo(25516,28324);
ctx.lineTo(25516,28360);
ctx.lineTo(25480,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,217,141,0.85)';
ctx.strokeStyle='rgb(74,65,58)';
ctx.moveTo(25576,28552);
ctx.lineTo(25576,28516);
ctx.lineTo(25612,28516);
ctx.lineTo(25612,28552);
ctx.lineTo(25576,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,239,73,0.85)';
ctx.strokeStyle='rgb(219,26,106)';
ctx.moveTo(25576,28456);
ctx.lineTo(25576,28420);
ctx.lineTo(25612,28420);
ctx.lineTo(25612,28456);
ctx.lineTo(25576,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,105,238,0.85)';
ctx.strokeStyle='rgb(92,64,101)';
ctx.moveTo(25576,28360);
ctx.lineTo(25576,28324);
ctx.lineTo(25612,28324);
ctx.lineTo(25612,28360);
ctx.lineTo(25576,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,196,201,0.85)';
ctx.strokeStyle='rgb(7,53,250)';
ctx.moveTo(25672,28552);
ctx.lineTo(25672,28516);
ctx.lineTo(25708,28516);
ctx.lineTo(25708,28552);
ctx.lineTo(25672,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,190,176,0.85)';
ctx.strokeStyle='rgb(144,251,165)';
ctx.moveTo(25672,28456);
ctx.lineTo(25672,28420);
ctx.lineTo(25708,28420);
ctx.lineTo(25708,28456);
ctx.lineTo(25672,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(73,81,219,0.85)';
ctx.strokeStyle='rgb(8,199,0)';
ctx.moveTo(25672,28360);
ctx.lineTo(25672,28324);
ctx.lineTo(25708,28324);
ctx.lineTo(25708,28360);
ctx.lineTo(25672,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,35,238,0.85)';
ctx.strokeStyle='rgb(113,92,123)';
ctx.moveTo(25768,28552);
ctx.lineTo(25768,28516);
ctx.lineTo(25804,28516);
ctx.lineTo(25804,28552);
ctx.lineTo(25768,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,205,100,0.85)';
ctx.strokeStyle='rgb(44,254,236)';
ctx.moveTo(25768,28456);
ctx.lineTo(25768,28420);
ctx.lineTo(25804,28420);
ctx.lineTo(25804,28456);
ctx.lineTo(25768,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,200,154,0.85)';
ctx.strokeStyle='rgb(182,13,84)';
ctx.moveTo(25768,28360);
ctx.lineTo(25768,28324);
ctx.lineTo(25804,28324);
ctx.lineTo(25804,28360);
ctx.lineTo(25768,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,55,65,0.85)';
ctx.strokeStyle='rgb(217,188,106)';
ctx.moveTo(25864,28552);
ctx.lineTo(25864,28516);
ctx.lineTo(25900,28516);
ctx.lineTo(25900,28552);
ctx.lineTo(25864,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,85,113,0.85)';
ctx.strokeStyle='rgb(185,133,35)';
ctx.moveTo(25864,28456);
ctx.lineTo(25864,28420);
ctx.lineTo(25900,28420);
ctx.lineTo(25900,28456);
ctx.lineTo(25864,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,97,57,0.85)';
ctx.strokeStyle='rgb(234,180,80)';
ctx.moveTo(25864,28360);
ctx.lineTo(25864,28324);
ctx.lineTo(25900,28324);
ctx.lineTo(25900,28360);
ctx.lineTo(25864,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,128,114,0.85)';
ctx.strokeStyle='rgb(108,185,198)';
ctx.moveTo(25960,28552);
ctx.lineTo(25960,28516);
ctx.lineTo(25996,28516);
ctx.lineTo(25996,28552);
ctx.lineTo(25960,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,147,184,0.85)';
ctx.strokeStyle='rgb(175,251,109)';
ctx.moveTo(25960,28456);
ctx.lineTo(25960,28420);
ctx.lineTo(25996,28420);
ctx.lineTo(25996,28456);
ctx.lineTo(25960,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,56,113,0.85)';
ctx.strokeStyle='rgb(120,77,84)';
ctx.moveTo(25960,28360);
ctx.lineTo(25960,28324);
ctx.lineTo(25996,28324);
ctx.lineTo(25996,28360);
ctx.lineTo(25960,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,96,9,0.85)';
ctx.strokeStyle='rgb(1,214,98)';
ctx.moveTo(26056,28552);
ctx.lineTo(26056,28516);
ctx.lineTo(26092,28516);
ctx.lineTo(26092,28552);
ctx.lineTo(26056,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,130,122,0.85)';
ctx.strokeStyle='rgb(14,148,179)';
ctx.moveTo(26056,28456);
ctx.lineTo(26056,28420);
ctx.lineTo(26092,28420);
ctx.lineTo(26092,28456);
ctx.lineTo(26056,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,130,125,0.85)';
ctx.strokeStyle='rgb(33,140,206)';
ctx.moveTo(26056,28360);
ctx.lineTo(26056,28324);
ctx.lineTo(26092,28324);
ctx.lineTo(26092,28360);
ctx.lineTo(26056,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,35,30,0.85)';
ctx.strokeStyle='rgb(52,129,252)';
ctx.moveTo(26152,28552);
ctx.lineTo(26152,28516);
ctx.lineTo(26188,28516);
ctx.lineTo(26188,28552);
ctx.lineTo(26152,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,93,168,0.85)';
ctx.strokeStyle='rgb(40,6,110)';
ctx.moveTo(26152,28456);
ctx.lineTo(26152,28420);
ctx.lineTo(26188,28420);
ctx.lineTo(26188,28456);
ctx.lineTo(26152,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,79,9,0.85)';
ctx.strokeStyle='rgb(135,134,228)';
ctx.moveTo(26152,28360);
ctx.lineTo(26152,28324);
ctx.lineTo(26188,28324);
ctx.lineTo(26188,28360);
ctx.lineTo(26152,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,228,209,0.85)';
ctx.strokeStyle='rgb(13,26,146)';
ctx.moveTo(26248,28552);
ctx.lineTo(26248,28516);
ctx.lineTo(26284,28516);
ctx.lineTo(26284,28552);
ctx.lineTo(26248,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,172,239,0.85)';
ctx.strokeStyle='rgb(244,240,22)';
ctx.moveTo(26248,28456);
ctx.lineTo(26248,28420);
ctx.lineTo(26284,28420);
ctx.lineTo(26284,28456);
ctx.lineTo(26248,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,244,8,0.85)';
ctx.strokeStyle='rgb(34,222,106)';
ctx.moveTo(26248,28360);
ctx.lineTo(26248,28324);
ctx.lineTo(26284,28324);
ctx.lineTo(26284,28360);
ctx.lineTo(26248,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,146,250,0.85)';
ctx.strokeStyle='rgb(219,39,121)';
ctx.moveTo(26344,28552);
ctx.lineTo(26344,28516);
ctx.lineTo(26380,28516);
ctx.lineTo(26380,28552);
ctx.lineTo(26344,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,23,198,0.85)';
ctx.strokeStyle='rgb(93,68,63)';
ctx.moveTo(26344,28456);
ctx.lineTo(26344,28420);
ctx.lineTo(26380,28420);
ctx.lineTo(26380,28456);
ctx.lineTo(26344,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,224,156,0.85)';
ctx.strokeStyle='rgb(93,117,143)';
ctx.moveTo(26344,28360);
ctx.lineTo(26344,28324);
ctx.lineTo(26380,28324);
ctx.lineTo(26380,28360);
ctx.lineTo(26344,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,226,92,0.85)';
ctx.strokeStyle='rgb(193,155,67)';
ctx.moveTo(26440,28552);
ctx.lineTo(26440,28516);
ctx.lineTo(26476,28516);
ctx.lineTo(26476,28552);
ctx.lineTo(26440,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,177,55,0.85)';
ctx.strokeStyle='rgb(116,252,94)';
ctx.moveTo(26440,28456);
ctx.lineTo(26440,28420);
ctx.lineTo(26476,28420);
ctx.lineTo(26476,28456);
ctx.lineTo(26440,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,164,107,0.85)';
ctx.strokeStyle='rgb(97,58,52)';
ctx.moveTo(26440,28360);
ctx.lineTo(26440,28324);
ctx.lineTo(26476,28324);
ctx.lineTo(26476,28360);
ctx.lineTo(26440,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,27,16,0.85)';
ctx.strokeStyle='rgb(72,67,187)';
ctx.moveTo(21616,26620);
ctx.lineTo(21616,26584);
ctx.lineTo(21652,26584);
ctx.lineTo(21652,26620);
ctx.lineTo(21616,26620);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,39,0,0.85)';
ctx.strokeStyle='rgb(57,132,94)';
ctx.moveTo(21076,26620);
ctx.lineTo(21076,26584);
ctx.lineTo(21112,26584);
ctx.lineTo(21112,26620);
ctx.lineTo(21076,26620);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,51,250,0.85)';
ctx.strokeStyle='rgb(82,213,165)';
ctx.moveTo(25672,31414);
ctx.lineTo(25672,31378);
ctx.lineTo(25708,31378);
ctx.lineTo(25708,31414);
ctx.lineTo(25672,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,159,12,0.85)';
ctx.strokeStyle='rgb(102,75,249)';
ctx.moveTo(25768,31414);
ctx.lineTo(25768,31378);
ctx.lineTo(25804,31378);
ctx.lineTo(25804,31414);
ctx.lineTo(25768,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,153,49,0.85)';
ctx.strokeStyle='rgb(84,232,47)';
ctx.moveTo(25864,31414);
ctx.lineTo(25864,31378);
ctx.lineTo(25900,31378);
ctx.lineTo(25900,31414);
ctx.lineTo(25864,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,254,167,0.85)';
ctx.strokeStyle='rgb(104,73,204)';
ctx.moveTo(25960,31414);
ctx.lineTo(25960,31378);
ctx.lineTo(25996,31378);
ctx.lineTo(25996,31414);
ctx.lineTo(25960,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(248,112,66,0.85)';
ctx.strokeStyle='rgb(47,195,208)';
ctx.moveTo(26056,31414);
ctx.lineTo(26056,31378);
ctx.lineTo(26092,31378);
ctx.lineTo(26092,31414);
ctx.lineTo(26056,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,165,133,0.85)';
ctx.strokeStyle='rgb(153,143,193)';
ctx.moveTo(26152,31414);
ctx.lineTo(26152,31378);
ctx.lineTo(26188,31378);
ctx.lineTo(26188,31414);
ctx.lineTo(26152,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,191,99,0.85)';
ctx.strokeStyle='rgb(27,119,190)';
ctx.moveTo(26248,31414);
ctx.lineTo(26248,31378);
ctx.lineTo(26284,31378);
ctx.lineTo(26284,31414);
ctx.lineTo(26248,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,139,200,0.85)';
ctx.strokeStyle='rgb(252,145,82)';
ctx.moveTo(26344,31414);
ctx.lineTo(26344,31378);
ctx.lineTo(26380,31378);
ctx.lineTo(26380,31414);
ctx.lineTo(26344,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(177,90,199,0.85)';
ctx.strokeStyle='rgb(60,47,125)';
ctx.moveTo(26440,31414);
ctx.lineTo(26440,31378);
ctx.lineTo(26476,31378);
ctx.lineTo(26476,31414);
ctx.lineTo(26440,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,97,146,0.85)';
ctx.strokeStyle='rgb(174,3,28)';
ctx.moveTo(24472,29872);
ctx.lineTo(24472,29836);
ctx.lineTo(24508,29836);
ctx.lineTo(24508,29872);
ctx.lineTo(24472,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,206,85,0.85)';
ctx.strokeStyle='rgb(167,228,170)';
ctx.moveTo(24568,30064);
ctx.lineTo(24568,30028);
ctx.lineTo(24604,30028);
ctx.lineTo(24604,30064);
ctx.lineTo(24568,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,202,56,0.85)';
ctx.strokeStyle='rgb(59,107,31)';
ctx.moveTo(24568,29968);
ctx.lineTo(24568,29932);
ctx.lineTo(24604,29932);
ctx.lineTo(24604,29968);
ctx.lineTo(24568,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,241,23,0.85)';
ctx.strokeStyle='rgb(102,186,104)';
ctx.moveTo(24568,29872);
ctx.lineTo(24568,29836);
ctx.lineTo(24604,29836);
ctx.lineTo(24604,29872);
ctx.lineTo(24568,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,84,165,0.85)';
ctx.strokeStyle='rgb(113,124,244)';
ctx.moveTo(24664,30064);
ctx.lineTo(24664,30028);
ctx.lineTo(24700,30028);
ctx.lineTo(24700,30064);
ctx.lineTo(24664,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,99,200,0.85)';
ctx.strokeStyle='rgb(214,71,218)';
ctx.moveTo(24664,29968);
ctx.lineTo(24664,29932);
ctx.lineTo(24700,29932);
ctx.lineTo(24700,29968);
ctx.lineTo(24664,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,22,95,0.85)';
ctx.strokeStyle='rgb(148,65,66)';
ctx.moveTo(24664,29872);
ctx.lineTo(24664,29836);
ctx.lineTo(24700,29836);
ctx.lineTo(24700,29872);
ctx.lineTo(24664,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,9,224,0.85)';
ctx.strokeStyle='rgb(20,53,19)';
ctx.moveTo(24760,30064);
ctx.lineTo(24760,30028);
ctx.lineTo(24796,30028);
ctx.lineTo(24796,30064);
ctx.lineTo(24760,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,75,32,0.85)';
ctx.strokeStyle='rgb(164,133,211)';
ctx.moveTo(24760,29968);
ctx.lineTo(24760,29932);
ctx.lineTo(24796,29932);
ctx.lineTo(24796,29968);
ctx.lineTo(24760,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,207,78,0.85)';
ctx.strokeStyle='rgb(247,113,246)';
ctx.moveTo(24760,29872);
ctx.lineTo(24760,29836);
ctx.lineTo(24796,29836);
ctx.lineTo(24796,29872);
ctx.lineTo(24760,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(36,70,205,0.85)';
ctx.strokeStyle='rgb(254,15,240)';
ctx.moveTo(24856,30064);
ctx.lineTo(24856,30028);
ctx.lineTo(24892,30028);
ctx.lineTo(24892,30064);
ctx.lineTo(24856,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,15,43,0.85)';
ctx.strokeStyle='rgb(26,186,61)';
ctx.moveTo(24856,29968);
ctx.lineTo(24856,29932);
ctx.lineTo(24892,29932);
ctx.lineTo(24892,29968);
ctx.lineTo(24856,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,150,128,0.85)';
ctx.strokeStyle='rgb(248,147,3)';
ctx.moveTo(24856,29872);
ctx.lineTo(24856,29836);
ctx.lineTo(24892,29836);
ctx.lineTo(24892,29872);
ctx.lineTo(24856,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(249,49,108,0.85)';
ctx.strokeStyle='rgb(76,121,131)';
ctx.moveTo(24952,30064);
ctx.lineTo(24952,30028);
ctx.lineTo(24988,30028);
ctx.lineTo(24988,30064);
ctx.lineTo(24952,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(198,248,101,0.85)';
ctx.strokeStyle='rgb(228,190,5)';
ctx.moveTo(24952,29968);
ctx.lineTo(24952,29932);
ctx.lineTo(24988,29932);
ctx.lineTo(24988,29968);
ctx.lineTo(24952,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,165,156,0.85)';
ctx.strokeStyle='rgb(175,172,79)';
ctx.moveTo(24952,29872);
ctx.lineTo(24952,29836);
ctx.lineTo(24988,29836);
ctx.lineTo(24988,29872);
ctx.lineTo(24952,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,119,177,0.85)';
ctx.strokeStyle='rgb(25,72,171)';
ctx.moveTo(25048,30064);
ctx.lineTo(25048,30028);
ctx.lineTo(25084,30028);
ctx.lineTo(25084,30064);
ctx.lineTo(25048,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,46,206,0.85)';
ctx.strokeStyle='rgb(117,144,26)';
ctx.moveTo(25048,29968);
ctx.lineTo(25048,29932);
ctx.lineTo(25084,29932);
ctx.lineTo(25084,29968);
ctx.lineTo(25048,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,168,225,0.85)';
ctx.strokeStyle='rgb(53,129,4)';
ctx.moveTo(25048,29872);
ctx.lineTo(25048,29836);
ctx.lineTo(25084,29836);
ctx.lineTo(25084,29872);
ctx.lineTo(25048,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,225,235,0.85)';
ctx.strokeStyle='rgb(75,235,225)';
ctx.moveTo(25144,30064);
ctx.lineTo(25144,30028);
ctx.lineTo(25180,30028);
ctx.lineTo(25180,30064);
ctx.lineTo(25144,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(56,65,168,0.85)';
ctx.strokeStyle='rgb(186,107,224)';
ctx.moveTo(25144,29968);
ctx.lineTo(25144,29932);
ctx.lineTo(25180,29932);
ctx.lineTo(25180,29968);
ctx.lineTo(25144,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,41,177,0.85)';
ctx.strokeStyle='rgb(254,157,56)';
ctx.moveTo(25144,29872);
ctx.lineTo(25144,29836);
ctx.lineTo(25180,29836);
ctx.lineTo(25180,29872);
ctx.lineTo(25144,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,166,208,0.85)';
ctx.strokeStyle='rgb(208,49,192)';
ctx.moveTo(24184,30064);
ctx.lineTo(24184,30028);
ctx.lineTo(24220,30028);
ctx.lineTo(24220,30064);
ctx.lineTo(24184,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,143,215,0.85)';
ctx.strokeStyle='rgb(242,199,209)';
ctx.moveTo(24184,29968);
ctx.lineTo(24184,29932);
ctx.lineTo(24220,29932);
ctx.lineTo(24220,29968);
ctx.lineTo(24184,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,136,226,0.85)';
ctx.strokeStyle='rgb(254,208,125)';
ctx.moveTo(25480,31414);
ctx.lineTo(25480,31378);
ctx.lineTo(25516,31378);
ctx.lineTo(25516,31414);
ctx.lineTo(25480,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,164,244,0.85)';
ctx.strokeStyle='rgb(64,108,215)';
ctx.moveTo(25576,31414);
ctx.lineTo(25576,31378);
ctx.lineTo(25612,31378);
ctx.lineTo(25612,31414);
ctx.lineTo(25576,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,158,26,0.85)';
ctx.strokeStyle='rgb(18,216,247)';
ctx.moveTo(24184,29872);
ctx.lineTo(24184,29836);
ctx.lineTo(24220,29836);
ctx.lineTo(24220,29872);
ctx.lineTo(24184,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(112,207,40,0.85)';
ctx.strokeStyle='rgb(153,62,24)';
ctx.moveTo(24280,30064);
ctx.lineTo(24280,30028);
ctx.lineTo(24316,30028);
ctx.lineTo(24316,30064);
ctx.lineTo(24280,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,181,228,0.85)';
ctx.strokeStyle='rgb(4,161,233)';
ctx.moveTo(24280,29968);
ctx.lineTo(24280,29932);
ctx.lineTo(24316,29932);
ctx.lineTo(24316,29968);
ctx.lineTo(24280,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,24,106,0.85)';
ctx.strokeStyle='rgb(25,28,172)';
ctx.moveTo(24280,29872);
ctx.lineTo(24280,29836);
ctx.lineTo(24316,29836);
ctx.lineTo(24316,29872);
ctx.lineTo(24280,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,159,214,0.85)';
ctx.strokeStyle='rgb(225,133,96)';
ctx.moveTo(24376,30064);
ctx.lineTo(24376,30028);
ctx.lineTo(24412,30028);
ctx.lineTo(24412,30064);
ctx.lineTo(24376,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,31,174,0.85)';
ctx.strokeStyle='rgb(30,221,193)';
ctx.moveTo(24376,29968);
ctx.lineTo(24376,29932);
ctx.lineTo(24412,29932);
ctx.lineTo(24412,29968);
ctx.lineTo(24376,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,63,119,0.85)';
ctx.strokeStyle='rgb(171,177,215)';
ctx.moveTo(24376,29872);
ctx.lineTo(24376,29836);
ctx.lineTo(24412,29836);
ctx.lineTo(24412,29872);
ctx.lineTo(24376,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,194,134,0.85)';
ctx.strokeStyle='rgb(250,160,183)';
ctx.moveTo(24472,30064);
ctx.lineTo(24472,30028);
ctx.lineTo(24508,30028);
ctx.lineTo(24508,30064);
ctx.lineTo(24472,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,96,40,0.85)';
ctx.strokeStyle='rgb(122,192,61)';
ctx.moveTo(24472,29968);
ctx.lineTo(24472,29932);
ctx.lineTo(24508,29932);
ctx.lineTo(24508,29968);
ctx.lineTo(24472,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,13,129,0.85)';
ctx.strokeStyle='rgb(92,232,44)';
ctx.moveTo(24664,31744);
ctx.lineTo(24664,31708);
ctx.lineTo(24700,31708);
ctx.lineTo(24700,31744);
ctx.lineTo(24664,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,164,136,0.85)';
ctx.strokeStyle='rgb(171,157,137)';
ctx.moveTo(24664,31648);
ctx.lineTo(24664,31612);
ctx.lineTo(24700,31612);
ctx.lineTo(24700,31648);
ctx.lineTo(24664,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,213,36,0.85)';
ctx.strokeStyle='rgb(103,73,97)';
ctx.moveTo(24760,31648);
ctx.lineTo(24760,31612);
ctx.lineTo(24796,31612);
ctx.lineTo(24796,31648);
ctx.lineTo(24760,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,136,101,0.85)';
ctx.strokeStyle='rgb(45,4,186)';
ctx.moveTo(24856,31744);
ctx.lineTo(24856,31708);
ctx.lineTo(24892,31708);
ctx.lineTo(24892,31744);
ctx.lineTo(24856,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,144,245,0.85)';
ctx.strokeStyle='rgb(128,239,50)';
ctx.moveTo(24856,31648);
ctx.lineTo(24856,31612);
ctx.lineTo(24892,31612);
ctx.lineTo(24892,31648);
ctx.lineTo(24856,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,238,78,0.85)';
ctx.strokeStyle='rgb(91,138,184)';
ctx.moveTo(24952,31744);
ctx.lineTo(24952,31708);
ctx.lineTo(24988,31708);
ctx.lineTo(24988,31744);
ctx.lineTo(24952,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,189,164,0.85)';
ctx.strokeStyle='rgb(156,46,22)';
ctx.moveTo(24952,31648);
ctx.lineTo(24952,31612);
ctx.lineTo(24988,31612);
ctx.lineTo(24988,31648);
ctx.lineTo(24952,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,248,142,0.85)';
ctx.strokeStyle='rgb(50,117,172)';
ctx.moveTo(25048,31744);
ctx.lineTo(25048,31708);
ctx.lineTo(25084,31708);
ctx.lineTo(25084,31744);
ctx.lineTo(25048,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,42,191,0.85)';
ctx.strokeStyle='rgb(171,221,134)';
ctx.moveTo(25048,31648);
ctx.lineTo(25048,31612);
ctx.lineTo(25084,31612);
ctx.lineTo(25084,31648);
ctx.lineTo(25048,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,94,50,0.85)';
ctx.strokeStyle='rgb(145,86,11)';
ctx.moveTo(24760,31744);
ctx.lineTo(24760,31708);
ctx.lineTo(24796,31708);
ctx.lineTo(24796,31744);
ctx.lineTo(24760,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,119,222,0.85)';
ctx.strokeStyle='rgb(81,44,171)';
ctx.moveTo(25144,31744);
ctx.lineTo(25144,31708);
ctx.lineTo(25180,31708);
ctx.lineTo(25180,31744);
ctx.lineTo(25144,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,187,189,0.85)';
ctx.strokeStyle='rgb(201,23,14)';
ctx.moveTo(25144,31648);
ctx.lineTo(25144,31612);
ctx.lineTo(25180,31612);
ctx.lineTo(25180,31648);
ctx.lineTo(25144,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,6,23,0.85)';
ctx.strokeStyle='rgb(200,176,227)';
ctx.moveTo(24472,31744);
ctx.lineTo(24472,31708);
ctx.lineTo(24508,31708);
ctx.lineTo(24508,31744);
ctx.lineTo(24472,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,138,98,0.85)';
ctx.strokeStyle='rgb(200,160,159)';
ctx.moveTo(24472,31648);
ctx.lineTo(24472,31612);
ctx.lineTo(24508,31612);
ctx.lineTo(24508,31648);
ctx.lineTo(24472,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,153,78,0.85)';
ctx.strokeStyle='rgb(177,118,106)';
ctx.moveTo(24184,31744);
ctx.lineTo(24184,31708);
ctx.lineTo(24220,31708);
ctx.lineTo(24220,31744);
ctx.lineTo(24184,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,201,5,0.85)';
ctx.strokeStyle='rgb(194,208,192)';
ctx.moveTo(24568,31744);
ctx.lineTo(24568,31708);
ctx.lineTo(24604,31708);
ctx.lineTo(24604,31744);
ctx.lineTo(24568,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,35,7,0.85)';
ctx.strokeStyle='rgb(146,209,81)';
ctx.moveTo(24568,31648);
ctx.lineTo(24568,31612);
ctx.lineTo(24604,31612);
ctx.lineTo(24604,31648);
ctx.lineTo(24568,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,36,2,0.85)';
ctx.strokeStyle='rgb(240,143,151)';
ctx.moveTo(24184,31648);
ctx.lineTo(24184,31612);
ctx.lineTo(24220,31612);
ctx.lineTo(24220,31648);
ctx.lineTo(24184,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(111,118,102,0.85)';
ctx.strokeStyle='rgb(134,246,106)';
ctx.moveTo(24280,31744);
ctx.lineTo(24280,31708);
ctx.lineTo(24316,31708);
ctx.lineTo(24316,31744);
ctx.lineTo(24280,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,77,100,0.85)';
ctx.strokeStyle='rgb(236,129,146)';
ctx.moveTo(24280,31648);
ctx.lineTo(24280,31612);
ctx.lineTo(24316,31612);
ctx.lineTo(24316,31648);
ctx.lineTo(24280,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,38,241,0.85)';
ctx.strokeStyle='rgb(92,57,240)';
ctx.moveTo(24376,31744);
ctx.lineTo(24376,31708);
ctx.lineTo(24412,31708);
ctx.lineTo(24412,31744);
ctx.lineTo(24376,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,13,146,0.85)';
ctx.strokeStyle='rgb(21,88,107)';
ctx.moveTo(24376,31648);
ctx.lineTo(24376,31612);
ctx.lineTo(24412,31612);
ctx.lineTo(24412,31648);
ctx.lineTo(24376,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,9,76,0.85)';
ctx.strokeStyle='rgb(150,80,66)';
ctx.moveTo(24568,32128);
ctx.lineTo(24568,32092);
ctx.lineTo(24604,32092);
ctx.lineTo(24604,32128);
ctx.lineTo(24568,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,220,58,0.85)';
ctx.strokeStyle='rgb(97,130,90)';
ctx.moveTo(24664,32608);
ctx.lineTo(24664,32572);
ctx.lineTo(24700,32572);
ctx.lineTo(24700,32608);
ctx.lineTo(24664,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,33,199,0.85)';
ctx.strokeStyle='rgb(94,143,235)';
ctx.moveTo(24664,32512);
ctx.lineTo(24664,32476);
ctx.lineTo(24700,32476);
ctx.lineTo(24700,32512);
ctx.lineTo(24664,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(140,4,131,0.85)';
ctx.strokeStyle='rgb(66,236,191)';
ctx.moveTo(24664,32416);
ctx.lineTo(24664,32380);
ctx.lineTo(24700,32380);
ctx.lineTo(24700,32416);
ctx.lineTo(24664,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,202,67,0.85)';
ctx.strokeStyle='rgb(63,78,221)';
ctx.moveTo(24664,32320);
ctx.lineTo(24664,32284);
ctx.lineTo(24700,32284);
ctx.lineTo(24700,32320);
ctx.lineTo(24664,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,213,237,0.85)';
ctx.strokeStyle='rgb(225,212,172)';
ctx.moveTo(24664,32224);
ctx.lineTo(24664,32188);
ctx.lineTo(24700,32188);
ctx.lineTo(24700,32224);
ctx.lineTo(24664,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(229,139,214,0.85)';
ctx.strokeStyle='rgb(66,144,249)';
ctx.moveTo(24664,32128);
ctx.lineTo(24664,32092);
ctx.lineTo(24700,32092);
ctx.lineTo(24700,32128);
ctx.lineTo(24664,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,148,135,0.85)';
ctx.strokeStyle='rgb(153,9,106)';
ctx.moveTo(24664,32032);
ctx.lineTo(24664,31996);
ctx.lineTo(24700,31996);
ctx.lineTo(24700,32032);
ctx.lineTo(24664,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(78,154,134,0.85)';
ctx.strokeStyle='rgb(124,120,37)';
ctx.moveTo(24664,31936);
ctx.lineTo(24664,31900);
ctx.lineTo(24700,31900);
ctx.lineTo(24700,31936);
ctx.lineTo(24664,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,74,119,0.85)';
ctx.strokeStyle='rgb(54,182,221)';
ctx.moveTo(24664,31840);
ctx.lineTo(24664,31804);
ctx.lineTo(24700,31804);
ctx.lineTo(24700,31840);
ctx.lineTo(24664,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,91,190,0.85)';
ctx.strokeStyle='rgb(234,103,130)';
ctx.moveTo(24760,32128);
ctx.lineTo(24760,32092);
ctx.lineTo(24796,32092);
ctx.lineTo(24796,32128);
ctx.lineTo(24760,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(100,128,195,0.85)';
ctx.strokeStyle='rgb(195,32,117)';
ctx.moveTo(24856,32128);
ctx.lineTo(24856,32092);
ctx.lineTo(24892,32092);
ctx.lineTo(24892,32128);
ctx.lineTo(24856,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(206,198,72,0.85)';
ctx.strokeStyle='rgb(56,166,53)';
ctx.moveTo(24952,32128);
ctx.lineTo(24952,32092);
ctx.lineTo(24988,32092);
ctx.lineTo(24988,32128);
ctx.lineTo(24952,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,19,194,0.85)';
ctx.strokeStyle='rgb(8,212,39)';
ctx.moveTo(25048,32128);
ctx.lineTo(25048,32092);
ctx.lineTo(25084,32092);
ctx.lineTo(25084,32128);
ctx.lineTo(25048,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,20,221,0.85)';
ctx.strokeStyle='rgb(217,32,60)';
ctx.moveTo(25144,32128);
ctx.lineTo(25144,32092);
ctx.lineTo(25180,32092);
ctx.lineTo(25180,32128);
ctx.lineTo(25144,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(150,113,191,0.85)';
ctx.strokeStyle='rgb(208,236,105)';
ctx.moveTo(24760,32032);
ctx.lineTo(24760,31996);
ctx.lineTo(24796,31996);
ctx.lineTo(24796,32032);
ctx.lineTo(24760,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,142,18,0.85)';
ctx.strokeStyle='rgb(52,25,162)';
ctx.moveTo(24856,32032);
ctx.lineTo(24856,31996);
ctx.lineTo(24892,31996);
ctx.lineTo(24892,32032);
ctx.lineTo(24856,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,129,12,0.85)';
ctx.strokeStyle='rgb(2,101,89)';
ctx.moveTo(24856,31936);
ctx.lineTo(24856,31900);
ctx.lineTo(24892,31900);
ctx.lineTo(24892,31936);
ctx.lineTo(24856,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,127,179,0.85)';
ctx.strokeStyle='rgb(22,248,141)';
ctx.moveTo(24856,31840);
ctx.lineTo(24856,31804);
ctx.lineTo(24892,31804);
ctx.lineTo(24892,31840);
ctx.lineTo(24856,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(203,190,143,0.85)';
ctx.strokeStyle='rgb(29,242,196)';
ctx.moveTo(24760,31936);
ctx.lineTo(24760,31900);
ctx.lineTo(24796,31900);
ctx.lineTo(24796,31936);
ctx.lineTo(24760,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(173,161,22,0.85)';
ctx.strokeStyle='rgb(153,158,199)';
ctx.moveTo(24952,32032);
ctx.lineTo(24952,31996);
ctx.lineTo(24988,31996);
ctx.lineTo(24988,32032);
ctx.lineTo(24952,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,44,186,0.85)';
ctx.strokeStyle='rgb(57,166,177)';
ctx.moveTo(24952,31936);
ctx.lineTo(24952,31900);
ctx.lineTo(24988,31900);
ctx.lineTo(24988,31936);
ctx.lineTo(24952,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,216,232,0.85)';
ctx.strokeStyle='rgb(216,94,133)';
ctx.moveTo(24952,31840);
ctx.lineTo(24952,31804);
ctx.lineTo(24988,31804);
ctx.lineTo(24988,31840);
ctx.lineTo(24952,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,233,63,0.85)';
ctx.strokeStyle='rgb(61,86,22)';
ctx.moveTo(24760,31840);
ctx.lineTo(24760,31804);
ctx.lineTo(24796,31804);
ctx.lineTo(24796,31840);
ctx.lineTo(24760,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,16,179,0.85)';
ctx.strokeStyle='rgb(157,17,117)';
ctx.moveTo(25048,32032);
ctx.lineTo(25048,31996);
ctx.lineTo(25084,31996);
ctx.lineTo(25084,32032);
ctx.lineTo(25048,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,34,131,0.85)';
ctx.strokeStyle='rgb(199,253,102)';
ctx.moveTo(25048,31936);
ctx.lineTo(25048,31900);
ctx.lineTo(25084,31900);
ctx.lineTo(25084,31936);
ctx.lineTo(25048,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,149,195,0.85)';
ctx.strokeStyle='rgb(4,112,18)';
ctx.moveTo(25048,31840);
ctx.lineTo(25048,31804);
ctx.lineTo(25084,31804);
ctx.lineTo(25084,31840);
ctx.lineTo(25048,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,32,254,0.85)';
ctx.strokeStyle='rgb(209,35,235)';
ctx.moveTo(25144,32032);
ctx.lineTo(25144,31996);
ctx.lineTo(25180,31996);
ctx.lineTo(25180,32032);
ctx.lineTo(25144,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(16,84,77,0.85)';
ctx.strokeStyle='rgb(94,149,47)';
ctx.moveTo(25144,31936);
ctx.lineTo(25144,31900);
ctx.lineTo(25180,31900);
ctx.lineTo(25180,31936);
ctx.lineTo(25144,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(188,76,249,0.85)';
ctx.strokeStyle='rgb(103,117,164)';
ctx.moveTo(25144,31840);
ctx.lineTo(25144,31804);
ctx.lineTo(25180,31804);
ctx.lineTo(25180,31840);
ctx.lineTo(25144,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,9,124,0.85)';
ctx.strokeStyle='rgb(190,29,64)';
ctx.moveTo(24568,32032);
ctx.lineTo(24568,31996);
ctx.lineTo(24604,31996);
ctx.lineTo(24604,32032);
ctx.lineTo(24568,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,252,144,0.85)';
ctx.strokeStyle='rgb(64,82,210)';
ctx.moveTo(24568,31936);
ctx.lineTo(24568,31900);
ctx.lineTo(24604,31900);
ctx.lineTo(24604,31936);
ctx.lineTo(24568,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,233,254,0.85)';
ctx.strokeStyle='rgb(30,8,61)';
ctx.moveTo(24568,31840);
ctx.lineTo(24568,31804);
ctx.lineTo(24604,31804);
ctx.lineTo(24604,31840);
ctx.lineTo(24568,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,108,87,0.85)';
ctx.strokeStyle='rgb(87,6,99)';
ctx.moveTo(24568,32416);
ctx.lineTo(24568,32380);
ctx.lineTo(24604,32380);
ctx.lineTo(24604,32416);
ctx.lineTo(24568,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,107,103,0.85)';
ctx.strokeStyle='rgb(201,17,204)';
ctx.moveTo(24568,32320);
ctx.lineTo(24568,32284);
ctx.lineTo(24604,32284);
ctx.lineTo(24604,32320);
ctx.lineTo(24568,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,56,208,0.85)';
ctx.strokeStyle='rgb(226,59,181)';
ctx.moveTo(24568,32224);
ctx.lineTo(24568,32188);
ctx.lineTo(24604,32188);
ctx.lineTo(24604,32224);
ctx.lineTo(24568,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,108,107,0.85)';
ctx.strokeStyle='rgb(142,214,228)';
ctx.moveTo(24568,32608);
ctx.lineTo(24568,32572);
ctx.lineTo(24604,32572);
ctx.lineTo(24604,32608);
ctx.lineTo(24568,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,196,218,0.85)';
ctx.strokeStyle='rgb(44,232,82)';
ctx.moveTo(24568,32512);
ctx.lineTo(24568,32476);
ctx.lineTo(24604,32476);
ctx.lineTo(24604,32512);
ctx.lineTo(24568,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,228,43,0.85)';
ctx.strokeStyle='rgb(197,32,172)';
ctx.moveTo(24856,32224);
ctx.lineTo(24856,32188);
ctx.lineTo(24892,32188);
ctx.lineTo(24892,32224);
ctx.lineTo(24856,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(182,198,179,0.85)';
ctx.strokeStyle='rgb(124,210,11)';
ctx.moveTo(24760,32512);
ctx.lineTo(24760,32476);
ctx.lineTo(24796,32476);
ctx.lineTo(24796,32512);
ctx.lineTo(24760,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,212,57,0.85)';
ctx.strokeStyle='rgb(21,131,116)';
ctx.moveTo(24760,32416);
ctx.lineTo(24760,32380);
ctx.lineTo(24796,32380);
ctx.lineTo(24796,32416);
ctx.lineTo(24760,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(168,207,189,0.85)';
ctx.strokeStyle='rgb(30,40,39)';
ctx.moveTo(25048,32608);
ctx.lineTo(25048,32572);
ctx.lineTo(25084,32572);
ctx.lineTo(25084,32608);
ctx.lineTo(25048,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(208,212,194,0.85)';
ctx.strokeStyle='rgb(163,44,1)';
ctx.moveTo(25048,32512);
ctx.lineTo(25048,32476);
ctx.lineTo(25084,32476);
ctx.lineTo(25084,32512);
ctx.lineTo(25048,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,1,121,0.85)';
ctx.strokeStyle='rgb(60,217,180)';
ctx.moveTo(25048,32416);
ctx.lineTo(25048,32380);
ctx.lineTo(25084,32380);
ctx.lineTo(25084,32416);
ctx.lineTo(25048,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,143,68,0.85)';
ctx.strokeStyle='rgb(231,165,124)';
ctx.moveTo(25048,32320);
ctx.lineTo(25048,32284);
ctx.lineTo(25084,32284);
ctx.lineTo(25084,32320);
ctx.lineTo(25048,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,220,231,0.85)';
ctx.strokeStyle='rgb(36,147,231)';
ctx.moveTo(25048,32224);
ctx.lineTo(25048,32188);
ctx.lineTo(25084,32188);
ctx.lineTo(25084,32224);
ctx.lineTo(25048,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,145,27,0.85)';
ctx.strokeStyle='rgb(113,240,249)';
ctx.moveTo(24760,32320);
ctx.lineTo(24760,32284);
ctx.lineTo(24796,32284);
ctx.lineTo(24796,32320);
ctx.lineTo(24760,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,190,102,0.85)';
ctx.strokeStyle='rgb(193,158,228)';
ctx.moveTo(24760,32224);
ctx.lineTo(24760,32188);
ctx.lineTo(24796,32188);
ctx.lineTo(24796,32224);
ctx.lineTo(24760,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,219,218,0.85)';
ctx.strokeStyle='rgb(171,226,80)';
ctx.moveTo(24760,32608);
ctx.lineTo(24760,32572);
ctx.lineTo(24796,32572);
ctx.lineTo(24796,32608);
ctx.lineTo(24760,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,6,100,0.85)';
ctx.strokeStyle='rgb(75,167,16)';
ctx.moveTo(24856,32608);
ctx.lineTo(24856,32572);
ctx.lineTo(24892,32572);
ctx.lineTo(24892,32608);
ctx.lineTo(24856,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,66,232,0.85)';
ctx.strokeStyle='rgb(120,223,0)';
ctx.moveTo(24952,32608);
ctx.lineTo(24952,32572);
ctx.lineTo(24988,32572);
ctx.lineTo(24988,32608);
ctx.lineTo(24952,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,154,146,0.85)';
ctx.strokeStyle='rgb(217,118,184)';
ctx.moveTo(24952,32512);
ctx.lineTo(24952,32476);
ctx.lineTo(24988,32476);
ctx.lineTo(24988,32512);
ctx.lineTo(24952,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,123,13,0.85)';
ctx.strokeStyle='rgb(131,185,28)';
ctx.moveTo(25144,32608);
ctx.lineTo(25144,32572);
ctx.lineTo(25180,32572);
ctx.lineTo(25180,32608);
ctx.lineTo(25144,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,3,163,0.85)';
ctx.strokeStyle='rgb(127,51,184)';
ctx.moveTo(25144,32512);
ctx.lineTo(25144,32476);
ctx.lineTo(25180,32476);
ctx.lineTo(25180,32512);
ctx.lineTo(25144,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,66,5,0.85)';
ctx.strokeStyle='rgb(160,95,235)';
ctx.moveTo(25144,32416);
ctx.lineTo(25144,32380);
ctx.lineTo(25180,32380);
ctx.lineTo(25180,32416);
ctx.lineTo(25144,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,149,114,0.85)';
ctx.strokeStyle='rgb(184,55,57)';
ctx.moveTo(25144,32320);
ctx.lineTo(25144,32284);
ctx.lineTo(25180,32284);
ctx.lineTo(25180,32320);
ctx.lineTo(25144,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,207,237,0.85)';
ctx.strokeStyle='rgb(158,13,96)';
ctx.moveTo(25144,32224);
ctx.lineTo(25144,32188);
ctx.lineTo(25180,32188);
ctx.lineTo(25180,32224);
ctx.lineTo(25144,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,175,71,0.85)';
ctx.strokeStyle='rgb(217,161,158)';
ctx.moveTo(24952,32416);
ctx.lineTo(24952,32380);
ctx.lineTo(24988,32380);
ctx.lineTo(24988,32416);
ctx.lineTo(24952,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,68,196,0.85)';
ctx.strokeStyle='rgb(46,106,172)';
ctx.moveTo(24952,32320);
ctx.lineTo(24952,32284);
ctx.lineTo(24988,32284);
ctx.lineTo(24988,32320);
ctx.lineTo(24952,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,253,46,0.85)';
ctx.strokeStyle='rgb(246,43,23)';
ctx.moveTo(24952,32224);
ctx.lineTo(24952,32188);
ctx.lineTo(24988,32188);
ctx.lineTo(24988,32224);
ctx.lineTo(24952,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,103,181,0.85)';
ctx.strokeStyle='rgb(3,115,41)';
ctx.moveTo(24856,32512);
ctx.lineTo(24856,32476);
ctx.lineTo(24892,32476);
ctx.lineTo(24892,32512);
ctx.lineTo(24856,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,88,154,0.85)';
ctx.strokeStyle='rgb(77,54,28)';
ctx.moveTo(24856,32416);
ctx.lineTo(24856,32380);
ctx.lineTo(24892,32380);
ctx.lineTo(24892,32416);
ctx.lineTo(24856,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,8,171,0.85)';
ctx.strokeStyle='rgb(150,170,80)';
ctx.moveTo(24856,32320);
ctx.lineTo(24856,32284);
ctx.lineTo(24892,32284);
ctx.lineTo(24892,32320);
ctx.lineTo(24856,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,126,231,0.85)';
ctx.strokeStyle='rgb(249,132,154)';
ctx.moveTo(24472,32416);
ctx.lineTo(24472,32380);
ctx.lineTo(24508,32380);
ctx.lineTo(24508,32416);
ctx.lineTo(24472,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,158,237,0.85)';
ctx.strokeStyle='rgb(216,218,31)';
ctx.moveTo(24472,32320);
ctx.lineTo(24472,32284);
ctx.lineTo(24508,32284);
ctx.lineTo(24508,32320);
ctx.lineTo(24472,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,238,169,0.85)';
ctx.strokeStyle='rgb(96,209,193)';
ctx.moveTo(24472,32224);
ctx.lineTo(24472,32188);
ctx.lineTo(24508,32188);
ctx.lineTo(24508,32224);
ctx.lineTo(24472,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,63,68,0.85)';
ctx.strokeStyle='rgb(48,247,162)';
ctx.moveTo(24184,32320);
ctx.lineTo(24184,32284);
ctx.lineTo(24220,32284);
ctx.lineTo(24220,32320);
ctx.lineTo(24184,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,15,10,0.85)';
ctx.strokeStyle='rgb(18,76,241)';
ctx.moveTo(24184,32224);
ctx.lineTo(24184,32188);
ctx.lineTo(24220,32188);
ctx.lineTo(24220,32224);
ctx.lineTo(24184,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,163,11,0.85)';
ctx.strokeStyle='rgb(254,5,119)';
ctx.moveTo(24184,32608);
ctx.lineTo(24184,32572);
ctx.lineTo(24220,32572);
ctx.lineTo(24220,32608);
ctx.lineTo(24184,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(14,153,175,0.85)';
ctx.strokeStyle='rgb(236,14,96)';
ctx.moveTo(24280,32608);
ctx.lineTo(24280,32572);
ctx.lineTo(24316,32572);
ctx.lineTo(24316,32608);
ctx.lineTo(24280,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,249,94,0.85)';
ctx.strokeStyle='rgb(155,98,209)';
ctx.moveTo(24376,32608);
ctx.lineTo(24376,32572);
ctx.lineTo(24412,32572);
ctx.lineTo(24412,32608);
ctx.lineTo(24376,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,84,204,0.85)';
ctx.strokeStyle='rgb(11,208,219)';
ctx.moveTo(24376,32512);
ctx.lineTo(24376,32476);
ctx.lineTo(24412,32476);
ctx.lineTo(24412,32512);
ctx.lineTo(24376,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,145,249,0.85)';
ctx.strokeStyle='rgb(47,9,160)';
ctx.moveTo(24472,32128);
ctx.lineTo(24472,32092);
ctx.lineTo(24508,32092);
ctx.lineTo(24508,32128);
ctx.lineTo(24472,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,246,142,0.85)';
ctx.strokeStyle='rgb(137,69,246)';
ctx.moveTo(24184,32128);
ctx.lineTo(24184,32092);
ctx.lineTo(24220,32092);
ctx.lineTo(24220,32128);
ctx.lineTo(24184,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,21,171,0.85)';
ctx.strokeStyle='rgb(144,212,198)';
ctx.moveTo(24184,32032);
ctx.lineTo(24184,31996);
ctx.lineTo(24220,31996);
ctx.lineTo(24220,32032);
ctx.lineTo(24184,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,146,171,0.85)';
ctx.strokeStyle='rgb(211,88,48)';
ctx.moveTo(24280,32032);
ctx.lineTo(24280,31996);
ctx.lineTo(24316,31996);
ctx.lineTo(24316,32032);
ctx.lineTo(24280,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,234,7,0.85)';
ctx.strokeStyle='rgb(174,44,168)';
ctx.moveTo(24280,31936);
ctx.lineTo(24280,31900);
ctx.lineTo(24316,31900);
ctx.lineTo(24316,31936);
ctx.lineTo(24280,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,189,30,0.85)';
ctx.strokeStyle='rgb(92,31,204)';
ctx.moveTo(24280,31840);
ctx.lineTo(24280,31804);
ctx.lineTo(24316,31804);
ctx.lineTo(24316,31840);
ctx.lineTo(24280,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,55,109,0.85)';
ctx.strokeStyle='rgb(239,44,202)';
ctx.moveTo(24184,31936);
ctx.lineTo(24184,31900);
ctx.lineTo(24220,31900);
ctx.lineTo(24220,31936);
ctx.lineTo(24184,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,142,201,0.85)';
ctx.strokeStyle='rgb(111,75,82)';
ctx.moveTo(24376,32032);
ctx.lineTo(24376,31996);
ctx.lineTo(24412,31996);
ctx.lineTo(24412,32032);
ctx.lineTo(24376,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,112,16,0.85)';
ctx.strokeStyle='rgb(155,96,223)';
ctx.moveTo(24376,31936);
ctx.lineTo(24376,31900);
ctx.lineTo(24412,31900);
ctx.lineTo(24412,31936);
ctx.lineTo(24376,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,57,130,0.85)';
ctx.strokeStyle='rgb(40,106,162)';
ctx.moveTo(24376,31840);
ctx.lineTo(24376,31804);
ctx.lineTo(24412,31804);
ctx.lineTo(24412,31840);
ctx.lineTo(24376,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,151,111,0.85)';
ctx.strokeStyle='rgb(3,218,20)';
ctx.moveTo(24184,31840);
ctx.lineTo(24184,31804);
ctx.lineTo(24220,31804);
ctx.lineTo(24220,31840);
ctx.lineTo(24184,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,144,68,0.85)';
ctx.strokeStyle='rgb(199,21,118)';
ctx.moveTo(24472,32032);
ctx.lineTo(24472,31996);
ctx.lineTo(24508,31996);
ctx.lineTo(24508,32032);
ctx.lineTo(24472,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,209,183,0.85)';
ctx.strokeStyle='rgb(194,16,235)';
ctx.moveTo(24472,31936);
ctx.lineTo(24472,31900);
ctx.lineTo(24508,31900);
ctx.lineTo(24508,31936);
ctx.lineTo(24472,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,65,122,0.85)';
ctx.strokeStyle='rgb(67,9,231)';
ctx.moveTo(24280,32128);
ctx.lineTo(24280,32092);
ctx.lineTo(24316,32092);
ctx.lineTo(24316,32128);
ctx.lineTo(24280,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,230,206,0.85)';
ctx.strokeStyle='rgb(179,29,165)';
ctx.moveTo(24472,31840);
ctx.lineTo(24472,31804);
ctx.lineTo(24508,31804);
ctx.lineTo(24508,31840);
ctx.lineTo(24472,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(199,36,205,0.85)';
ctx.strokeStyle='rgb(0,219,112)';
ctx.moveTo(24376,32128);
ctx.lineTo(24376,32092);
ctx.lineTo(24412,32092);
ctx.lineTo(24412,32128);
ctx.lineTo(24376,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,213,164,0.85)';
ctx.strokeStyle='rgb(116,160,40)';
ctx.moveTo(24376,32416);
ctx.lineTo(24376,32380);
ctx.lineTo(24412,32380);
ctx.lineTo(24412,32416);
ctx.lineTo(24376,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,98,19,0.85)';
ctx.strokeStyle='rgb(132,113,16)';
ctx.moveTo(24376,32320);
ctx.lineTo(24376,32284);
ctx.lineTo(24412,32284);
ctx.lineTo(24412,32320);
ctx.lineTo(24376,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,50,147,0.85)';
ctx.strokeStyle='rgb(53,197,168)';
ctx.moveTo(24376,32224);
ctx.lineTo(24376,32188);
ctx.lineTo(24412,32188);
ctx.lineTo(24412,32224);
ctx.lineTo(24376,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(226,8,62,0.85)';
ctx.strokeStyle='rgb(245,200,129)';
ctx.moveTo(24280,32512);
ctx.lineTo(24280,32476);
ctx.lineTo(24316,32476);
ctx.lineTo(24316,32512);
ctx.lineTo(24280,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,180,0,0.85)';
ctx.strokeStyle='rgb(236,31,248)';
ctx.moveTo(24280,32416);
ctx.lineTo(24280,32380);
ctx.lineTo(24316,32380);
ctx.lineTo(24316,32416);
ctx.lineTo(24280,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,155,106,0.85)';
ctx.strokeStyle='rgb(58,127,227)';
ctx.moveTo(24280,32320);
ctx.lineTo(24280,32284);
ctx.lineTo(24316,32284);
ctx.lineTo(24316,32320);
ctx.lineTo(24280,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,151,16,0.85)';
ctx.strokeStyle='rgb(123,200,145)';
ctx.moveTo(24280,32224);
ctx.lineTo(24280,32188);
ctx.lineTo(24316,32188);
ctx.lineTo(24316,32224);
ctx.lineTo(24280,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,31,109,0.85)';
ctx.strokeStyle='rgb(200,222,191)';
ctx.moveTo(24184,32512);
ctx.lineTo(24184,32476);
ctx.lineTo(24220,32476);
ctx.lineTo(24220,32512);
ctx.lineTo(24184,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,10,37,0.85)';
ctx.strokeStyle='rgb(97,133,49)';
ctx.moveTo(24184,32416);
ctx.lineTo(24184,32380);
ctx.lineTo(24220,32380);
ctx.lineTo(24220,32416);
ctx.lineTo(24184,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,89,8,0.85)';
ctx.strokeStyle='rgb(144,195,171)';
ctx.moveTo(24472,32608);
ctx.lineTo(24472,32572);
ctx.lineTo(24508,32572);
ctx.lineTo(24508,32608);
ctx.lineTo(24472,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,101,41,0.85)';
ctx.strokeStyle='rgb(181,91,167)';
ctx.moveTo(24472,32512);
ctx.lineTo(24472,32476);
ctx.lineTo(24508,32476);
ctx.lineTo(24508,32512);
ctx.lineTo(24472,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,162,170,0.85)';
ctx.strokeStyle='rgb(195,136,157)';
ctx.moveTo(25480,33712);
ctx.lineTo(25480,33676);
ctx.lineTo(25516,33676);
ctx.lineTo(25516,33712);
ctx.lineTo(25480,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,47,155,0.85)';
ctx.strokeStyle='rgb(102,4,239)';
ctx.moveTo(25576,33136);
ctx.lineTo(25576,33100);
ctx.lineTo(25612,33100);
ctx.lineTo(25612,33136);
ctx.lineTo(25576,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,161,85,0.85)';
ctx.strokeStyle='rgb(53,225,208)';
ctx.moveTo(25576,33040);
ctx.lineTo(25576,33004);
ctx.lineTo(25612,33004);
ctx.lineTo(25612,33040);
ctx.lineTo(25576,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,7,222,0.85)';
ctx.strokeStyle='rgb(113,57,156)';
ctx.moveTo(25576,32944);
ctx.lineTo(25576,32908);
ctx.lineTo(25612,32908);
ctx.lineTo(25612,32944);
ctx.lineTo(25576,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,137,21,0.85)';
ctx.strokeStyle='rgb(14,135,38)';
ctx.moveTo(25480,32944);
ctx.lineTo(25480,32908);
ctx.lineTo(25516,32908);
ctx.lineTo(25516,32944);
ctx.lineTo(25480,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(253,240,254,0.85)';
ctx.strokeStyle='rgb(226,187,46)';
ctx.moveTo(25480,33616);
ctx.lineTo(25480,33580);
ctx.lineTo(25516,33580);
ctx.lineTo(25516,33616);
ctx.lineTo(25480,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,32,175,0.85)';
ctx.strokeStyle='rgb(44,135,109)';
ctx.moveTo(25480,33520);
ctx.lineTo(25480,33484);
ctx.lineTo(25516,33484);
ctx.lineTo(25516,33520);
ctx.lineTo(25480,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,184,185,0.85)';
ctx.strokeStyle='rgb(233,186,165)';
ctx.moveTo(25576,33328);
ctx.lineTo(25576,33292);
ctx.lineTo(25612,33292);
ctx.lineTo(25612,33328);
ctx.lineTo(25576,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,128,69,0.85)';
ctx.strokeStyle='rgb(160,144,61)';
ctx.moveTo(25576,33232);
ctx.lineTo(25576,33196);
ctx.lineTo(25612,33196);
ctx.lineTo(25612,33232);
ctx.lineTo(25576,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,232,181,0.85)';
ctx.strokeStyle='rgb(86,28,88)';
ctx.moveTo(25480,33232);
ctx.lineTo(25480,33196);
ctx.lineTo(25516,33196);
ctx.lineTo(25516,33232);
ctx.lineTo(25480,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,141,118,0.85)';
ctx.strokeStyle='rgb(214,32,178)';
ctx.moveTo(25480,33136);
ctx.lineTo(25480,33100);
ctx.lineTo(25516,33100);
ctx.lineTo(25516,33136);
ctx.lineTo(25480,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,211,213,0.85)';
ctx.strokeStyle='rgb(62,176,36)';
ctx.moveTo(25480,33904);
ctx.lineTo(25480,33868);
ctx.lineTo(25516,33868);
ctx.lineTo(25516,33904);
ctx.lineTo(25480,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,96,10,0.85)';
ctx.strokeStyle='rgb(113,145,59)';
ctx.moveTo(25576,33904);
ctx.lineTo(25576,33868);
ctx.lineTo(25612,33868);
ctx.lineTo(25612,33904);
ctx.lineTo(25576,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,85,43,0.85)';
ctx.strokeStyle='rgb(234,114,96)';
ctx.moveTo(25480,33328);
ctx.lineTo(25480,33292);
ctx.lineTo(25516,33292);
ctx.lineTo(25516,33328);
ctx.lineTo(25480,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,67,62,0.85)';
ctx.strokeStyle='rgb(94,226,146)';
ctx.moveTo(25576,33808);
ctx.lineTo(25576,33772);
ctx.lineTo(25612,33772);
ctx.lineTo(25612,33808);
ctx.lineTo(25576,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,235,222,0.85)';
ctx.strokeStyle='rgb(139,83,134)';
ctx.moveTo(25576,33712);
ctx.lineTo(25576,33676);
ctx.lineTo(25612,33676);
ctx.lineTo(25612,33712);
ctx.lineTo(25576,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,94,248,0.85)';
ctx.strokeStyle='rgb(30,37,123)';
ctx.moveTo(25576,33616);
ctx.lineTo(25576,33580);
ctx.lineTo(25612,33580);
ctx.lineTo(25612,33616);
ctx.lineTo(25576,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,162,153,0.85)';
ctx.strokeStyle='rgb(53,224,190)';
ctx.moveTo(25480,33424);
ctx.lineTo(25480,33388);
ctx.lineTo(25516,33388);
ctx.lineTo(25516,33424);
ctx.lineTo(25480,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,134,122,0.85)';
ctx.strokeStyle='rgb(43,68,8)';
ctx.moveTo(25480,33040);
ctx.lineTo(25480,33004);
ctx.lineTo(25516,33004);
ctx.lineTo(25516,33040);
ctx.lineTo(25480,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,168,33,0.85)';
ctx.strokeStyle='rgb(54,32,228)';
ctx.moveTo(25576,33424);
ctx.lineTo(25576,33388);
ctx.lineTo(25612,33388);
ctx.lineTo(25612,33424);
ctx.lineTo(25576,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,16,76,0.85)';
ctx.strokeStyle='rgb(26,173,183)';
ctx.moveTo(25576,33520);
ctx.lineTo(25576,33484);
ctx.lineTo(25612,33484);
ctx.lineTo(25612,33520);
ctx.lineTo(25576,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,17,137,0.85)';
ctx.strokeStyle='rgb(91,85,4)';
ctx.moveTo(25480,33808);
ctx.lineTo(25480,33772);
ctx.lineTo(25516,33772);
ctx.lineTo(25516,33808);
ctx.lineTo(25480,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,35,201,0.85)';
ctx.strokeStyle='rgb(12,95,122)';
ctx.moveTo(26440,33040);
ctx.lineTo(26440,33004);
ctx.lineTo(26476,33004);
ctx.lineTo(26476,33040);
ctx.lineTo(26440,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,140,51,0.85)';
ctx.strokeStyle='rgb(218,154,118)';
ctx.moveTo(26440,32944);
ctx.lineTo(26440,32908);
ctx.lineTo(26476,32908);
ctx.lineTo(26476,32944);
ctx.lineTo(26440,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,236,221,0.85)';
ctx.strokeStyle='rgb(117,227,195)';
ctx.moveTo(25768,33136);
ctx.lineTo(25768,33100);
ctx.lineTo(25804,33100);
ctx.lineTo(25804,33136);
ctx.lineTo(25768,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,33,68,0.85)';
ctx.strokeStyle='rgb(82,247,218)';
ctx.moveTo(25768,33040);
ctx.lineTo(25768,33004);
ctx.lineTo(25804,33004);
ctx.lineTo(25804,33040);
ctx.lineTo(25768,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,15,243,0.85)';
ctx.strokeStyle='rgb(116,142,119)';
ctx.moveTo(25768,32944);
ctx.lineTo(25768,32908);
ctx.lineTo(25804,32908);
ctx.lineTo(25804,32944);
ctx.lineTo(25768,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,106,122,0.85)';
ctx.strokeStyle='rgb(65,113,128)';
ctx.moveTo(25672,33424);
ctx.lineTo(25672,33388);
ctx.lineTo(25708,33388);
ctx.lineTo(25708,33424);
ctx.lineTo(25672,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,118,16,0.85)';
ctx.strokeStyle='rgb(245,130,211)';
ctx.moveTo(25864,33328);
ctx.lineTo(25864,33292);
ctx.lineTo(25900,33292);
ctx.lineTo(25900,33328);
ctx.lineTo(25864,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,165,61,0.85)';
ctx.strokeStyle='rgb(207,166,240)';
ctx.moveTo(25864,33232);
ctx.lineTo(25864,33196);
ctx.lineTo(25900,33196);
ctx.lineTo(25900,33232);
ctx.lineTo(25864,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,250,169,0.85)';
ctx.strokeStyle='rgb(21,138,140)';
ctx.moveTo(25864,33136);
ctx.lineTo(25864,33100);
ctx.lineTo(25900,33100);
ctx.lineTo(25900,33136);
ctx.lineTo(25864,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,238,16,0.85)';
ctx.strokeStyle='rgb(154,65,189)';
ctx.moveTo(25864,33040);
ctx.lineTo(25864,33004);
ctx.lineTo(25900,33004);
ctx.lineTo(25900,33040);
ctx.lineTo(25864,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,61,57,0.85)';
ctx.strokeStyle='rgb(252,139,226)';
ctx.moveTo(25864,32944);
ctx.lineTo(25864,32908);
ctx.lineTo(25900,32908);
ctx.lineTo(25900,32944);
ctx.lineTo(25864,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,47,72,0.85)';
ctx.strokeStyle='rgb(121,73,136)';
ctx.moveTo(25768,33424);
ctx.lineTo(25768,33388);
ctx.lineTo(25804,33388);
ctx.lineTo(25804,33424);
ctx.lineTo(25768,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,230,191,0.85)';
ctx.strokeStyle='rgb(94,159,131)';
ctx.moveTo(25864,33424);
ctx.lineTo(25864,33388);
ctx.lineTo(25900,33388);
ctx.lineTo(25900,33424);
ctx.lineTo(25864,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,53,94,0.85)';
ctx.strokeStyle='rgb(4,128,71)';
ctx.moveTo(25960,33904);
ctx.lineTo(25960,33868);
ctx.lineTo(25996,33868);
ctx.lineTo(25996,33904);
ctx.lineTo(25960,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,20,58,0.85)';
ctx.strokeStyle='rgb(36,32,247)';
ctx.moveTo(25960,33808);
ctx.lineTo(25960,33772);
ctx.lineTo(25996,33772);
ctx.lineTo(25996,33808);
ctx.lineTo(25960,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,37,40,0.85)';
ctx.strokeStyle='rgb(158,234,100)';
ctx.moveTo(25960,33712);
ctx.lineTo(25960,33676);
ctx.lineTo(25996,33676);
ctx.lineTo(25996,33712);
ctx.lineTo(25960,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,93,148,0.85)';
ctx.strokeStyle='rgb(74,55,44)';
ctx.moveTo(25960,33616);
ctx.lineTo(25960,33580);
ctx.lineTo(25996,33580);
ctx.lineTo(25996,33616);
ctx.lineTo(25960,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,198,91,0.85)';
ctx.strokeStyle='rgb(89,144,112)';
ctx.moveTo(25960,33520);
ctx.lineTo(25960,33484);
ctx.lineTo(25996,33484);
ctx.lineTo(25996,33520);
ctx.lineTo(25960,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,149,111,0.85)';
ctx.strokeStyle='rgb(204,108,62)';
ctx.moveTo(25960,33424);
ctx.lineTo(25960,33388);
ctx.lineTo(25996,33388);
ctx.lineTo(25996,33424);
ctx.lineTo(25960,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,18,89,0.85)';
ctx.strokeStyle='rgb(221,144,200)';
ctx.moveTo(25672,33328);
ctx.lineTo(25672,33292);
ctx.lineTo(25708,33292);
ctx.lineTo(25708,33328);
ctx.lineTo(25672,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,16,218,0.85)';
ctx.strokeStyle='rgb(83,76,174)';
ctx.moveTo(25672,33232);
ctx.lineTo(25672,33196);
ctx.lineTo(25708,33196);
ctx.lineTo(25708,33232);
ctx.lineTo(25672,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(218,46,200,0.85)';
ctx.strokeStyle='rgb(212,14,154)';
ctx.moveTo(25672,33136);
ctx.lineTo(25672,33100);
ctx.lineTo(25708,33100);
ctx.lineTo(25708,33136);
ctx.lineTo(25672,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,113,79,0.85)';
ctx.strokeStyle='rgb(22,45,43)';
ctx.moveTo(25672,33040);
ctx.lineTo(25672,33004);
ctx.lineTo(25708,33004);
ctx.lineTo(25708,33040);
ctx.lineTo(25672,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(66,79,203,0.85)';
ctx.strokeStyle='rgb(4,147,99)';
ctx.moveTo(25672,32944);
ctx.lineTo(25672,32908);
ctx.lineTo(25708,32908);
ctx.lineTo(25708,32944);
ctx.lineTo(25672,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,201,35,0.85)';
ctx.strokeStyle='rgb(60,94,91)';
ctx.moveTo(25960,33328);
ctx.lineTo(25960,33292);
ctx.lineTo(25996,33292);
ctx.lineTo(25996,33328);
ctx.lineTo(25960,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,15,166,0.85)';
ctx.strokeStyle='rgb(137,238,172)';
ctx.moveTo(25768,33328);
ctx.lineTo(25768,33292);
ctx.lineTo(25804,33292);
ctx.lineTo(25804,33328);
ctx.lineTo(25768,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,98,43,0.85)';
ctx.strokeStyle='rgb(185,63,70)';
ctx.moveTo(25768,33232);
ctx.lineTo(25768,33196);
ctx.lineTo(25804,33196);
ctx.lineTo(25804,33232);
ctx.lineTo(25768,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(91,209,167,0.85)';
ctx.strokeStyle='rgb(220,173,163)';
ctx.moveTo(25864,33712);
ctx.lineTo(25864,33676);
ctx.lineTo(25900,33676);
ctx.lineTo(25900,33712);
ctx.lineTo(25864,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,56,33,0.85)';
ctx.strokeStyle='rgb(188,183,90)';
ctx.moveTo(25864,33616);
ctx.lineTo(25864,33580);
ctx.lineTo(25900,33580);
ctx.lineTo(25900,33616);
ctx.lineTo(25864,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,251,58,0.85)';
ctx.strokeStyle='rgb(188,111,152)';
ctx.moveTo(25864,33520);
ctx.lineTo(25864,33484);
ctx.lineTo(25900,33484);
ctx.lineTo(25900,33520);
ctx.lineTo(25864,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,12,186,0.85)';
ctx.strokeStyle='rgb(155,55,251)';
ctx.moveTo(25672,33712);
ctx.lineTo(25672,33676);
ctx.lineTo(25708,33676);
ctx.lineTo(25708,33712);
ctx.lineTo(25672,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,234,2,0.85)';
ctx.strokeStyle='rgb(57,143,42)';
ctx.moveTo(25672,33616);
ctx.lineTo(25672,33580);
ctx.lineTo(25708,33580);
ctx.lineTo(25708,33616);
ctx.lineTo(25672,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,81,54,0.85)';
ctx.strokeStyle='rgb(185,63,8)';
ctx.moveTo(25672,33520);
ctx.lineTo(25672,33484);
ctx.lineTo(25708,33484);
ctx.lineTo(25708,33520);
ctx.lineTo(25672,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,130,241,0.85)';
ctx.strokeStyle='rgb(176,133,55)';
ctx.moveTo(25960,33232);
ctx.lineTo(25960,33196);
ctx.lineTo(25996,33196);
ctx.lineTo(25996,33232);
ctx.lineTo(25960,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,229,9,0.85)';
ctx.strokeStyle='rgb(249,34,7)';
ctx.moveTo(25960,33136);
ctx.lineTo(25960,33100);
ctx.lineTo(25996,33100);
ctx.lineTo(25996,33136);
ctx.lineTo(25960,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,207,184,0.85)';
ctx.strokeStyle='rgb(101,126,40)';
ctx.moveTo(25960,33040);
ctx.lineTo(25960,33004);
ctx.lineTo(25996,33004);
ctx.lineTo(25996,33040);
ctx.lineTo(25960,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,229,243,0.85)';
ctx.strokeStyle='rgb(132,199,183)';
ctx.moveTo(25960,32944);
ctx.lineTo(25960,32908);
ctx.lineTo(25996,32908);
ctx.lineTo(25996,32944);
ctx.lineTo(25960,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(7,79,121,0.85)';
ctx.strokeStyle='rgb(61,254,208)';
ctx.moveTo(26056,33424);
ctx.lineTo(26056,33388);
ctx.lineTo(26092,33388);
ctx.lineTo(26092,33424);
ctx.lineTo(26056,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,57,249,0.85)';
ctx.strokeStyle='rgb(131,14,219)';
ctx.moveTo(26152,33424);
ctx.lineTo(26152,33388);
ctx.lineTo(26188,33388);
ctx.lineTo(26188,33424);
ctx.lineTo(26152,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,156,15,0.85)';
ctx.strokeStyle='rgb(222,181,71)';
ctx.moveTo(25768,33904);
ctx.lineTo(25768,33868);
ctx.lineTo(25804,33868);
ctx.lineTo(25804,33904);
ctx.lineTo(25768,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,45,240,0.85)';
ctx.strokeStyle='rgb(103,82,52)';
ctx.moveTo(25768,33808);
ctx.lineTo(25768,33772);
ctx.lineTo(25804,33772);
ctx.lineTo(25804,33808);
ctx.lineTo(25768,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,168,178,0.85)';
ctx.strokeStyle='rgb(147,128,142)';
ctx.moveTo(25768,33712);
ctx.lineTo(25768,33676);
ctx.lineTo(25804,33676);
ctx.lineTo(25804,33712);
ctx.lineTo(25768,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(128,35,29,0.85)';
ctx.strokeStyle='rgb(245,142,218)';
ctx.moveTo(25768,33616);
ctx.lineTo(25768,33580);
ctx.lineTo(25804,33580);
ctx.lineTo(25804,33616);
ctx.lineTo(25768,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(170,192,239,0.85)';
ctx.strokeStyle='rgb(39,72,101)';
ctx.moveTo(25768,33520);
ctx.lineTo(25768,33484);
ctx.lineTo(25804,33484);
ctx.lineTo(25804,33520);
ctx.lineTo(25768,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,232,55,0.85)';
ctx.strokeStyle='rgb(229,43,156)';
ctx.moveTo(26248,33424);
ctx.lineTo(26248,33388);
ctx.lineTo(26284,33388);
ctx.lineTo(26284,33424);
ctx.lineTo(26248,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,85,0,0.85)';
ctx.strokeStyle='rgb(206,85,151)';
ctx.moveTo(26344,33424);
ctx.lineTo(26344,33388);
ctx.lineTo(26380,33388);
ctx.lineTo(26380,33424);
ctx.lineTo(26344,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,12,113,0.85)';
ctx.strokeStyle='rgb(161,168,123)';
ctx.moveTo(26440,33424);
ctx.lineTo(26440,33388);
ctx.lineTo(26476,33388);
ctx.lineTo(26476,33424);
ctx.lineTo(26440,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(204,233,68,0.85)';
ctx.strokeStyle='rgb(86,85,141)';
ctx.moveTo(26056,32944);
ctx.lineTo(26056,32908);
ctx.lineTo(26092,32908);
ctx.lineTo(26092,32944);
ctx.lineTo(26056,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,78,34,0.85)';
ctx.strokeStyle='rgb(209,24,143)';
ctx.moveTo(25672,33904);
ctx.lineTo(25672,33868);
ctx.lineTo(25708,33868);
ctx.lineTo(25708,33904);
ctx.lineTo(25672,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,24,231,0.85)';
ctx.strokeStyle='rgb(61,128,196)';
ctx.moveTo(25672,33808);
ctx.lineTo(25672,33772);
ctx.lineTo(25708,33772);
ctx.lineTo(25708,33808);
ctx.lineTo(25672,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,136,211,0.85)';
ctx.strokeStyle='rgb(131,137,138)';
ctx.moveTo(25864,33904);
ctx.lineTo(25864,33868);
ctx.lineTo(25900,33868);
ctx.lineTo(25900,33904);
ctx.lineTo(25864,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,116,84,0.85)';
ctx.strokeStyle='rgb(123,54,123)';
ctx.moveTo(25864,33808);
ctx.lineTo(25864,33772);
ctx.lineTo(25900,33772);
ctx.lineTo(25900,33808);
ctx.lineTo(25864,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,3,125,0.85)';
ctx.strokeStyle='rgb(32,254,16)';
ctx.moveTo(26152,33520);
ctx.lineTo(26152,33484);
ctx.lineTo(26188,33484);
ctx.lineTo(26188,33520);
ctx.lineTo(26152,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,252,38,0.85)';
ctx.strokeStyle='rgb(39,164,195)';
ctx.moveTo(26056,33808);
ctx.lineTo(26056,33772);
ctx.lineTo(26092,33772);
ctx.lineTo(26092,33808);
ctx.lineTo(26056,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,147,105,0.85)';
ctx.strokeStyle='rgb(163,87,225)';
ctx.moveTo(26056,33712);
ctx.lineTo(26056,33676);
ctx.lineTo(26092,33676);
ctx.lineTo(26092,33712);
ctx.lineTo(26056,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,119,39,0.85)';
ctx.strokeStyle='rgb(140,12,79)';
ctx.moveTo(26344,33904);
ctx.lineTo(26344,33868);
ctx.lineTo(26380,33868);
ctx.lineTo(26380,33904);
ctx.lineTo(26344,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,135,212,0.85)';
ctx.strokeStyle='rgb(179,252,48)';
ctx.moveTo(26344,33808);
ctx.lineTo(26344,33772);
ctx.lineTo(26380,33772);
ctx.lineTo(26380,33808);
ctx.lineTo(26344,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,51,137,0.85)';
ctx.strokeStyle='rgb(46,68,24)';
ctx.moveTo(26344,33712);
ctx.lineTo(26344,33676);
ctx.lineTo(26380,33676);
ctx.lineTo(26380,33712);
ctx.lineTo(26344,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,253,185,0.85)';
ctx.strokeStyle='rgb(27,6,140)';
ctx.moveTo(26344,33616);
ctx.lineTo(26344,33580);
ctx.lineTo(26380,33580);
ctx.lineTo(26380,33616);
ctx.lineTo(26344,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,15,129,0.85)';
ctx.strokeStyle='rgb(236,52,72)';
ctx.moveTo(26344,33520);
ctx.lineTo(26344,33484);
ctx.lineTo(26380,33484);
ctx.lineTo(26380,33520);
ctx.lineTo(26344,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,251,138,0.85)';
ctx.strokeStyle='rgb(80,163,10)';
ctx.moveTo(26056,33616);
ctx.lineTo(26056,33580);
ctx.lineTo(26092,33580);
ctx.lineTo(26092,33616);
ctx.lineTo(26056,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,236,221,0.85)';
ctx.strokeStyle='rgb(63,125,169)';
ctx.moveTo(26056,33520);
ctx.lineTo(26056,33484);
ctx.lineTo(26092,33484);
ctx.lineTo(26092,33520);
ctx.lineTo(26056,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,72,150,0.85)';
ctx.strokeStyle='rgb(179,221,215)';
ctx.moveTo(26056,33904);
ctx.lineTo(26056,33868);
ctx.lineTo(26092,33868);
ctx.lineTo(26092,33904);
ctx.lineTo(26056,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(221,217,17,0.85)';
ctx.strokeStyle='rgb(124,196,11)';
ctx.moveTo(26152,33904);
ctx.lineTo(26152,33868);
ctx.lineTo(26188,33868);
ctx.lineTo(26188,33904);
ctx.lineTo(26152,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,97,164,0.85)';
ctx.strokeStyle='rgb(9,58,71)';
ctx.moveTo(26248,33904);
ctx.lineTo(26248,33868);
ctx.lineTo(26284,33868);
ctx.lineTo(26284,33904);
ctx.lineTo(26248,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,89,96,0.85)';
ctx.strokeStyle='rgb(60,241,119)';
ctx.moveTo(26248,33808);
ctx.lineTo(26248,33772);
ctx.lineTo(26284,33772);
ctx.lineTo(26284,33808);
ctx.lineTo(26248,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,142,134,0.85)';
ctx.strokeStyle='rgb(130,100,236)';
ctx.moveTo(26440,33904);
ctx.lineTo(26440,33868);
ctx.lineTo(26476,33868);
ctx.lineTo(26476,33904);
ctx.lineTo(26440,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(134,60,53,0.85)';
ctx.strokeStyle='rgb(222,104,223)';
ctx.moveTo(26440,33808);
ctx.lineTo(26440,33772);
ctx.lineTo(26476,33772);
ctx.lineTo(26476,33808);
ctx.lineTo(26440,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,198,186,0.85)';
ctx.strokeStyle='rgb(169,104,64)';
ctx.moveTo(26440,33712);
ctx.lineTo(26440,33676);
ctx.lineTo(26476,33676);
ctx.lineTo(26476,33712);
ctx.lineTo(26440,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(19,208,107,0.85)';
ctx.strokeStyle='rgb(64,231,145)';
ctx.moveTo(26440,33616);
ctx.lineTo(26440,33580);
ctx.lineTo(26476,33580);
ctx.lineTo(26476,33616);
ctx.lineTo(26440,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,165,79,0.85)';
ctx.strokeStyle='rgb(150,246,233)';
ctx.moveTo(26440,33520);
ctx.lineTo(26440,33484);
ctx.lineTo(26476,33484);
ctx.lineTo(26476,33520);
ctx.lineTo(26440,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(254,100,210,0.85)';
ctx.strokeStyle='rgb(109,222,94)';
ctx.moveTo(26248,33712);
ctx.lineTo(26248,33676);
ctx.lineTo(26284,33676);
ctx.lineTo(26284,33712);
ctx.lineTo(26248,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,40,30,0.85)';
ctx.strokeStyle='rgb(185,57,224)';
ctx.moveTo(26248,33616);
ctx.lineTo(26248,33580);
ctx.lineTo(26284,33580);
ctx.lineTo(26284,33616);
ctx.lineTo(26248,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,90,59,0.85)';
ctx.strokeStyle='rgb(33,59,215)';
ctx.moveTo(26248,33520);
ctx.lineTo(26248,33484);
ctx.lineTo(26284,33484);
ctx.lineTo(26284,33520);
ctx.lineTo(26248,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,112,12,0.85)';
ctx.strokeStyle='rgb(152,186,156)';
ctx.moveTo(26152,33808);
ctx.lineTo(26152,33772);
ctx.lineTo(26188,33772);
ctx.lineTo(26188,33808);
ctx.lineTo(26152,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,18,188,0.85)';
ctx.strokeStyle='rgb(231,0,116)';
ctx.moveTo(26152,33712);
ctx.lineTo(26152,33676);
ctx.lineTo(26188,33676);
ctx.lineTo(26188,33712);
ctx.lineTo(26152,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,231,128,0.85)';
ctx.strokeStyle='rgb(239,244,127)';
ctx.moveTo(26152,33616);
ctx.lineTo(26152,33580);
ctx.lineTo(26188,33580);
ctx.lineTo(26188,33616);
ctx.lineTo(26152,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,153,74,0.85)';
ctx.strokeStyle='rgb(165,192,250)';
ctx.moveTo(26056,33328);
ctx.lineTo(26056,33292);
ctx.lineTo(26092,33292);
ctx.lineTo(26092,33328);
ctx.lineTo(26056,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(239,102,76,0.85)';
ctx.strokeStyle='rgb(45,191,229)';
ctx.moveTo(26152,33328);
ctx.lineTo(26152,33292);
ctx.lineTo(26188,33292);
ctx.lineTo(26188,33328);
ctx.lineTo(26152,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,236,40,0.85)';
ctx.strokeStyle='rgb(253,245,152)';
ctx.moveTo(26152,33232);
ctx.lineTo(26152,33196);
ctx.lineTo(26188,33196);
ctx.lineTo(26188,33232);
ctx.lineTo(26152,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(85,169,141,0.85)';
ctx.strokeStyle='rgb(124,122,154)';
ctx.moveTo(26152,33136);
ctx.lineTo(26152,33100);
ctx.lineTo(26188,33100);
ctx.lineTo(26188,33136);
ctx.lineTo(26152,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,202,109,0.85)';
ctx.strokeStyle='rgb(12,121,221)';
ctx.moveTo(26152,33040);
ctx.lineTo(26152,33004);
ctx.lineTo(26188,33004);
ctx.lineTo(26188,33040);
ctx.lineTo(26152,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,251,20,0.85)';
ctx.strokeStyle='rgb(62,203,64)';
ctx.moveTo(26152,32944);
ctx.lineTo(26152,32908);
ctx.lineTo(26188,32908);
ctx.lineTo(26188,32944);
ctx.lineTo(26152,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,217,64,0.85)';
ctx.strokeStyle='rgb(219,243,173)';
ctx.moveTo(26056,33232);
ctx.lineTo(26056,33196);
ctx.lineTo(26092,33196);
ctx.lineTo(26092,33232);
ctx.lineTo(26056,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,195,146,0.85)';
ctx.strokeStyle='rgb(208,235,44)';
ctx.moveTo(26248,33328);
ctx.lineTo(26248,33292);
ctx.lineTo(26284,33292);
ctx.lineTo(26284,33328);
ctx.lineTo(26248,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,147,142,0.85)';
ctx.strokeStyle='rgb(28,178,82)';
ctx.moveTo(26248,33232);
ctx.lineTo(26248,33196);
ctx.lineTo(26284,33196);
ctx.lineTo(26284,33232);
ctx.lineTo(26248,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,105,56,0.85)';
ctx.strokeStyle='rgb(44,66,119)';
ctx.moveTo(26248,33136);
ctx.lineTo(26248,33100);
ctx.lineTo(26284,33100);
ctx.lineTo(26284,33136);
ctx.lineTo(26248,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,214,24,0.85)';
ctx.strokeStyle='rgb(108,4,4)';
ctx.moveTo(26248,33040);
ctx.lineTo(26248,33004);
ctx.lineTo(26284,33004);
ctx.lineTo(26284,33040);
ctx.lineTo(26248,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,215,87,0.85)';
ctx.strokeStyle='rgb(60,112,29)';
ctx.moveTo(26248,32944);
ctx.lineTo(26248,32908);
ctx.lineTo(26284,32908);
ctx.lineTo(26284,32944);
ctx.lineTo(26248,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,198,254,0.85)';
ctx.strokeStyle='rgb(130,234,8)';
ctx.moveTo(26056,33136);
ctx.lineTo(26056,33100);
ctx.lineTo(26092,33100);
ctx.lineTo(26092,33136);
ctx.lineTo(26056,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,76,115,0.85)';
ctx.strokeStyle='rgb(86,146,98)';
ctx.moveTo(26344,33328);
ctx.lineTo(26344,33292);
ctx.lineTo(26380,33292);
ctx.lineTo(26380,33328);
ctx.lineTo(26344,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(171,157,175,0.85)';
ctx.strokeStyle='rgb(24,169,175)';
ctx.moveTo(26344,33232);
ctx.lineTo(26344,33196);
ctx.lineTo(26380,33196);
ctx.lineTo(26380,33232);
ctx.lineTo(26344,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,186,19,0.85)';
ctx.strokeStyle='rgb(77,253,146)';
ctx.moveTo(26344,33136);
ctx.lineTo(26344,33100);
ctx.lineTo(26380,33100);
ctx.lineTo(26380,33136);
ctx.lineTo(26344,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,106,10,0.85)';
ctx.strokeStyle='rgb(239,26,186)';
ctx.moveTo(26344,33040);
ctx.lineTo(26344,33004);
ctx.lineTo(26380,33004);
ctx.lineTo(26380,33040);
ctx.lineTo(26344,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,174,154,0.85)';
ctx.strokeStyle='rgb(16,209,242)';
ctx.moveTo(26344,32944);
ctx.lineTo(26344,32908);
ctx.lineTo(26380,32908);
ctx.lineTo(26380,32944);
ctx.lineTo(26344,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,140,236,0.85)';
ctx.strokeStyle='rgb(206,93,166)';
ctx.moveTo(26056,33040);
ctx.lineTo(26056,33004);
ctx.lineTo(26092,33004);
ctx.lineTo(26092,33040);
ctx.lineTo(26056,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,49,95,0.85)';
ctx.strokeStyle='rgb(18,166,116)';
ctx.moveTo(26440,33328);
ctx.lineTo(26440,33292);
ctx.lineTo(26476,33292);
ctx.lineTo(26476,33328);
ctx.lineTo(26440,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,5,18,0.85)';
ctx.strokeStyle='rgb(46,237,47)';
ctx.moveTo(26440,33232);
ctx.lineTo(26440,33196);
ctx.lineTo(26476,33196);
ctx.lineTo(26476,33232);
ctx.lineTo(26440,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,177,29,0.85)';
ctx.strokeStyle='rgb(107,60,95)';
ctx.moveTo(26440,33136);
ctx.lineTo(26440,33100);
ctx.lineTo(26476,33100);
ctx.lineTo(26476,33136);
ctx.lineTo(26440,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,210,79,0.85)';
ctx.strokeStyle='rgb(234,27,247)';
ctx.moveTo(34204,27040);
ctx.lineTo(34204,27004);
ctx.lineTo(34240,27004);
ctx.lineTo(34240,27040);
ctx.lineTo(34204,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,160,214,0.85)';
ctx.strokeStyle='rgb(0,181,105)';
ctx.moveTo(34204,26944);
ctx.lineTo(34204,26908);
ctx.lineTo(34240,26908);
ctx.lineTo(34240,26944);
ctx.lineTo(34204,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(110,218,94,0.85)';
ctx.strokeStyle='rgb(72,135,154)';
ctx.moveTo(34204,26848);
ctx.lineTo(34204,26812);
ctx.lineTo(34240,26812);
ctx.lineTo(34240,26848);
ctx.lineTo(34204,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(224,197,118,0.85)';
ctx.strokeStyle='rgb(5,230,130)';
ctx.moveTo(34300,27040);
ctx.lineTo(34300,27004);
ctx.lineTo(34336,27004);
ctx.lineTo(34336,27040);
ctx.lineTo(34300,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,158,236,0.85)';
ctx.strokeStyle='rgb(65,115,238)';
ctx.moveTo(34300,26944);
ctx.lineTo(34300,26908);
ctx.lineTo(34336,26908);
ctx.lineTo(34336,26944);
ctx.lineTo(34300,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,210,229,0.85)';
ctx.strokeStyle='rgb(149,182,133)';
ctx.moveTo(34300,26848);
ctx.lineTo(34300,26812);
ctx.lineTo(34336,26812);
ctx.lineTo(34336,26848);
ctx.lineTo(34300,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,222,98,0.85)';
ctx.strokeStyle='rgb(16,102,254)';
ctx.moveTo(34396,27040);
ctx.lineTo(34396,27004);
ctx.lineTo(34432,27004);
ctx.lineTo(34432,27040);
ctx.lineTo(34396,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(88,150,104,0.85)';
ctx.strokeStyle='rgb(237,4,251)';
ctx.moveTo(34396,26944);
ctx.lineTo(34396,26908);
ctx.lineTo(34432,26908);
ctx.lineTo(34432,26944);
ctx.lineTo(34396,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,24,148,0.85)';
ctx.strokeStyle='rgb(144,222,20)';
ctx.moveTo(34396,26848);
ctx.lineTo(34396,26812);
ctx.lineTo(34432,26812);
ctx.lineTo(34432,26848);
ctx.lineTo(34396,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,94,122,0.85)';
ctx.strokeStyle='rgb(13,40,57)';
ctx.moveTo(34492,27040);
ctx.lineTo(34492,27004);
ctx.lineTo(34528,27004);
ctx.lineTo(34528,27040);
ctx.lineTo(34492,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(52,88,147,0.85)';
ctx.strokeStyle='rgb(79,128,63)';
ctx.moveTo(34492,26944);
ctx.lineTo(34492,26908);
ctx.lineTo(34528,26908);
ctx.lineTo(34528,26944);
ctx.lineTo(34492,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,156,151,0.85)';
ctx.strokeStyle='rgb(249,101,185)';
ctx.moveTo(34492,26848);
ctx.lineTo(34492,26812);
ctx.lineTo(34528,26812);
ctx.lineTo(34528,26848);
ctx.lineTo(34492,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,41,61,0.85)';
ctx.strokeStyle='rgb(193,221,170)';
ctx.moveTo(34588,27040);
ctx.lineTo(34588,27004);
ctx.lineTo(34624,27004);
ctx.lineTo(34624,27040);
ctx.lineTo(34588,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(123,44,244,0.85)';
ctx.strokeStyle='rgb(119,88,14)';
ctx.moveTo(34588,26944);
ctx.lineTo(34588,26908);
ctx.lineTo(34624,26908);
ctx.lineTo(34624,26944);
ctx.lineTo(34588,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(191,245,177,0.85)';
ctx.strokeStyle='rgb(129,152,5)';
ctx.moveTo(34588,26848);
ctx.lineTo(34588,26812);
ctx.lineTo(34624,26812);
ctx.lineTo(34624,26848);
ctx.lineTo(34588,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(238,185,70,0.85)';
ctx.strokeStyle='rgb(94,161,15)';
ctx.moveTo(34684,27040);
ctx.lineTo(34684,27004);
ctx.lineTo(34720,27004);
ctx.lineTo(34720,27040);
ctx.lineTo(34684,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,80,195,0.85)';
ctx.strokeStyle='rgb(129,226,89)';
ctx.moveTo(34684,26944);
ctx.lineTo(34684,26908);
ctx.lineTo(34720,26908);
ctx.lineTo(34720,26944);
ctx.lineTo(34684,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,55,30,0.85)';
ctx.strokeStyle='rgb(35,118,89)';
ctx.moveTo(34684,26848);
ctx.lineTo(34684,26812);
ctx.lineTo(34720,26812);
ctx.lineTo(34720,26848);
ctx.lineTo(34684,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,145,40,0.85)';
ctx.strokeStyle='rgb(36,85,14)';
ctx.moveTo(34780,27040);
ctx.lineTo(34780,27004);
ctx.lineTo(34816,27004);
ctx.lineTo(34816,27040);
ctx.lineTo(34780,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(164,55,223,0.85)';
ctx.strokeStyle='rgb(72,67,120)';
ctx.moveTo(34780,26944);
ctx.lineTo(34780,26908);
ctx.lineTo(34816,26908);
ctx.lineTo(34816,26944);
ctx.lineTo(34780,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,129,84,0.85)';
ctx.strokeStyle='rgb(79,75,191)';
ctx.moveTo(34780,26848);
ctx.lineTo(34780,26812);
ctx.lineTo(34816,26812);
ctx.lineTo(34816,26848);
ctx.lineTo(34780,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,93,247,0.85)';
ctx.strokeStyle='rgb(204,85,243)';
ctx.moveTo(34876,27040);
ctx.lineTo(34876,27004);
ctx.lineTo(34912,27004);
ctx.lineTo(34912,27040);
ctx.lineTo(34876,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,44,128,0.85)';
ctx.strokeStyle='rgb(155,94,120)';
ctx.moveTo(34876,26944);
ctx.lineTo(34876,26908);
ctx.lineTo(34912,26908);
ctx.lineTo(34912,26944);
ctx.lineTo(34876,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(189,67,16,0.85)';
ctx.strokeStyle='rgb(162,223,96)';
ctx.moveTo(34876,26848);
ctx.lineTo(34876,26812);
ctx.lineTo(34912,26812);
ctx.lineTo(34912,26848);
ctx.lineTo(34876,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,16,168,0.85)';
ctx.strokeStyle='rgb(203,108,130)';
ctx.moveTo(34972,27040);
ctx.lineTo(34972,27004);
ctx.lineTo(35008,27004);
ctx.lineTo(35008,27040);
ctx.lineTo(34972,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,57,70,0.85)';
ctx.strokeStyle='rgb(200,59,238)';
ctx.moveTo(34972,26944);
ctx.lineTo(34972,26908);
ctx.lineTo(35008,26908);
ctx.lineTo(35008,26944);
ctx.lineTo(34972,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(147,122,88,0.85)';
ctx.strokeStyle='rgb(243,206,78)';
ctx.moveTo(34972,26848);
ctx.lineTo(34972,26812);
ctx.lineTo(35008,26812);
ctx.lineTo(35008,26848);
ctx.lineTo(34972,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,101,77,0.85)';
ctx.strokeStyle='rgb(114,151,31)';
ctx.moveTo(35068,27040);
ctx.lineTo(35068,27004);
ctx.lineTo(35104,27004);
ctx.lineTo(35104,27040);
ctx.lineTo(35068,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(225,68,144,0.85)';
ctx.strokeStyle='rgb(249,196,35)';
ctx.moveTo(35068,26944);
ctx.lineTo(35068,26908);
ctx.lineTo(35104,26908);
ctx.lineTo(35104,26944);
ctx.lineTo(35068,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(92,246,249,0.85)';
ctx.strokeStyle='rgb(172,99,117)';
ctx.moveTo(35068,26848);
ctx.lineTo(35068,26812);
ctx.lineTo(35104,26812);
ctx.lineTo(35104,26848);
ctx.lineTo(35068,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,231,36,0.85)';
ctx.strokeStyle='rgb(233,143,151)';
ctx.moveTo(35164,27040);
ctx.lineTo(35164,27004);
ctx.lineTo(35200,27004);
ctx.lineTo(35200,27040);
ctx.lineTo(35164,27040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,112,101,0.85)';
ctx.strokeStyle='rgb(22,178,182)';
ctx.moveTo(35164,26944);
ctx.lineTo(35164,26908);
ctx.lineTo(35200,26908);
ctx.lineTo(35200,26944);
ctx.lineTo(35164,26944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,201,185,0.85)';
ctx.strokeStyle='rgb(121,207,230)';
ctx.moveTo(35164,26848);
ctx.lineTo(35164,26812);
ctx.lineTo(35200,26812);
ctx.lineTo(35200,26848);
ctx.lineTo(35164,26848);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,131,166,0.85)';
ctx.strokeStyle='rgb(60,84,181)';
ctx.moveTo(35500,28552);
ctx.lineTo(35500,28516);
ctx.lineTo(35536,28516);
ctx.lineTo(35536,28552);
ctx.lineTo(35500,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,16,57,0.85)';
ctx.strokeStyle='rgb(103,164,206)';
ctx.moveTo(35500,28456);
ctx.lineTo(35500,28420);
ctx.lineTo(35536,28420);
ctx.lineTo(35536,28456);
ctx.lineTo(35500,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,125,87,0.85)';
ctx.strokeStyle='rgb(29,94,138)';
ctx.moveTo(35500,28360);
ctx.lineTo(35500,28324);
ctx.lineTo(35536,28324);
ctx.lineTo(35536,28360);
ctx.lineTo(35500,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,151,247,0.85)';
ctx.strokeStyle='rgb(92,225,218)';
ctx.moveTo(35596,28552);
ctx.lineTo(35596,28516);
ctx.lineTo(35632,28516);
ctx.lineTo(35632,28552);
ctx.lineTo(35596,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,83,41,0.85)';
ctx.strokeStyle='rgb(206,223,19)';
ctx.moveTo(35596,28456);
ctx.lineTo(35596,28420);
ctx.lineTo(35632,28420);
ctx.lineTo(35632,28456);
ctx.lineTo(35596,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,250,13,0.85)';
ctx.strokeStyle='rgb(32,47,15)';
ctx.moveTo(35596,28360);
ctx.lineTo(35596,28324);
ctx.lineTo(35632,28324);
ctx.lineTo(35632,28360);
ctx.lineTo(35596,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,162,163,0.85)';
ctx.strokeStyle='rgb(163,190,190)';
ctx.moveTo(35692,28552);
ctx.lineTo(35692,28516);
ctx.lineTo(35728,28516);
ctx.lineTo(35728,28552);
ctx.lineTo(35692,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(152,222,109,0.85)';
ctx.strokeStyle='rgb(167,253,98)';
ctx.moveTo(35692,28456);
ctx.lineTo(35692,28420);
ctx.lineTo(35728,28420);
ctx.lineTo(35728,28456);
ctx.lineTo(35692,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(94,183,206,0.85)';
ctx.strokeStyle='rgb(97,24,170)';
ctx.moveTo(35692,28360);
ctx.lineTo(35692,28324);
ctx.lineTo(35728,28324);
ctx.lineTo(35728,28360);
ctx.lineTo(35692,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,185,132,0.85)';
ctx.strokeStyle='rgb(50,92,138)';
ctx.moveTo(35788,28552);
ctx.lineTo(35788,28516);
ctx.lineTo(35824,28516);
ctx.lineTo(35824,28552);
ctx.lineTo(35788,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,182,213,0.85)';
ctx.strokeStyle='rgb(34,106,194)';
ctx.moveTo(35788,28456);
ctx.lineTo(35788,28420);
ctx.lineTo(35824,28420);
ctx.lineTo(35824,28456);
ctx.lineTo(35788,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(46,81,26,0.85)';
ctx.strokeStyle='rgb(12,230,183)';
ctx.moveTo(35788,28360);
ctx.lineTo(35788,28324);
ctx.lineTo(35824,28324);
ctx.lineTo(35824,28360);
ctx.lineTo(35788,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,40,47,0.85)';
ctx.strokeStyle='rgb(230,52,64)';
ctx.moveTo(35884,28552);
ctx.lineTo(35884,28516);
ctx.lineTo(35920,28516);
ctx.lineTo(35920,28552);
ctx.lineTo(35884,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,247,205,0.85)';
ctx.strokeStyle='rgb(55,3,13)';
ctx.moveTo(35884,28456);
ctx.lineTo(35884,28420);
ctx.lineTo(35920,28420);
ctx.lineTo(35920,28456);
ctx.lineTo(35884,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,75,195,0.85)';
ctx.strokeStyle='rgb(77,139,109)';
ctx.moveTo(35884,28360);
ctx.lineTo(35884,28324);
ctx.lineTo(35920,28324);
ctx.lineTo(35920,28360);
ctx.lineTo(35884,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(141,137,194,0.85)';
ctx.strokeStyle='rgb(76,243,50)';
ctx.moveTo(35980,28552);
ctx.lineTo(35980,28516);
ctx.lineTo(36016,28516);
ctx.lineTo(36016,28552);
ctx.lineTo(35980,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,17,58,0.85)';
ctx.strokeStyle='rgb(27,217,18)';
ctx.moveTo(35980,28456);
ctx.lineTo(35980,28420);
ctx.lineTo(36016,28420);
ctx.lineTo(36016,28456);
ctx.lineTo(35980,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,153,22,0.85)';
ctx.strokeStyle='rgb(225,145,32)';
ctx.moveTo(35980,28360);
ctx.lineTo(35980,28324);
ctx.lineTo(36016,28324);
ctx.lineTo(36016,28360);
ctx.lineTo(35980,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,40,80,0.85)';
ctx.strokeStyle='rgb(251,35,180)';
ctx.moveTo(36076,28552);
ctx.lineTo(36076,28516);
ctx.lineTo(36112,28516);
ctx.lineTo(36112,28552);
ctx.lineTo(36076,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,6,120,0.85)';
ctx.strokeStyle='rgb(123,149,77)';
ctx.moveTo(36076,28456);
ctx.lineTo(36076,28420);
ctx.lineTo(36112,28420);
ctx.lineTo(36112,28456);
ctx.lineTo(36076,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,212,177,0.85)';
ctx.strokeStyle='rgb(183,171,21)';
ctx.moveTo(36076,28360);
ctx.lineTo(36076,28324);
ctx.lineTo(36112,28324);
ctx.lineTo(36112,28360);
ctx.lineTo(36076,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,123,74,0.85)';
ctx.strokeStyle='rgb(156,99,138)';
ctx.moveTo(36172,28552);
ctx.lineTo(36172,28516);
ctx.lineTo(36208,28516);
ctx.lineTo(36208,28552);
ctx.lineTo(36172,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,100,3,0.85)';
ctx.strokeStyle='rgb(123,14,60)';
ctx.moveTo(36172,28456);
ctx.lineTo(36172,28420);
ctx.lineTo(36208,28420);
ctx.lineTo(36208,28456);
ctx.lineTo(36172,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,177,22,0.85)';
ctx.strokeStyle='rgb(158,106,86)';
ctx.moveTo(36172,28360);
ctx.lineTo(36172,28324);
ctx.lineTo(36208,28324);
ctx.lineTo(36208,28360);
ctx.lineTo(36172,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,185,216,0.85)';
ctx.strokeStyle='rgb(234,233,195)';
ctx.moveTo(36268,28552);
ctx.lineTo(36268,28516);
ctx.lineTo(36304,28516);
ctx.lineTo(36304,28552);
ctx.lineTo(36268,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(194,70,52,0.85)';
ctx.strokeStyle='rgb(222,195,214)';
ctx.moveTo(36268,28456);
ctx.lineTo(36268,28420);
ctx.lineTo(36304,28420);
ctx.lineTo(36304,28456);
ctx.lineTo(36268,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,253,106,0.85)';
ctx.strokeStyle='rgb(42,94,162)';
ctx.moveTo(36268,28360);
ctx.lineTo(36268,28324);
ctx.lineTo(36304,28324);
ctx.lineTo(36304,28360);
ctx.lineTo(36268,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(154,4,3,0.85)';
ctx.strokeStyle='rgb(197,56,87)';
ctx.moveTo(36364,28552);
ctx.lineTo(36364,28516);
ctx.lineTo(36400,28516);
ctx.lineTo(36400,28552);
ctx.lineTo(36364,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(117,227,248,0.85)';
ctx.strokeStyle='rgb(121,35,190)';
ctx.moveTo(36364,28456);
ctx.lineTo(36364,28420);
ctx.lineTo(36400,28420);
ctx.lineTo(36400,28456);
ctx.lineTo(36364,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,4,142,0.85)';
ctx.strokeStyle='rgb(60,129,233)';
ctx.moveTo(36364,28360);
ctx.lineTo(36364,28324);
ctx.lineTo(36400,28324);
ctx.lineTo(36400,28360);
ctx.lineTo(36364,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,132,198,0.85)';
ctx.strokeStyle='rgb(137,189,204)';
ctx.moveTo(36460,28552);
ctx.lineTo(36460,28516);
ctx.lineTo(36496,28516);
ctx.lineTo(36496,28552);
ctx.lineTo(36460,28552);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(159,158,87,0.85)';
ctx.strokeStyle='rgb(127,234,76)';
ctx.moveTo(36460,28456);
ctx.lineTo(36460,28420);
ctx.lineTo(36496,28420);
ctx.lineTo(36496,28456);
ctx.lineTo(36460,28456);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,55,15,0.85)';
ctx.strokeStyle='rgb(234,165,9)';
ctx.moveTo(36460,28360);
ctx.lineTo(36460,28324);
ctx.lineTo(36496,28324);
ctx.lineTo(36496,28360);
ctx.lineTo(36460,28360);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,197,192,0.85)';
ctx.strokeStyle='rgb(9,160,212)';
ctx.moveTo(34300,30064);
ctx.lineTo(34300,30028);
ctx.lineTo(34336,30028);
ctx.lineTo(34336,30064);
ctx.lineTo(34300,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(64,17,74,0.85)';
ctx.strokeStyle='rgb(11,143,139)';
ctx.moveTo(34300,29968);
ctx.lineTo(34300,29932);
ctx.lineTo(34336,29932);
ctx.lineTo(34336,29968);
ctx.lineTo(34300,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,132,34,0.85)';
ctx.strokeStyle='rgb(58,211,176)';
ctx.moveTo(34300,29872);
ctx.lineTo(34300,29836);
ctx.lineTo(34336,29836);
ctx.lineTo(34336,29872);
ctx.lineTo(34300,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,72,61,0.85)';
ctx.strokeStyle='rgb(186,194,125)';
ctx.moveTo(34300,32128);
ctx.lineTo(34300,32092);
ctx.lineTo(34336,32092);
ctx.lineTo(34336,32128);
ctx.lineTo(34300,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(43,81,241,0.85)';
ctx.strokeStyle='rgb(117,37,247)';
ctx.moveTo(34300,32032);
ctx.lineTo(34300,31996);
ctx.lineTo(34336,31996);
ctx.lineTo(34336,32032);
ctx.lineTo(34300,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(197,242,78,0.85)';
ctx.strokeStyle='rgb(136,118,69)';
ctx.moveTo(34300,31936);
ctx.lineTo(34300,31900);
ctx.lineTo(34336,31900);
ctx.lineTo(34336,31936);
ctx.lineTo(34300,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(166,168,197,0.85)';
ctx.strokeStyle='rgb(172,160,227)';
ctx.moveTo(34300,31840);
ctx.lineTo(34300,31804);
ctx.lineTo(34336,31804);
ctx.lineTo(34336,31840);
ctx.lineTo(34300,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(186,228,215,0.85)';
ctx.strokeStyle='rgb(205,241,64)';
ctx.moveTo(34300,31744);
ctx.lineTo(34300,31708);
ctx.lineTo(34336,31708);
ctx.lineTo(34336,31744);
ctx.lineTo(34300,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,23,241,0.85)';
ctx.strokeStyle='rgb(101,22,27)';
ctx.moveTo(34300,31648);
ctx.lineTo(34300,31612);
ctx.lineTo(34336,31612);
ctx.lineTo(34336,31648);
ctx.lineTo(34300,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,49,211,0.85)';
ctx.strokeStyle='rgb(101,204,90)';
ctx.moveTo(34300,32512);
ctx.lineTo(34300,32476);
ctx.lineTo(34336,32476);
ctx.lineTo(34336,32512);
ctx.lineTo(34300,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(185,64,33,0.85)';
ctx.strokeStyle='rgb(128,0,129)';
ctx.moveTo(34300,32416);
ctx.lineTo(34300,32380);
ctx.lineTo(34336,32380);
ctx.lineTo(34336,32416);
ctx.lineTo(34300,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,182,67,0.85)';
ctx.strokeStyle='rgb(145,169,59)';
ctx.moveTo(34300,32320);
ctx.lineTo(34300,32284);
ctx.lineTo(34336,32284);
ctx.lineTo(34336,32320);
ctx.lineTo(34300,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,56,63,0.85)';
ctx.strokeStyle='rgb(196,46,41)';
ctx.moveTo(34300,32224);
ctx.lineTo(34300,32188);
ctx.lineTo(34336,32188);
ctx.lineTo(34336,32224);
ctx.lineTo(34300,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,208,131,0.85)';
ctx.strokeStyle='rgb(228,249,100)';
ctx.moveTo(34300,32608);
ctx.lineTo(34300,32572);
ctx.lineTo(34336,32572);
ctx.lineTo(34336,32608);
ctx.lineTo(34300,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,55,88,0.85)';
ctx.strokeStyle='rgb(158,80,199)';
ctx.moveTo(34684,29872);
ctx.lineTo(34684,29836);
ctx.lineTo(34720,29836);
ctx.lineTo(34720,29872);
ctx.lineTo(34684,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,50,193,0.85)';
ctx.strokeStyle='rgb(122,104,45)';
ctx.moveTo(34780,30064);
ctx.lineTo(34780,30028);
ctx.lineTo(34816,30028);
ctx.lineTo(34816,30064);
ctx.lineTo(34780,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,169,152,0.85)';
ctx.strokeStyle='rgb(200,70,101)';
ctx.moveTo(34780,29968);
ctx.lineTo(34780,29932);
ctx.lineTo(34816,29932);
ctx.lineTo(34816,29968);
ctx.lineTo(34780,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,224,164,0.85)';
ctx.strokeStyle='rgb(49,46,220)';
ctx.moveTo(34780,29872);
ctx.lineTo(34780,29836);
ctx.lineTo(34816,29836);
ctx.lineTo(34816,29872);
ctx.lineTo(34780,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,70,55,0.85)';
ctx.strokeStyle='rgb(218,7,137)';
ctx.moveTo(34876,30064);
ctx.lineTo(34876,30028);
ctx.lineTo(34912,30028);
ctx.lineTo(34912,30064);
ctx.lineTo(34876,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,244,156,0.85)';
ctx.strokeStyle='rgb(14,207,167)';
ctx.moveTo(34876,29968);
ctx.lineTo(34876,29932);
ctx.lineTo(34912,29932);
ctx.lineTo(34912,29968);
ctx.lineTo(34876,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,241,195,0.85)';
ctx.strokeStyle='rgb(25,12,16)';
ctx.moveTo(34876,29872);
ctx.lineTo(34876,29836);
ctx.lineTo(34912,29836);
ctx.lineTo(34912,29872);
ctx.lineTo(34876,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,231,16,0.85)';
ctx.strokeStyle='rgb(165,80,195)';
ctx.moveTo(34972,30064);
ctx.lineTo(34972,30028);
ctx.lineTo(35008,30028);
ctx.lineTo(35008,30064);
ctx.lineTo(34972,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,18,102,0.85)';
ctx.strokeStyle='rgb(234,204,1)';
ctx.moveTo(34972,29968);
ctx.lineTo(34972,29932);
ctx.lineTo(35008,29932);
ctx.lineTo(35008,29968);
ctx.lineTo(34972,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,75,149,0.85)';
ctx.strokeStyle='rgb(113,242,74)';
ctx.moveTo(34972,29872);
ctx.lineTo(34972,29836);
ctx.lineTo(35008,29836);
ctx.lineTo(35008,29872);
ctx.lineTo(34972,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,46,102,0.85)';
ctx.strokeStyle='rgb(201,226,111)';
ctx.moveTo(35068,30064);
ctx.lineTo(35068,30028);
ctx.lineTo(35104,30028);
ctx.lineTo(35104,30064);
ctx.lineTo(35068,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(37,182,78,0.85)';
ctx.strokeStyle='rgb(103,209,104)';
ctx.moveTo(35068,29968);
ctx.lineTo(35068,29932);
ctx.lineTo(35104,29932);
ctx.lineTo(35104,29968);
ctx.lineTo(35068,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,13,168,0.85)';
ctx.strokeStyle='rgb(17,96,130)';
ctx.moveTo(35068,29872);
ctx.lineTo(35068,29836);
ctx.lineTo(35104,29836);
ctx.lineTo(35104,29872);
ctx.lineTo(35068,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,166,174,0.85)';
ctx.strokeStyle='rgb(235,72,88)';
ctx.moveTo(35164,30064);
ctx.lineTo(35164,30028);
ctx.lineTo(35200,30028);
ctx.lineTo(35200,30064);
ctx.lineTo(35164,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,197,149,0.85)';
ctx.strokeStyle='rgb(23,203,173)';
ctx.moveTo(35164,29968);
ctx.lineTo(35164,29932);
ctx.lineTo(35200,29932);
ctx.lineTo(35200,29968);
ctx.lineTo(35164,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,246,198,0.85)';
ctx.strokeStyle='rgb(179,80,169)';
ctx.moveTo(35164,29872);
ctx.lineTo(35164,29836);
ctx.lineTo(35200,29836);
ctx.lineTo(35200,29872);
ctx.lineTo(35164,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,27,25,0.85)';
ctx.strokeStyle='rgb(5,91,115)';
ctx.moveTo(34396,30064);
ctx.lineTo(34396,30028);
ctx.lineTo(34432,30028);
ctx.lineTo(34432,30064);
ctx.lineTo(34396,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(178,133,72,0.85)';
ctx.strokeStyle='rgb(24,162,19)';
ctx.moveTo(34684,31744);
ctx.lineTo(34684,31708);
ctx.lineTo(34720,31708);
ctx.lineTo(34720,31744);
ctx.lineTo(34684,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(127,249,66,0.85)';
ctx.strokeStyle='rgb(161,60,104)';
ctx.moveTo(34684,31648);
ctx.lineTo(34684,31612);
ctx.lineTo(34720,31612);
ctx.lineTo(34720,31648);
ctx.lineTo(34684,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(212,119,173,0.85)';
ctx.strokeStyle='rgb(136,35,70)';
ctx.moveTo(34780,31648);
ctx.lineTo(34780,31612);
ctx.lineTo(34816,31612);
ctx.lineTo(34816,31648);
ctx.lineTo(34780,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(68,194,147,0.85)';
ctx.strokeStyle='rgb(78,162,115)';
ctx.moveTo(34876,31744);
ctx.lineTo(34876,31708);
ctx.lineTo(34912,31708);
ctx.lineTo(34912,31744);
ctx.lineTo(34876,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,1,152,0.85)';
ctx.strokeStyle='rgb(68,66,46)';
ctx.moveTo(34876,31648);
ctx.lineTo(34876,31612);
ctx.lineTo(34912,31612);
ctx.lineTo(34912,31648);
ctx.lineTo(34876,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,127,75,0.85)';
ctx.strokeStyle='rgb(137,51,69)';
ctx.moveTo(34972,31744);
ctx.lineTo(34972,31708);
ctx.lineTo(35008,31708);
ctx.lineTo(35008,31744);
ctx.lineTo(34972,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,231,182,0.85)';
ctx.strokeStyle='rgb(236,97,71)';
ctx.moveTo(34972,31648);
ctx.lineTo(34972,31612);
ctx.lineTo(35008,31612);
ctx.lineTo(35008,31648);
ctx.lineTo(34972,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,185,161,0.85)';
ctx.strokeStyle='rgb(158,7,19)';
ctx.moveTo(35068,31744);
ctx.lineTo(35068,31708);
ctx.lineTo(35104,31708);
ctx.lineTo(35104,31744);
ctx.lineTo(35068,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(118,144,105,0.85)';
ctx.strokeStyle='rgb(211,32,34)';
ctx.moveTo(35068,31648);
ctx.lineTo(35068,31612);
ctx.lineTo(35104,31612);
ctx.lineTo(35104,31648);
ctx.lineTo(35068,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,235,46,0.85)';
ctx.strokeStyle='rgb(114,247,92)';
ctx.moveTo(34780,31744);
ctx.lineTo(34780,31708);
ctx.lineTo(34816,31708);
ctx.lineTo(34816,31744);
ctx.lineTo(34780,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(245,138,226,0.85)';
ctx.strokeStyle='rgb(222,136,67)';
ctx.moveTo(35164,31744);
ctx.lineTo(35164,31708);
ctx.lineTo(35200,31708);
ctx.lineTo(35200,31744);
ctx.lineTo(35164,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,205,184,0.85)';
ctx.strokeStyle='rgb(134,30,55)';
ctx.moveTo(35164,31648);
ctx.lineTo(35164,31612);
ctx.lineTo(35200,31612);
ctx.lineTo(35200,31648);
ctx.lineTo(35164,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(236,197,231,0.85)';
ctx.strokeStyle='rgb(26,159,93)';
ctx.moveTo(34492,31744);
ctx.lineTo(34492,31708);
ctx.lineTo(34528,31708);
ctx.lineTo(34528,31744);
ctx.lineTo(34492,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,22,155,0.85)';
ctx.strokeStyle='rgb(206,90,38)';
ctx.moveTo(34492,31648);
ctx.lineTo(34492,31612);
ctx.lineTo(34528,31612);
ctx.lineTo(34528,31648);
ctx.lineTo(34492,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,43,83,0.85)';
ctx.strokeStyle='rgb(66,20,40)';
ctx.moveTo(34588,31744);
ctx.lineTo(34588,31708);
ctx.lineTo(34624,31708);
ctx.lineTo(34624,31744);
ctx.lineTo(34588,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,141,96,0.85)';
ctx.strokeStyle='rgb(242,69,26)';
ctx.moveTo(34588,31648);
ctx.lineTo(34588,31612);
ctx.lineTo(34624,31612);
ctx.lineTo(34624,31648);
ctx.lineTo(34588,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,192,182,0.85)';
ctx.strokeStyle='rgb(188,187,102)';
ctx.moveTo(34396,29968);
ctx.lineTo(34396,29932);
ctx.lineTo(34432,29932);
ctx.lineTo(34432,29968);
ctx.lineTo(34396,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,26,230,0.85)';
ctx.strokeStyle='rgb(214,197,184)';
ctx.moveTo(34396,29872);
ctx.lineTo(34396,29836);
ctx.lineTo(34432,29836);
ctx.lineTo(34432,29872);
ctx.lineTo(34396,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(21,205,41,0.85)';
ctx.strokeStyle='rgb(69,148,79)';
ctx.moveTo(34492,30064);
ctx.lineTo(34492,30028);
ctx.lineTo(34528,30028);
ctx.lineTo(34528,30064);
ctx.lineTo(34492,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(47,117,85,0.85)';
ctx.strokeStyle='rgb(170,42,229)';
ctx.moveTo(34492,29968);
ctx.lineTo(34492,29932);
ctx.lineTo(34528,29932);
ctx.lineTo(34528,29968);
ctx.lineTo(34492,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,15,77,0.85)';
ctx.strokeStyle='rgb(2,55,65)';
ctx.moveTo(34492,29872);
ctx.lineTo(34492,29836);
ctx.lineTo(34528,29836);
ctx.lineTo(34528,29872);
ctx.lineTo(34492,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,59,235,0.85)';
ctx.strokeStyle='rgb(124,8,119)';
ctx.moveTo(34396,31744);
ctx.lineTo(34396,31708);
ctx.lineTo(34432,31708);
ctx.lineTo(34432,31744);
ctx.lineTo(34396,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(247,23,92,0.85)';
ctx.strokeStyle='rgb(233,226,86)';
ctx.moveTo(34396,31648);
ctx.lineTo(34396,31612);
ctx.lineTo(34432,31612);
ctx.lineTo(34432,31648);
ctx.lineTo(34396,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(151,193,23,0.85)';
ctx.strokeStyle='rgb(118,89,243)';
ctx.moveTo(34588,30064);
ctx.lineTo(34588,30028);
ctx.lineTo(34624,30028);
ctx.lineTo(34624,30064);
ctx.lineTo(34588,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(195,16,2,0.85)';
ctx.strokeStyle='rgb(183,109,110)';
ctx.moveTo(34588,29968);
ctx.lineTo(34588,29932);
ctx.lineTo(34624,29932);
ctx.lineTo(34624,29968);
ctx.lineTo(34588,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,186,198,0.85)';
ctx.strokeStyle='rgb(82,17,208)';
ctx.moveTo(34588,29872);
ctx.lineTo(34588,29836);
ctx.lineTo(34624,29836);
ctx.lineTo(34624,29872);
ctx.lineTo(34588,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,134,110,0.85)';
ctx.strokeStyle='rgb(245,41,54)';
ctx.moveTo(34684,30064);
ctx.lineTo(34684,30028);
ctx.lineTo(34720,30028);
ctx.lineTo(34720,30064);
ctx.lineTo(34684,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,170,89,0.85)';
ctx.strokeStyle='rgb(27,27,184)';
ctx.moveTo(34684,29968);
ctx.lineTo(34684,29932);
ctx.lineTo(34720,29932);
ctx.lineTo(34720,29968);
ctx.lineTo(34684,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,208,140,0.85)';
ctx.strokeStyle='rgb(14,91,162)';
ctx.moveTo(35500,31414);
ctx.lineTo(35500,31378);
ctx.lineTo(35536,31378);
ctx.lineTo(35536,31414);
ctx.lineTo(35500,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(39,230,88,0.85)';
ctx.strokeStyle='rgb(171,142,188)';
ctx.moveTo(35596,31414);
ctx.lineTo(35596,31378);
ctx.lineTo(35632,31378);
ctx.lineTo(35632,31414);
ctx.lineTo(35596,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,27,140,0.85)';
ctx.strokeStyle='rgb(109,34,39)';
ctx.moveTo(35692,31414);
ctx.lineTo(35692,31378);
ctx.lineTo(35728,31378);
ctx.lineTo(35728,31414);
ctx.lineTo(35692,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(129,120,137,0.85)';
ctx.strokeStyle='rgb(52,29,42)';
ctx.moveTo(35788,31414);
ctx.lineTo(35788,31378);
ctx.lineTo(35824,31378);
ctx.lineTo(35824,31414);
ctx.lineTo(35788,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(29,238,101,0.85)';
ctx.strokeStyle='rgb(122,157,81)';
ctx.moveTo(35884,31414);
ctx.lineTo(35884,31378);
ctx.lineTo(35920,31378);
ctx.lineTo(35920,31414);
ctx.lineTo(35884,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,173,168,0.85)';
ctx.strokeStyle='rgb(10,54,196)';
ctx.moveTo(35980,31414);
ctx.lineTo(35980,31378);
ctx.lineTo(36016,31378);
ctx.lineTo(36016,31414);
ctx.lineTo(35980,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,55,46,0.85)';
ctx.strokeStyle='rgb(246,233,102)';
ctx.moveTo(36076,31414);
ctx.lineTo(36076,31378);
ctx.lineTo(36112,31378);
ctx.lineTo(36112,31414);
ctx.lineTo(36076,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(71,243,124,0.85)';
ctx.strokeStyle='rgb(213,102,200)';
ctx.moveTo(36172,31414);
ctx.lineTo(36172,31378);
ctx.lineTo(36208,31378);
ctx.lineTo(36208,31414);
ctx.lineTo(36172,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(251,158,2,0.85)';
ctx.strokeStyle='rgb(129,20,108)';
ctx.moveTo(36268,31414);
ctx.lineTo(36268,31378);
ctx.lineTo(36304,31378);
ctx.lineTo(36304,31414);
ctx.lineTo(36268,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,240,107,0.85)';
ctx.strokeStyle='rgb(47,188,204)';
ctx.moveTo(36364,31414);
ctx.lineTo(36364,31378);
ctx.lineTo(36400,31378);
ctx.lineTo(36400,31414);
ctx.lineTo(36364,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,158,82,0.85)';
ctx.strokeStyle='rgb(240,224,250)';
ctx.moveTo(36460,31414);
ctx.lineTo(36460,31378);
ctx.lineTo(36496,31378);
ctx.lineTo(36496,31414);
ctx.lineTo(36460,31414);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(48,96,158,0.85)';
ctx.strokeStyle='rgb(179,21,212)';
ctx.moveTo(34204,29968);
ctx.lineTo(34204,29932);
ctx.lineTo(34240,29932);
ctx.lineTo(34240,29968);
ctx.lineTo(34204,29968);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(180,54,89,0.85)';
ctx.strokeStyle='rgb(225,92,202)';
ctx.moveTo(34204,31648);
ctx.lineTo(34204,31612);
ctx.lineTo(34240,31612);
ctx.lineTo(34240,31648);
ctx.lineTo(34204,31648);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(215,13,234,0.85)';
ctx.strokeStyle='rgb(187,170,20)';
ctx.moveTo(34204,29872);
ctx.lineTo(34204,29836);
ctx.lineTo(34240,29836);
ctx.lineTo(34240,29872);
ctx.lineTo(34204,29872);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,54,197,0.85)';
ctx.strokeStyle='rgb(114,119,214)';
ctx.moveTo(34204,31744);
ctx.lineTo(34204,31708);
ctx.lineTo(34240,31708);
ctx.lineTo(34240,31744);
ctx.lineTo(34204,31744);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,83,144,0.85)';
ctx.strokeStyle='rgb(136,249,211)';
ctx.moveTo(34204,30064);
ctx.lineTo(34204,30028);
ctx.lineTo(34240,30028);
ctx.lineTo(34240,30064);
ctx.lineTo(34204,30064);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,210,31,0.85)';
ctx.strokeStyle='rgb(236,108,53)';
ctx.moveTo(34204,31840);
ctx.lineTo(34204,31804);
ctx.lineTo(34240,31804);
ctx.lineTo(34240,31840);
ctx.lineTo(34204,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,100,149,0.85)';
ctx.strokeStyle='rgb(170,40,218)';
ctx.moveTo(34204,32512);
ctx.lineTo(34204,32476);
ctx.lineTo(34240,32476);
ctx.lineTo(34240,32512);
ctx.lineTo(34204,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,151,88,0.85)';
ctx.strokeStyle='rgb(123,158,113)';
ctx.moveTo(34204,32416);
ctx.lineTo(34204,32380);
ctx.lineTo(34240,32380);
ctx.lineTo(34240,32416);
ctx.lineTo(34204,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(242,127,124,0.85)';
ctx.strokeStyle='rgb(151,61,52)';
ctx.moveTo(34204,32320);
ctx.lineTo(34204,32284);
ctx.lineTo(34240,32284);
ctx.lineTo(34240,32320);
ctx.lineTo(34204,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,69,26,0.85)';
ctx.strokeStyle='rgb(58,154,247)';
ctx.moveTo(34204,32224);
ctx.lineTo(34204,32188);
ctx.lineTo(34240,32188);
ctx.lineTo(34240,32224);
ctx.lineTo(34204,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,39,82,0.85)';
ctx.strokeStyle='rgb(222,124,111)';
ctx.moveTo(34204,32608);
ctx.lineTo(34204,32572);
ctx.lineTo(34240,32572);
ctx.lineTo(34240,32608);
ctx.lineTo(34204,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,145,118,0.85)';
ctx.strokeStyle='rgb(99,10,244)';
ctx.moveTo(34204,31936);
ctx.lineTo(34204,31900);
ctx.lineTo(34240,31900);
ctx.lineTo(34240,31936);
ctx.lineTo(34204,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,198,98,0.85)';
ctx.strokeStyle='rgb(67,108,3)';
ctx.moveTo(34204,32032);
ctx.lineTo(34204,31996);
ctx.lineTo(34240,31996);
ctx.lineTo(34240,32032);
ctx.lineTo(34204,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,152,34,0.85)';
ctx.strokeStyle='rgb(59,213,154)';
ctx.moveTo(34204,32128);
ctx.lineTo(34204,32092);
ctx.lineTo(34240,32092);
ctx.lineTo(34240,32128);
ctx.lineTo(34204,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(235,195,67,0.85)';
ctx.strokeStyle='rgb(33,244,214)';
ctx.moveTo(34588,31936);
ctx.lineTo(34588,31900);
ctx.lineTo(34624,31900);
ctx.lineTo(34624,31936);
ctx.lineTo(34588,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(30,164,57,0.85)';
ctx.strokeStyle='rgb(111,61,138)';
ctx.moveTo(34588,31840);
ctx.lineTo(34588,31804);
ctx.lineTo(34624,31804);
ctx.lineTo(34624,31840);
ctx.lineTo(34588,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(155,94,246,0.85)';
ctx.strokeStyle='rgb(197,98,205)';
ctx.moveTo(34876,32128);
ctx.lineTo(34876,32092);
ctx.lineTo(34912,32092);
ctx.lineTo(34912,32128);
ctx.lineTo(34876,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,226,228,0.85)';
ctx.strokeStyle='rgb(58,108,226)';
ctx.moveTo(34972,32128);
ctx.lineTo(34972,32092);
ctx.lineTo(35008,32092);
ctx.lineTo(35008,32128);
ctx.lineTo(34972,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,222,230,0.85)';
ctx.strokeStyle='rgb(58,6,132)';
ctx.moveTo(35068,32128);
ctx.lineTo(35068,32092);
ctx.lineTo(35104,32092);
ctx.lineTo(35104,32128);
ctx.lineTo(35068,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(125,254,68,0.85)';
ctx.strokeStyle='rgb(4,21,199)';
ctx.moveTo(35164,32128);
ctx.lineTo(35164,32092);
ctx.lineTo(35200,32092);
ctx.lineTo(35200,32128);
ctx.lineTo(35164,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,235,236,0.85)';
ctx.strokeStyle='rgb(247,204,173)';
ctx.moveTo(34588,32128);
ctx.lineTo(34588,32092);
ctx.lineTo(34624,32092);
ctx.lineTo(34624,32128);
ctx.lineTo(34588,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,200,68,0.85)';
ctx.strokeStyle='rgb(212,239,46)';
ctx.moveTo(34780,32032);
ctx.lineTo(34780,31996);
ctx.lineTo(34816,31996);
ctx.lineTo(34816,32032);
ctx.lineTo(34780,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(165,157,244,0.85)';
ctx.strokeStyle='rgb(112,201,31)';
ctx.moveTo(34876,32032);
ctx.lineTo(34876,31996);
ctx.lineTo(34912,31996);
ctx.lineTo(34912,32032);
ctx.lineTo(34876,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(131,134,139,0.85)';
ctx.strokeStyle='rgb(28,81,115)';
ctx.moveTo(34876,31936);
ctx.lineTo(34876,31900);
ctx.lineTo(34912,31900);
ctx.lineTo(34912,31936);
ctx.lineTo(34876,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(228,40,54,0.85)';
ctx.strokeStyle='rgb(228,190,105)';
ctx.moveTo(34876,31840);
ctx.lineTo(34876,31804);
ctx.lineTo(34912,31804);
ctx.lineTo(34912,31840);
ctx.lineTo(34876,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,86,229,0.85)';
ctx.strokeStyle='rgb(246,217,6)';
ctx.moveTo(34684,32608);
ctx.lineTo(34684,32572);
ctx.lineTo(34720,32572);
ctx.lineTo(34720,32608);
ctx.lineTo(34684,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,167,49,0.85)';
ctx.strokeStyle='rgb(228,57,27)';
ctx.moveTo(34396,32032);
ctx.lineTo(34396,31996);
ctx.lineTo(34432,31996);
ctx.lineTo(34432,32032);
ctx.lineTo(34396,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,79,220,0.85)';
ctx.strokeStyle='rgb(22,171,89)';
ctx.moveTo(34396,31936);
ctx.lineTo(34396,31900);
ctx.lineTo(34432,31900);
ctx.lineTo(34432,31936);
ctx.lineTo(34396,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,90,194,0.85)';
ctx.strokeStyle='rgb(117,11,0)';
ctx.moveTo(34396,31840);
ctx.lineTo(34396,31804);
ctx.lineTo(34432,31804);
ctx.lineTo(34432,31840);
ctx.lineTo(34396,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(13,254,203,0.85)';
ctx.strokeStyle='rgb(51,88,243)';
ctx.moveTo(34684,32512);
ctx.lineTo(34684,32476);
ctx.lineTo(34720,32476);
ctx.lineTo(34720,32512);
ctx.lineTo(34684,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(33,62,107,0.85)';
ctx.strokeStyle='rgb(75,45,161)';
ctx.moveTo(34780,31936);
ctx.lineTo(34780,31900);
ctx.lineTo(34816,31900);
ctx.lineTo(34816,31936);
ctx.lineTo(34780,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,182,136,0.85)';
ctx.strokeStyle='rgb(200,102,240)';
ctx.moveTo(34972,32032);
ctx.lineTo(34972,31996);
ctx.lineTo(35008,31996);
ctx.lineTo(35008,32032);
ctx.lineTo(34972,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(103,184,12,0.85)';
ctx.strokeStyle='rgb(41,21,190)';
ctx.moveTo(34492,32032);
ctx.lineTo(34492,31996);
ctx.lineTo(34528,31996);
ctx.lineTo(34528,32032);
ctx.lineTo(34492,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(38,78,171,0.85)';
ctx.strokeStyle='rgb(185,250,127)';
ctx.moveTo(34492,31936);
ctx.lineTo(34492,31900);
ctx.lineTo(34528,31900);
ctx.lineTo(34528,31936);
ctx.lineTo(34492,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(187,158,24,0.85)';
ctx.strokeStyle='rgb(104,125,76)';
ctx.moveTo(34588,32416);
ctx.lineTo(34588,32380);
ctx.lineTo(34624,32380);
ctx.lineTo(34624,32416);
ctx.lineTo(34588,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,83,156,0.85)';
ctx.strokeStyle='rgb(111,204,148)';
ctx.moveTo(34588,32320);
ctx.lineTo(34588,32284);
ctx.lineTo(34624,32284);
ctx.lineTo(34624,32320);
ctx.lineTo(34588,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,128,151,0.85)';
ctx.strokeStyle='rgb(97,127,225)';
ctx.moveTo(34588,32224);
ctx.lineTo(34588,32188);
ctx.lineTo(34624,32188);
ctx.lineTo(34624,32224);
ctx.lineTo(34588,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,155,217,0.85)';
ctx.strokeStyle='rgb(73,158,231)';
ctx.moveTo(34396,32416);
ctx.lineTo(34396,32380);
ctx.lineTo(34432,32380);
ctx.lineTo(34432,32416);
ctx.lineTo(34396,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(0,175,241,0.85)';
ctx.strokeStyle='rgb(91,84,137)';
ctx.moveTo(34396,32320);
ctx.lineTo(34396,32284);
ctx.lineTo(34432,32284);
ctx.lineTo(34432,32320);
ctx.lineTo(34396,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,135,92,0.85)';
ctx.strokeStyle='rgb(169,27,162)';
ctx.moveTo(34396,32224);
ctx.lineTo(34396,32188);
ctx.lineTo(34432,32188);
ctx.lineTo(34432,32224);
ctx.lineTo(34396,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(133,175,25,0.85)';
ctx.strokeStyle='rgb(51,16,245)';
ctx.moveTo(34972,31936);
ctx.lineTo(34972,31900);
ctx.lineTo(35008,31900);
ctx.lineTo(35008,31936);
ctx.lineTo(34972,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(135,83,88,0.85)';
ctx.strokeStyle='rgb(165,80,130)';
ctx.moveTo(34972,31840);
ctx.lineTo(34972,31804);
ctx.lineTo(35008,31804);
ctx.lineTo(35008,31840);
ctx.lineTo(34972,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,238,135,0.85)';
ctx.strokeStyle='rgb(72,108,204)';
ctx.moveTo(34684,32416);
ctx.lineTo(34684,32380);
ctx.lineTo(34720,32380);
ctx.lineTo(34720,32416);
ctx.lineTo(34684,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,128,252,0.85)';
ctx.strokeStyle='rgb(33,117,119)';
ctx.moveTo(34684,32320);
ctx.lineTo(34684,32284);
ctx.lineTo(34720,32284);
ctx.lineTo(34720,32320);
ctx.lineTo(34684,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,216,114,0.85)';
ctx.strokeStyle='rgb(233,99,47)';
ctx.moveTo(34780,31840);
ctx.lineTo(34780,31804);
ctx.lineTo(34816,31804);
ctx.lineTo(34816,31840);
ctx.lineTo(34780,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,118,219,0.85)';
ctx.strokeStyle='rgb(173,240,101)';
ctx.moveTo(35068,32032);
ctx.lineTo(35068,31996);
ctx.lineTo(35104,31996);
ctx.lineTo(35104,32032);
ctx.lineTo(35068,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(172,78,35,0.85)';
ctx.strokeStyle='rgb(116,78,43)';
ctx.moveTo(34492,32608);
ctx.lineTo(34492,32572);
ctx.lineTo(34528,32572);
ctx.lineTo(34528,32608);
ctx.lineTo(34492,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,184,88,0.85)';
ctx.strokeStyle='rgb(160,114,190)';
ctx.moveTo(34492,32512);
ctx.lineTo(34492,32476);
ctx.lineTo(34528,32476);
ctx.lineTo(34528,32512);
ctx.lineTo(34492,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(200,24,82,0.85)';
ctx.strokeStyle='rgb(97,93,118)';
ctx.moveTo(34492,32416);
ctx.lineTo(34492,32380);
ctx.lineTo(34528,32380);
ctx.lineTo(34528,32416);
ctx.lineTo(34492,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(160,222,116,0.85)';
ctx.strokeStyle='rgb(173,175,29)';
ctx.moveTo(34492,32320);
ctx.lineTo(34492,32284);
ctx.lineTo(34528,32284);
ctx.lineTo(34528,32320);
ctx.lineTo(34492,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(40,215,17,0.85)';
ctx.strokeStyle='rgb(117,163,125)';
ctx.moveTo(34492,32224);
ctx.lineTo(34492,32188);
ctx.lineTo(34528,32188);
ctx.lineTo(34528,32224);
ctx.lineTo(34492,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,213,2,0.85)';
ctx.strokeStyle='rgb(80,53,99)';
ctx.moveTo(35068,31936);
ctx.lineTo(35068,31900);
ctx.lineTo(35104,31900);
ctx.lineTo(35104,31936);
ctx.lineTo(35068,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(8,129,55,0.85)';
ctx.strokeStyle='rgb(94,25,150)';
ctx.moveTo(35068,31840);
ctx.lineTo(35068,31804);
ctx.lineTo(35104,31804);
ctx.lineTo(35104,31840);
ctx.lineTo(35068,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,101,131,0.85)';
ctx.strokeStyle='rgb(110,62,36)';
ctx.moveTo(34684,32224);
ctx.lineTo(34684,32188);
ctx.lineTo(34720,32188);
ctx.lineTo(34720,32224);
ctx.lineTo(34684,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,43,51,0.85)';
ctx.strokeStyle='rgb(79,17,94)';
ctx.moveTo(34684,32128);
ctx.lineTo(34684,32092);
ctx.lineTo(34720,32092);
ctx.lineTo(34720,32128);
ctx.lineTo(34684,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,196,168,0.85)';
ctx.strokeStyle='rgb(202,242,253)';
ctx.moveTo(34396,32608);
ctx.lineTo(34396,32572);
ctx.lineTo(34432,32572);
ctx.lineTo(34432,32608);
ctx.lineTo(34396,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(252,238,65,0.85)';
ctx.strokeStyle='rgb(37,42,134)';
ctx.moveTo(34396,32512);
ctx.lineTo(34396,32476);
ctx.lineTo(34432,32476);
ctx.lineTo(34432,32512);
ctx.lineTo(34396,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,49,84,0.85)';
ctx.strokeStyle='rgb(223,35,191)';
ctx.moveTo(34588,32608);
ctx.lineTo(34588,32572);
ctx.lineTo(34624,32572);
ctx.lineTo(34624,32608);
ctx.lineTo(34588,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,222,31,0.85)';
ctx.strokeStyle='rgb(203,33,140)';
ctx.moveTo(34588,32512);
ctx.lineTo(34588,32476);
ctx.lineTo(34624,32476);
ctx.lineTo(34624,32512);
ctx.lineTo(34588,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(35,104,220,0.85)';
ctx.strokeStyle='rgb(123,122,42)';
ctx.moveTo(34876,32224);
ctx.lineTo(34876,32188);
ctx.lineTo(34912,32188);
ctx.lineTo(34912,32224);
ctx.lineTo(34876,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(17,99,20,0.85)';
ctx.strokeStyle='rgb(1,1,167)';
ctx.moveTo(34780,32512);
ctx.lineTo(34780,32476);
ctx.lineTo(34816,32476);
ctx.lineTo(34816,32512);
ctx.lineTo(34780,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,166,119,0.85)';
ctx.strokeStyle='rgb(136,149,13)';
ctx.moveTo(34780,32416);
ctx.lineTo(34780,32380);
ctx.lineTo(34816,32380);
ctx.lineTo(34816,32416);
ctx.lineTo(34780,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,87,241,0.85)';
ctx.strokeStyle='rgb(96,218,46)';
ctx.moveTo(35068,32608);
ctx.lineTo(35068,32572);
ctx.lineTo(35104,32572);
ctx.lineTo(35104,32608);
ctx.lineTo(35068,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(227,201,221,0.85)';
ctx.strokeStyle='rgb(242,179,134)';
ctx.moveTo(35068,32512);
ctx.lineTo(35068,32476);
ctx.lineTo(35104,32476);
ctx.lineTo(35104,32512);
ctx.lineTo(35068,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,128,154,0.85)';
ctx.strokeStyle='rgb(39,22,121)';
ctx.moveTo(35068,32416);
ctx.lineTo(35068,32380);
ctx.lineTo(35104,32380);
ctx.lineTo(35104,32416);
ctx.lineTo(35068,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,19,63,0.85)';
ctx.strokeStyle='rgb(149,233,109)';
ctx.moveTo(35068,32320);
ctx.lineTo(35068,32284);
ctx.lineTo(35104,32284);
ctx.lineTo(35104,32320);
ctx.lineTo(35068,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,51,233,0.85)';
ctx.strokeStyle='rgb(237,41,146)';
ctx.moveTo(35068,32224);
ctx.lineTo(35068,32188);
ctx.lineTo(35104,32188);
ctx.lineTo(35104,32224);
ctx.lineTo(35068,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(61,232,207,0.85)';
ctx.strokeStyle='rgb(12,115,17)';
ctx.moveTo(34780,32320);
ctx.lineTo(34780,32284);
ctx.lineTo(34816,32284);
ctx.lineTo(34816,32320);
ctx.lineTo(34780,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(220,131,193,0.85)';
ctx.strokeStyle='rgb(125,18,17)';
ctx.moveTo(34780,32224);
ctx.lineTo(34780,32188);
ctx.lineTo(34816,32188);
ctx.lineTo(34816,32224);
ctx.lineTo(34780,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(184,113,208,0.85)';
ctx.strokeStyle='rgb(187,164,80)';
ctx.moveTo(34780,32608);
ctx.lineTo(34780,32572);
ctx.lineTo(34816,32572);
ctx.lineTo(34816,32608);
ctx.lineTo(34780,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,58,135,0.85)';
ctx.strokeStyle='rgb(140,212,29)';
ctx.moveTo(34876,32608);
ctx.lineTo(34876,32572);
ctx.lineTo(34912,32572);
ctx.lineTo(34912,32608);
ctx.lineTo(34876,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(145,93,145,0.85)';
ctx.strokeStyle='rgb(131,129,62)';
ctx.moveTo(34972,32608);
ctx.lineTo(34972,32572);
ctx.lineTo(35008,32572);
ctx.lineTo(35008,32608);
ctx.lineTo(34972,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,45,57,0.85)';
ctx.strokeStyle='rgb(207,69,188)';
ctx.moveTo(34972,32512);
ctx.lineTo(34972,32476);
ctx.lineTo(35008,32476);
ctx.lineTo(35008,32512);
ctx.lineTo(34972,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(114,32,227,0.85)';
ctx.strokeStyle='rgb(75,55,114)';
ctx.moveTo(35164,32608);
ctx.lineTo(35164,32572);
ctx.lineTo(35200,32572);
ctx.lineTo(35200,32608);
ctx.lineTo(35164,32608);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,245,95,0.85)';
ctx.strokeStyle='rgb(86,139,218)';
ctx.moveTo(35164,32512);
ctx.lineTo(35164,32476);
ctx.lineTo(35200,32476);
ctx.lineTo(35200,32512);
ctx.lineTo(35164,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(89,184,145,0.85)';
ctx.strokeStyle='rgb(233,62,252)';
ctx.moveTo(35164,32416);
ctx.lineTo(35164,32380);
ctx.lineTo(35200,32380);
ctx.lineTo(35200,32416);
ctx.lineTo(35164,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,180,44,0.85)';
ctx.strokeStyle='rgb(218,44,56)';
ctx.moveTo(35164,32320);
ctx.lineTo(35164,32284);
ctx.lineTo(35200,32284);
ctx.lineTo(35200,32320);
ctx.lineTo(35164,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(162,3,140,0.85)';
ctx.strokeStyle='rgb(51,26,238)';
ctx.moveTo(35164,32224);
ctx.lineTo(35164,32188);
ctx.lineTo(35200,32188);
ctx.lineTo(35200,32224);
ctx.lineTo(35164,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(51,92,90,0.85)';
ctx.strokeStyle='rgb(115,171,177)';
ctx.moveTo(34972,32416);
ctx.lineTo(34972,32380);
ctx.lineTo(35008,32380);
ctx.lineTo(35008,32416);
ctx.lineTo(34972,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(157,47,200,0.85)';
ctx.strokeStyle='rgb(58,210,102)';
ctx.moveTo(34972,32320);
ctx.lineTo(34972,32284);
ctx.lineTo(35008,32284);
ctx.lineTo(35008,32320);
ctx.lineTo(34972,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(124,227,158,0.85)';
ctx.strokeStyle='rgb(38,5,96)';
ctx.moveTo(34972,32224);
ctx.lineTo(34972,32188);
ctx.lineTo(35008,32188);
ctx.lineTo(35008,32224);
ctx.lineTo(34972,32224);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(202,21,213,0.85)';
ctx.strokeStyle='rgb(121,248,47)';
ctx.moveTo(34876,32512);
ctx.lineTo(34876,32476);
ctx.lineTo(34912,32476);
ctx.lineTo(34912,32512);
ctx.lineTo(34876,32512);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,139,245,0.85)';
ctx.strokeStyle='rgb(119,248,1)';
ctx.moveTo(34876,32416);
ctx.lineTo(34876,32380);
ctx.lineTo(34912,32380);
ctx.lineTo(34912,32416);
ctx.lineTo(34876,32416);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(109,26,73,0.85)';
ctx.strokeStyle='rgb(129,137,48)';
ctx.moveTo(34876,32320);
ctx.lineTo(34876,32284);
ctx.lineTo(34912,32284);
ctx.lineTo(34912,32320);
ctx.lineTo(34876,32320);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(22,152,139,0.85)';
ctx.strokeStyle='rgb(64,248,50)';
ctx.moveTo(34684,32032);
ctx.lineTo(34684,31996);
ctx.lineTo(34720,31996);
ctx.lineTo(34720,32032);
ctx.lineTo(34684,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(214,88,239,0.85)';
ctx.strokeStyle='rgb(179,138,77)';
ctx.moveTo(35164,32032);
ctx.lineTo(35164,31996);
ctx.lineTo(35200,31996);
ctx.lineTo(35200,32032);
ctx.lineTo(35164,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(126,17,96,0.85)';
ctx.strokeStyle='rgb(114,36,171)';
ctx.moveTo(35164,31936);
ctx.lineTo(35164,31900);
ctx.lineTo(35200,31900);
ctx.lineTo(35200,31936);
ctx.lineTo(35164,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(86,68,145,0.85)';
ctx.strokeStyle='rgb(127,147,34)';
ctx.moveTo(35164,31840);
ctx.lineTo(35164,31804);
ctx.lineTo(35200,31804);
ctx.lineTo(35200,31840);
ctx.lineTo(35164,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,74,206,0.85)';
ctx.strokeStyle='rgb(131,237,111)';
ctx.moveTo(34684,31936);
ctx.lineTo(34684,31900);
ctx.lineTo(34720,31900);
ctx.lineTo(34720,31936);
ctx.lineTo(34684,31936);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,67,191,0.85)';
ctx.strokeStyle='rgb(224,118,3)';
ctx.moveTo(34684,31840);
ctx.lineTo(34684,31804);
ctx.lineTo(34720,31804);
ctx.lineTo(34720,31840);
ctx.lineTo(34684,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,100,79,0.85)';
ctx.strokeStyle='rgb(237,198,219)';
ctx.moveTo(34492,31840);
ctx.lineTo(34492,31804);
ctx.lineTo(34528,31804);
ctx.lineTo(34528,31840);
ctx.lineTo(34492,31840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(161,144,129,0.85)';
ctx.strokeStyle='rgb(148,135,83)';
ctx.moveTo(34396,32128);
ctx.lineTo(34396,32092);
ctx.lineTo(34432,32092);
ctx.lineTo(34432,32128);
ctx.lineTo(34396,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(77,49,122,0.85)';
ctx.strokeStyle='rgb(21,73,34)';
ctx.moveTo(34492,32128);
ctx.lineTo(34492,32092);
ctx.lineTo(34528,32092);
ctx.lineTo(34528,32128);
ctx.lineTo(34492,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(26,122,195,0.85)';
ctx.strokeStyle='rgb(106,79,247)';
ctx.moveTo(34780,32128);
ctx.lineTo(34780,32092);
ctx.lineTo(34816,32092);
ctx.lineTo(34816,32128);
ctx.lineTo(34780,32128);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,78,189,0.85)';
ctx.strokeStyle='rgb(197,130,5)';
ctx.moveTo(34588,32032);
ctx.lineTo(34588,31996);
ctx.lineTo(34624,31996);
ctx.lineTo(34624,32032);
ctx.lineTo(34588,32032);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(207,124,116,0.85)';
ctx.strokeStyle='rgb(15,55,249)';
ctx.moveTo(35980,33328);
ctx.lineTo(35980,33292);
ctx.lineTo(36016,33292);
ctx.lineTo(36016,33328);
ctx.lineTo(35980,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,124,102,0.85)';
ctx.strokeStyle='rgb(158,158,1)';
ctx.moveTo(35980,33232);
ctx.lineTo(35980,33196);
ctx.lineTo(36016,33196);
ctx.lineTo(36016,33232);
ctx.lineTo(35980,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,69,95,0.85)';
ctx.strokeStyle='rgb(111,65,180)';
ctx.moveTo(35980,33136);
ctx.lineTo(35980,33100);
ctx.lineTo(36016,33100);
ctx.lineTo(36016,33136);
ctx.lineTo(35980,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,164,16,0.85)';
ctx.strokeStyle='rgb(67,61,197)';
ctx.moveTo(35980,33040);
ctx.lineTo(35980,33004);
ctx.lineTo(36016,33004);
ctx.lineTo(36016,33040);
ctx.lineTo(35980,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(10,228,156,0.85)';
ctx.strokeStyle='rgb(216,26,117)';
ctx.moveTo(35980,32944);
ctx.lineTo(35980,32908);
ctx.lineTo(36016,32908);
ctx.lineTo(36016,32944);
ctx.lineTo(35980,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(169,131,159,0.85)';
ctx.strokeStyle='rgb(56,133,124)';
ctx.moveTo(36076,32944);
ctx.lineTo(36076,32908);
ctx.lineTo(36112,32908);
ctx.lineTo(36112,32944);
ctx.lineTo(36076,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(44,59,193,0.85)';
ctx.strokeStyle='rgb(141,133,93)';
ctx.moveTo(36076,33328);
ctx.lineTo(36076,33292);
ctx.lineTo(36112,33292);
ctx.lineTo(36112,33328);
ctx.lineTo(36076,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(60,148,169,0.85)';
ctx.strokeStyle='rgb(213,36,25)';
ctx.moveTo(36172,33328);
ctx.lineTo(36172,33292);
ctx.lineTo(36208,33292);
ctx.lineTo(36208,33328);
ctx.lineTo(36172,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,216,171,0.85)';
ctx.strokeStyle='rgb(39,64,23)';
ctx.moveTo(36172,33232);
ctx.lineTo(36172,33196);
ctx.lineTo(36208,33196);
ctx.lineTo(36208,33232);
ctx.lineTo(36172,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(113,186,17,0.85)';
ctx.strokeStyle='rgb(135,91,88)';
ctx.moveTo(36172,33136);
ctx.lineTo(36172,33100);
ctx.lineTo(36208,33100);
ctx.lineTo(36208,33136);
ctx.lineTo(36172,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(210,37,11,0.85)';
ctx.strokeStyle='rgb(228,161,218)';
ctx.moveTo(36172,33040);
ctx.lineTo(36172,33004);
ctx.lineTo(36208,33004);
ctx.lineTo(36208,33040);
ctx.lineTo(36172,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,121,164,0.85)';
ctx.strokeStyle='rgb(119,176,33)';
ctx.moveTo(36172,32944);
ctx.lineTo(36172,32908);
ctx.lineTo(36208,32908);
ctx.lineTo(36208,32944);
ctx.lineTo(36172,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(138,137,143,0.85)';
ctx.strokeStyle='rgb(183,64,167)';
ctx.moveTo(36076,33232);
ctx.lineTo(36076,33196);
ctx.lineTo(36112,33196);
ctx.lineTo(36112,33232);
ctx.lineTo(36076,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(101,225,125,0.85)';
ctx.strokeStyle='rgb(113,246,108)';
ctx.moveTo(36268,33328);
ctx.lineTo(36268,33292);
ctx.lineTo(36304,33292);
ctx.lineTo(36304,33328);
ctx.lineTo(36268,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(102,28,78,0.85)';
ctx.strokeStyle='rgb(129,112,160)';
ctx.moveTo(36268,33232);
ctx.lineTo(36268,33196);
ctx.lineTo(36304,33196);
ctx.lineTo(36304,33232);
ctx.lineTo(36268,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(95,22,83,0.85)';
ctx.strokeStyle='rgb(110,99,114)';
ctx.moveTo(36268,33136);
ctx.lineTo(36268,33100);
ctx.lineTo(36304,33100);
ctx.lineTo(36304,33136);
ctx.lineTo(36268,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(122,53,192,0.85)';
ctx.strokeStyle='rgb(23,34,204)';
ctx.moveTo(36268,33040);
ctx.lineTo(36268,33004);
ctx.lineTo(36304,33004);
ctx.lineTo(36304,33040);
ctx.lineTo(36268,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(243,26,12,0.85)';
ctx.strokeStyle='rgb(129,14,172)';
ctx.moveTo(36268,32944);
ctx.lineTo(36268,32908);
ctx.lineTo(36304,32908);
ctx.lineTo(36304,32944);
ctx.lineTo(36268,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,62,96,0.85)';
ctx.strokeStyle='rgb(77,53,25)';
ctx.moveTo(36076,33136);
ctx.lineTo(36076,33100);
ctx.lineTo(36112,33100);
ctx.lineTo(36112,33136);
ctx.lineTo(36076,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(18,162,125,0.85)';
ctx.strokeStyle='rgb(56,103,220)';
ctx.moveTo(36364,33328);
ctx.lineTo(36364,33292);
ctx.lineTo(36400,33292);
ctx.lineTo(36400,33328);
ctx.lineTo(36364,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(144,90,49,0.85)';
ctx.strokeStyle='rgb(75,251,176)';
ctx.moveTo(36364,33232);
ctx.lineTo(36364,33196);
ctx.lineTo(36400,33196);
ctx.lineTo(36400,33232);
ctx.lineTo(36364,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,103,202,0.85)';
ctx.strokeStyle='rgb(35,2,185)';
ctx.moveTo(36364,33136);
ctx.lineTo(36364,33100);
ctx.lineTo(36400,33100);
ctx.lineTo(36400,33136);
ctx.lineTo(36364,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,16,140,0.85)';
ctx.strokeStyle='rgb(184,223,82)';
ctx.moveTo(36364,33040);
ctx.lineTo(36364,33004);
ctx.lineTo(36400,33004);
ctx.lineTo(36400,33040);
ctx.lineTo(36364,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(76,91,68,0.85)';
ctx.strokeStyle='rgb(115,67,228)';
ctx.moveTo(36364,32944);
ctx.lineTo(36364,32908);
ctx.lineTo(36400,32908);
ctx.lineTo(36400,32944);
ctx.lineTo(36364,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(232,49,13,0.85)';
ctx.strokeStyle='rgb(25,19,130)';
ctx.moveTo(36076,33040);
ctx.lineTo(36076,33004);
ctx.lineTo(36112,33004);
ctx.lineTo(36112,33040);
ctx.lineTo(36076,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,171,124,0.85)';
ctx.strokeStyle='rgb(37,162,4)';
ctx.moveTo(36460,33328);
ctx.lineTo(36460,33292);
ctx.lineTo(36496,33292);
ctx.lineTo(36496,33328);
ctx.lineTo(36460,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(213,76,101,0.85)';
ctx.strokeStyle='rgb(52,134,89)';
ctx.moveTo(36460,33232);
ctx.lineTo(36460,33196);
ctx.lineTo(36496,33196);
ctx.lineTo(36496,33232);
ctx.lineTo(36460,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,68,97,0.85)';
ctx.strokeStyle='rgb(217,78,220)';
ctx.moveTo(36460,33136);
ctx.lineTo(36460,33100);
ctx.lineTo(36496,33100);
ctx.lineTo(36496,33136);
ctx.lineTo(36460,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(146,56,105,0.85)';
ctx.strokeStyle='rgb(118,48,145)';
ctx.moveTo(36460,33040);
ctx.lineTo(36460,33004);
ctx.lineTo(36496,33004);
ctx.lineTo(36496,33040);
ctx.lineTo(36460,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,66,230,0.85)';
ctx.strokeStyle='rgb(62,215,79)';
ctx.moveTo(36460,32944);
ctx.lineTo(36460,32908);
ctx.lineTo(36496,32908);
ctx.lineTo(36496,32944);
ctx.lineTo(36460,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(120,162,158,0.85)';
ctx.strokeStyle='rgb(251,229,99)';
ctx.moveTo(35788,33136);
ctx.lineTo(35788,33100);
ctx.lineTo(35824,33100);
ctx.lineTo(35824,33136);
ctx.lineTo(35788,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(136,254,8,0.85)';
ctx.strokeStyle='rgb(92,72,96)';
ctx.moveTo(35788,33040);
ctx.lineTo(35788,33004);
ctx.lineTo(35824,33004);
ctx.lineTo(35824,33040);
ctx.lineTo(35788,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(156,132,201,0.85)';
ctx.strokeStyle='rgb(95,48,223)';
ctx.moveTo(35788,32944);
ctx.lineTo(35788,32908);
ctx.lineTo(35824,32908);
ctx.lineTo(35824,32944);
ctx.lineTo(35788,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,66,147,0.85)';
ctx.strokeStyle='rgb(133,132,71)';
ctx.moveTo(35500,33040);
ctx.lineTo(35500,33004);
ctx.lineTo(35536,33004);
ctx.lineTo(35536,33040);
ctx.lineTo(35500,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,76,9,0.85)';
ctx.strokeStyle='rgb(242,247,75)';
ctx.moveTo(35884,33328);
ctx.lineTo(35884,33292);
ctx.lineTo(35920,33292);
ctx.lineTo(35920,33328);
ctx.lineTo(35884,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(149,35,166,0.85)';
ctx.strokeStyle='rgb(41,140,34)';
ctx.moveTo(35884,33232);
ctx.lineTo(35884,33196);
ctx.lineTo(35920,33196);
ctx.lineTo(35920,33232);
ctx.lineTo(35884,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(24,115,200,0.85)';
ctx.strokeStyle='rgb(163,119,218)';
ctx.moveTo(35884,33136);
ctx.lineTo(35884,33100);
ctx.lineTo(35920,33100);
ctx.lineTo(35920,33136);
ctx.lineTo(35884,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(32,87,222,0.85)';
ctx.strokeStyle='rgb(224,225,119)';
ctx.moveTo(35884,33040);
ctx.lineTo(35884,33004);
ctx.lineTo(35920,33004);
ctx.lineTo(35920,33040);
ctx.lineTo(35884,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(98,226,31,0.85)';
ctx.strokeStyle='rgb(53,239,178)';
ctx.moveTo(35884,32944);
ctx.lineTo(35884,32908);
ctx.lineTo(35920,32908);
ctx.lineTo(35920,32944);
ctx.lineTo(35884,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(153,204,176,0.85)';
ctx.strokeStyle='rgb(118,24,154)';
ctx.moveTo(35500,32944);
ctx.lineTo(35500,32908);
ctx.lineTo(35536,32908);
ctx.lineTo(35536,32944);
ctx.lineTo(35500,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(72,125,203,0.85)';
ctx.strokeStyle='rgb(162,242,76)';
ctx.moveTo(35500,33328);
ctx.lineTo(35500,33292);
ctx.lineTo(35536,33292);
ctx.lineTo(35536,33328);
ctx.lineTo(35500,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(75,75,97,0.85)';
ctx.strokeStyle='rgb(92,9,207)';
ctx.moveTo(35596,33328);
ctx.lineTo(35596,33292);
ctx.lineTo(35632,33292);
ctx.lineTo(35632,33328);
ctx.lineTo(35596,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(3,2,95,0.85)';
ctx.strokeStyle='rgb(146,173,88)';
ctx.moveTo(35596,33232);
ctx.lineTo(35596,33196);
ctx.lineTo(35632,33196);
ctx.lineTo(35632,33232);
ctx.lineTo(35596,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,207,164,0.85)';
ctx.strokeStyle='rgb(249,109,106)';
ctx.moveTo(35596,33136);
ctx.lineTo(35596,33100);
ctx.lineTo(35632,33100);
ctx.lineTo(35632,33136);
ctx.lineTo(35596,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,45,7,0.85)';
ctx.strokeStyle='rgb(154,213,185)';
ctx.moveTo(35596,33040);
ctx.lineTo(35596,33004);
ctx.lineTo(35632,33004);
ctx.lineTo(35632,33040);
ctx.lineTo(35596,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,86,45,0.85)';
ctx.strokeStyle='rgb(144,122,156)';
ctx.moveTo(35596,32944);
ctx.lineTo(35596,32908);
ctx.lineTo(35632,32908);
ctx.lineTo(35632,32944);
ctx.lineTo(35596,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,22,187,0.85)';
ctx.strokeStyle='rgb(96,37,227)';
ctx.moveTo(35500,33232);
ctx.lineTo(35500,33196);
ctx.lineTo(35536,33196);
ctx.lineTo(35536,33232);
ctx.lineTo(35500,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,177,183,0.85)';
ctx.strokeStyle='rgb(177,58,140)';
ctx.moveTo(35692,33328);
ctx.lineTo(35692,33292);
ctx.lineTo(35728,33292);
ctx.lineTo(35728,33328);
ctx.lineTo(35692,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(81,5,127,0.85)';
ctx.strokeStyle='rgb(104,74,238)';
ctx.moveTo(35692,33232);
ctx.lineTo(35692,33196);
ctx.lineTo(35728,33196);
ctx.lineTo(35728,33232);
ctx.lineTo(35692,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(211,83,112,0.85)';
ctx.strokeStyle='rgb(64,102,28)';
ctx.moveTo(35692,33136);
ctx.lineTo(35692,33100);
ctx.lineTo(35728,33100);
ctx.lineTo(35728,33136);
ctx.lineTo(35692,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(193,169,74,0.85)';
ctx.strokeStyle='rgb(208,169,233)';
ctx.moveTo(35692,33040);
ctx.lineTo(35692,33004);
ctx.lineTo(35728,33004);
ctx.lineTo(35728,33040);
ctx.lineTo(35692,33040);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(233,195,114,0.85)';
ctx.strokeStyle='rgb(170,70,180)';
ctx.moveTo(35692,32944);
ctx.lineTo(35692,32908);
ctx.lineTo(35728,32908);
ctx.lineTo(35728,32944);
ctx.lineTo(35692,32944);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(121,108,249,0.85)';
ctx.strokeStyle='rgb(68,156,221)';
ctx.moveTo(35500,33136);
ctx.lineTo(35500,33100);
ctx.lineTo(35536,33100);
ctx.lineTo(35536,33136);
ctx.lineTo(35500,33136);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,19,198,0.85)';
ctx.strokeStyle='rgb(139,73,179)';
ctx.moveTo(35788,33328);
ctx.lineTo(35788,33292);
ctx.lineTo(35824,33292);
ctx.lineTo(35824,33328);
ctx.lineTo(35788,33328);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,10,149,0.85)';
ctx.strokeStyle='rgb(126,184,12)';
ctx.moveTo(35788,33232);
ctx.lineTo(35788,33196);
ctx.lineTo(35824,33196);
ctx.lineTo(35824,33232);
ctx.lineTo(35788,33232);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(119,131,89,0.85)';
ctx.strokeStyle='rgb(173,158,153)';
ctx.moveTo(35500,33424);
ctx.lineTo(35500,33388);
ctx.lineTo(35536,33388);
ctx.lineTo(35536,33424);
ctx.lineTo(35500,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,171,88,0.85)';
ctx.strokeStyle='rgb(248,214,170)';
ctx.moveTo(35596,33424);
ctx.lineTo(35596,33388);
ctx.lineTo(35632,33388);
ctx.lineTo(35632,33424);
ctx.lineTo(35596,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(42,43,30,0.85)';
ctx.strokeStyle='rgb(4,188,98)';
ctx.moveTo(35692,33424);
ctx.lineTo(35692,33388);
ctx.lineTo(35728,33388);
ctx.lineTo(35728,33424);
ctx.lineTo(35692,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,21,154,0.85)';
ctx.strokeStyle='rgb(35,3,167)';
ctx.moveTo(35788,33424);
ctx.lineTo(35788,33388);
ctx.lineTo(35824,33388);
ctx.lineTo(35824,33424);
ctx.lineTo(35788,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,39,215,0.85)';
ctx.strokeStyle='rgb(183,72,134)';
ctx.moveTo(35884,33424);
ctx.lineTo(35884,33388);
ctx.lineTo(35920,33388);
ctx.lineTo(35920,33424);
ctx.lineTo(35884,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(105,141,61,0.85)';
ctx.strokeStyle='rgb(232,190,75)';
ctx.moveTo(35884,33712);
ctx.lineTo(35884,33676);
ctx.lineTo(35920,33676);
ctx.lineTo(35920,33712);
ctx.lineTo(35884,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,110,39,0.85)';
ctx.strokeStyle='rgb(122,1,14)';
ctx.moveTo(35884,33616);
ctx.lineTo(35884,33580);
ctx.lineTo(35920,33580);
ctx.lineTo(35920,33616);
ctx.lineTo(35884,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(97,69,52,0.85)';
ctx.strokeStyle='rgb(183,135,100)';
ctx.moveTo(35884,33520);
ctx.lineTo(35884,33484);
ctx.lineTo(35920,33484);
ctx.lineTo(35920,33520);
ctx.lineTo(35884,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,141,216,0.85)';
ctx.strokeStyle='rgb(234,9,168)';
ctx.moveTo(35692,33712);
ctx.lineTo(35692,33676);
ctx.lineTo(35728,33676);
ctx.lineTo(35728,33712);
ctx.lineTo(35692,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,132,246,0.85)';
ctx.strokeStyle='rgb(192,148,105)';
ctx.moveTo(35692,33616);
ctx.lineTo(35692,33580);
ctx.lineTo(35728,33580);
ctx.lineTo(35728,33616);
ctx.lineTo(35692,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,119,248,0.85)';
ctx.strokeStyle='rgb(3,77,159)';
ctx.moveTo(35692,33520);
ctx.lineTo(35692,33484);
ctx.lineTo(35728,33484);
ctx.lineTo(35728,33520);
ctx.lineTo(35692,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(231,1,212,0.85)';
ctx.strokeStyle='rgb(46,65,124)';
ctx.moveTo(35596,33808);
ctx.lineTo(35596,33772);
ctx.lineTo(35632,33772);
ctx.lineTo(35632,33808);
ctx.lineTo(35596,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,23,219,0.85)';
ctx.strokeStyle='rgb(97,210,27)';
ctx.moveTo(35596,33712);
ctx.lineTo(35596,33676);
ctx.lineTo(35632,33676);
ctx.lineTo(35632,33712);
ctx.lineTo(35596,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,77,183,0.85)';
ctx.strokeStyle='rgb(115,59,239)';
ctx.moveTo(35596,33616);
ctx.lineTo(35596,33580);
ctx.lineTo(35632,33580);
ctx.lineTo(35632,33616);
ctx.lineTo(35596,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(84,35,1,0.85)';
ctx.strokeStyle='rgb(236,107,67)';
ctx.moveTo(35596,33520);
ctx.lineTo(35596,33484);
ctx.lineTo(35632,33484);
ctx.lineTo(35632,33520);
ctx.lineTo(35596,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(179,80,72,0.85)';
ctx.strokeStyle='rgb(144,161,17)';
ctx.moveTo(35500,33808);
ctx.lineTo(35500,33772);
ctx.lineTo(35536,33772);
ctx.lineTo(35536,33808);
ctx.lineTo(35500,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(80,233,235,0.85)';
ctx.strokeStyle='rgb(85,36,163)';
ctx.moveTo(35500,33712);
ctx.lineTo(35500,33676);
ctx.lineTo(35536,33676);
ctx.lineTo(35536,33712);
ctx.lineTo(35500,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,40,74,0.85)';
ctx.strokeStyle='rgb(137,200,17)';
ctx.moveTo(35788,33904);
ctx.lineTo(35788,33868);
ctx.lineTo(35824,33868);
ctx.lineTo(35824,33904);
ctx.lineTo(35788,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(70,223,127,0.85)';
ctx.strokeStyle='rgb(162,71,67)';
ctx.moveTo(35788,33808);
ctx.lineTo(35788,33772);
ctx.lineTo(35824,33772);
ctx.lineTo(35824,33808);
ctx.lineTo(35788,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(34,125,81,0.85)';
ctx.strokeStyle='rgb(219,47,49)';
ctx.moveTo(35788,33712);
ctx.lineTo(35788,33676);
ctx.lineTo(35824,33676);
ctx.lineTo(35824,33712);
ctx.lineTo(35788,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(12,240,249,0.85)';
ctx.strokeStyle='rgb(94,54,202)';
ctx.moveTo(35788,33616);
ctx.lineTo(35788,33580);
ctx.lineTo(35824,33580);
ctx.lineTo(35824,33616);
ctx.lineTo(35788,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,30,221,0.85)';
ctx.strokeStyle='rgb(4,4,205)';
ctx.moveTo(35788,33520);
ctx.lineTo(35788,33484);
ctx.lineTo(35824,33484);
ctx.lineTo(35824,33520);
ctx.lineTo(35788,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(107,39,237,0.85)';
ctx.strokeStyle='rgb(65,167,133)';
ctx.moveTo(35500,33616);
ctx.lineTo(35500,33580);
ctx.lineTo(35536,33580);
ctx.lineTo(35536,33616);
ctx.lineTo(35500,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(67,203,26,0.85)';
ctx.strokeStyle='rgb(123,179,232)';
ctx.moveTo(35500,33520);
ctx.lineTo(35500,33484);
ctx.lineTo(35536,33484);
ctx.lineTo(35536,33520);
ctx.lineTo(35500,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(201,209,144,0.85)';
ctx.strokeStyle='rgb(211,204,164)';
ctx.moveTo(35500,33904);
ctx.lineTo(35500,33868);
ctx.lineTo(35536,33868);
ctx.lineTo(35536,33904);
ctx.lineTo(35500,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(11,111,75,0.85)';
ctx.strokeStyle='rgb(159,87,0)';
ctx.moveTo(35596,33904);
ctx.lineTo(35596,33868);
ctx.lineTo(35632,33868);
ctx.lineTo(35632,33904);
ctx.lineTo(35596,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(57,151,190,0.85)';
ctx.strokeStyle='rgb(254,195,229)';
ctx.moveTo(35692,33904);
ctx.lineTo(35692,33868);
ctx.lineTo(35728,33868);
ctx.lineTo(35728,33904);
ctx.lineTo(35692,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(130,27,38,0.85)';
ctx.strokeStyle='rgb(54,37,34)';
ctx.moveTo(35692,33808);
ctx.lineTo(35692,33772);
ctx.lineTo(35728,33772);
ctx.lineTo(35728,33808);
ctx.lineTo(35692,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(190,218,247,0.85)';
ctx.strokeStyle='rgb(195,154,114)';
ctx.moveTo(35884,33904);
ctx.lineTo(35884,33868);
ctx.lineTo(35920,33868);
ctx.lineTo(35920,33904);
ctx.lineTo(35884,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(28,66,60,0.85)';
ctx.strokeStyle='rgb(203,24,162)';
ctx.moveTo(35884,33808);
ctx.lineTo(35884,33772);
ctx.lineTo(35920,33772);
ctx.lineTo(35920,33808);
ctx.lineTo(35884,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,8,134,0.85)';
ctx.strokeStyle='rgb(231,60,44)';
ctx.moveTo(36364,33424);
ctx.lineTo(36364,33388);
ctx.lineTo(36400,33388);
ctx.lineTo(36400,33424);
ctx.lineTo(36364,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(137,142,91,0.85)';
ctx.strokeStyle='rgb(187,34,123)';
ctx.moveTo(36460,33424);
ctx.lineTo(36460,33388);
ctx.lineTo(36496,33388);
ctx.lineTo(36496,33424);
ctx.lineTo(36460,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(116,33,79,0.85)';
ctx.strokeStyle='rgb(115,189,69)';
ctx.moveTo(35980,33424);
ctx.lineTo(35980,33388);
ctx.lineTo(36016,33388);
ctx.lineTo(36016,33424);
ctx.lineTo(35980,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,82,24,0.85)';
ctx.strokeStyle='rgb(116,55,201)';
ctx.moveTo(35980,33904);
ctx.lineTo(35980,33868);
ctx.lineTo(36016,33868);
ctx.lineTo(36016,33904);
ctx.lineTo(35980,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,197,160,0.85)';
ctx.strokeStyle='rgb(98,212,201)';
ctx.moveTo(35980,33808);
ctx.lineTo(35980,33772);
ctx.lineTo(36016,33772);
ctx.lineTo(36016,33808);
ctx.lineTo(35980,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(20,239,130,0.85)';
ctx.strokeStyle='rgb(246,2,243)';
ctx.moveTo(35980,33712);
ctx.lineTo(35980,33676);
ctx.lineTo(36016,33676);
ctx.lineTo(36016,33712);
ctx.lineTo(35980,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(63,14,169,0.85)';
ctx.strokeStyle='rgb(45,174,178)';
ctx.moveTo(35980,33616);
ctx.lineTo(35980,33580);
ctx.lineTo(36016,33580);
ctx.lineTo(36016,33616);
ctx.lineTo(35980,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(25,196,0,0.85)';
ctx.strokeStyle='rgb(213,202,93)';
ctx.moveTo(35980,33520);
ctx.lineTo(35980,33484);
ctx.lineTo(36016,33484);
ctx.lineTo(36016,33520);
ctx.lineTo(35980,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(241,166,189,0.85)';
ctx.strokeStyle='rgb(249,152,124)';
ctx.moveTo(36076,33424);
ctx.lineTo(36076,33388);
ctx.lineTo(36112,33388);
ctx.lineTo(36112,33424);
ctx.lineTo(36076,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(139,227,139,0.85)';
ctx.strokeStyle='rgb(167,131,92)';
ctx.moveTo(36172,33424);
ctx.lineTo(36172,33388);
ctx.lineTo(36208,33388);
ctx.lineTo(36208,33424);
ctx.lineTo(36172,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(244,118,229,0.85)';
ctx.strokeStyle='rgb(176,233,10)';
ctx.moveTo(36268,33424);
ctx.lineTo(36268,33388);
ctx.lineTo(36304,33388);
ctx.lineTo(36304,33424);
ctx.lineTo(36268,33424);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(62,228,106,0.85)';
ctx.strokeStyle='rgb(52,124,106)';
ctx.moveTo(36172,33520);
ctx.lineTo(36172,33484);
ctx.lineTo(36208,33484);
ctx.lineTo(36208,33520);
ctx.lineTo(36172,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(192,96,75,0.85)';
ctx.strokeStyle='rgb(19,184,152)';
ctx.moveTo(36076,33808);
ctx.lineTo(36076,33772);
ctx.lineTo(36112,33772);
ctx.lineTo(36112,33808);
ctx.lineTo(36076,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(1,2,139,0.85)';
ctx.strokeStyle='rgb(148,106,69)';
ctx.moveTo(36076,33712);
ctx.lineTo(36076,33676);
ctx.lineTo(36112,33676);
ctx.lineTo(36112,33712);
ctx.lineTo(36076,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(106,116,2,0.85)';
ctx.strokeStyle='rgb(69,106,252)';
ctx.moveTo(36364,33904);
ctx.lineTo(36364,33868);
ctx.lineTo(36400,33868);
ctx.lineTo(36400,33904);
ctx.lineTo(36364,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(27,162,33,0.85)';
ctx.strokeStyle='rgb(3,53,188)';
ctx.moveTo(36364,33808);
ctx.lineTo(36364,33772);
ctx.lineTo(36400,33772);
ctx.lineTo(36400,33808);
ctx.lineTo(36364,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(65,102,37,0.85)';
ctx.strokeStyle='rgb(7,50,59)';
ctx.moveTo(36364,33712);
ctx.lineTo(36364,33676);
ctx.lineTo(36400,33676);
ctx.lineTo(36400,33712);
ctx.lineTo(36364,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(31,199,244,0.85)';
ctx.strokeStyle='rgb(79,12,56)';
ctx.moveTo(36364,33616);
ctx.lineTo(36364,33580);
ctx.lineTo(36400,33580);
ctx.lineTo(36400,33616);
ctx.lineTo(36364,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(183,210,204,0.85)';
ctx.strokeStyle='rgb(35,27,56)';
ctx.moveTo(36364,33520);
ctx.lineTo(36364,33484);
ctx.lineTo(36400,33484);
ctx.lineTo(36400,33520);
ctx.lineTo(36364,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(50,12,27,0.85)';
ctx.strokeStyle='rgb(108,179,81)';
ctx.moveTo(36076,33616);
ctx.lineTo(36076,33580);
ctx.lineTo(36112,33580);
ctx.lineTo(36112,33616);
ctx.lineTo(36076,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(2,184,54,0.85)';
ctx.strokeStyle='rgb(163,88,151)';
ctx.moveTo(36076,33520);
ctx.lineTo(36076,33484);
ctx.lineTo(36112,33484);
ctx.lineTo(36112,33520);
ctx.lineTo(36076,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(54,32,153,0.85)';
ctx.strokeStyle='rgb(147,115,11)';
ctx.moveTo(36076,33904);
ctx.lineTo(36076,33868);
ctx.lineTo(36112,33868);
ctx.lineTo(36112,33904);
ctx.lineTo(36076,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(96,83,12,0.85)';
ctx.strokeStyle='rgb(234,80,42)';
ctx.moveTo(36172,33904);
ctx.lineTo(36172,33868);
ctx.lineTo(36208,33868);
ctx.lineTo(36208,33904);
ctx.lineTo(36172,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,25,189,0.85)';
ctx.strokeStyle='rgb(127,167,133)';
ctx.moveTo(36268,33904);
ctx.lineTo(36268,33868);
ctx.lineTo(36304,33868);
ctx.lineTo(36304,33904);
ctx.lineTo(36268,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,31,23,0.85)';
ctx.strokeStyle='rgb(60,112,156)';
ctx.moveTo(36268,33808);
ctx.lineTo(36268,33772);
ctx.lineTo(36304,33772);
ctx.lineTo(36304,33808);
ctx.lineTo(36268,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(167,196,233,0.85)';
ctx.strokeStyle='rgb(25,247,227)';
ctx.moveTo(36460,33904);
ctx.lineTo(36460,33868);
ctx.lineTo(36496,33868);
ctx.lineTo(36496,33904);
ctx.lineTo(36460,33904);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(4,126,134,0.85)';
ctx.strokeStyle='rgb(176,131,94)';
ctx.moveTo(36460,33808);
ctx.lineTo(36460,33772);
ctx.lineTo(36496,33772);
ctx.lineTo(36496,33808);
ctx.lineTo(36460,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,253,179,0.85)';
ctx.strokeStyle='rgb(9,71,170)';
ctx.moveTo(36460,33712);
ctx.lineTo(36460,33676);
ctx.lineTo(36496,33676);
ctx.lineTo(36496,33712);
ctx.lineTo(36460,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(69,156,17,0.85)';
ctx.strokeStyle='rgb(170,172,13)';
ctx.moveTo(36460,33616);
ctx.lineTo(36460,33580);
ctx.lineTo(36496,33580);
ctx.lineTo(36496,33616);
ctx.lineTo(36460,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(222,148,128,0.85)';
ctx.strokeStyle='rgb(111,138,34)';
ctx.moveTo(36460,33520);
ctx.lineTo(36460,33484);
ctx.lineTo(36496,33484);
ctx.lineTo(36496,33520);
ctx.lineTo(36460,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(15,211,35,0.85)';
ctx.strokeStyle='rgb(24,143,191)';
ctx.moveTo(36268,33712);
ctx.lineTo(36268,33676);
ctx.lineTo(36304,33676);
ctx.lineTo(36304,33712);
ctx.lineTo(36268,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(240,143,33,0.85)';
ctx.strokeStyle='rgb(213,108,186)';
ctx.moveTo(36268,33616);
ctx.lineTo(36268,33580);
ctx.lineTo(36304,33580);
ctx.lineTo(36304,33616);
ctx.lineTo(36268,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(58,207,125,0.85)';
ctx.strokeStyle='rgb(197,5,156)';
ctx.moveTo(36268,33520);
ctx.lineTo(36268,33484);
ctx.lineTo(36304,33484);
ctx.lineTo(36304,33520);
ctx.lineTo(36268,33520);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(93,252,41,0.85)';
ctx.strokeStyle='rgb(49,47,37)';
ctx.moveTo(36172,33808);
ctx.lineTo(36172,33772);
ctx.lineTo(36208,33772);
ctx.lineTo(36208,33808);
ctx.lineTo(36172,33808);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(6,215,134,0.85)';
ctx.strokeStyle='rgb(32,2,71)';
ctx.moveTo(36172,33712);
ctx.lineTo(36172,33676);
ctx.lineTo(36208,33676);
ctx.lineTo(36208,33712);
ctx.lineTo(36172,33712);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(181,124,81,0.85)';
ctx.strokeStyle='rgb(56,103,131)';
ctx.moveTo(36172,33616);
ctx.lineTo(36172,33580);
ctx.lineTo(36208,33580);
ctx.lineTo(36208,33616);
ctx.lineTo(36172,33616);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(148,147,156,0.85)';
ctx.strokeStyle='rgb(32,149,0)';
ctx.moveTo(18268,19816);
ctx.lineTo(18268,19780);
ctx.lineTo(18304,19780);
ctx.lineTo(18304,19816);
ctx.lineTo(18268,19816);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(59,251,202,0.85)';
ctx.strokeStyle='rgb(244,179,3)';
ctx.moveTo(18268,20680);
ctx.lineTo(18268,20644);
ctx.lineTo(18304,20644);
ctx.lineTo(18304,20680);
ctx.lineTo(18268,20680);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(83,231,33,0.85)';
ctx.strokeStyle='rgb(98,187,189)';
ctx.moveTo(17836,20140);
ctx.lineTo(17836,20104);
ctx.lineTo(17872,20104);
ctx.lineTo(17872,20140);
ctx.lineTo(17836,20140);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(90,23,194,0.85)';
ctx.strokeStyle='rgb(210,86,101)';
ctx.moveTo(13516,23272);
ctx.lineTo(13516,23236);
ctx.lineTo(13552,23236);
ctx.lineTo(13552,23272);
ctx.lineTo(13516,23272);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(74,232,69,0.85)';
ctx.strokeStyle='rgb(67,16,177)';
ctx.moveTo(13408,22948);
ctx.lineTo(13408,22912);
ctx.lineTo(13444,22912);
ctx.lineTo(13444,22948);
ctx.lineTo(13408,22948);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(132,67,27,0.85)';
ctx.strokeStyle='rgb(225,26,140)';
ctx.moveTo(13408,24676);
ctx.lineTo(13408,24640);
ctx.lineTo(13444,24640);
ctx.lineTo(13444,24676);
ctx.lineTo(13408,24676);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(230,129,14,0.85)';
ctx.strokeStyle='rgb(156,21,191)';
ctx.moveTo(13516,22192);
ctx.lineTo(13516,22156);
ctx.lineTo(13552,22156);
ctx.lineTo(13552,22192);
ctx.lineTo(13516,22192);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(115,214,82,0.85)';
ctx.strokeStyle='rgb(128,209,95)';
ctx.moveTo(18484,23704);
ctx.lineTo(18484,23668);
ctx.lineTo(18520,23668);
ctx.lineTo(18520,23704);
ctx.lineTo(18484,23704);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(53,194,174,0.85)';
ctx.strokeStyle='rgb(13,108,99)';
ctx.moveTo(17188,23164);
ctx.lineTo(17188,23128);
ctx.lineTo(17224,23128);
ctx.lineTo(17224,23164);
ctx.lineTo(17188,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(82,60,121,0.85)';
ctx.strokeStyle='rgb(31,3,221)';
ctx.moveTo(17188,23920);
ctx.lineTo(17188,23884);
ctx.lineTo(17224,23884);
ctx.lineTo(17224,23920);
ctx.lineTo(17188,23920);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(223,176,51,0.85)';
ctx.strokeStyle='rgb(162,10,36)';
ctx.moveTo(17836,23164);
ctx.lineTo(17836,23128);
ctx.lineTo(17872,23128);
ctx.lineTo(17872,23164);
ctx.lineTo(17836,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,106,126,0.85)';
ctx.strokeStyle='rgb(32,212,92)';
ctx.moveTo(18808,22948);
ctx.lineTo(18808,22912);
ctx.lineTo(18844,22912);
ctx.lineTo(18844,22948);
ctx.lineTo(18808,22948);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(209,213,122,0.85)';
ctx.strokeStyle='rgb(46,42,46)';
ctx.moveTo(18808,23812);
ctx.lineTo(18808,23776);
ctx.lineTo(18844,23776);
ctx.lineTo(18844,23812);
ctx.lineTo(18808,23812);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(163,82,51,0.85)';
ctx.strokeStyle='rgb(5,158,181)';
ctx.moveTo(17296,23164);
ctx.lineTo(17296,23128);
ctx.lineTo(17332,23128);
ctx.lineTo(17332,23164);
ctx.lineTo(17296,23164);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(23,238,177,0.85)';
ctx.strokeStyle='rgb(6,150,56)';
ctx.moveTo(17296,24676);
ctx.lineTo(17296,24640);
ctx.lineTo(17332,24640);
ctx.lineTo(17332,24676);
ctx.lineTo(17296,24676);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(219,248,116,0.85)';
ctx.strokeStyle='rgb(250,105,156)';
ctx.moveTo(18484,22624);
ctx.lineTo(18484,22588);
ctx.lineTo(18520,22588);
ctx.lineTo(18520,22624);
ctx.lineTo(18484,22624);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(250,82,186,0.85)';
ctx.strokeStyle='rgb(119,234,123)';
ctx.moveTo(14596,26620);
ctx.lineTo(14596,26584);
ctx.lineTo(14632,26584);
ctx.lineTo(14632,26620);
ctx.lineTo(14596,26620);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(87,48,87,0.85)';
ctx.strokeStyle='rgb(90,254,10)';
ctx.moveTo(14596,34072);
ctx.lineTo(14596,34036);
ctx.lineTo(14632,34036);
ctx.lineTo(14632,34072);
ctx.lineTo(14596,34072);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,49,69,0.85)';
ctx.strokeStyle='rgb(25,108,155)';
ctx.moveTo(20860,18628);
ctx.lineTo(20860,18592);
ctx.lineTo(20896,18592);
ctx.lineTo(20896,18628);
ctx.lineTo(20860,18628);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(41,6,182,0.85)';
ctx.strokeStyle='rgb(100,189,66)';
ctx.moveTo(20860,20248);
ctx.lineTo(20860,20212);
ctx.lineTo(20896,20212);
ctx.lineTo(20896,20248);
ctx.lineTo(20860,20248);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(79,191,17,0.85)';
ctx.strokeStyle='rgb(4,78,109)';
ctx.moveTo(19240,19924);
ctx.lineTo(19240,19888);
ctx.lineTo(19276,19888);
ctx.lineTo(19276,19924);
ctx.lineTo(19240,19924);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(99,43,115,0.85)';
ctx.strokeStyle='rgb(160,116,242)';
ctx.moveTo(21724,19600);
ctx.lineTo(21724,19564);
ctx.lineTo(21760,19564);
ctx.lineTo(21760,19600);
ctx.lineTo(21724,19600);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(49,6,200,0.85)';
ctx.strokeStyle='rgb(231,183,58)';
ctx.moveTo(19672,23380);
ctx.lineTo(19672,23344);
ctx.lineTo(19708,23344);
ctx.lineTo(19708,23380);
ctx.lineTo(19672,23380);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(196,70,34,0.85)';
ctx.strokeStyle='rgb(253,144,178)';
ctx.moveTo(21724,21760);
ctx.lineTo(21724,21724);
ctx.lineTo(21760,21724);
ctx.lineTo(21760,21760);
ctx.lineTo(21724,21760);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(234,86,51,0.85)';
ctx.strokeStyle='rgb(123,186,167)';
ctx.moveTo(19672,24784);
ctx.lineTo(19672,24748);
ctx.lineTo(19708,24748);
ctx.lineTo(19708,24784);
ctx.lineTo(19672,24784);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
ctx.beginPath();
ctx.fillStyle='rgba(176,127,40,0.85)';
ctx.strokeStyle='rgb(91,85,7)';
ctx.moveTo(19240,22840);
ctx.lineTo(19240,22804);
ctx.lineTo(19276,22804);
ctx.lineTo(19276,22840);
ctx.lineTo(19240,22840);
ctx.closePath();
ctx.lineWidth = 15;
ctx.stroke();
ctx.fill();
};
(function() {


}).call(this);
// This is a manifest file that'll be compiled into application.js, which will include all the files
// listed below.
//
// Any JavaScript/Coffee file within this directory, lib/assets/javascripts, vendor/assets/javascripts,
// or vendor/assets/javascripts of plugins, if any, can be referenced here using a relative path.
//
// It's not advisable to add code directly here, but if you do, it'll appear at the bottom of the
// compiled file.
//
// Read Sprockets README (https://github.com/sstephenson/sprockets#sprockets-directives) for details
// about supported directives.
//






;
